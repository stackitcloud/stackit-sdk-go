/*
Service Account API

API to manage Service Accounts and their Access Tokens.  ### System for Cross-domain Identity Management (SCIM) Service Account Service offers SCIM APIs to query state. The SCIM protocol was created as standard for  automating the exchange of user identity information between identity domains, or IT systems. Service accounts  are be handled as indentites similar to SCIM users. A custom SCIM schema has been created: `/ServiceAccounts`  #### Syntax ##### Attribute operators | OPERATOR | DESCRIPTION              | |----------|--------------------------| | eq       | equal                    | | ne       | not equal                | | co       | contains                 | | sw       | starts with              | | ew       | ends with                |  ##### Logical operators | OPERATOR | DESCRIPTION              | |----------|--------------------------| | and      | logical \"and\"            | | or       | logical \"or\"             |  ##### Grouping operators | OPERATOR | DESCRIPTION              | |----------|--------------------------| | ()       | precending grouping      |  ##### Example ``` filter=email eq \"my-service-account-aBc2defg@sa.stackit.cloud\" filter=email ne \"my-service-account-aBc2defg@sa.stackit.cloud\" filter=email co \"my-service-account\" filter=name sw \"my\" filter=name ew \"account\" filter=email co \"my-service-account\" and name sw \"my\" filter=email co \"my-service-account\" and (name sw \"my\" or name ew \"account\") ```  #### Sorting  > Sorting is optional  | PARAMETER | DESCRIPTION                          | |-----------|--------------------------------------| | sortBy    | attribute response is ordered by     | | sortOrder | 'ASCENDING' (default) or 'DESCENDING'|  #### Pagination  | PARAMETER    | DESCRIPTION                                  | |--------------|----------------------------------------------| | startIndex   | index of first query result, default: 1      | | count        | maximum number of query results, default: 100|

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package serviceaccount

import (
	"encoding/json"
	"fmt"
	"time"
)

// checks if the ServiceAccountKeyListResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceAccountKeyListResponse{}

/*
	types and functions for active
*/

// isBoolean
type ServiceAccountKeyListResponsegetActiveAttributeType = *bool
type ServiceAccountKeyListResponsegetActiveArgType = bool
type ServiceAccountKeyListResponsegetActiveRetType = bool

func getServiceAccountKeyListResponsegetActiveAttributeTypeOk(arg ServiceAccountKeyListResponsegetActiveAttributeType) (ret ServiceAccountKeyListResponsegetActiveRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setServiceAccountKeyListResponsegetActiveAttributeType(arg *ServiceAccountKeyListResponsegetActiveAttributeType, val ServiceAccountKeyListResponsegetActiveRetType) {
	*arg = &val
}

/*
	types and functions for createdAt
*/

// isDateTime
type ServiceAccountKeyListResponseGetCreatedAtAttributeType = *time.Time
type ServiceAccountKeyListResponseGetCreatedAtArgType = time.Time
type ServiceAccountKeyListResponseGetCreatedAtRetType = time.Time

func getServiceAccountKeyListResponseGetCreatedAtAttributeTypeOk(arg ServiceAccountKeyListResponseGetCreatedAtAttributeType) (ret ServiceAccountKeyListResponseGetCreatedAtRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setServiceAccountKeyListResponseGetCreatedAtAttributeType(arg *ServiceAccountKeyListResponseGetCreatedAtAttributeType, val ServiceAccountKeyListResponseGetCreatedAtRetType) {
	*arg = &val
}

/*
	types and functions for id
*/

// isNotNullableString
type ServiceAccountKeyListResponseGetIdAttributeType = *string

func getServiceAccountKeyListResponseGetIdAttributeTypeOk(arg ServiceAccountKeyListResponseGetIdAttributeType) (ret ServiceAccountKeyListResponseGetIdRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setServiceAccountKeyListResponseGetIdAttributeType(arg *ServiceAccountKeyListResponseGetIdAttributeType, val ServiceAccountKeyListResponseGetIdRetType) {
	*arg = &val
}

type ServiceAccountKeyListResponseGetIdArgType = string
type ServiceAccountKeyListResponseGetIdRetType = string

/*
	types and functions for keyAlgorithm
*/

// isEnum

// ServiceAccountKeyListResponseKeyAlgorithm the model 'ServiceAccountKeyListResponse'
type ServiceAccountKeyListResponseKeyAlgorithm string

// List of KeyAlgorithm
const (
	SERVICEACCOUNTKEYLISTRESPONSEKEY_ALGORITHM_RSA_2048 ServiceAccountKeyListResponseKeyAlgorithm = "RSA_2048"
)

// All allowed values of ServiceAccountKeyListResponse enum
var AllowedServiceAccountKeyListResponseKeyAlgorithmEnumValues = []ServiceAccountKeyListResponseKeyAlgorithm{
	"RSA_2048",
}

func (v *ServiceAccountKeyListResponseKeyAlgorithm) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	// Allow unmarshalling zero value for testing purposes
	var zeroValue string
	if value == zeroValue {
		return nil
	}
	enumTypeValue := ServiceAccountKeyListResponseKeyAlgorithm(value)
	for _, existing := range AllowedServiceAccountKeyListResponseKeyAlgorithmEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ServiceAccountKeyListResponse", value)
}

// NewServiceAccountKeyListResponseKeyAlgorithmFromValue returns a pointer to a valid ServiceAccountKeyListResponseKeyAlgorithm
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewServiceAccountKeyListResponseKeyAlgorithmFromValue(v string) (*ServiceAccountKeyListResponseKeyAlgorithm, error) {
	ev := ServiceAccountKeyListResponseKeyAlgorithm(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ServiceAccountKeyListResponseKeyAlgorithm: valid values are %v", v, AllowedServiceAccountKeyListResponseKeyAlgorithmEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ServiceAccountKeyListResponseKeyAlgorithm) IsValid() bool {
	for _, existing := range AllowedServiceAccountKeyListResponseKeyAlgorithmEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to KeyAlgorithmKeyAlgorithm value
func (v ServiceAccountKeyListResponseKeyAlgorithm) Ptr() *ServiceAccountKeyListResponseKeyAlgorithm {
	return &v
}

type NullableServiceAccountKeyListResponseKeyAlgorithm struct {
	value *ServiceAccountKeyListResponseKeyAlgorithm
	isSet bool
}

func (v NullableServiceAccountKeyListResponseKeyAlgorithm) Get() *ServiceAccountKeyListResponseKeyAlgorithm {
	return v.value
}

func (v *NullableServiceAccountKeyListResponseKeyAlgorithm) Set(val *ServiceAccountKeyListResponseKeyAlgorithm) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceAccountKeyListResponseKeyAlgorithm) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceAccountKeyListResponseKeyAlgorithm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceAccountKeyListResponseKeyAlgorithm(val *ServiceAccountKeyListResponseKeyAlgorithm) *NullableServiceAccountKeyListResponseKeyAlgorithm {
	return &NullableServiceAccountKeyListResponseKeyAlgorithm{value: val, isSet: true}
}

func (v NullableServiceAccountKeyListResponseKeyAlgorithm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceAccountKeyListResponseKeyAlgorithm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

type ServiceAccountKeyListResponseGetKeyAlgorithmAttributeType = *ServiceAccountKeyListResponseKeyAlgorithm
type ServiceAccountKeyListResponseGetKeyAlgorithmArgType = ServiceAccountKeyListResponseKeyAlgorithm
type ServiceAccountKeyListResponseGetKeyAlgorithmRetType = ServiceAccountKeyListResponseKeyAlgorithm

func getServiceAccountKeyListResponseGetKeyAlgorithmAttributeTypeOk(arg ServiceAccountKeyListResponseGetKeyAlgorithmAttributeType) (ret ServiceAccountKeyListResponseGetKeyAlgorithmRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setServiceAccountKeyListResponseGetKeyAlgorithmAttributeType(arg *ServiceAccountKeyListResponseGetKeyAlgorithmAttributeType, val ServiceAccountKeyListResponseGetKeyAlgorithmRetType) {
	*arg = &val
}

/*
	types and functions for keyOrigin
*/

// isEnum

// ServiceAccountKeyListResponseKeyOrigin the model 'ServiceAccountKeyListResponse'
type ServiceAccountKeyListResponseKeyOrigin string

// List of KeyOrigin
const (
	SERVICEACCOUNTKEYLISTRESPONSEKEY_ORIGIN_USER_PROVIDED ServiceAccountKeyListResponseKeyOrigin = "USER_PROVIDED"
	SERVICEACCOUNTKEYLISTRESPONSEKEY_ORIGIN_GENERATED     ServiceAccountKeyListResponseKeyOrigin = "GENERATED"
)

// All allowed values of ServiceAccountKeyListResponse enum
var AllowedServiceAccountKeyListResponseKeyOriginEnumValues = []ServiceAccountKeyListResponseKeyOrigin{
	"USER_PROVIDED",
	"GENERATED",
}

func (v *ServiceAccountKeyListResponseKeyOrigin) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	// Allow unmarshalling zero value for testing purposes
	var zeroValue string
	if value == zeroValue {
		return nil
	}
	enumTypeValue := ServiceAccountKeyListResponseKeyOrigin(value)
	for _, existing := range AllowedServiceAccountKeyListResponseKeyOriginEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ServiceAccountKeyListResponse", value)
}

// NewServiceAccountKeyListResponseKeyOriginFromValue returns a pointer to a valid ServiceAccountKeyListResponseKeyOrigin
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewServiceAccountKeyListResponseKeyOriginFromValue(v string) (*ServiceAccountKeyListResponseKeyOrigin, error) {
	ev := ServiceAccountKeyListResponseKeyOrigin(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ServiceAccountKeyListResponseKeyOrigin: valid values are %v", v, AllowedServiceAccountKeyListResponseKeyOriginEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ServiceAccountKeyListResponseKeyOrigin) IsValid() bool {
	for _, existing := range AllowedServiceAccountKeyListResponseKeyOriginEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to KeyOriginKeyOrigin value
func (v ServiceAccountKeyListResponseKeyOrigin) Ptr() *ServiceAccountKeyListResponseKeyOrigin {
	return &v
}

type NullableServiceAccountKeyListResponseKeyOrigin struct {
	value *ServiceAccountKeyListResponseKeyOrigin
	isSet bool
}

func (v NullableServiceAccountKeyListResponseKeyOrigin) Get() *ServiceAccountKeyListResponseKeyOrigin {
	return v.value
}

func (v *NullableServiceAccountKeyListResponseKeyOrigin) Set(val *ServiceAccountKeyListResponseKeyOrigin) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceAccountKeyListResponseKeyOrigin) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceAccountKeyListResponseKeyOrigin) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceAccountKeyListResponseKeyOrigin(val *ServiceAccountKeyListResponseKeyOrigin) *NullableServiceAccountKeyListResponseKeyOrigin {
	return &NullableServiceAccountKeyListResponseKeyOrigin{value: val, isSet: true}
}

func (v NullableServiceAccountKeyListResponseKeyOrigin) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceAccountKeyListResponseKeyOrigin) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

type ServiceAccountKeyListResponseGetKeyOriginAttributeType = *ServiceAccountKeyListResponseKeyOrigin
type ServiceAccountKeyListResponseGetKeyOriginArgType = ServiceAccountKeyListResponseKeyOrigin
type ServiceAccountKeyListResponseGetKeyOriginRetType = ServiceAccountKeyListResponseKeyOrigin

func getServiceAccountKeyListResponseGetKeyOriginAttributeTypeOk(arg ServiceAccountKeyListResponseGetKeyOriginAttributeType) (ret ServiceAccountKeyListResponseGetKeyOriginRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setServiceAccountKeyListResponseGetKeyOriginAttributeType(arg *ServiceAccountKeyListResponseGetKeyOriginAttributeType, val ServiceAccountKeyListResponseGetKeyOriginRetType) {
	*arg = &val
}

/*
	types and functions for keyType
*/

// isEnum

// ServiceAccountKeyListResponseKeyType the model 'ServiceAccountKeyListResponse'
type ServiceAccountKeyListResponseKeyType string

// List of KeyType
const (
	SERVICEACCOUNTKEYLISTRESPONSEKEY_TYPE_USER_MANAGED   ServiceAccountKeyListResponseKeyType = "USER_MANAGED"
	SERVICEACCOUNTKEYLISTRESPONSEKEY_TYPE_SYSTEM_MANAGED ServiceAccountKeyListResponseKeyType = "SYSTEM_MANAGED"
)

// All allowed values of ServiceAccountKeyListResponse enum
var AllowedServiceAccountKeyListResponseKeyTypeEnumValues = []ServiceAccountKeyListResponseKeyType{
	"USER_MANAGED",
	"SYSTEM_MANAGED",
}

func (v *ServiceAccountKeyListResponseKeyType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	// Allow unmarshalling zero value for testing purposes
	var zeroValue string
	if value == zeroValue {
		return nil
	}
	enumTypeValue := ServiceAccountKeyListResponseKeyType(value)
	for _, existing := range AllowedServiceAccountKeyListResponseKeyTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ServiceAccountKeyListResponse", value)
}

// NewServiceAccountKeyListResponseKeyTypeFromValue returns a pointer to a valid ServiceAccountKeyListResponseKeyType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewServiceAccountKeyListResponseKeyTypeFromValue(v string) (*ServiceAccountKeyListResponseKeyType, error) {
	ev := ServiceAccountKeyListResponseKeyType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ServiceAccountKeyListResponseKeyType: valid values are %v", v, AllowedServiceAccountKeyListResponseKeyTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ServiceAccountKeyListResponseKeyType) IsValid() bool {
	for _, existing := range AllowedServiceAccountKeyListResponseKeyTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to KeyTypeKeyType value
func (v ServiceAccountKeyListResponseKeyType) Ptr() *ServiceAccountKeyListResponseKeyType {
	return &v
}

type NullableServiceAccountKeyListResponseKeyType struct {
	value *ServiceAccountKeyListResponseKeyType
	isSet bool
}

func (v NullableServiceAccountKeyListResponseKeyType) Get() *ServiceAccountKeyListResponseKeyType {
	return v.value
}

func (v *NullableServiceAccountKeyListResponseKeyType) Set(val *ServiceAccountKeyListResponseKeyType) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceAccountKeyListResponseKeyType) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceAccountKeyListResponseKeyType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceAccountKeyListResponseKeyType(val *ServiceAccountKeyListResponseKeyType) *NullableServiceAccountKeyListResponseKeyType {
	return &NullableServiceAccountKeyListResponseKeyType{value: val, isSet: true}
}

func (v NullableServiceAccountKeyListResponseKeyType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceAccountKeyListResponseKeyType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

type ServiceAccountKeyListResponseGetKeyTypeAttributeType = *ServiceAccountKeyListResponseKeyType
type ServiceAccountKeyListResponseGetKeyTypeArgType = ServiceAccountKeyListResponseKeyType
type ServiceAccountKeyListResponseGetKeyTypeRetType = ServiceAccountKeyListResponseKeyType

func getServiceAccountKeyListResponseGetKeyTypeAttributeTypeOk(arg ServiceAccountKeyListResponseGetKeyTypeAttributeType) (ret ServiceAccountKeyListResponseGetKeyTypeRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setServiceAccountKeyListResponseGetKeyTypeAttributeType(arg *ServiceAccountKeyListResponseGetKeyTypeAttributeType, val ServiceAccountKeyListResponseGetKeyTypeRetType) {
	*arg = &val
}

/*
	types and functions for validUntil
*/

// isDateTime
type ServiceAccountKeyListResponseGetValidUntilAttributeType = *time.Time
type ServiceAccountKeyListResponseGetValidUntilArgType = time.Time
type ServiceAccountKeyListResponseGetValidUntilRetType = time.Time

func getServiceAccountKeyListResponseGetValidUntilAttributeTypeOk(arg ServiceAccountKeyListResponseGetValidUntilAttributeType) (ret ServiceAccountKeyListResponseGetValidUntilRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setServiceAccountKeyListResponseGetValidUntilAttributeType(arg *ServiceAccountKeyListResponseGetValidUntilAttributeType, val ServiceAccountKeyListResponseGetValidUntilRetType) {
	*arg = &val
}

// ServiceAccountKeyListResponse struct for ServiceAccountKeyListResponse
type ServiceAccountKeyListResponse struct {
	// REQUIRED
	Active ServiceAccountKeyListResponsegetActiveAttributeType `json:"active"`
	// Creation time of the key
	// REQUIRED
	CreatedAt ServiceAccountKeyListResponseGetCreatedAtAttributeType `json:"createdAt"`
	// Unique ID of the key.
	// REQUIRED
	Id ServiceAccountKeyListResponseGetIdAttributeType `json:"id"`
	// REQUIRED
	KeyAlgorithm ServiceAccountKeyListResponseGetKeyAlgorithmAttributeType `json:"keyAlgorithm"`
	// REQUIRED
	KeyOrigin ServiceAccountKeyListResponseGetKeyOriginAttributeType `json:"keyOrigin"`
	// REQUIRED
	KeyType ServiceAccountKeyListResponseGetKeyTypeAttributeType `json:"keyType"`
	// If specified, the timestamp until the key is active. May be null
	ValidUntil ServiceAccountKeyListResponseGetValidUntilAttributeType `json:"validUntil,omitempty"`
}

type _ServiceAccountKeyListResponse ServiceAccountKeyListResponse

// NewServiceAccountKeyListResponse instantiates a new ServiceAccountKeyListResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceAccountKeyListResponse(active ServiceAccountKeyListResponsegetActiveArgType, createdAt ServiceAccountKeyListResponseGetCreatedAtArgType, id ServiceAccountKeyListResponseGetIdArgType, keyAlgorithm ServiceAccountKeyListResponseGetKeyAlgorithmArgType, keyOrigin ServiceAccountKeyListResponseGetKeyOriginArgType, keyType ServiceAccountKeyListResponseGetKeyTypeArgType) *ServiceAccountKeyListResponse {
	this := ServiceAccountKeyListResponse{}
	setServiceAccountKeyListResponsegetActiveAttributeType(&this.Active, active)
	setServiceAccountKeyListResponseGetCreatedAtAttributeType(&this.CreatedAt, createdAt)
	setServiceAccountKeyListResponseGetIdAttributeType(&this.Id, id)
	setServiceAccountKeyListResponseGetKeyAlgorithmAttributeType(&this.KeyAlgorithm, keyAlgorithm)
	setServiceAccountKeyListResponseGetKeyOriginAttributeType(&this.KeyOrigin, keyOrigin)
	setServiceAccountKeyListResponseGetKeyTypeAttributeType(&this.KeyType, keyType)
	return &this
}

// NewServiceAccountKeyListResponseWithDefaults instantiates a new ServiceAccountKeyListResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceAccountKeyListResponseWithDefaults() *ServiceAccountKeyListResponse {
	this := ServiceAccountKeyListResponse{}
	return &this
}

// GetActive returns the Active field value
func (o *ServiceAccountKeyListResponse) GetActive() (ret ServiceAccountKeyListResponsegetActiveRetType) {
	ret, _ = o.GetActiveOk()
	return ret
}

// GetActiveOk returns a tuple with the Active field value
// and a boolean to check if the value has been set.
func (o *ServiceAccountKeyListResponse) GetActiveOk() (ret ServiceAccountKeyListResponsegetActiveRetType, ok bool) {
	return getServiceAccountKeyListResponsegetActiveAttributeTypeOk(o.Active)
}

// SetActive sets field value
func (o *ServiceAccountKeyListResponse) SetActive(v ServiceAccountKeyListResponsegetActiveRetType) {
	setServiceAccountKeyListResponsegetActiveAttributeType(&o.Active, v)
}

// GetCreatedAt returns the CreatedAt field value
func (o *ServiceAccountKeyListResponse) GetCreatedAt() (ret ServiceAccountKeyListResponseGetCreatedAtRetType) {
	ret, _ = o.GetCreatedAtOk()
	return ret
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *ServiceAccountKeyListResponse) GetCreatedAtOk() (ret ServiceAccountKeyListResponseGetCreatedAtRetType, ok bool) {
	return getServiceAccountKeyListResponseGetCreatedAtAttributeTypeOk(o.CreatedAt)
}

// SetCreatedAt sets field value
func (o *ServiceAccountKeyListResponse) SetCreatedAt(v ServiceAccountKeyListResponseGetCreatedAtRetType) {
	setServiceAccountKeyListResponseGetCreatedAtAttributeType(&o.CreatedAt, v)
}

// GetId returns the Id field value
func (o *ServiceAccountKeyListResponse) GetId() (ret ServiceAccountKeyListResponseGetIdRetType) {
	ret, _ = o.GetIdOk()
	return ret
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ServiceAccountKeyListResponse) GetIdOk() (ret ServiceAccountKeyListResponseGetIdRetType, ok bool) {
	return getServiceAccountKeyListResponseGetIdAttributeTypeOk(o.Id)
}

// SetId sets field value
func (o *ServiceAccountKeyListResponse) SetId(v ServiceAccountKeyListResponseGetIdRetType) {
	setServiceAccountKeyListResponseGetIdAttributeType(&o.Id, v)
}

// GetKeyAlgorithm returns the KeyAlgorithm field value
func (o *ServiceAccountKeyListResponse) GetKeyAlgorithm() (ret ServiceAccountKeyListResponseGetKeyAlgorithmRetType) {
	ret, _ = o.GetKeyAlgorithmOk()
	return ret
}

// GetKeyAlgorithmOk returns a tuple with the KeyAlgorithm field value
// and a boolean to check if the value has been set.
func (o *ServiceAccountKeyListResponse) GetKeyAlgorithmOk() (ret ServiceAccountKeyListResponseGetKeyAlgorithmRetType, ok bool) {
	return getServiceAccountKeyListResponseGetKeyAlgorithmAttributeTypeOk(o.KeyAlgorithm)
}

// SetKeyAlgorithm sets field value
func (o *ServiceAccountKeyListResponse) SetKeyAlgorithm(v ServiceAccountKeyListResponseGetKeyAlgorithmRetType) {
	setServiceAccountKeyListResponseGetKeyAlgorithmAttributeType(&o.KeyAlgorithm, v)
}

// GetKeyOrigin returns the KeyOrigin field value
func (o *ServiceAccountKeyListResponse) GetKeyOrigin() (ret ServiceAccountKeyListResponseGetKeyOriginRetType) {
	ret, _ = o.GetKeyOriginOk()
	return ret
}

// GetKeyOriginOk returns a tuple with the KeyOrigin field value
// and a boolean to check if the value has been set.
func (o *ServiceAccountKeyListResponse) GetKeyOriginOk() (ret ServiceAccountKeyListResponseGetKeyOriginRetType, ok bool) {
	return getServiceAccountKeyListResponseGetKeyOriginAttributeTypeOk(o.KeyOrigin)
}

// SetKeyOrigin sets field value
func (o *ServiceAccountKeyListResponse) SetKeyOrigin(v ServiceAccountKeyListResponseGetKeyOriginRetType) {
	setServiceAccountKeyListResponseGetKeyOriginAttributeType(&o.KeyOrigin, v)
}

// GetKeyType returns the KeyType field value
func (o *ServiceAccountKeyListResponse) GetKeyType() (ret ServiceAccountKeyListResponseGetKeyTypeRetType) {
	ret, _ = o.GetKeyTypeOk()
	return ret
}

// GetKeyTypeOk returns a tuple with the KeyType field value
// and a boolean to check if the value has been set.
func (o *ServiceAccountKeyListResponse) GetKeyTypeOk() (ret ServiceAccountKeyListResponseGetKeyTypeRetType, ok bool) {
	return getServiceAccountKeyListResponseGetKeyTypeAttributeTypeOk(o.KeyType)
}

// SetKeyType sets field value
func (o *ServiceAccountKeyListResponse) SetKeyType(v ServiceAccountKeyListResponseGetKeyTypeRetType) {
	setServiceAccountKeyListResponseGetKeyTypeAttributeType(&o.KeyType, v)
}

// GetValidUntil returns the ValidUntil field value if set, zero value otherwise.
func (o *ServiceAccountKeyListResponse) GetValidUntil() (res ServiceAccountKeyListResponseGetValidUntilRetType) {
	res, _ = o.GetValidUntilOk()
	return
}

// GetValidUntilOk returns a tuple with the ValidUntil field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceAccountKeyListResponse) GetValidUntilOk() (ret ServiceAccountKeyListResponseGetValidUntilRetType, ok bool) {
	return getServiceAccountKeyListResponseGetValidUntilAttributeTypeOk(o.ValidUntil)
}

// HasValidUntil returns a boolean if a field has been set.
func (o *ServiceAccountKeyListResponse) HasValidUntil() bool {
	_, ok := o.GetValidUntilOk()
	return ok
}

// SetValidUntil gets a reference to the given time.Time and assigns it to the ValidUntil field.
func (o *ServiceAccountKeyListResponse) SetValidUntil(v ServiceAccountKeyListResponseGetValidUntilRetType) {
	setServiceAccountKeyListResponseGetValidUntilAttributeType(&o.ValidUntil, v)
}

func (o ServiceAccountKeyListResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getServiceAccountKeyListResponsegetActiveAttributeTypeOk(o.Active); ok {
		toSerialize["Active"] = val
	}
	if val, ok := getServiceAccountKeyListResponseGetCreatedAtAttributeTypeOk(o.CreatedAt); ok {
		toSerialize["CreatedAt"] = val
	}
	if val, ok := getServiceAccountKeyListResponseGetIdAttributeTypeOk(o.Id); ok {
		toSerialize["Id"] = val
	}
	if val, ok := getServiceAccountKeyListResponseGetKeyAlgorithmAttributeTypeOk(o.KeyAlgorithm); ok {
		toSerialize["KeyAlgorithm"] = val
	}
	if val, ok := getServiceAccountKeyListResponseGetKeyOriginAttributeTypeOk(o.KeyOrigin); ok {
		toSerialize["KeyOrigin"] = val
	}
	if val, ok := getServiceAccountKeyListResponseGetKeyTypeAttributeTypeOk(o.KeyType); ok {
		toSerialize["KeyType"] = val
	}
	if val, ok := getServiceAccountKeyListResponseGetValidUntilAttributeTypeOk(o.ValidUntil); ok {
		toSerialize["ValidUntil"] = val
	}
	return toSerialize, nil
}

type NullableServiceAccountKeyListResponse struct {
	value *ServiceAccountKeyListResponse
	isSet bool
}

func (v NullableServiceAccountKeyListResponse) Get() *ServiceAccountKeyListResponse {
	return v.value
}

func (v *NullableServiceAccountKeyListResponse) Set(val *ServiceAccountKeyListResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceAccountKeyListResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceAccountKeyListResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceAccountKeyListResponse(val *ServiceAccountKeyListResponse) *NullableServiceAccountKeyListResponse {
	return &NullableServiceAccountKeyListResponse{value: val, isSet: true}
}

func (v NullableServiceAccountKeyListResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceAccountKeyListResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
