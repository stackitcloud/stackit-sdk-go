/*
Service Account API

API to manage Service Accounts and their Access Tokens.  ### System for Cross-domain Identity Management (SCIM) Service Account Service offers SCIM APIs to query state. The SCIM protocol was created as standard for  automating the exchange of user identity information between identity domains, or IT systems. Service accounts  are be handled as indentites similar to SCIM users. A custom SCIM schema has been created: `/ServiceAccounts`  #### Syntax ##### Attribute operators | OPERATOR | DESCRIPTION              | |----------|--------------------------| | eq       | equal                    | | ne       | not equal                | | co       | contains                 | | sw       | starts with              | | ew       | ends with                |  ##### Logical operators | OPERATOR | DESCRIPTION              | |----------|--------------------------| | and      | logical \"and\"            | | or       | logical \"or\"             |  ##### Grouping operators | OPERATOR | DESCRIPTION              | |----------|--------------------------| | ()       | precending grouping      |  ##### Example ``` filter=email eq \"my-service-account-aBc2defg@sa.stackit.cloud\" filter=email ne \"my-service-account-aBc2defg@sa.stackit.cloud\" filter=email co \"my-service-account\" filter=name sw \"my\" filter=name ew \"account\" filter=email co \"my-service-account\" and name sw \"my\" filter=email co \"my-service-account\" and (name sw \"my\" or name ew \"account\") ```  #### Sorting  > Sorting is optional  | PARAMETER | DESCRIPTION                          | |-----------|--------------------------------------| | sortBy    | attribute response is ordered by     | | sortOrder | 'ASCENDING' (default) or 'DESCENDING'|  #### Pagination  | PARAMETER    | DESCRIPTION                                  | |--------------|----------------------------------------------| | startIndex   | index of first query result, default: 1      | | count        | maximum number of query results, default: 100|

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package serviceaccount

import (
	"encoding/json"
)

// checks if the AuthErrorError type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthErrorError{}

/*
	types and functions for code
*/

// isInteger
type AuthErrorErrorGetCodeAttributeType = *int64
type AuthErrorErrorGetCodeArgType = int64
type AuthErrorErrorGetCodeRetType = int64

func getAuthErrorErrorGetCodeAttributeTypeOk(arg AuthErrorErrorGetCodeAttributeType) (ret AuthErrorErrorGetCodeRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setAuthErrorErrorGetCodeAttributeType(arg *AuthErrorErrorGetCodeAttributeType, val AuthErrorErrorGetCodeRetType) {
	*arg = &val
}

/*
	types and functions for message
*/

// isNotNullableString
type AuthErrorErrorGetMessageAttributeType = *string

func getAuthErrorErrorGetMessageAttributeTypeOk(arg AuthErrorErrorGetMessageAttributeType) (ret AuthErrorErrorGetMessageRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setAuthErrorErrorGetMessageAttributeType(arg *AuthErrorErrorGetMessageAttributeType, val AuthErrorErrorGetMessageRetType) {
	*arg = &val
}

type AuthErrorErrorGetMessageArgType = string
type AuthErrorErrorGetMessageRetType = string

/*
	types and functions for status
*/

// isNotNullableString
type AuthErrorErrorGetStatusAttributeType = *string

func getAuthErrorErrorGetStatusAttributeTypeOk(arg AuthErrorErrorGetStatusAttributeType) (ret AuthErrorErrorGetStatusRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setAuthErrorErrorGetStatusAttributeType(arg *AuthErrorErrorGetStatusAttributeType, val AuthErrorErrorGetStatusRetType) {
	*arg = &val
}

type AuthErrorErrorGetStatusArgType = string
type AuthErrorErrorGetStatusRetType = string

// AuthErrorError struct for AuthErrorError
type AuthErrorError struct {
	// REQUIRED
	Code AuthErrorErrorGetCodeAttributeType `json:"code" required:"true"`
	// REQUIRED
	Message AuthErrorErrorGetMessageAttributeType `json:"message" required:"true"`
	// REQUIRED
	Status AuthErrorErrorGetStatusAttributeType `json:"status" required:"true"`
}

type _AuthErrorError AuthErrorError

// NewAuthErrorError instantiates a new AuthErrorError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthErrorError(code AuthErrorErrorGetCodeArgType, message AuthErrorErrorGetMessageArgType, status AuthErrorErrorGetStatusArgType) *AuthErrorError {
	this := AuthErrorError{}
	setAuthErrorErrorGetCodeAttributeType(&this.Code, code)
	setAuthErrorErrorGetMessageAttributeType(&this.Message, message)
	setAuthErrorErrorGetStatusAttributeType(&this.Status, status)
	return &this
}

// NewAuthErrorErrorWithDefaults instantiates a new AuthErrorError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthErrorErrorWithDefaults() *AuthErrorError {
	this := AuthErrorError{}
	return &this
}

// GetCode returns the Code field value
func (o *AuthErrorError) GetCode() (ret AuthErrorErrorGetCodeRetType) {
	ret, _ = o.GetCodeOk()
	return ret
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *AuthErrorError) GetCodeOk() (ret AuthErrorErrorGetCodeRetType, ok bool) {
	return getAuthErrorErrorGetCodeAttributeTypeOk(o.Code)
}

// SetCode sets field value
func (o *AuthErrorError) SetCode(v AuthErrorErrorGetCodeRetType) {
	setAuthErrorErrorGetCodeAttributeType(&o.Code, v)
}

// GetMessage returns the Message field value
func (o *AuthErrorError) GetMessage() (ret AuthErrorErrorGetMessageRetType) {
	ret, _ = o.GetMessageOk()
	return ret
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *AuthErrorError) GetMessageOk() (ret AuthErrorErrorGetMessageRetType, ok bool) {
	return getAuthErrorErrorGetMessageAttributeTypeOk(o.Message)
}

// SetMessage sets field value
func (o *AuthErrorError) SetMessage(v AuthErrorErrorGetMessageRetType) {
	setAuthErrorErrorGetMessageAttributeType(&o.Message, v)
}

// GetStatus returns the Status field value
func (o *AuthErrorError) GetStatus() (ret AuthErrorErrorGetStatusRetType) {
	ret, _ = o.GetStatusOk()
	return ret
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *AuthErrorError) GetStatusOk() (ret AuthErrorErrorGetStatusRetType, ok bool) {
	return getAuthErrorErrorGetStatusAttributeTypeOk(o.Status)
}

// SetStatus sets field value
func (o *AuthErrorError) SetStatus(v AuthErrorErrorGetStatusRetType) {
	setAuthErrorErrorGetStatusAttributeType(&o.Status, v)
}

func (o AuthErrorError) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getAuthErrorErrorGetCodeAttributeTypeOk(o.Code); ok {
		toSerialize["Code"] = val
	}
	if val, ok := getAuthErrorErrorGetMessageAttributeTypeOk(o.Message); ok {
		toSerialize["Message"] = val
	}
	if val, ok := getAuthErrorErrorGetStatusAttributeTypeOk(o.Status); ok {
		toSerialize["Status"] = val
	}
	return toSerialize, nil
}

type NullableAuthErrorError struct {
	value *AuthErrorError
	isSet bool
}

func (v NullableAuthErrorError) Get() *AuthErrorError {
	return v.value
}

func (v *NullableAuthErrorError) Set(val *AuthErrorError) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthErrorError) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthErrorError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthErrorError(val *AuthErrorError) *NullableAuthErrorError {
	return &NullableAuthErrorError{value: val, isSet: true}
}

func (v NullableAuthErrorError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthErrorError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
