/*
Service Account API

API to manage Service Accounts and their Access Tokens.  ### System for Cross-domain Identity Management (SCIM) Service Account Service offers SCIM APIs to query state. The SCIM protocol was created as standard for  automating the exchange of user identity information between identity domains, or IT systems. Service accounts  are be handled as indentites similar to SCIM users. A custom SCIM schema has been created: `/ServiceAccounts`  #### Syntax ##### Attribute operators | OPERATOR | DESCRIPTION              | |----------|--------------------------| | eq       | equal                    | | ne       | not equal                | | co       | contains                 | | sw       | starts with              | | ew       | ends with                |  ##### Logical operators | OPERATOR | DESCRIPTION              | |----------|--------------------------| | and      | logical \"and\"            | | or       | logical \"or\"             |  ##### Grouping operators | OPERATOR | DESCRIPTION              | |----------|--------------------------| | ()       | precending grouping      |  ##### Example ``` filter=email eq \"my-service-account-aBc2defg@sa.stackit.cloud\" filter=email ne \"my-service-account-aBc2defg@sa.stackit.cloud\" filter=email co \"my-service-account\" filter=name sw \"my\" filter=name ew \"account\" filter=email co \"my-service-account\" and name sw \"my\" filter=email co \"my-service-account\" and (name sw \"my\" or name ew \"account\") ```  #### Sorting  > Sorting is optional  | PARAMETER | DESCRIPTION                          | |-----------|--------------------------------------| | sortBy    | attribute response is ordered by     | | sortOrder | 'ASCENDING' (default) or 'DESCENDING'|  #### Pagination  | PARAMETER    | DESCRIPTION                                  | |--------------|----------------------------------------------| | startIndex   | index of first query result, default: 1      | | count        | maximum number of query results, default: 100|

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package serviceaccount

import (
	"encoding/json"
	"fmt"
	"time"
)

// checks if the CreateServiceAccountKeyPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateServiceAccountKeyPayload{}

/*
	types and functions for algorithm
*/

// isEnum

// CreateServiceAccountKeyPayloadAlgorithm Optional, key algorithm of the generated key-pair. Used only if publicKey attribute is not specified, otherwise the algorithm is derived from the public key.
// value type for enums
type CreateServiceAccountKeyPayloadAlgorithm string

// List of Algorithm
const (
	CREATESERVICEACCOUNTKEYPAYLOADALGORITHM__2048 CreateServiceAccountKeyPayloadAlgorithm = "RSA_2048"
	CREATESERVICEACCOUNTKEYPAYLOADALGORITHM__4096 CreateServiceAccountKeyPayloadAlgorithm = "RSA_4096"
)

// All allowed values of CreateServiceAccountKeyPayload enum
var AllowedCreateServiceAccountKeyPayloadAlgorithmEnumValues = []CreateServiceAccountKeyPayloadAlgorithm{
	"RSA_2048",
	"RSA_4096",
}

func (v *CreateServiceAccountKeyPayloadAlgorithm) UnmarshalJSON(src []byte) error {
	// use a type alias to prevent infinite recursion during unmarshal,
	// see https://biscuit.ninja/posts/go-avoid-an-infitine-loop-with-custom-json-unmarshallers
	type TmpJson CreateServiceAccountKeyPayloadAlgorithm
	var value TmpJson
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	// Allow unmarshalling zero value for testing purposes
	var zeroValue TmpJson
	if value == zeroValue {
		return nil
	}
	enumTypeValue := CreateServiceAccountKeyPayloadAlgorithm(value)
	for _, existing := range AllowedCreateServiceAccountKeyPayloadAlgorithmEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid CreateServiceAccountKeyPayload", value)
}

// NewCreateServiceAccountKeyPayloadAlgorithmFromValue returns a pointer to a valid CreateServiceAccountKeyPayloadAlgorithm
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewCreateServiceAccountKeyPayloadAlgorithmFromValue(v CreateServiceAccountKeyPayloadAlgorithm) (*CreateServiceAccountKeyPayloadAlgorithm, error) {
	ev := CreateServiceAccountKeyPayloadAlgorithm(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for CreateServiceAccountKeyPayloadAlgorithm: valid values are %v", v, AllowedCreateServiceAccountKeyPayloadAlgorithmEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v CreateServiceAccountKeyPayloadAlgorithm) IsValid() bool {
	for _, existing := range AllowedCreateServiceAccountKeyPayloadAlgorithmEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to AlgorithmAlgorithm value
func (v CreateServiceAccountKeyPayloadAlgorithm) Ptr() *CreateServiceAccountKeyPayloadAlgorithm {
	return &v
}

type NullableCreateServiceAccountKeyPayloadAlgorithm struct {
	value *CreateServiceAccountKeyPayloadAlgorithm
	isSet bool
}

func (v NullableCreateServiceAccountKeyPayloadAlgorithm) Get() *CreateServiceAccountKeyPayloadAlgorithm {
	return v.value
}

func (v *NullableCreateServiceAccountKeyPayloadAlgorithm) Set(val *CreateServiceAccountKeyPayloadAlgorithm) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateServiceAccountKeyPayloadAlgorithm) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateServiceAccountKeyPayloadAlgorithm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateServiceAccountKeyPayloadAlgorithm(val *CreateServiceAccountKeyPayloadAlgorithm) *NullableCreateServiceAccountKeyPayloadAlgorithm {
	return &NullableCreateServiceAccountKeyPayloadAlgorithm{value: val, isSet: true}
}

func (v NullableCreateServiceAccountKeyPayloadAlgorithm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateServiceAccountKeyPayloadAlgorithm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

type CreateServiceAccountKeyPayloadGetAlgorithmAttributeType = *CreateServiceAccountKeyPayloadAlgorithm
type CreateServiceAccountKeyPayloadGetAlgorithmArgType = CreateServiceAccountKeyPayloadAlgorithm
type CreateServiceAccountKeyPayloadGetAlgorithmRetType = CreateServiceAccountKeyPayloadAlgorithm

func getCreateServiceAccountKeyPayloadGetAlgorithmAttributeTypeOk(arg CreateServiceAccountKeyPayloadGetAlgorithmAttributeType) (ret CreateServiceAccountKeyPayloadGetAlgorithmRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setCreateServiceAccountKeyPayloadGetAlgorithmAttributeType(arg *CreateServiceAccountKeyPayloadGetAlgorithmAttributeType, val CreateServiceAccountKeyPayloadGetAlgorithmRetType) {
	*arg = &val
}

/*
	types and functions for publicKey
*/

// isNotNullableString
type CreateServiceAccountKeyPayloadGetPublicKeyAttributeType = *string

func getCreateServiceAccountKeyPayloadGetPublicKeyAttributeTypeOk(arg CreateServiceAccountKeyPayloadGetPublicKeyAttributeType) (ret CreateServiceAccountKeyPayloadGetPublicKeyRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setCreateServiceAccountKeyPayloadGetPublicKeyAttributeType(arg *CreateServiceAccountKeyPayloadGetPublicKeyAttributeType, val CreateServiceAccountKeyPayloadGetPublicKeyRetType) {
	*arg = &val
}

type CreateServiceAccountKeyPayloadGetPublicKeyArgType = string
type CreateServiceAccountKeyPayloadGetPublicKeyRetType = string

/*
	types and functions for validUntil
*/

// isDateTime
type CreateServiceAccountKeyPayloadGetValidUntilAttributeType = *time.Time
type CreateServiceAccountKeyPayloadGetValidUntilArgType = time.Time
type CreateServiceAccountKeyPayloadGetValidUntilRetType = time.Time

func getCreateServiceAccountKeyPayloadGetValidUntilAttributeTypeOk(arg CreateServiceAccountKeyPayloadGetValidUntilAttributeType) (ret CreateServiceAccountKeyPayloadGetValidUntilRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setCreateServiceAccountKeyPayloadGetValidUntilAttributeType(arg *CreateServiceAccountKeyPayloadGetValidUntilAttributeType, val CreateServiceAccountKeyPayloadGetValidUntilRetType) {
	*arg = &val
}

// CreateServiceAccountKeyPayload struct for CreateServiceAccountKeyPayload
type CreateServiceAccountKeyPayload struct {
	// Optional, key algorithm of the generated key-pair. Used only if publicKey attribute is not specified, otherwise the algorithm is derived from the public key.
	Algorithm CreateServiceAccountKeyPayloadGetAlgorithmAttributeType `json:"algorithm,omitempty"`
	// Optional, public key part of the user generated RSA key-pair wrapped in a [X.509 v3 certificate](https://www.rfc-editor.org/rfc/rfc5280)
	PublicKey CreateServiceAccountKeyPayloadGetPublicKeyAttributeType `json:"publicKey,omitempty"`
	// Optional, date of key expiration. When omitted, key is valid until deleted
	ValidUntil CreateServiceAccountKeyPayloadGetValidUntilAttributeType `json:"validUntil,omitempty"`
}

// NewCreateServiceAccountKeyPayload instantiates a new CreateServiceAccountKeyPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateServiceAccountKeyPayload() *CreateServiceAccountKeyPayload {
	this := CreateServiceAccountKeyPayload{}
	return &this
}

// NewCreateServiceAccountKeyPayloadWithDefaults instantiates a new CreateServiceAccountKeyPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateServiceAccountKeyPayloadWithDefaults() *CreateServiceAccountKeyPayload {
	this := CreateServiceAccountKeyPayload{}
	return &this
}

// GetAlgorithm returns the Algorithm field value if set, zero value otherwise.
func (o *CreateServiceAccountKeyPayload) GetAlgorithm() (res CreateServiceAccountKeyPayloadGetAlgorithmRetType) {
	res, _ = o.GetAlgorithmOk()
	return
}

// GetAlgorithmOk returns a tuple with the Algorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateServiceAccountKeyPayload) GetAlgorithmOk() (ret CreateServiceAccountKeyPayloadGetAlgorithmRetType, ok bool) {
	return getCreateServiceAccountKeyPayloadGetAlgorithmAttributeTypeOk(o.Algorithm)
}

// HasAlgorithm returns a boolean if a field has been set.
func (o *CreateServiceAccountKeyPayload) HasAlgorithm() bool {
	_, ok := o.GetAlgorithmOk()
	return ok
}

// SetAlgorithm gets a reference to the given string and assigns it to the Algorithm field.
func (o *CreateServiceAccountKeyPayload) SetAlgorithm(v CreateServiceAccountKeyPayloadGetAlgorithmRetType) {
	setCreateServiceAccountKeyPayloadGetAlgorithmAttributeType(&o.Algorithm, v)
}

// GetPublicKey returns the PublicKey field value if set, zero value otherwise.
func (o *CreateServiceAccountKeyPayload) GetPublicKey() (res CreateServiceAccountKeyPayloadGetPublicKeyRetType) {
	res, _ = o.GetPublicKeyOk()
	return
}

// GetPublicKeyOk returns a tuple with the PublicKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateServiceAccountKeyPayload) GetPublicKeyOk() (ret CreateServiceAccountKeyPayloadGetPublicKeyRetType, ok bool) {
	return getCreateServiceAccountKeyPayloadGetPublicKeyAttributeTypeOk(o.PublicKey)
}

// HasPublicKey returns a boolean if a field has been set.
func (o *CreateServiceAccountKeyPayload) HasPublicKey() bool {
	_, ok := o.GetPublicKeyOk()
	return ok
}

// SetPublicKey gets a reference to the given string and assigns it to the PublicKey field.
func (o *CreateServiceAccountKeyPayload) SetPublicKey(v CreateServiceAccountKeyPayloadGetPublicKeyRetType) {
	setCreateServiceAccountKeyPayloadGetPublicKeyAttributeType(&o.PublicKey, v)
}

// GetValidUntil returns the ValidUntil field value if set, zero value otherwise.
func (o *CreateServiceAccountKeyPayload) GetValidUntil() (res CreateServiceAccountKeyPayloadGetValidUntilRetType) {
	res, _ = o.GetValidUntilOk()
	return
}

// GetValidUntilOk returns a tuple with the ValidUntil field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateServiceAccountKeyPayload) GetValidUntilOk() (ret CreateServiceAccountKeyPayloadGetValidUntilRetType, ok bool) {
	return getCreateServiceAccountKeyPayloadGetValidUntilAttributeTypeOk(o.ValidUntil)
}

// HasValidUntil returns a boolean if a field has been set.
func (o *CreateServiceAccountKeyPayload) HasValidUntil() bool {
	_, ok := o.GetValidUntilOk()
	return ok
}

// SetValidUntil gets a reference to the given time.Time and assigns it to the ValidUntil field.
func (o *CreateServiceAccountKeyPayload) SetValidUntil(v CreateServiceAccountKeyPayloadGetValidUntilRetType) {
	setCreateServiceAccountKeyPayloadGetValidUntilAttributeType(&o.ValidUntil, v)
}

func (o CreateServiceAccountKeyPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getCreateServiceAccountKeyPayloadGetAlgorithmAttributeTypeOk(o.Algorithm); ok {
		toSerialize["Algorithm"] = val
	}
	if val, ok := getCreateServiceAccountKeyPayloadGetPublicKeyAttributeTypeOk(o.PublicKey); ok {
		toSerialize["PublicKey"] = val
	}
	if val, ok := getCreateServiceAccountKeyPayloadGetValidUntilAttributeTypeOk(o.ValidUntil); ok {
		toSerialize["ValidUntil"] = val
	}
	return toSerialize, nil
}

type NullableCreateServiceAccountKeyPayload struct {
	value *CreateServiceAccountKeyPayload
	isSet bool
}

func (v NullableCreateServiceAccountKeyPayload) Get() *CreateServiceAccountKeyPayload {
	return v.value
}

func (v *NullableCreateServiceAccountKeyPayload) Set(val *CreateServiceAccountKeyPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateServiceAccountKeyPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateServiceAccountKeyPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateServiceAccountKeyPayload(val *CreateServiceAccountKeyPayload) *NullableCreateServiceAccountKeyPayload {
	return &NullableCreateServiceAccountKeyPayload{value: val, isSet: true}
}

func (v NullableCreateServiceAccountKeyPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateServiceAccountKeyPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
