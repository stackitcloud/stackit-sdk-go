/*
Service Account API

API to manage Service Accounts and their Access Tokens.  ### System for Cross-domain Identity Management (SCIM) Service Account Service offers SCIM APIs to query state. The SCIM protocol was created as standard for  automating the exchange of user identity information between identity domains, or IT systems. Service accounts  are be handled as indentites similar to SCIM users. A custom SCIM schema has been created: `/ServiceAccounts`  #### Syntax ##### Attribute operators | OPERATOR | DESCRIPTION              | |----------|--------------------------| | eq       | equal                    | | ne       | not equal                | | co       | contains                 | | sw       | starts with              | | ew       | ends with                |  ##### Logical operators | OPERATOR | DESCRIPTION              | |----------|--------------------------| | and      | logical \"and\"            | | or       | logical \"or\"             |  ##### Grouping operators | OPERATOR | DESCRIPTION              | |----------|--------------------------| | ()       | precending grouping      |  ##### Example ``` filter=email eq \"my-service-account-aBc2defg@sa.stackit.cloud\" filter=email ne \"my-service-account-aBc2defg@sa.stackit.cloud\" filter=email co \"my-service-account\" filter=name sw \"my\" filter=name ew \"account\" filter=email co \"my-service-account\" and name sw \"my\" filter=email co \"my-service-account\" and (name sw \"my\" or name ew \"account\") ```  #### Sorting  > Sorting is optional  | PARAMETER | DESCRIPTION                          | |-----------|--------------------------------------| | sortBy    | attribute response is ordered by     | | sortOrder | 'ASCENDING' (default) or 'DESCENDING'|  #### Pagination  | PARAMETER    | DESCRIPTION                                  | |--------------|----------------------------------------------| | startIndex   | index of first query result, default: 1      | | count        | maximum number of query results, default: 100|

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package serviceaccount

import (
	"encoding/json"
	"fmt"
	"time"
)

// checks if the GetServiceAccountKeyResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetServiceAccountKeyResponse{}

/*
	types and functions for active
*/

// isBoolean
type GetServiceAccountKeyResponsegetActiveAttributeType = *bool
type GetServiceAccountKeyResponsegetActiveArgType = bool
type GetServiceAccountKeyResponsegetActiveRetType = bool

func getGetServiceAccountKeyResponsegetActiveAttributeTypeOk(arg GetServiceAccountKeyResponsegetActiveAttributeType) (ret GetServiceAccountKeyResponsegetActiveRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setGetServiceAccountKeyResponsegetActiveAttributeType(arg *GetServiceAccountKeyResponsegetActiveAttributeType, val GetServiceAccountKeyResponsegetActiveRetType) {
	*arg = &val
}

/*
	types and functions for createdAt
*/

// isDateTime
type GetServiceAccountKeyResponseGetCreatedAtAttributeType = *time.Time
type GetServiceAccountKeyResponseGetCreatedAtArgType = time.Time
type GetServiceAccountKeyResponseGetCreatedAtRetType = time.Time

func getGetServiceAccountKeyResponseGetCreatedAtAttributeTypeOk(arg GetServiceAccountKeyResponseGetCreatedAtAttributeType) (ret GetServiceAccountKeyResponseGetCreatedAtRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setGetServiceAccountKeyResponseGetCreatedAtAttributeType(arg *GetServiceAccountKeyResponseGetCreatedAtAttributeType, val GetServiceAccountKeyResponseGetCreatedAtRetType) {
	*arg = &val
}

/*
	types and functions for credentials
*/

// isModel
type GetServiceAccountKeyResponseGetCredentialsAttributeType = *GetServiceAccountKeyResponseCredentials
type GetServiceAccountKeyResponseGetCredentialsArgType = GetServiceAccountKeyResponseCredentials
type GetServiceAccountKeyResponseGetCredentialsRetType = GetServiceAccountKeyResponseCredentials

func getGetServiceAccountKeyResponseGetCredentialsAttributeTypeOk(arg GetServiceAccountKeyResponseGetCredentialsAttributeType) (ret GetServiceAccountKeyResponseGetCredentialsRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setGetServiceAccountKeyResponseGetCredentialsAttributeType(arg *GetServiceAccountKeyResponseGetCredentialsAttributeType, val GetServiceAccountKeyResponseGetCredentialsRetType) {
	*arg = &val
}

/*
	types and functions for id
*/

// isNotNullableString
type GetServiceAccountKeyResponseGetIdAttributeType = *string

func getGetServiceAccountKeyResponseGetIdAttributeTypeOk(arg GetServiceAccountKeyResponseGetIdAttributeType) (ret GetServiceAccountKeyResponseGetIdRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setGetServiceAccountKeyResponseGetIdAttributeType(arg *GetServiceAccountKeyResponseGetIdAttributeType, val GetServiceAccountKeyResponseGetIdRetType) {
	*arg = &val
}

type GetServiceAccountKeyResponseGetIdArgType = string
type GetServiceAccountKeyResponseGetIdRetType = string

/*
	types and functions for keyAlgorithm
*/

// isEnum

// GetServiceAccountKeyResponseKeyAlgorithm the model 'GetServiceAccountKeyResponse'
type GetServiceAccountKeyResponseKeyAlgorithm string

// List of KeyAlgorithm
const (
	GETSERVICEACCOUNTKEYRESPONSEKEY_ALGORITHM_RSA_2048 GetServiceAccountKeyResponseKeyAlgorithm = "RSA_2048"
)

// All allowed values of GetServiceAccountKeyResponse enum
var AllowedGetServiceAccountKeyResponseKeyAlgorithmEnumValues = []GetServiceAccountKeyResponseKeyAlgorithm{
	"RSA_2048",
}

func (v *GetServiceAccountKeyResponseKeyAlgorithm) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	// Allow unmarshalling zero value for testing purposes
	var zeroValue string
	if value == zeroValue {
		return nil
	}
	enumTypeValue := GetServiceAccountKeyResponseKeyAlgorithm(value)
	for _, existing := range AllowedGetServiceAccountKeyResponseKeyAlgorithmEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid GetServiceAccountKeyResponse", value)
}

// NewGetServiceAccountKeyResponseKeyAlgorithmFromValue returns a pointer to a valid GetServiceAccountKeyResponseKeyAlgorithm
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewGetServiceAccountKeyResponseKeyAlgorithmFromValue(v string) (*GetServiceAccountKeyResponseKeyAlgorithm, error) {
	ev := GetServiceAccountKeyResponseKeyAlgorithm(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for GetServiceAccountKeyResponseKeyAlgorithm: valid values are %v", v, AllowedGetServiceAccountKeyResponseKeyAlgorithmEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v GetServiceAccountKeyResponseKeyAlgorithm) IsValid() bool {
	for _, existing := range AllowedGetServiceAccountKeyResponseKeyAlgorithmEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to KeyAlgorithmKeyAlgorithm value
func (v GetServiceAccountKeyResponseKeyAlgorithm) Ptr() *GetServiceAccountKeyResponseKeyAlgorithm {
	return &v
}

type NullableGetServiceAccountKeyResponseKeyAlgorithm struct {
	value *GetServiceAccountKeyResponseKeyAlgorithm
	isSet bool
}

func (v NullableGetServiceAccountKeyResponseKeyAlgorithm) Get() *GetServiceAccountKeyResponseKeyAlgorithm {
	return v.value
}

func (v *NullableGetServiceAccountKeyResponseKeyAlgorithm) Set(val *GetServiceAccountKeyResponseKeyAlgorithm) {
	v.value = val
	v.isSet = true
}

func (v NullableGetServiceAccountKeyResponseKeyAlgorithm) IsSet() bool {
	return v.isSet
}

func (v *NullableGetServiceAccountKeyResponseKeyAlgorithm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetServiceAccountKeyResponseKeyAlgorithm(val *GetServiceAccountKeyResponseKeyAlgorithm) *NullableGetServiceAccountKeyResponseKeyAlgorithm {
	return &NullableGetServiceAccountKeyResponseKeyAlgorithm{value: val, isSet: true}
}

func (v NullableGetServiceAccountKeyResponseKeyAlgorithm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetServiceAccountKeyResponseKeyAlgorithm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

type GetServiceAccountKeyResponseGetKeyAlgorithmAttributeType = *GetServiceAccountKeyResponseKeyAlgorithm
type GetServiceAccountKeyResponseGetKeyAlgorithmArgType = GetServiceAccountKeyResponseKeyAlgorithm
type GetServiceAccountKeyResponseGetKeyAlgorithmRetType = GetServiceAccountKeyResponseKeyAlgorithm

func getGetServiceAccountKeyResponseGetKeyAlgorithmAttributeTypeOk(arg GetServiceAccountKeyResponseGetKeyAlgorithmAttributeType) (ret GetServiceAccountKeyResponseGetKeyAlgorithmRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setGetServiceAccountKeyResponseGetKeyAlgorithmAttributeType(arg *GetServiceAccountKeyResponseGetKeyAlgorithmAttributeType, val GetServiceAccountKeyResponseGetKeyAlgorithmRetType) {
	*arg = &val
}

/*
	types and functions for keyOrigin
*/

// isEnum

// GetServiceAccountKeyResponseKeyOrigin the model 'GetServiceAccountKeyResponse'
type GetServiceAccountKeyResponseKeyOrigin string

// List of KeyOrigin
const (
	GETSERVICEACCOUNTKEYRESPONSEKEY_ORIGIN_USER_PROVIDED GetServiceAccountKeyResponseKeyOrigin = "USER_PROVIDED"
	GETSERVICEACCOUNTKEYRESPONSEKEY_ORIGIN_GENERATED     GetServiceAccountKeyResponseKeyOrigin = "GENERATED"
)

// All allowed values of GetServiceAccountKeyResponse enum
var AllowedGetServiceAccountKeyResponseKeyOriginEnumValues = []GetServiceAccountKeyResponseKeyOrigin{
	"USER_PROVIDED",
	"GENERATED",
}

func (v *GetServiceAccountKeyResponseKeyOrigin) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	// Allow unmarshalling zero value for testing purposes
	var zeroValue string
	if value == zeroValue {
		return nil
	}
	enumTypeValue := GetServiceAccountKeyResponseKeyOrigin(value)
	for _, existing := range AllowedGetServiceAccountKeyResponseKeyOriginEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid GetServiceAccountKeyResponse", value)
}

// NewGetServiceAccountKeyResponseKeyOriginFromValue returns a pointer to a valid GetServiceAccountKeyResponseKeyOrigin
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewGetServiceAccountKeyResponseKeyOriginFromValue(v string) (*GetServiceAccountKeyResponseKeyOrigin, error) {
	ev := GetServiceAccountKeyResponseKeyOrigin(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for GetServiceAccountKeyResponseKeyOrigin: valid values are %v", v, AllowedGetServiceAccountKeyResponseKeyOriginEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v GetServiceAccountKeyResponseKeyOrigin) IsValid() bool {
	for _, existing := range AllowedGetServiceAccountKeyResponseKeyOriginEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to KeyOriginKeyOrigin value
func (v GetServiceAccountKeyResponseKeyOrigin) Ptr() *GetServiceAccountKeyResponseKeyOrigin {
	return &v
}

type NullableGetServiceAccountKeyResponseKeyOrigin struct {
	value *GetServiceAccountKeyResponseKeyOrigin
	isSet bool
}

func (v NullableGetServiceAccountKeyResponseKeyOrigin) Get() *GetServiceAccountKeyResponseKeyOrigin {
	return v.value
}

func (v *NullableGetServiceAccountKeyResponseKeyOrigin) Set(val *GetServiceAccountKeyResponseKeyOrigin) {
	v.value = val
	v.isSet = true
}

func (v NullableGetServiceAccountKeyResponseKeyOrigin) IsSet() bool {
	return v.isSet
}

func (v *NullableGetServiceAccountKeyResponseKeyOrigin) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetServiceAccountKeyResponseKeyOrigin(val *GetServiceAccountKeyResponseKeyOrigin) *NullableGetServiceAccountKeyResponseKeyOrigin {
	return &NullableGetServiceAccountKeyResponseKeyOrigin{value: val, isSet: true}
}

func (v NullableGetServiceAccountKeyResponseKeyOrigin) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetServiceAccountKeyResponseKeyOrigin) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

type GetServiceAccountKeyResponseGetKeyOriginAttributeType = *GetServiceAccountKeyResponseKeyOrigin
type GetServiceAccountKeyResponseGetKeyOriginArgType = GetServiceAccountKeyResponseKeyOrigin
type GetServiceAccountKeyResponseGetKeyOriginRetType = GetServiceAccountKeyResponseKeyOrigin

func getGetServiceAccountKeyResponseGetKeyOriginAttributeTypeOk(arg GetServiceAccountKeyResponseGetKeyOriginAttributeType) (ret GetServiceAccountKeyResponseGetKeyOriginRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setGetServiceAccountKeyResponseGetKeyOriginAttributeType(arg *GetServiceAccountKeyResponseGetKeyOriginAttributeType, val GetServiceAccountKeyResponseGetKeyOriginRetType) {
	*arg = &val
}

/*
	types and functions for keyType
*/

// isEnum

// GetServiceAccountKeyResponseKeyType the model 'GetServiceAccountKeyResponse'
type GetServiceAccountKeyResponseKeyType string

// List of KeyType
const (
	GETSERVICEACCOUNTKEYRESPONSEKEY_TYPE_USER_MANAGED   GetServiceAccountKeyResponseKeyType = "USER_MANAGED"
	GETSERVICEACCOUNTKEYRESPONSEKEY_TYPE_SYSTEM_MANAGED GetServiceAccountKeyResponseKeyType = "SYSTEM_MANAGED"
)

// All allowed values of GetServiceAccountKeyResponse enum
var AllowedGetServiceAccountKeyResponseKeyTypeEnumValues = []GetServiceAccountKeyResponseKeyType{
	"USER_MANAGED",
	"SYSTEM_MANAGED",
}

func (v *GetServiceAccountKeyResponseKeyType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	// Allow unmarshalling zero value for testing purposes
	var zeroValue string
	if value == zeroValue {
		return nil
	}
	enumTypeValue := GetServiceAccountKeyResponseKeyType(value)
	for _, existing := range AllowedGetServiceAccountKeyResponseKeyTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid GetServiceAccountKeyResponse", value)
}

// NewGetServiceAccountKeyResponseKeyTypeFromValue returns a pointer to a valid GetServiceAccountKeyResponseKeyType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewGetServiceAccountKeyResponseKeyTypeFromValue(v string) (*GetServiceAccountKeyResponseKeyType, error) {
	ev := GetServiceAccountKeyResponseKeyType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for GetServiceAccountKeyResponseKeyType: valid values are %v", v, AllowedGetServiceAccountKeyResponseKeyTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v GetServiceAccountKeyResponseKeyType) IsValid() bool {
	for _, existing := range AllowedGetServiceAccountKeyResponseKeyTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to KeyTypeKeyType value
func (v GetServiceAccountKeyResponseKeyType) Ptr() *GetServiceAccountKeyResponseKeyType {
	return &v
}

type NullableGetServiceAccountKeyResponseKeyType struct {
	value *GetServiceAccountKeyResponseKeyType
	isSet bool
}

func (v NullableGetServiceAccountKeyResponseKeyType) Get() *GetServiceAccountKeyResponseKeyType {
	return v.value
}

func (v *NullableGetServiceAccountKeyResponseKeyType) Set(val *GetServiceAccountKeyResponseKeyType) {
	v.value = val
	v.isSet = true
}

func (v NullableGetServiceAccountKeyResponseKeyType) IsSet() bool {
	return v.isSet
}

func (v *NullableGetServiceAccountKeyResponseKeyType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetServiceAccountKeyResponseKeyType(val *GetServiceAccountKeyResponseKeyType) *NullableGetServiceAccountKeyResponseKeyType {
	return &NullableGetServiceAccountKeyResponseKeyType{value: val, isSet: true}
}

func (v NullableGetServiceAccountKeyResponseKeyType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetServiceAccountKeyResponseKeyType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

type GetServiceAccountKeyResponseGetKeyTypeAttributeType = *GetServiceAccountKeyResponseKeyType
type GetServiceAccountKeyResponseGetKeyTypeArgType = GetServiceAccountKeyResponseKeyType
type GetServiceAccountKeyResponseGetKeyTypeRetType = GetServiceAccountKeyResponseKeyType

func getGetServiceAccountKeyResponseGetKeyTypeAttributeTypeOk(arg GetServiceAccountKeyResponseGetKeyTypeAttributeType) (ret GetServiceAccountKeyResponseGetKeyTypeRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setGetServiceAccountKeyResponseGetKeyTypeAttributeType(arg *GetServiceAccountKeyResponseGetKeyTypeAttributeType, val GetServiceAccountKeyResponseGetKeyTypeRetType) {
	*arg = &val
}

/*
	types and functions for publicKey
*/

// isNotNullableString
type GetServiceAccountKeyResponseGetPublicKeyAttributeType = *string

func getGetServiceAccountKeyResponseGetPublicKeyAttributeTypeOk(arg GetServiceAccountKeyResponseGetPublicKeyAttributeType) (ret GetServiceAccountKeyResponseGetPublicKeyRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setGetServiceAccountKeyResponseGetPublicKeyAttributeType(arg *GetServiceAccountKeyResponseGetPublicKeyAttributeType, val GetServiceAccountKeyResponseGetPublicKeyRetType) {
	*arg = &val
}

type GetServiceAccountKeyResponseGetPublicKeyArgType = string
type GetServiceAccountKeyResponseGetPublicKeyRetType = string

/*
	types and functions for validUntil
*/

// isDateTime
type GetServiceAccountKeyResponseGetValidUntilAttributeType = *time.Time
type GetServiceAccountKeyResponseGetValidUntilArgType = time.Time
type GetServiceAccountKeyResponseGetValidUntilRetType = time.Time

func getGetServiceAccountKeyResponseGetValidUntilAttributeTypeOk(arg GetServiceAccountKeyResponseGetValidUntilAttributeType) (ret GetServiceAccountKeyResponseGetValidUntilRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setGetServiceAccountKeyResponseGetValidUntilAttributeType(arg *GetServiceAccountKeyResponseGetValidUntilAttributeType, val GetServiceAccountKeyResponseGetValidUntilRetType) {
	*arg = &val
}

// GetServiceAccountKeyResponse struct for GetServiceAccountKeyResponse
type GetServiceAccountKeyResponse struct {
	// REQUIRED
	Active GetServiceAccountKeyResponsegetActiveAttributeType `json:"active"`
	// Creation time of the key
	// REQUIRED
	CreatedAt GetServiceAccountKeyResponseGetCreatedAtAttributeType `json:"createdAt"`
	// REQUIRED
	Credentials GetServiceAccountKeyResponseGetCredentialsAttributeType `json:"credentials"`
	// Unique ID of the key.
	// REQUIRED
	Id GetServiceAccountKeyResponseGetIdAttributeType `json:"id"`
	// REQUIRED
	KeyAlgorithm GetServiceAccountKeyResponseGetKeyAlgorithmAttributeType `json:"keyAlgorithm"`
	// REQUIRED
	KeyOrigin GetServiceAccountKeyResponseGetKeyOriginAttributeType `json:"keyOrigin"`
	// REQUIRED
	KeyType GetServiceAccountKeyResponseGetKeyTypeAttributeType `json:"keyType"`
	// Public key, in the requested format
	PublicKey GetServiceAccountKeyResponseGetPublicKeyAttributeType `json:"publicKey,omitempty"`
	// If specified, the timestamp until the key is active. May be null
	ValidUntil GetServiceAccountKeyResponseGetValidUntilAttributeType `json:"validUntil,omitempty"`
}

type _GetServiceAccountKeyResponse GetServiceAccountKeyResponse

// NewGetServiceAccountKeyResponse instantiates a new GetServiceAccountKeyResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetServiceAccountKeyResponse(active GetServiceAccountKeyResponsegetActiveArgType, createdAt GetServiceAccountKeyResponseGetCreatedAtArgType, credentials GetServiceAccountKeyResponseGetCredentialsArgType, id GetServiceAccountKeyResponseGetIdArgType, keyAlgorithm GetServiceAccountKeyResponseGetKeyAlgorithmArgType, keyOrigin GetServiceAccountKeyResponseGetKeyOriginArgType, keyType GetServiceAccountKeyResponseGetKeyTypeArgType) *GetServiceAccountKeyResponse {
	this := GetServiceAccountKeyResponse{}
	setGetServiceAccountKeyResponsegetActiveAttributeType(&this.Active, active)
	setGetServiceAccountKeyResponseGetCreatedAtAttributeType(&this.CreatedAt, createdAt)
	setGetServiceAccountKeyResponseGetCredentialsAttributeType(&this.Credentials, credentials)
	setGetServiceAccountKeyResponseGetIdAttributeType(&this.Id, id)
	setGetServiceAccountKeyResponseGetKeyAlgorithmAttributeType(&this.KeyAlgorithm, keyAlgorithm)
	setGetServiceAccountKeyResponseGetKeyOriginAttributeType(&this.KeyOrigin, keyOrigin)
	setGetServiceAccountKeyResponseGetKeyTypeAttributeType(&this.KeyType, keyType)
	return &this
}

// NewGetServiceAccountKeyResponseWithDefaults instantiates a new GetServiceAccountKeyResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetServiceAccountKeyResponseWithDefaults() *GetServiceAccountKeyResponse {
	this := GetServiceAccountKeyResponse{}
	return &this
}

// GetActive returns the Active field value
func (o *GetServiceAccountKeyResponse) GetActive() (ret GetServiceAccountKeyResponsegetActiveRetType) {
	ret, _ = o.GetActiveOk()
	return ret
}

// GetActiveOk returns a tuple with the Active field value
// and a boolean to check if the value has been set.
func (o *GetServiceAccountKeyResponse) GetActiveOk() (ret GetServiceAccountKeyResponsegetActiveRetType, ok bool) {
	return getGetServiceAccountKeyResponsegetActiveAttributeTypeOk(o.Active)
}

// SetActive sets field value
func (o *GetServiceAccountKeyResponse) SetActive(v GetServiceAccountKeyResponsegetActiveRetType) {
	setGetServiceAccountKeyResponsegetActiveAttributeType(&o.Active, v)
}

// GetCreatedAt returns the CreatedAt field value
func (o *GetServiceAccountKeyResponse) GetCreatedAt() (ret GetServiceAccountKeyResponseGetCreatedAtRetType) {
	ret, _ = o.GetCreatedAtOk()
	return ret
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *GetServiceAccountKeyResponse) GetCreatedAtOk() (ret GetServiceAccountKeyResponseGetCreatedAtRetType, ok bool) {
	return getGetServiceAccountKeyResponseGetCreatedAtAttributeTypeOk(o.CreatedAt)
}

// SetCreatedAt sets field value
func (o *GetServiceAccountKeyResponse) SetCreatedAt(v GetServiceAccountKeyResponseGetCreatedAtRetType) {
	setGetServiceAccountKeyResponseGetCreatedAtAttributeType(&o.CreatedAt, v)
}

// GetCredentials returns the Credentials field value
func (o *GetServiceAccountKeyResponse) GetCredentials() (ret GetServiceAccountKeyResponseGetCredentialsRetType) {
	ret, _ = o.GetCredentialsOk()
	return ret
}

// GetCredentialsOk returns a tuple with the Credentials field value
// and a boolean to check if the value has been set.
func (o *GetServiceAccountKeyResponse) GetCredentialsOk() (ret GetServiceAccountKeyResponseGetCredentialsRetType, ok bool) {
	return getGetServiceAccountKeyResponseGetCredentialsAttributeTypeOk(o.Credentials)
}

// SetCredentials sets field value
func (o *GetServiceAccountKeyResponse) SetCredentials(v GetServiceAccountKeyResponseGetCredentialsRetType) {
	setGetServiceAccountKeyResponseGetCredentialsAttributeType(&o.Credentials, v)
}

// GetId returns the Id field value
func (o *GetServiceAccountKeyResponse) GetId() (ret GetServiceAccountKeyResponseGetIdRetType) {
	ret, _ = o.GetIdOk()
	return ret
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *GetServiceAccountKeyResponse) GetIdOk() (ret GetServiceAccountKeyResponseGetIdRetType, ok bool) {
	return getGetServiceAccountKeyResponseGetIdAttributeTypeOk(o.Id)
}

// SetId sets field value
func (o *GetServiceAccountKeyResponse) SetId(v GetServiceAccountKeyResponseGetIdRetType) {
	setGetServiceAccountKeyResponseGetIdAttributeType(&o.Id, v)
}

// GetKeyAlgorithm returns the KeyAlgorithm field value
func (o *GetServiceAccountKeyResponse) GetKeyAlgorithm() (ret GetServiceAccountKeyResponseGetKeyAlgorithmRetType) {
	ret, _ = o.GetKeyAlgorithmOk()
	return ret
}

// GetKeyAlgorithmOk returns a tuple with the KeyAlgorithm field value
// and a boolean to check if the value has been set.
func (o *GetServiceAccountKeyResponse) GetKeyAlgorithmOk() (ret GetServiceAccountKeyResponseGetKeyAlgorithmRetType, ok bool) {
	return getGetServiceAccountKeyResponseGetKeyAlgorithmAttributeTypeOk(o.KeyAlgorithm)
}

// SetKeyAlgorithm sets field value
func (o *GetServiceAccountKeyResponse) SetKeyAlgorithm(v GetServiceAccountKeyResponseGetKeyAlgorithmRetType) {
	setGetServiceAccountKeyResponseGetKeyAlgorithmAttributeType(&o.KeyAlgorithm, v)
}

// GetKeyOrigin returns the KeyOrigin field value
func (o *GetServiceAccountKeyResponse) GetKeyOrigin() (ret GetServiceAccountKeyResponseGetKeyOriginRetType) {
	ret, _ = o.GetKeyOriginOk()
	return ret
}

// GetKeyOriginOk returns a tuple with the KeyOrigin field value
// and a boolean to check if the value has been set.
func (o *GetServiceAccountKeyResponse) GetKeyOriginOk() (ret GetServiceAccountKeyResponseGetKeyOriginRetType, ok bool) {
	return getGetServiceAccountKeyResponseGetKeyOriginAttributeTypeOk(o.KeyOrigin)
}

// SetKeyOrigin sets field value
func (o *GetServiceAccountKeyResponse) SetKeyOrigin(v GetServiceAccountKeyResponseGetKeyOriginRetType) {
	setGetServiceAccountKeyResponseGetKeyOriginAttributeType(&o.KeyOrigin, v)
}

// GetKeyType returns the KeyType field value
func (o *GetServiceAccountKeyResponse) GetKeyType() (ret GetServiceAccountKeyResponseGetKeyTypeRetType) {
	ret, _ = o.GetKeyTypeOk()
	return ret
}

// GetKeyTypeOk returns a tuple with the KeyType field value
// and a boolean to check if the value has been set.
func (o *GetServiceAccountKeyResponse) GetKeyTypeOk() (ret GetServiceAccountKeyResponseGetKeyTypeRetType, ok bool) {
	return getGetServiceAccountKeyResponseGetKeyTypeAttributeTypeOk(o.KeyType)
}

// SetKeyType sets field value
func (o *GetServiceAccountKeyResponse) SetKeyType(v GetServiceAccountKeyResponseGetKeyTypeRetType) {
	setGetServiceAccountKeyResponseGetKeyTypeAttributeType(&o.KeyType, v)
}

// GetPublicKey returns the PublicKey field value if set, zero value otherwise.
func (o *GetServiceAccountKeyResponse) GetPublicKey() (res GetServiceAccountKeyResponseGetPublicKeyRetType) {
	res, _ = o.GetPublicKeyOk()
	return
}

// GetPublicKeyOk returns a tuple with the PublicKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServiceAccountKeyResponse) GetPublicKeyOk() (ret GetServiceAccountKeyResponseGetPublicKeyRetType, ok bool) {
	return getGetServiceAccountKeyResponseGetPublicKeyAttributeTypeOk(o.PublicKey)
}

// HasPublicKey returns a boolean if a field has been set.
func (o *GetServiceAccountKeyResponse) HasPublicKey() bool {
	_, ok := o.GetPublicKeyOk()
	return ok
}

// SetPublicKey gets a reference to the given string and assigns it to the PublicKey field.
func (o *GetServiceAccountKeyResponse) SetPublicKey(v GetServiceAccountKeyResponseGetPublicKeyRetType) {
	setGetServiceAccountKeyResponseGetPublicKeyAttributeType(&o.PublicKey, v)
}

// GetValidUntil returns the ValidUntil field value if set, zero value otherwise.
func (o *GetServiceAccountKeyResponse) GetValidUntil() (res GetServiceAccountKeyResponseGetValidUntilRetType) {
	res, _ = o.GetValidUntilOk()
	return
}

// GetValidUntilOk returns a tuple with the ValidUntil field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServiceAccountKeyResponse) GetValidUntilOk() (ret GetServiceAccountKeyResponseGetValidUntilRetType, ok bool) {
	return getGetServiceAccountKeyResponseGetValidUntilAttributeTypeOk(o.ValidUntil)
}

// HasValidUntil returns a boolean if a field has been set.
func (o *GetServiceAccountKeyResponse) HasValidUntil() bool {
	_, ok := o.GetValidUntilOk()
	return ok
}

// SetValidUntil gets a reference to the given time.Time and assigns it to the ValidUntil field.
func (o *GetServiceAccountKeyResponse) SetValidUntil(v GetServiceAccountKeyResponseGetValidUntilRetType) {
	setGetServiceAccountKeyResponseGetValidUntilAttributeType(&o.ValidUntil, v)
}

func (o GetServiceAccountKeyResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getGetServiceAccountKeyResponsegetActiveAttributeTypeOk(o.Active); ok {
		toSerialize["Active"] = val
	}
	if val, ok := getGetServiceAccountKeyResponseGetCreatedAtAttributeTypeOk(o.CreatedAt); ok {
		toSerialize["CreatedAt"] = val
	}
	if val, ok := getGetServiceAccountKeyResponseGetCredentialsAttributeTypeOk(o.Credentials); ok {
		toSerialize["Credentials"] = val
	}
	if val, ok := getGetServiceAccountKeyResponseGetIdAttributeTypeOk(o.Id); ok {
		toSerialize["Id"] = val
	}
	if val, ok := getGetServiceAccountKeyResponseGetKeyAlgorithmAttributeTypeOk(o.KeyAlgorithm); ok {
		toSerialize["KeyAlgorithm"] = val
	}
	if val, ok := getGetServiceAccountKeyResponseGetKeyOriginAttributeTypeOk(o.KeyOrigin); ok {
		toSerialize["KeyOrigin"] = val
	}
	if val, ok := getGetServiceAccountKeyResponseGetKeyTypeAttributeTypeOk(o.KeyType); ok {
		toSerialize["KeyType"] = val
	}
	if val, ok := getGetServiceAccountKeyResponseGetPublicKeyAttributeTypeOk(o.PublicKey); ok {
		toSerialize["PublicKey"] = val
	}
	if val, ok := getGetServiceAccountKeyResponseGetValidUntilAttributeTypeOk(o.ValidUntil); ok {
		toSerialize["ValidUntil"] = val
	}
	return toSerialize, nil
}

type NullableGetServiceAccountKeyResponse struct {
	value *GetServiceAccountKeyResponse
	isSet bool
}

func (v NullableGetServiceAccountKeyResponse) Get() *GetServiceAccountKeyResponse {
	return v.value
}

func (v *NullableGetServiceAccountKeyResponse) Set(val *GetServiceAccountKeyResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetServiceAccountKeyResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetServiceAccountKeyResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetServiceAccountKeyResponse(val *GetServiceAccountKeyResponse) *NullableGetServiceAccountKeyResponse {
	return &NullableGetServiceAccountKeyResponse{value: val, isSet: true}
}

func (v NullableGetServiceAccountKeyResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetServiceAccountKeyResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
