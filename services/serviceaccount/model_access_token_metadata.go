/*
Service Account API

API to manage Service Accounts and their Access Tokens.  ### System for Cross-domain Identity Management (SCIM) Service Account Service offers SCIM APIs to query state. The SCIM protocol was created as standard for  automating the exchange of user identity information between identity domains, or IT systems. Service accounts  are be handled as indentites similar to SCIM users. A custom SCIM schema has been created: `/ServiceAccounts`  #### Syntax ##### Attribute operators | OPERATOR | DESCRIPTION              | |----------|--------------------------| | eq       | equal                    | | ne       | not equal                | | co       | contains                 | | sw       | starts with              | | ew       | ends with                |  ##### Logical operators | OPERATOR | DESCRIPTION              | |----------|--------------------------| | and      | logical \"and\"            | | or       | logical \"or\"             |  ##### Grouping operators | OPERATOR | DESCRIPTION              | |----------|--------------------------| | ()       | precending grouping      |  ##### Example ``` filter=email eq \"my-service-account-aBc2defg@sa.stackit.cloud\" filter=email ne \"my-service-account-aBc2defg@sa.stackit.cloud\" filter=email co \"my-service-account\" filter=name sw \"my\" filter=name ew \"account\" filter=email co \"my-service-account\" and name sw \"my\" filter=email co \"my-service-account\" and (name sw \"my\" or name ew \"account\") ```  #### Sorting  > Sorting is optional  | PARAMETER | DESCRIPTION                          | |-----------|--------------------------------------| | sortBy    | attribute response is ordered by     | | sortOrder | 'ASCENDING' (default) or 'DESCENDING'|  #### Pagination  | PARAMETER    | DESCRIPTION                                  | |--------------|----------------------------------------------| | startIndex   | index of first query result, default: 1      | | count        | maximum number of query results, default: 100|

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package serviceaccount

import (
	"encoding/json"
	"time"
)

// checks if the AccessTokenMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccessTokenMetadata{}

/*
	types and functions for active
*/

// isBoolean
type AccessTokenMetadatagetActiveAttributeType = *bool
type AccessTokenMetadatagetActiveArgType = bool
type AccessTokenMetadatagetActiveRetType = bool

func getAccessTokenMetadatagetActiveAttributeTypeOk(arg AccessTokenMetadatagetActiveAttributeType) (ret AccessTokenMetadatagetActiveRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setAccessTokenMetadatagetActiveAttributeType(arg *AccessTokenMetadatagetActiveAttributeType, val AccessTokenMetadatagetActiveRetType) {
	*arg = &val
}

/*
	types and functions for createdAt
*/

// isDateTime
type AccessTokenMetadataGetCreatedAtAttributeType = *time.Time
type AccessTokenMetadataGetCreatedAtArgType = time.Time
type AccessTokenMetadataGetCreatedAtRetType = time.Time

func getAccessTokenMetadataGetCreatedAtAttributeTypeOk(arg AccessTokenMetadataGetCreatedAtAttributeType) (ret AccessTokenMetadataGetCreatedAtRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setAccessTokenMetadataGetCreatedAtAttributeType(arg *AccessTokenMetadataGetCreatedAtAttributeType, val AccessTokenMetadataGetCreatedAtRetType) {
	*arg = &val
}

/*
	types and functions for id
*/

// isNotNullableString
type AccessTokenMetadataGetIdAttributeType = *string

func getAccessTokenMetadataGetIdAttributeTypeOk(arg AccessTokenMetadataGetIdAttributeType) (ret AccessTokenMetadataGetIdRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setAccessTokenMetadataGetIdAttributeType(arg *AccessTokenMetadataGetIdAttributeType, val AccessTokenMetadataGetIdRetType) {
	*arg = &val
}

type AccessTokenMetadataGetIdArgType = string
type AccessTokenMetadataGetIdRetType = string

/*
	types and functions for validUntil
*/

// isDateTime
type AccessTokenMetadataGetValidUntilAttributeType = *time.Time
type AccessTokenMetadataGetValidUntilArgType = time.Time
type AccessTokenMetadataGetValidUntilRetType = time.Time

func getAccessTokenMetadataGetValidUntilAttributeTypeOk(arg AccessTokenMetadataGetValidUntilAttributeType) (ret AccessTokenMetadataGetValidUntilRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setAccessTokenMetadataGetValidUntilAttributeType(arg *AccessTokenMetadataGetValidUntilAttributeType, val AccessTokenMetadataGetValidUntilRetType) {
	*arg = &val
}

// AccessTokenMetadata Does not contain the actual token.
type AccessTokenMetadata struct {
	// If true, access token can be used for authorized API calls, if false, the token is not usable anymore.
	// REQUIRED
	Active AccessTokenMetadatagetActiveAttributeType `json:"active"`
	// Creation time of the access token.
	// REQUIRED
	CreatedAt AccessTokenMetadataGetCreatedAtAttributeType `json:"createdAt"`
	// Unique ID of the access token. Also used as JTI field.
	// REQUIRED
	Id AccessTokenMetadataGetIdAttributeType `json:"id"`
	// Approximate expiration time of the access token. Check the JWT for actual validity date.
	// REQUIRED
	ValidUntil AccessTokenMetadataGetValidUntilAttributeType `json:"validUntil"`
}

type _AccessTokenMetadata AccessTokenMetadata

// NewAccessTokenMetadata instantiates a new AccessTokenMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccessTokenMetadata(active AccessTokenMetadatagetActiveArgType, createdAt AccessTokenMetadataGetCreatedAtArgType, id AccessTokenMetadataGetIdArgType, validUntil AccessTokenMetadataGetValidUntilArgType) *AccessTokenMetadata {
	this := AccessTokenMetadata{}
	setAccessTokenMetadatagetActiveAttributeType(&this.Active, active)
	setAccessTokenMetadataGetCreatedAtAttributeType(&this.CreatedAt, createdAt)
	setAccessTokenMetadataGetIdAttributeType(&this.Id, id)
	setAccessTokenMetadataGetValidUntilAttributeType(&this.ValidUntil, validUntil)
	return &this
}

// NewAccessTokenMetadataWithDefaults instantiates a new AccessTokenMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccessTokenMetadataWithDefaults() *AccessTokenMetadata {
	this := AccessTokenMetadata{}
	return &this
}

// GetActive returns the Active field value
func (o *AccessTokenMetadata) GetActive() (ret AccessTokenMetadatagetActiveRetType) {
	ret, _ = o.GetActiveOk()
	return ret
}

// GetActiveOk returns a tuple with the Active field value
// and a boolean to check if the value has been set.
func (o *AccessTokenMetadata) GetActiveOk() (ret AccessTokenMetadatagetActiveRetType, ok bool) {
	return getAccessTokenMetadatagetActiveAttributeTypeOk(o.Active)
}

// SetActive sets field value
func (o *AccessTokenMetadata) SetActive(v AccessTokenMetadatagetActiveRetType) {
	setAccessTokenMetadatagetActiveAttributeType(&o.Active, v)
}

// GetCreatedAt returns the CreatedAt field value
func (o *AccessTokenMetadata) GetCreatedAt() (ret AccessTokenMetadataGetCreatedAtRetType) {
	ret, _ = o.GetCreatedAtOk()
	return ret
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *AccessTokenMetadata) GetCreatedAtOk() (ret AccessTokenMetadataGetCreatedAtRetType, ok bool) {
	return getAccessTokenMetadataGetCreatedAtAttributeTypeOk(o.CreatedAt)
}

// SetCreatedAt sets field value
func (o *AccessTokenMetadata) SetCreatedAt(v AccessTokenMetadataGetCreatedAtRetType) {
	setAccessTokenMetadataGetCreatedAtAttributeType(&o.CreatedAt, v)
}

// GetId returns the Id field value
func (o *AccessTokenMetadata) GetId() (ret AccessTokenMetadataGetIdRetType) {
	ret, _ = o.GetIdOk()
	return ret
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AccessTokenMetadata) GetIdOk() (ret AccessTokenMetadataGetIdRetType, ok bool) {
	return getAccessTokenMetadataGetIdAttributeTypeOk(o.Id)
}

// SetId sets field value
func (o *AccessTokenMetadata) SetId(v AccessTokenMetadataGetIdRetType) {
	setAccessTokenMetadataGetIdAttributeType(&o.Id, v)
}

// GetValidUntil returns the ValidUntil field value
func (o *AccessTokenMetadata) GetValidUntil() (ret AccessTokenMetadataGetValidUntilRetType) {
	ret, _ = o.GetValidUntilOk()
	return ret
}

// GetValidUntilOk returns a tuple with the ValidUntil field value
// and a boolean to check if the value has been set.
func (o *AccessTokenMetadata) GetValidUntilOk() (ret AccessTokenMetadataGetValidUntilRetType, ok bool) {
	return getAccessTokenMetadataGetValidUntilAttributeTypeOk(o.ValidUntil)
}

// SetValidUntil sets field value
func (o *AccessTokenMetadata) SetValidUntil(v AccessTokenMetadataGetValidUntilRetType) {
	setAccessTokenMetadataGetValidUntilAttributeType(&o.ValidUntil, v)
}

func (o AccessTokenMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getAccessTokenMetadatagetActiveAttributeTypeOk(o.Active); ok {
		toSerialize["Active"] = val
	}
	if val, ok := getAccessTokenMetadataGetCreatedAtAttributeTypeOk(o.CreatedAt); ok {
		toSerialize["CreatedAt"] = val
	}
	if val, ok := getAccessTokenMetadataGetIdAttributeTypeOk(o.Id); ok {
		toSerialize["Id"] = val
	}
	if val, ok := getAccessTokenMetadataGetValidUntilAttributeTypeOk(o.ValidUntil); ok {
		toSerialize["ValidUntil"] = val
	}
	return toSerialize, nil
}

type NullableAccessTokenMetadata struct {
	value *AccessTokenMetadata
	isSet bool
}

func (v NullableAccessTokenMetadata) Get() *AccessTokenMetadata {
	return v.value
}

func (v *NullableAccessTokenMetadata) Set(val *AccessTokenMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableAccessTokenMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableAccessTokenMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccessTokenMetadata(val *AccessTokenMetadata) *NullableAccessTokenMetadata {
	return &NullableAccessTokenMetadata{value: val, isSet: true}
}

func (v NullableAccessTokenMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccessTokenMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
