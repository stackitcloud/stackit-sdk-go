/*
Service Account API

API to manage Service Accounts and their Access Tokens.  ### System for Cross-domain Identity Management (SCIM) Service Account Service offers SCIM APIs to query state. The SCIM protocol was created as standard for  automating the exchange of user identity information between identity domains, or IT systems. Service accounts  are be handled as indentites similar to SCIM users. A custom SCIM schema has been created: `/ServiceAccounts`  #### Syntax ##### Attribute operators | OPERATOR | DESCRIPTION              | |----------|--------------------------| | eq       | equal                    | | ne       | not equal                | | co       | contains                 | | sw       | starts with              | | ew       | ends with                |  ##### Logical operators | OPERATOR | DESCRIPTION              | |----------|--------------------------| | and      | logical \"and\"            | | or       | logical \"or\"             |  ##### Grouping operators | OPERATOR | DESCRIPTION              | |----------|--------------------------| | ()       | precending grouping      |  ##### Example ``` filter=email eq \"my-service-account-aBc2defg@sa.stackit.cloud\" filter=email ne \"my-service-account-aBc2defg@sa.stackit.cloud\" filter=email co \"my-service-account\" filter=name sw \"my\" filter=name ew \"account\" filter=email co \"my-service-account\" and name sw \"my\" filter=email co \"my-service-account\" and (name sw \"my\" or name ew \"account\") ```  #### Sorting  > Sorting is optional  | PARAMETER | DESCRIPTION                          | |-----------|--------------------------------------| | sortBy    | attribute response is ordered by     | | sortOrder | 'ASCENDING' (default) or 'DESCENDING'|  #### Pagination  | PARAMETER    | DESCRIPTION                                  | |--------------|----------------------------------------------| | startIndex   | index of first query result, default: 1      | | count        | maximum number of query results, default: 100|

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package serviceaccount

import (
	"encoding/json"
	"time"
)

// checks if the Error type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Error{}

/*
	types and functions for error
*/

// isNotNullableString
type ErrorGetErrorAttributeType = *string

func getErrorGetErrorAttributeTypeOk(arg ErrorGetErrorAttributeType) (ret ErrorGetErrorRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setErrorGetErrorAttributeType(arg *ErrorGetErrorAttributeType, val ErrorGetErrorRetType) {
	*arg = &val
}

type ErrorGetErrorArgType = string
type ErrorGetErrorRetType = string

/*
	types and functions for message
*/

// isNotNullableString
type ErrorGetMessageAttributeType = *string

func getErrorGetMessageAttributeTypeOk(arg ErrorGetMessageAttributeType) (ret ErrorGetMessageRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setErrorGetMessageAttributeType(arg *ErrorGetMessageAttributeType, val ErrorGetMessageRetType) {
	*arg = &val
}

type ErrorGetMessageArgType = string
type ErrorGetMessageRetType = string

/*
	types and functions for path
*/

// isNotNullableString
type ErrorGetPathAttributeType = *string

func getErrorGetPathAttributeTypeOk(arg ErrorGetPathAttributeType) (ret ErrorGetPathRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setErrorGetPathAttributeType(arg *ErrorGetPathAttributeType, val ErrorGetPathRetType) {
	*arg = &val
}

type ErrorGetPathArgType = string
type ErrorGetPathRetType = string

/*
	types and functions for status
*/

// isInteger
type ErrorGetStatusAttributeType = *int64
type ErrorGetStatusArgType = int64
type ErrorGetStatusRetType = int64

func getErrorGetStatusAttributeTypeOk(arg ErrorGetStatusAttributeType) (ret ErrorGetStatusRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setErrorGetStatusAttributeType(arg *ErrorGetStatusAttributeType, val ErrorGetStatusRetType) {
	*arg = &val
}

/*
	types and functions for timeStamp
*/

// isDateTime
type ErrorGetTimeStampAttributeType = *time.Time
type ErrorGetTimeStampArgType = time.Time
type ErrorGetTimeStampRetType = time.Time

func getErrorGetTimeStampAttributeTypeOk(arg ErrorGetTimeStampAttributeType) (ret ErrorGetTimeStampRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setErrorGetTimeStampAttributeType(arg *ErrorGetTimeStampAttributeType, val ErrorGetTimeStampRetType) {
	*arg = &val
}

// Error Contains error information.
type Error struct {
	// REQUIRED
	Error ErrorGetErrorAttributeType `json:"error"`
	// REQUIRED
	Message ErrorGetMessageAttributeType `json:"message"`
	// REQUIRED
	Path ErrorGetPathAttributeType `json:"path"`
	// REQUIRED
	Status ErrorGetStatusAttributeType `json:"status"`
	// REQUIRED
	TimeStamp ErrorGetTimeStampAttributeType `json:"timeStamp"`
}

type _Error Error

// NewError instantiates a new Error object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewError(error_ ErrorGetErrorArgType, message ErrorGetMessageArgType, path ErrorGetPathArgType, status ErrorGetStatusArgType, timeStamp ErrorGetTimeStampArgType) *Error {
	this := Error{}
	setErrorGetErrorAttributeType(&this.Error, error_)
	setErrorGetMessageAttributeType(&this.Message, message)
	setErrorGetPathAttributeType(&this.Path, path)
	setErrorGetStatusAttributeType(&this.Status, status)
	setErrorGetTimeStampAttributeType(&this.TimeStamp, timeStamp)
	return &this
}

// NewErrorWithDefaults instantiates a new Error object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewErrorWithDefaults() *Error {
	this := Error{}
	return &this
}

// GetError returns the Error field value
func (o *Error) GetError() (ret ErrorGetErrorRetType) {
	ret, _ = o.GetErrorOk()
	return ret
}

// GetErrorOk returns a tuple with the Error field value
// and a boolean to check if the value has been set.
func (o *Error) GetErrorOk() (ret ErrorGetErrorRetType, ok bool) {
	return getErrorGetErrorAttributeTypeOk(o.Error)
}

// SetError sets field value
func (o *Error) SetError(v ErrorGetErrorRetType) {
	setErrorGetErrorAttributeType(&o.Error, v)
}

// GetMessage returns the Message field value
func (o *Error) GetMessage() (ret ErrorGetMessageRetType) {
	ret, _ = o.GetMessageOk()
	return ret
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *Error) GetMessageOk() (ret ErrorGetMessageRetType, ok bool) {
	return getErrorGetMessageAttributeTypeOk(o.Message)
}

// SetMessage sets field value
func (o *Error) SetMessage(v ErrorGetMessageRetType) {
	setErrorGetMessageAttributeType(&o.Message, v)
}

// GetPath returns the Path field value
func (o *Error) GetPath() (ret ErrorGetPathRetType) {
	ret, _ = o.GetPathOk()
	return ret
}

// GetPathOk returns a tuple with the Path field value
// and a boolean to check if the value has been set.
func (o *Error) GetPathOk() (ret ErrorGetPathRetType, ok bool) {
	return getErrorGetPathAttributeTypeOk(o.Path)
}

// SetPath sets field value
func (o *Error) SetPath(v ErrorGetPathRetType) {
	setErrorGetPathAttributeType(&o.Path, v)
}

// GetStatus returns the Status field value
func (o *Error) GetStatus() (ret ErrorGetStatusRetType) {
	ret, _ = o.GetStatusOk()
	return ret
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *Error) GetStatusOk() (ret ErrorGetStatusRetType, ok bool) {
	return getErrorGetStatusAttributeTypeOk(o.Status)
}

// SetStatus sets field value
func (o *Error) SetStatus(v ErrorGetStatusRetType) {
	setErrorGetStatusAttributeType(&o.Status, v)
}

// GetTimeStamp returns the TimeStamp field value
func (o *Error) GetTimeStamp() (ret ErrorGetTimeStampRetType) {
	ret, _ = o.GetTimeStampOk()
	return ret
}

// GetTimeStampOk returns a tuple with the TimeStamp field value
// and a boolean to check if the value has been set.
func (o *Error) GetTimeStampOk() (ret ErrorGetTimeStampRetType, ok bool) {
	return getErrorGetTimeStampAttributeTypeOk(o.TimeStamp)
}

// SetTimeStamp sets field value
func (o *Error) SetTimeStamp(v ErrorGetTimeStampRetType) {
	setErrorGetTimeStampAttributeType(&o.TimeStamp, v)
}

func (o Error) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getErrorGetErrorAttributeTypeOk(o.Error); ok {
		toSerialize["Error"] = val
	}
	if val, ok := getErrorGetMessageAttributeTypeOk(o.Message); ok {
		toSerialize["Message"] = val
	}
	if val, ok := getErrorGetPathAttributeTypeOk(o.Path); ok {
		toSerialize["Path"] = val
	}
	if val, ok := getErrorGetStatusAttributeTypeOk(o.Status); ok {
		toSerialize["Status"] = val
	}
	if val, ok := getErrorGetTimeStampAttributeTypeOk(o.TimeStamp); ok {
		toSerialize["TimeStamp"] = val
	}
	return toSerialize, nil
}

type NullableError struct {
	value *Error
	isSet bool
}

func (v NullableError) Get() *Error {
	return v.value
}

func (v *NullableError) Set(val *Error) {
	v.value = val
	v.isSet = true
}

func (v NullableError) IsSet() bool {
	return v.isSet
}

func (v *NullableError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableError(val *Error) *NullableError {
	return &NullableError{value: val, isSet: true}
}

func (v NullableError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
