/*
CDN API

API used to create and manage your CDN distributions.

API version: 1beta.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cdn

import (
	"encoding/json"
)

// checks if the GetCustomDomainManagedCertificate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetCustomDomainManagedCertificate{}

/*
	types and functions for type
*/

// isNotNullableString
type GetCustomDomainManagedCertificateGetTypeAttributeType = *string

func getGetCustomDomainManagedCertificateGetTypeAttributeTypeOk(arg GetCustomDomainManagedCertificateGetTypeAttributeType) (ret GetCustomDomainManagedCertificateGetTypeRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setGetCustomDomainManagedCertificateGetTypeAttributeType(arg *GetCustomDomainManagedCertificateGetTypeAttributeType, val GetCustomDomainManagedCertificateGetTypeRetType) {
	*arg = &val
}

type GetCustomDomainManagedCertificateGetTypeArgType = string
type GetCustomDomainManagedCertificateGetTypeRetType = string

// GetCustomDomainManagedCertificate This is returned when no custom certificate is used. We provision and manage a Let's Encrypt Certificate for you
type GetCustomDomainManagedCertificate struct {
	// REQUIRED
	Type GetCustomDomainManagedCertificateGetTypeAttributeType `json:"type" required:"true"`
}

type _GetCustomDomainManagedCertificate GetCustomDomainManagedCertificate

// NewGetCustomDomainManagedCertificate instantiates a new GetCustomDomainManagedCertificate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetCustomDomainManagedCertificate(types GetCustomDomainManagedCertificateGetTypeArgType) *GetCustomDomainManagedCertificate {
	this := GetCustomDomainManagedCertificate{}
	setGetCustomDomainManagedCertificateGetTypeAttributeType(&this.Type, types)
	return &this
}

// NewGetCustomDomainManagedCertificateWithDefaults instantiates a new GetCustomDomainManagedCertificate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetCustomDomainManagedCertificateWithDefaults() *GetCustomDomainManagedCertificate {
	this := GetCustomDomainManagedCertificate{}
	return &this
}

// GetType returns the Type field value
func (o *GetCustomDomainManagedCertificate) GetType() (ret GetCustomDomainManagedCertificateGetTypeRetType) {
	ret, _ = o.GetTypeOk()
	return ret
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *GetCustomDomainManagedCertificate) GetTypeOk() (ret GetCustomDomainManagedCertificateGetTypeRetType, ok bool) {
	return getGetCustomDomainManagedCertificateGetTypeAttributeTypeOk(o.Type)
}

// SetType sets field value
func (o *GetCustomDomainManagedCertificate) SetType(v GetCustomDomainManagedCertificateGetTypeRetType) {
	setGetCustomDomainManagedCertificateGetTypeAttributeType(&o.Type, v)
}

func (o GetCustomDomainManagedCertificate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getGetCustomDomainManagedCertificateGetTypeAttributeTypeOk(o.Type); ok {
		toSerialize["Type"] = val
	}
	return toSerialize, nil
}

type NullableGetCustomDomainManagedCertificate struct {
	value *GetCustomDomainManagedCertificate
	isSet bool
}

func (v NullableGetCustomDomainManagedCertificate) Get() *GetCustomDomainManagedCertificate {
	return v.value
}

func (v *NullableGetCustomDomainManagedCertificate) Set(val *GetCustomDomainManagedCertificate) {
	v.value = val
	v.isSet = true
}

func (v NullableGetCustomDomainManagedCertificate) IsSet() bool {
	return v.isSet
}

func (v *NullableGetCustomDomainManagedCertificate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetCustomDomainManagedCertificate(val *GetCustomDomainManagedCertificate) *NullableGetCustomDomainManagedCertificate {
	return &NullableGetCustomDomainManagedCertificate{value: val, isSet: true}
}

func (v NullableGetCustomDomainManagedCertificate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetCustomDomainManagedCertificate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
