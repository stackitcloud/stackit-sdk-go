/*
CDN API

API used to create and manage your CDN distributions.

API version: 1beta.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cdn

import (
	"encoding/json"
)

// checks if the PutCustomDomainManagedCertificate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PutCustomDomainManagedCertificate{}

/*
	types and functions for type
*/

// isNotNullableString
type PutCustomDomainManagedCertificateGetTypeAttributeType = *string

func getPutCustomDomainManagedCertificateGetTypeAttributeTypeOk(arg PutCustomDomainManagedCertificateGetTypeAttributeType) (ret PutCustomDomainManagedCertificateGetTypeRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setPutCustomDomainManagedCertificateGetTypeAttributeType(arg *PutCustomDomainManagedCertificateGetTypeAttributeType, val PutCustomDomainManagedCertificateGetTypeRetType) {
	*arg = &val
}

type PutCustomDomainManagedCertificateGetTypeArgType = string
type PutCustomDomainManagedCertificateGetTypeRetType = string

// PutCustomDomainManagedCertificate This is returned when no custom certificate is used. We provision and manage a Let's Encrypt Certificate for you
type PutCustomDomainManagedCertificate struct {
	// REQUIRED
	Type PutCustomDomainManagedCertificateGetTypeAttributeType `json:"type" required:"true"`
}

type _PutCustomDomainManagedCertificate PutCustomDomainManagedCertificate

// NewPutCustomDomainManagedCertificate instantiates a new PutCustomDomainManagedCertificate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPutCustomDomainManagedCertificate(types PutCustomDomainManagedCertificateGetTypeArgType) *PutCustomDomainManagedCertificate {
	this := PutCustomDomainManagedCertificate{}
	setPutCustomDomainManagedCertificateGetTypeAttributeType(&this.Type, types)
	return &this
}

// NewPutCustomDomainManagedCertificateWithDefaults instantiates a new PutCustomDomainManagedCertificate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPutCustomDomainManagedCertificateWithDefaults() *PutCustomDomainManagedCertificate {
	this := PutCustomDomainManagedCertificate{}
	return &this
}

// GetType returns the Type field value
func (o *PutCustomDomainManagedCertificate) GetType() (ret PutCustomDomainManagedCertificateGetTypeRetType) {
	ret, _ = o.GetTypeOk()
	return ret
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *PutCustomDomainManagedCertificate) GetTypeOk() (ret PutCustomDomainManagedCertificateGetTypeRetType, ok bool) {
	return getPutCustomDomainManagedCertificateGetTypeAttributeTypeOk(o.Type)
}

// SetType sets field value
func (o *PutCustomDomainManagedCertificate) SetType(v PutCustomDomainManagedCertificateGetTypeRetType) {
	setPutCustomDomainManagedCertificateGetTypeAttributeType(&o.Type, v)
}

func (o PutCustomDomainManagedCertificate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getPutCustomDomainManagedCertificateGetTypeAttributeTypeOk(o.Type); ok {
		toSerialize["Type"] = val
	}
	return toSerialize, nil
}

type NullablePutCustomDomainManagedCertificate struct {
	value *PutCustomDomainManagedCertificate
	isSet bool
}

func (v NullablePutCustomDomainManagedCertificate) Get() *PutCustomDomainManagedCertificate {
	return v.value
}

func (v *NullablePutCustomDomainManagedCertificate) Set(val *PutCustomDomainManagedCertificate) {
	v.value = val
	v.isSet = true
}

func (v NullablePutCustomDomainManagedCertificate) IsSet() bool {
	return v.isSet
}

func (v *NullablePutCustomDomainManagedCertificate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePutCustomDomainManagedCertificate(val *PutCustomDomainManagedCertificate) *NullablePutCustomDomainManagedCertificate {
	return &NullablePutCustomDomainManagedCertificate{value: val, isSet: true}
}

func (v NullablePutCustomDomainManagedCertificate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePutCustomDomainManagedCertificate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
