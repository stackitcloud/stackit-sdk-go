/*
CDN API

API used to create and manage your CDN distributions.

API version: 1beta.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cdn

import (
	"encoding/json"
)

// checks if the GetCustomDomainCustomCertificate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetCustomDomainCustomCertificate{}

/*
	types and functions for type
*/

// isNotNullableString
type GetCustomDomainCustomCertificateGetTypeAttributeType = *string

func getGetCustomDomainCustomCertificateGetTypeAttributeTypeOk(arg GetCustomDomainCustomCertificateGetTypeAttributeType) (ret GetCustomDomainCustomCertificateGetTypeRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setGetCustomDomainCustomCertificateGetTypeAttributeType(arg *GetCustomDomainCustomCertificateGetTypeAttributeType, val GetCustomDomainCustomCertificateGetTypeRetType) {
	*arg = &val
}

type GetCustomDomainCustomCertificateGetTypeArgType = string
type GetCustomDomainCustomCertificateGetTypeRetType = string

/*
	types and functions for version
*/

// isInteger
type GetCustomDomainCustomCertificateGetVersionAttributeType = *int64
type GetCustomDomainCustomCertificateGetVersionArgType = int64
type GetCustomDomainCustomCertificateGetVersionRetType = int64

func getGetCustomDomainCustomCertificateGetVersionAttributeTypeOk(arg GetCustomDomainCustomCertificateGetVersionAttributeType) (ret GetCustomDomainCustomCertificateGetVersionRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setGetCustomDomainCustomCertificateGetVersionAttributeType(arg *GetCustomDomainCustomCertificateGetVersionAttributeType, val GetCustomDomainCustomCertificateGetVersionRetType) {
	*arg = &val
}

// GetCustomDomainCustomCertificate Returned if a custom certificate is used. Response does not contain the certificate or key.
type GetCustomDomainCustomCertificate struct {
	// REQUIRED
	Type GetCustomDomainCustomCertificateGetTypeAttributeType `json:"type" required:"true"`
	// Whenever a new custom certificate is added the version is increased by 1.
	// Can be cast to int32 without loss of precision.
	// REQUIRED
	Version GetCustomDomainCustomCertificateGetVersionAttributeType `json:"version" required:"true"`
}

type _GetCustomDomainCustomCertificate GetCustomDomainCustomCertificate

// NewGetCustomDomainCustomCertificate instantiates a new GetCustomDomainCustomCertificate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetCustomDomainCustomCertificate(types GetCustomDomainCustomCertificateGetTypeArgType, version GetCustomDomainCustomCertificateGetVersionArgType) *GetCustomDomainCustomCertificate {
	this := GetCustomDomainCustomCertificate{}
	setGetCustomDomainCustomCertificateGetTypeAttributeType(&this.Type, types)
	setGetCustomDomainCustomCertificateGetVersionAttributeType(&this.Version, version)
	return &this
}

// NewGetCustomDomainCustomCertificateWithDefaults instantiates a new GetCustomDomainCustomCertificate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetCustomDomainCustomCertificateWithDefaults() *GetCustomDomainCustomCertificate {
	this := GetCustomDomainCustomCertificate{}
	return &this
}

// GetType returns the Type field value
func (o *GetCustomDomainCustomCertificate) GetType() (ret GetCustomDomainCustomCertificateGetTypeRetType) {
	ret, _ = o.GetTypeOk()
	return ret
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *GetCustomDomainCustomCertificate) GetTypeOk() (ret GetCustomDomainCustomCertificateGetTypeRetType, ok bool) {
	return getGetCustomDomainCustomCertificateGetTypeAttributeTypeOk(o.Type)
}

// SetType sets field value
func (o *GetCustomDomainCustomCertificate) SetType(v GetCustomDomainCustomCertificateGetTypeRetType) {
	setGetCustomDomainCustomCertificateGetTypeAttributeType(&o.Type, v)
}

// GetVersion returns the Version field value
func (o *GetCustomDomainCustomCertificate) GetVersion() (ret GetCustomDomainCustomCertificateGetVersionRetType) {
	ret, _ = o.GetVersionOk()
	return ret
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *GetCustomDomainCustomCertificate) GetVersionOk() (ret GetCustomDomainCustomCertificateGetVersionRetType, ok bool) {
	return getGetCustomDomainCustomCertificateGetVersionAttributeTypeOk(o.Version)
}

// SetVersion sets field value
func (o *GetCustomDomainCustomCertificate) SetVersion(v GetCustomDomainCustomCertificateGetVersionRetType) {
	setGetCustomDomainCustomCertificateGetVersionAttributeType(&o.Version, v)
}

func (o GetCustomDomainCustomCertificate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getGetCustomDomainCustomCertificateGetTypeAttributeTypeOk(o.Type); ok {
		toSerialize["Type"] = val
	}
	if val, ok := getGetCustomDomainCustomCertificateGetVersionAttributeTypeOk(o.Version); ok {
		toSerialize["Version"] = val
	}
	return toSerialize, nil
}

type NullableGetCustomDomainCustomCertificate struct {
	value *GetCustomDomainCustomCertificate
	isSet bool
}

func (v NullableGetCustomDomainCustomCertificate) Get() *GetCustomDomainCustomCertificate {
	return v.value
}

func (v *NullableGetCustomDomainCustomCertificate) Set(val *GetCustomDomainCustomCertificate) {
	v.value = val
	v.isSet = true
}

func (v NullableGetCustomDomainCustomCertificate) IsSet() bool {
	return v.isSet
}

func (v *NullableGetCustomDomainCustomCertificate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetCustomDomainCustomCertificate(val *GetCustomDomainCustomCertificate) *NullableGetCustomDomainCustomCertificate {
	return &NullableGetCustomDomainCustomCertificate{value: val, isSet: true}
}

func (v NullableGetCustomDomainCustomCertificate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetCustomDomainCustomCertificate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
