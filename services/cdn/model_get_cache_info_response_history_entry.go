/*
CDN API

API used to create and manage your CDN distributions.

API version: 1beta.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cdn

import (
	"encoding/json"
	"fmt"
	"time"
)

// checks if the GetCacheInfoResponseHistoryEntry type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetCacheInfoResponseHistoryEntry{}

/*
	types and functions for occuredAt
*/

// isDateTime
type GetCacheInfoResponseHistoryEntryGetOccuredAtAttributeType = *time.Time
type GetCacheInfoResponseHistoryEntryGetOccuredAtArgType = time.Time
type GetCacheInfoResponseHistoryEntryGetOccuredAtRetType = time.Time

func getGetCacheInfoResponseHistoryEntryGetOccuredAtAttributeTypeOk(arg GetCacheInfoResponseHistoryEntryGetOccuredAtAttributeType) (ret GetCacheInfoResponseHistoryEntryGetOccuredAtRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setGetCacheInfoResponseHistoryEntryGetOccuredAtAttributeType(arg *GetCacheInfoResponseHistoryEntryGetOccuredAtAttributeType, val GetCacheInfoResponseHistoryEntryGetOccuredAtRetType) {
	*arg = &val
}

/*
	types and functions for occurredAt
*/

// isDateTime
type GetCacheInfoResponseHistoryEntryGetOccurredAtAttributeType = *time.Time
type GetCacheInfoResponseHistoryEntryGetOccurredAtArgType = time.Time
type GetCacheInfoResponseHistoryEntryGetOccurredAtRetType = time.Time

func getGetCacheInfoResponseHistoryEntryGetOccurredAtAttributeTypeOk(arg GetCacheInfoResponseHistoryEntryGetOccurredAtAttributeType) (ret GetCacheInfoResponseHistoryEntryGetOccurredAtRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setGetCacheInfoResponseHistoryEntryGetOccurredAtAttributeType(arg *GetCacheInfoResponseHistoryEntryGetOccurredAtAttributeType, val GetCacheInfoResponseHistoryEntryGetOccurredAtRetType) {
	*arg = &val
}

/*
	types and functions for type
*/

// isEnum

// GetCacheInfoResponseHistoryEntryTypes the model 'GetCacheInfoResponseHistoryEntry'
type GetCacheInfoResponseHistoryEntryTypes string

// List of Type
const (
	GETCACHEINFORESPONSEHISTORYENTRYTYPE_FULL     GetCacheInfoResponseHistoryEntryTypes = "full"
	GETCACHEINFORESPONSEHISTORYENTRYTYPE_GRANULAR GetCacheInfoResponseHistoryEntryTypes = "granular"
)

// All allowed values of GetCacheInfoResponseHistoryEntry enum
var AllowedGetCacheInfoResponseHistoryEntryTypesEnumValues = []GetCacheInfoResponseHistoryEntryTypes{
	"full",
	"granular",
}

func (v *GetCacheInfoResponseHistoryEntryTypes) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	// Allow unmarshalling zero value for testing purposes
	var zeroValue string
	if value == zeroValue {
		return nil
	}
	enumTypeValue := GetCacheInfoResponseHistoryEntryTypes(value)
	for _, existing := range AllowedGetCacheInfoResponseHistoryEntryTypesEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid GetCacheInfoResponseHistoryEntry", value)
}

// NewGetCacheInfoResponseHistoryEntryTypesFromValue returns a pointer to a valid GetCacheInfoResponseHistoryEntryTypes
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewGetCacheInfoResponseHistoryEntryTypesFromValue(v string) (*GetCacheInfoResponseHistoryEntryTypes, error) {
	ev := GetCacheInfoResponseHistoryEntryTypes(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for GetCacheInfoResponseHistoryEntryTypes: valid values are %v", v, AllowedGetCacheInfoResponseHistoryEntryTypesEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v GetCacheInfoResponseHistoryEntryTypes) IsValid() bool {
	for _, existing := range AllowedGetCacheInfoResponseHistoryEntryTypesEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to TypeTypes value
func (v GetCacheInfoResponseHistoryEntryTypes) Ptr() *GetCacheInfoResponseHistoryEntryTypes {
	return &v
}

type NullableGetCacheInfoResponseHistoryEntryTypes struct {
	value *GetCacheInfoResponseHistoryEntryTypes
	isSet bool
}

func (v NullableGetCacheInfoResponseHistoryEntryTypes) Get() *GetCacheInfoResponseHistoryEntryTypes {
	return v.value
}

func (v *NullableGetCacheInfoResponseHistoryEntryTypes) Set(val *GetCacheInfoResponseHistoryEntryTypes) {
	v.value = val
	v.isSet = true
}

func (v NullableGetCacheInfoResponseHistoryEntryTypes) IsSet() bool {
	return v.isSet
}

func (v *NullableGetCacheInfoResponseHistoryEntryTypes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetCacheInfoResponseHistoryEntryTypes(val *GetCacheInfoResponseHistoryEntryTypes) *NullableGetCacheInfoResponseHistoryEntryTypes {
	return &NullableGetCacheInfoResponseHistoryEntryTypes{value: val, isSet: true}
}

func (v NullableGetCacheInfoResponseHistoryEntryTypes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetCacheInfoResponseHistoryEntryTypes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

type GetCacheInfoResponseHistoryEntryGetTypeAttributeType = *GetCacheInfoResponseHistoryEntryTypes
type GetCacheInfoResponseHistoryEntryGetTypeArgType = GetCacheInfoResponseHistoryEntryTypes
type GetCacheInfoResponseHistoryEntryGetTypeRetType = GetCacheInfoResponseHistoryEntryTypes

func getGetCacheInfoResponseHistoryEntryGetTypeAttributeTypeOk(arg GetCacheInfoResponseHistoryEntryGetTypeAttributeType) (ret GetCacheInfoResponseHistoryEntryGetTypeRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setGetCacheInfoResponseHistoryEntryGetTypeAttributeType(arg *GetCacheInfoResponseHistoryEntryGetTypeAttributeType, val GetCacheInfoResponseHistoryEntryGetTypeRetType) {
	*arg = &val
}

// GetCacheInfoResponseHistoryEntry struct for GetCacheInfoResponseHistoryEntry
type GetCacheInfoResponseHistoryEntry struct {
	// Deprecated: Check the GitHub changelog for alternatives
	// REQUIRED
	OccuredAt GetCacheInfoResponseHistoryEntryGetOccuredAtAttributeType `json:"occuredAt"`
	// REQUIRED
	OccurredAt GetCacheInfoResponseHistoryEntryGetOccurredAtAttributeType `json:"occurredAt"`
	// REQUIRED
	Type GetCacheInfoResponseHistoryEntryGetTypeAttributeType `json:"type"`
}

type _GetCacheInfoResponseHistoryEntry GetCacheInfoResponseHistoryEntry

// NewGetCacheInfoResponseHistoryEntry instantiates a new GetCacheInfoResponseHistoryEntry object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetCacheInfoResponseHistoryEntry(occuredAt GetCacheInfoResponseHistoryEntryGetOccuredAtArgType, occurredAt GetCacheInfoResponseHistoryEntryGetOccurredAtArgType, types GetCacheInfoResponseHistoryEntryGetTypeArgType) *GetCacheInfoResponseHistoryEntry {
	this := GetCacheInfoResponseHistoryEntry{}
	setGetCacheInfoResponseHistoryEntryGetOccuredAtAttributeType(&this.OccuredAt, occuredAt)
	setGetCacheInfoResponseHistoryEntryGetOccurredAtAttributeType(&this.OccurredAt, occurredAt)
	setGetCacheInfoResponseHistoryEntryGetTypeAttributeType(&this.Type, types)
	return &this
}

// NewGetCacheInfoResponseHistoryEntryWithDefaults instantiates a new GetCacheInfoResponseHistoryEntry object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetCacheInfoResponseHistoryEntryWithDefaults() *GetCacheInfoResponseHistoryEntry {
	this := GetCacheInfoResponseHistoryEntry{}
	return &this
}

// GetOccuredAt returns the OccuredAt field value
// Deprecated
func (o *GetCacheInfoResponseHistoryEntry) GetOccuredAt() (ret GetCacheInfoResponseHistoryEntryGetOccuredAtRetType) {
	ret, _ = o.GetOccuredAtOk()
	return ret
}

// GetOccuredAtOk returns a tuple with the OccuredAt field value
// and a boolean to check if the value has been set.
// Deprecated
func (o *GetCacheInfoResponseHistoryEntry) GetOccuredAtOk() (ret GetCacheInfoResponseHistoryEntryGetOccuredAtRetType, ok bool) {
	return getGetCacheInfoResponseHistoryEntryGetOccuredAtAttributeTypeOk(o.OccuredAt)
}

// SetOccuredAt sets field value
// Deprecated
func (o *GetCacheInfoResponseHistoryEntry) SetOccuredAt(v GetCacheInfoResponseHistoryEntryGetOccuredAtRetType) {
	setGetCacheInfoResponseHistoryEntryGetOccuredAtAttributeType(&o.OccuredAt, v)
}

// GetOccurredAt returns the OccurredAt field value
func (o *GetCacheInfoResponseHistoryEntry) GetOccurredAt() (ret GetCacheInfoResponseHistoryEntryGetOccurredAtRetType) {
	ret, _ = o.GetOccurredAtOk()
	return ret
}

// GetOccurredAtOk returns a tuple with the OccurredAt field value
// and a boolean to check if the value has been set.
func (o *GetCacheInfoResponseHistoryEntry) GetOccurredAtOk() (ret GetCacheInfoResponseHistoryEntryGetOccurredAtRetType, ok bool) {
	return getGetCacheInfoResponseHistoryEntryGetOccurredAtAttributeTypeOk(o.OccurredAt)
}

// SetOccurredAt sets field value
func (o *GetCacheInfoResponseHistoryEntry) SetOccurredAt(v GetCacheInfoResponseHistoryEntryGetOccurredAtRetType) {
	setGetCacheInfoResponseHistoryEntryGetOccurredAtAttributeType(&o.OccurredAt, v)
}

// GetType returns the Type field value
func (o *GetCacheInfoResponseHistoryEntry) GetType() (ret GetCacheInfoResponseHistoryEntryGetTypeRetType) {
	ret, _ = o.GetTypeOk()
	return ret
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *GetCacheInfoResponseHistoryEntry) GetTypeOk() (ret GetCacheInfoResponseHistoryEntryGetTypeRetType, ok bool) {
	return getGetCacheInfoResponseHistoryEntryGetTypeAttributeTypeOk(o.Type)
}

// SetType sets field value
func (o *GetCacheInfoResponseHistoryEntry) SetType(v GetCacheInfoResponseHistoryEntryGetTypeRetType) {
	setGetCacheInfoResponseHistoryEntryGetTypeAttributeType(&o.Type, v)
}

func (o GetCacheInfoResponseHistoryEntry) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getGetCacheInfoResponseHistoryEntryGetOccuredAtAttributeTypeOk(o.OccuredAt); ok {
		toSerialize["OccuredAt"] = val
	}
	if val, ok := getGetCacheInfoResponseHistoryEntryGetOccurredAtAttributeTypeOk(o.OccurredAt); ok {
		toSerialize["OccurredAt"] = val
	}
	if val, ok := getGetCacheInfoResponseHistoryEntryGetTypeAttributeTypeOk(o.Type); ok {
		toSerialize["Type"] = val
	}
	return toSerialize, nil
}

type NullableGetCacheInfoResponseHistoryEntry struct {
	value *GetCacheInfoResponseHistoryEntry
	isSet bool
}

func (v NullableGetCacheInfoResponseHistoryEntry) Get() *GetCacheInfoResponseHistoryEntry {
	return v.value
}

func (v *NullableGetCacheInfoResponseHistoryEntry) Set(val *GetCacheInfoResponseHistoryEntry) {
	v.value = val
	v.isSet = true
}

func (v NullableGetCacheInfoResponseHistoryEntry) IsSet() bool {
	return v.isSet
}

func (v *NullableGetCacheInfoResponseHistoryEntry) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetCacheInfoResponseHistoryEntry(val *GetCacheInfoResponseHistoryEntry) *NullableGetCacheInfoResponseHistoryEntry {
	return &NullableGetCacheInfoResponseHistoryEntry{value: val, isSet: true}
}

func (v NullableGetCacheInfoResponseHistoryEntry) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetCacheInfoResponseHistoryEntry) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
