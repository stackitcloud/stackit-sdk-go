/*
CDN API

API used to create and manage your CDN distributions.

API version: 1beta.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cdn

import (
	"encoding/json"
	"time"
)

// checks if the GetCacheInfoResponseHistoryEntry type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetCacheInfoResponseHistoryEntry{}

// GetCacheInfoResponseHistoryEntry struct for GetCacheInfoResponseHistoryEntry
type GetCacheInfoResponseHistoryEntry struct {
	// Deprecated: Check the GitHub changelog for alternatives
	// REQUIRED
	OccuredAt *time.Time `json:"occuredAt"`
	// REQUIRED
	OccurredAt *time.Time `json:"occurredAt"`
	// REQUIRED
	Type *string `json:"type"`
}

type _GetCacheInfoResponseHistoryEntry GetCacheInfoResponseHistoryEntry

// NewGetCacheInfoResponseHistoryEntry instantiates a new GetCacheInfoResponseHistoryEntry object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetCacheInfoResponseHistoryEntry(occuredAt *time.Time, occurredAt *time.Time, type_ *string) *GetCacheInfoResponseHistoryEntry {
	this := GetCacheInfoResponseHistoryEntry{}
	this.OccuredAt = occuredAt
	this.OccurredAt = occurredAt
	this.Type = type_
	return &this
}

// NewGetCacheInfoResponseHistoryEntryWithDefaults instantiates a new GetCacheInfoResponseHistoryEntry object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetCacheInfoResponseHistoryEntryWithDefaults() *GetCacheInfoResponseHistoryEntry {
	this := GetCacheInfoResponseHistoryEntry{}
	return &this
}

// GetOccuredAt returns the OccuredAt field value
// Deprecated
func (o *GetCacheInfoResponseHistoryEntry) GetOccuredAt() *time.Time {
	if o == nil || IsNil(o.OccuredAt) {
		var ret *time.Time
		return ret
	}

	return o.OccuredAt
}

// GetOccuredAtOk returns a tuple with the OccuredAt field value
// and a boolean to check if the value has been set.
// Deprecated
func (o *GetCacheInfoResponseHistoryEntry) GetOccuredAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.OccuredAt, true
}

// SetOccuredAt sets field value
// Deprecated
func (o *GetCacheInfoResponseHistoryEntry) SetOccuredAt(v *time.Time) {
	o.OccuredAt = v
}

// GetOccurredAt returns the OccurredAt field value
func (o *GetCacheInfoResponseHistoryEntry) GetOccurredAt() *time.Time {
	if o == nil || IsNil(o.OccurredAt) {
		var ret *time.Time
		return ret
	}

	return o.OccurredAt
}

// GetOccurredAtOk returns a tuple with the OccurredAt field value
// and a boolean to check if the value has been set.
func (o *GetCacheInfoResponseHistoryEntry) GetOccurredAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.OccurredAt, true
}

// SetOccurredAt sets field value
func (o *GetCacheInfoResponseHistoryEntry) SetOccurredAt(v *time.Time) {
	o.OccurredAt = v
}

// GetType returns the Type field value
func (o *GetCacheInfoResponseHistoryEntry) GetType() *string {
	if o == nil || IsNil(o.Type) {
		var ret *string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *GetCacheInfoResponseHistoryEntry) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Type, true
}

// SetType sets field value
func (o *GetCacheInfoResponseHistoryEntry) SetType(v *string) {
	o.Type = v
}

func (o GetCacheInfoResponseHistoryEntry) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["occuredAt"] = o.OccuredAt
	toSerialize["occurredAt"] = o.OccurredAt
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

type NullableGetCacheInfoResponseHistoryEntry struct {
	value *GetCacheInfoResponseHistoryEntry
	isSet bool
}

func (v NullableGetCacheInfoResponseHistoryEntry) Get() *GetCacheInfoResponseHistoryEntry {
	return v.value
}

func (v *NullableGetCacheInfoResponseHistoryEntry) Set(val *GetCacheInfoResponseHistoryEntry) {
	v.value = val
	v.isSet = true
}

func (v NullableGetCacheInfoResponseHistoryEntry) IsSet() bool {
	return v.isSet
}

func (v *NullableGetCacheInfoResponseHistoryEntry) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetCacheInfoResponseHistoryEntry(val *GetCacheInfoResponseHistoryEntry) *NullableGetCacheInfoResponseHistoryEntry {
	return &NullableGetCacheInfoResponseHistoryEntry{value: val, isSet: true}
}

func (v NullableGetCacheInfoResponseHistoryEntry) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetCacheInfoResponseHistoryEntry) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
