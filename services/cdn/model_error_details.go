/*
CDN API

API used to create and manage your CDN distributions.

API version: 1beta.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cdn

import (
	"encoding/json"
)

// checks if the ErrorDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ErrorDetails{}

/*
	types and functions for de
*/

// isNotNullableString
type ErrorDetailsGetDeAttributeType = *string

func getErrorDetailsGetDeAttributeTypeOk(arg ErrorDetailsGetDeAttributeType) (ret ErrorDetailsGetDeRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setErrorDetailsGetDeAttributeType(arg *ErrorDetailsGetDeAttributeType, val ErrorDetailsGetDeRetType) {
	*arg = &val
}

type ErrorDetailsGetDeArgType = string
type ErrorDetailsGetDeRetType = string

/*
	types and functions for description
*/

// isNotNullableString
type ErrorDetailsGetDescriptionAttributeType = *string

func getErrorDetailsGetDescriptionAttributeTypeOk(arg ErrorDetailsGetDescriptionAttributeType) (ret ErrorDetailsGetDescriptionRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setErrorDetailsGetDescriptionAttributeType(arg *ErrorDetailsGetDescriptionAttributeType, val ErrorDetailsGetDescriptionRetType) {
	*arg = &val
}

type ErrorDetailsGetDescriptionArgType = string
type ErrorDetailsGetDescriptionRetType = string

/*
	types and functions for en
*/

// isNotNullableString
type ErrorDetailsGetEnAttributeType = *string

func getErrorDetailsGetEnAttributeTypeOk(arg ErrorDetailsGetEnAttributeType) (ret ErrorDetailsGetEnRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setErrorDetailsGetEnAttributeType(arg *ErrorDetailsGetEnAttributeType, val ErrorDetailsGetEnRetType) {
	*arg = &val
}

type ErrorDetailsGetEnArgType = string
type ErrorDetailsGetEnRetType = string

/*
	types and functions for field
*/

// isNotNullableString
type ErrorDetailsGetFieldAttributeType = *string

func getErrorDetailsGetFieldAttributeTypeOk(arg ErrorDetailsGetFieldAttributeType) (ret ErrorDetailsGetFieldRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setErrorDetailsGetFieldAttributeType(arg *ErrorDetailsGetFieldAttributeType, val ErrorDetailsGetFieldRetType) {
	*arg = &val
}

type ErrorDetailsGetFieldArgType = string
type ErrorDetailsGetFieldRetType = string

/*
	types and functions for key
*/

// isEnumRef
type ErrorDetailsGetKeyAttributeType = *string
type ErrorDetailsGetKeyArgType = string
type ErrorDetailsGetKeyRetType = string

func getErrorDetailsGetKeyAttributeTypeOk(arg ErrorDetailsGetKeyAttributeType) (ret ErrorDetailsGetKeyRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setErrorDetailsGetKeyAttributeType(arg *ErrorDetailsGetKeyAttributeType, val ErrorDetailsGetKeyRetType) {
	*arg = &val
}

// ErrorDetails struct for ErrorDetails
type ErrorDetails struct {
	// German description of the error
	De ErrorDetailsGetDeAttributeType `json:"de,omitempty"`
	// Deprecated: Check the GitHub changelog for alternatives
	// REQUIRED
	Description ErrorDetailsGetDescriptionAttributeType `json:"description"`
	// English description of the error
	// REQUIRED
	En ErrorDetailsGetEnAttributeType `json:"en"`
	// Optional field in the request this error detail refers to
	Field ErrorDetailsGetFieldAttributeType `json:"field,omitempty"`
	// REQUIRED
	Key ErrorDetailsGetKeyAttributeType `json:"key"`
}

type _ErrorDetails ErrorDetails

// NewErrorDetails instantiates a new ErrorDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewErrorDetails(description ErrorDetailsGetDescriptionArgType, en ErrorDetailsGetEnArgType, key ErrorDetailsGetKeyArgType) *ErrorDetails {
	this := ErrorDetails{}
	setErrorDetailsGetDescriptionAttributeType(&this.Description, description)
	setErrorDetailsGetEnAttributeType(&this.En, en)
	setErrorDetailsGetKeyAttributeType(&this.Key, key)
	return &this
}

// NewErrorDetailsWithDefaults instantiates a new ErrorDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewErrorDetailsWithDefaults() *ErrorDetails {
	this := ErrorDetails{}
	return &this
}

// GetDe returns the De field value if set, zero value otherwise.
func (o *ErrorDetails) GetDe() (res ErrorDetailsGetDeRetType) {
	res, _ = o.GetDeOk()
	return
}

// GetDeOk returns a tuple with the De field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrorDetails) GetDeOk() (ret ErrorDetailsGetDeRetType, ok bool) {
	return getErrorDetailsGetDeAttributeTypeOk(o.De)
}

// HasDe returns a boolean if a field has been set.
func (o *ErrorDetails) HasDe() bool {
	_, ok := o.GetDeOk()
	return ok
}

// SetDe gets a reference to the given string and assigns it to the De field.
func (o *ErrorDetails) SetDe(v ErrorDetailsGetDeRetType) {
	setErrorDetailsGetDeAttributeType(&o.De, v)
}

// GetDescription returns the Description field value
// Deprecated
func (o *ErrorDetails) GetDescription() (ret ErrorDetailsGetDescriptionRetType) {
	ret, _ = o.GetDescriptionOk()
	return ret
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
// Deprecated
func (o *ErrorDetails) GetDescriptionOk() (ret ErrorDetailsGetDescriptionRetType, ok bool) {
	return getErrorDetailsGetDescriptionAttributeTypeOk(o.Description)
}

// SetDescription sets field value
// Deprecated
func (o *ErrorDetails) SetDescription(v ErrorDetailsGetDescriptionRetType) {
	setErrorDetailsGetDescriptionAttributeType(&o.Description, v)
}

// GetEn returns the En field value
func (o *ErrorDetails) GetEn() (ret ErrorDetailsGetEnRetType) {
	ret, _ = o.GetEnOk()
	return ret
}

// GetEnOk returns a tuple with the En field value
// and a boolean to check if the value has been set.
func (o *ErrorDetails) GetEnOk() (ret ErrorDetailsGetEnRetType, ok bool) {
	return getErrorDetailsGetEnAttributeTypeOk(o.En)
}

// SetEn sets field value
func (o *ErrorDetails) SetEn(v ErrorDetailsGetEnRetType) {
	setErrorDetailsGetEnAttributeType(&o.En, v)
}

// GetField returns the Field field value if set, zero value otherwise.
func (o *ErrorDetails) GetField() (res ErrorDetailsGetFieldRetType) {
	res, _ = o.GetFieldOk()
	return
}

// GetFieldOk returns a tuple with the Field field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrorDetails) GetFieldOk() (ret ErrorDetailsGetFieldRetType, ok bool) {
	return getErrorDetailsGetFieldAttributeTypeOk(o.Field)
}

// HasField returns a boolean if a field has been set.
func (o *ErrorDetails) HasField() bool {
	_, ok := o.GetFieldOk()
	return ok
}

// SetField gets a reference to the given string and assigns it to the Field field.
func (o *ErrorDetails) SetField(v ErrorDetailsGetFieldRetType) {
	setErrorDetailsGetFieldAttributeType(&o.Field, v)
}

// GetKey returns the Key field value
func (o *ErrorDetails) GetKey() (ret ErrorDetailsGetKeyRetType) {
	ret, _ = o.GetKeyOk()
	return ret
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *ErrorDetails) GetKeyOk() (ret ErrorDetailsGetKeyRetType, ok bool) {
	return getErrorDetailsGetKeyAttributeTypeOk(o.Key)
}

// SetKey sets field value
func (o *ErrorDetails) SetKey(v ErrorDetailsGetKeyRetType) {
	setErrorDetailsGetKeyAttributeType(&o.Key, v)
}

func (o ErrorDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getErrorDetailsGetDeAttributeTypeOk(o.De); ok {
		toSerialize["De"] = val
	}
	if val, ok := getErrorDetailsGetDescriptionAttributeTypeOk(o.Description); ok {
		toSerialize["Description"] = val
	}
	if val, ok := getErrorDetailsGetEnAttributeTypeOk(o.En); ok {
		toSerialize["En"] = val
	}
	if val, ok := getErrorDetailsGetFieldAttributeTypeOk(o.Field); ok {
		toSerialize["Field"] = val
	}
	if val, ok := getErrorDetailsGetKeyAttributeTypeOk(o.Key); ok {
		toSerialize["Key"] = val
	}
	return toSerialize, nil
}

type NullableErrorDetails struct {
	value *ErrorDetails
	isSet bool
}

func (v NullableErrorDetails) Get() *ErrorDetails {
	return v.value
}

func (v *NullableErrorDetails) Set(val *ErrorDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableErrorDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableErrorDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableErrorDetails(val *ErrorDetails) *NullableErrorDetails {
	return &NullableErrorDetails{value: val, isSet: true}
}

func (v NullableErrorDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableErrorDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
