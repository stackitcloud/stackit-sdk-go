/*
CDN API

API used to create and manage your CDN distributions.

API version: 1beta.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cdn

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the CreateDistributionResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateDistributionResponse{}

/*
	types and functions for distribution
*/

// isModel
type CreateDistributionResponseGetDistributionAttributeType = *Distribution
type CreateDistributionResponseGetDistributionArgType = Distribution
type CreateDistributionResponseGetDistributionRetType = Distribution

func getCreateDistributionResponseGetDistributionAttributeTypeOk(arg CreateDistributionResponseGetDistributionAttributeType) (ret CreateDistributionResponseGetDistributionRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setCreateDistributionResponseGetDistributionAttributeType(arg *CreateDistributionResponseGetDistributionAttributeType, val CreateDistributionResponseGetDistributionRetType) {
	*arg = &val
}

// CreateDistributionResponse struct for CreateDistributionResponse
type CreateDistributionResponse struct {
	// REQUIRED
	Distribution CreateDistributionResponseGetDistributionAttributeType `json:"distribution"`
}

type _CreateDistributionResponse CreateDistributionResponse

// NewCreateDistributionResponse instantiates a new CreateDistributionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateDistributionResponse(distribution CreateDistributionResponseGetDistributionArgType) *CreateDistributionResponse {
	this := CreateDistributionResponse{}
	setCreateDistributionResponseGetDistributionAttributeType(&this.Distribution, distribution)
	return &this
}

// NewCreateDistributionResponseWithDefaults instantiates a new CreateDistributionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateDistributionResponseWithDefaults() *CreateDistributionResponse {
	this := CreateDistributionResponse{}
	return &this
}

// GetDistribution returns the Distribution field value
func (o *CreateDistributionResponse) GetDistribution() (ret CreateDistributionResponseGetDistributionRetType) {
	ret, _ = o.GetDistributionOk()
	return ret
}

// GetDistributionOk returns a tuple with the Distribution field value
// and a boolean to check if the value has been set.
func (o *CreateDistributionResponse) GetDistributionOk() (ret CreateDistributionResponseGetDistributionRetType, ok bool) {
	return getCreateDistributionResponseGetDistributionAttributeTypeOk(o.Distribution)
}

// SetDistribution sets field value
func (o *CreateDistributionResponse) SetDistribution(v CreateDistributionResponseGetDistributionRetType) {
	setCreateDistributionResponseGetDistributionAttributeType(&o.Distribution, v)
}

func (o CreateDistributionResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateDistributionResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getCreateDistributionResponseGetDistributionAttributeTypeOk(o.Distribution); ok {
		toSerialize["Distribution"] = val
	}
	return toSerialize, nil
}

func (o *CreateDistributionResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"distribution",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateDistributionResponse := _CreateDistributionResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateDistributionResponse)

	if err != nil {
		return err
	}

	*o = CreateDistributionResponse(varCreateDistributionResponse)

	return err
}

type NullableCreateDistributionResponse struct {
	value *CreateDistributionResponse
	isSet bool
}

func (v NullableCreateDistributionResponse) Get() *CreateDistributionResponse {
	return v.value
}

func (v *NullableCreateDistributionResponse) Set(val *CreateDistributionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateDistributionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateDistributionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateDistributionResponse(val *CreateDistributionResponse) *NullableCreateDistributionResponse {
	return &NullableCreateDistributionResponse{value: val, isSet: true}
}

func (v NullableCreateDistributionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateDistributionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
