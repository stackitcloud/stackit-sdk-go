/*
CDN API

API used to create and manage your CDN distributions.

API version: 1beta2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cdn

import (
	"encoding/json"
)

// checks if the LokiLogSinkPatch type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LokiLogSinkPatch{}

/*
	types and functions for credentials
*/

// isModel
type LokiLogSinkPatchGetCredentialsAttributeType = *LokiLogSinkCredentials
type LokiLogSinkPatchGetCredentialsArgType = LokiLogSinkCredentials
type LokiLogSinkPatchGetCredentialsRetType = LokiLogSinkCredentials

func getLokiLogSinkPatchGetCredentialsAttributeTypeOk(arg LokiLogSinkPatchGetCredentialsAttributeType) (ret LokiLogSinkPatchGetCredentialsRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setLokiLogSinkPatchGetCredentialsAttributeType(arg *LokiLogSinkPatchGetCredentialsAttributeType, val LokiLogSinkPatchGetCredentialsRetType) {
	*arg = &val
}

/*
	types and functions for pushUrl
*/

// isNotNullableString
type LokiLogSinkPatchGetPushUrlAttributeType = *string

func getLokiLogSinkPatchGetPushUrlAttributeTypeOk(arg LokiLogSinkPatchGetPushUrlAttributeType) (ret LokiLogSinkPatchGetPushUrlRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setLokiLogSinkPatchGetPushUrlAttributeType(arg *LokiLogSinkPatchGetPushUrlAttributeType, val LokiLogSinkPatchGetPushUrlRetType) {
	*arg = &val
}

type LokiLogSinkPatchGetPushUrlArgType = string
type LokiLogSinkPatchGetPushUrlRetType = string

/*
	types and functions for type
*/

// isNotNullableString
type LokiLogSinkPatchGetTypeAttributeType = *string

func getLokiLogSinkPatchGetTypeAttributeTypeOk(arg LokiLogSinkPatchGetTypeAttributeType) (ret LokiLogSinkPatchGetTypeRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setLokiLogSinkPatchGetTypeAttributeType(arg *LokiLogSinkPatchGetTypeAttributeType, val LokiLogSinkPatchGetTypeRetType) {
	*arg = &val
}

type LokiLogSinkPatchGetTypeArgType = string
type LokiLogSinkPatchGetTypeRetType = string

// LokiLogSinkPatch struct for LokiLogSinkPatch
type LokiLogSinkPatch struct {
	Credentials LokiLogSinkPatchGetCredentialsAttributeType `json:"credentials,omitempty"`
	PushUrl     LokiLogSinkPatchGetPushUrlAttributeType     `json:"pushUrl,omitempty"`
	// REQUIRED
	Type LokiLogSinkPatchGetTypeAttributeType `json:"type" required:"true"`
}

type _LokiLogSinkPatch LokiLogSinkPatch

// NewLokiLogSinkPatch instantiates a new LokiLogSinkPatch object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLokiLogSinkPatch(types LokiLogSinkPatchGetTypeArgType) *LokiLogSinkPatch {
	this := LokiLogSinkPatch{}
	setLokiLogSinkPatchGetTypeAttributeType(&this.Type, types)
	return &this
}

// NewLokiLogSinkPatchWithDefaults instantiates a new LokiLogSinkPatch object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLokiLogSinkPatchWithDefaults() *LokiLogSinkPatch {
	this := LokiLogSinkPatch{}
	return &this
}

// GetCredentials returns the Credentials field value if set, zero value otherwise.
func (o *LokiLogSinkPatch) GetCredentials() (res LokiLogSinkPatchGetCredentialsRetType) {
	res, _ = o.GetCredentialsOk()
	return
}

// GetCredentialsOk returns a tuple with the Credentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LokiLogSinkPatch) GetCredentialsOk() (ret LokiLogSinkPatchGetCredentialsRetType, ok bool) {
	return getLokiLogSinkPatchGetCredentialsAttributeTypeOk(o.Credentials)
}

// HasCredentials returns a boolean if a field has been set.
func (o *LokiLogSinkPatch) HasCredentials() bool {
	_, ok := o.GetCredentialsOk()
	return ok
}

// SetCredentials gets a reference to the given LokiLogSinkCredentials and assigns it to the Credentials field.
func (o *LokiLogSinkPatch) SetCredentials(v LokiLogSinkPatchGetCredentialsRetType) {
	setLokiLogSinkPatchGetCredentialsAttributeType(&o.Credentials, v)
}

// GetPushUrl returns the PushUrl field value if set, zero value otherwise.
func (o *LokiLogSinkPatch) GetPushUrl() (res LokiLogSinkPatchGetPushUrlRetType) {
	res, _ = o.GetPushUrlOk()
	return
}

// GetPushUrlOk returns a tuple with the PushUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LokiLogSinkPatch) GetPushUrlOk() (ret LokiLogSinkPatchGetPushUrlRetType, ok bool) {
	return getLokiLogSinkPatchGetPushUrlAttributeTypeOk(o.PushUrl)
}

// HasPushUrl returns a boolean if a field has been set.
func (o *LokiLogSinkPatch) HasPushUrl() bool {
	_, ok := o.GetPushUrlOk()
	return ok
}

// SetPushUrl gets a reference to the given string and assigns it to the PushUrl field.
func (o *LokiLogSinkPatch) SetPushUrl(v LokiLogSinkPatchGetPushUrlRetType) {
	setLokiLogSinkPatchGetPushUrlAttributeType(&o.PushUrl, v)
}

// GetType returns the Type field value
func (o *LokiLogSinkPatch) GetType() (ret LokiLogSinkPatchGetTypeRetType) {
	ret, _ = o.GetTypeOk()
	return ret
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *LokiLogSinkPatch) GetTypeOk() (ret LokiLogSinkPatchGetTypeRetType, ok bool) {
	return getLokiLogSinkPatchGetTypeAttributeTypeOk(o.Type)
}

// SetType sets field value
func (o *LokiLogSinkPatch) SetType(v LokiLogSinkPatchGetTypeRetType) {
	setLokiLogSinkPatchGetTypeAttributeType(&o.Type, v)
}

func (o LokiLogSinkPatch) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getLokiLogSinkPatchGetCredentialsAttributeTypeOk(o.Credentials); ok {
		toSerialize["Credentials"] = val
	}
	if val, ok := getLokiLogSinkPatchGetPushUrlAttributeTypeOk(o.PushUrl); ok {
		toSerialize["PushUrl"] = val
	}
	if val, ok := getLokiLogSinkPatchGetTypeAttributeTypeOk(o.Type); ok {
		toSerialize["Type"] = val
	}
	return toSerialize, nil
}

type NullableLokiLogSinkPatch struct {
	value *LokiLogSinkPatch
	isSet bool
}

func (v NullableLokiLogSinkPatch) Get() *LokiLogSinkPatch {
	return v.value
}

func (v *NullableLokiLogSinkPatch) Set(val *LokiLogSinkPatch) {
	v.value = val
	v.isSet = true
}

func (v NullableLokiLogSinkPatch) IsSet() bool {
	return v.isSet
}

func (v *NullableLokiLogSinkPatch) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLokiLogSinkPatch(val *LokiLogSinkPatch) *NullableLokiLogSinkPatch {
	return &NullableLokiLogSinkPatch{value: val, isSet: true}
}

func (v NullableLokiLogSinkPatch) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLokiLogSinkPatch) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
