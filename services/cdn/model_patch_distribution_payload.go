/*
CDN API

API used to create and manage your CDN distributions.

API version: 1beta.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cdn

import (
	"encoding/json"
)

// checks if the PatchDistributionPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PatchDistributionPayload{}

// PatchDistributionPayload Defines a partial distribution. Set values
type PatchDistributionPayload struct {
	Config *ConfigPatch `json:"config,omitempty"`
	// While optional, it is greatly encouraged to provide an `intentId`.  This is used to deduplicate requests.   If multiple modifying requests with the same `intentId` for a given `projectId` are received, all but the first request are dropped.
	IntentId *string `json:"intentId,omitempty"`
}

// NewPatchDistributionPayload instantiates a new PatchDistributionPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchDistributionPayload() *PatchDistributionPayload {
	this := PatchDistributionPayload{}
	return &this
}

// NewPatchDistributionPayloadWithDefaults instantiates a new PatchDistributionPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchDistributionPayloadWithDefaults() *PatchDistributionPayload {
	this := PatchDistributionPayload{}
	return &this
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *PatchDistributionPayload) GetConfig() *ConfigPatch {
	if o == nil || IsNil(o.Config) {
		var ret *ConfigPatch
		return ret
	}
	return o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchDistributionPayload) GetConfigOk() (*ConfigPatch, bool) {
	if o == nil || IsNil(o.Config) {
		return nil, false
	}
	return o.Config, true
}

// HasConfig returns a boolean if a field has been set.
func (o *PatchDistributionPayload) HasConfig() bool {
	if o != nil && !IsNil(o.Config) {
		return true
	}

	return false
}

// SetConfig gets a reference to the given ConfigPatch and assigns it to the Config field.
func (o *PatchDistributionPayload) SetConfig(v *ConfigPatch) {
	o.Config = v
}

// GetIntentId returns the IntentId field value if set, zero value otherwise.
func (o *PatchDistributionPayload) GetIntentId() *string {
	if o == nil || IsNil(o.IntentId) {
		var ret *string
		return ret
	}
	return o.IntentId
}

// GetIntentIdOk returns a tuple with the IntentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchDistributionPayload) GetIntentIdOk() (*string, bool) {
	if o == nil || IsNil(o.IntentId) {
		return nil, false
	}
	return o.IntentId, true
}

// HasIntentId returns a boolean if a field has been set.
func (o *PatchDistributionPayload) HasIntentId() bool {
	if o != nil && !IsNil(o.IntentId) {
		return true
	}

	return false
}

// SetIntentId gets a reference to the given string and assigns it to the IntentId field.
func (o *PatchDistributionPayload) SetIntentId(v *string) {
	o.IntentId = v
}

func (o PatchDistributionPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Config) {
		toSerialize["config"] = o.Config
	}
	if !IsNil(o.IntentId) {
		toSerialize["intentId"] = o.IntentId
	}
	return toSerialize, nil
}

type NullablePatchDistributionPayload struct {
	value *PatchDistributionPayload
	isSet bool
}

func (v NullablePatchDistributionPayload) Get() *PatchDistributionPayload {
	return v.value
}

func (v *NullablePatchDistributionPayload) Set(val *PatchDistributionPayload) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchDistributionPayload) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchDistributionPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchDistributionPayload(val *PatchDistributionPayload) *NullablePatchDistributionPayload {
	return &NullablePatchDistributionPayload{value: val, isSet: true}
}

func (v NullablePatchDistributionPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchDistributionPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
