/*
CDN API

API used to create and manage your CDN distributions.

API version: 1beta.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cdn

import (
	"encoding/json"
)

// checks if the WAFRuleGroup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WAFRuleGroup{}

/*
	types and functions for description
*/

// isContainer
type WAFRuleGroupGetDescriptionAttributeType = *map[string]string
type WAFRuleGroupGetDescriptionArgType = map[string]string
type WAFRuleGroupGetDescriptionRetType = map[string]string

func getWAFRuleGroupGetDescriptionAttributeTypeOk(arg WAFRuleGroupGetDescriptionAttributeType) (ret WAFRuleGroupGetDescriptionRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setWAFRuleGroupGetDescriptionAttributeType(arg *WAFRuleGroupGetDescriptionAttributeType, val WAFRuleGroupGetDescriptionRetType) {
	*arg = &val
}

/*
	types and functions for name
*/

// isContainer
type WAFRuleGroupGetNameAttributeType = *map[string]string
type WAFRuleGroupGetNameArgType = map[string]string
type WAFRuleGroupGetNameRetType = map[string]string

func getWAFRuleGroupGetNameAttributeTypeOk(arg WAFRuleGroupGetNameAttributeType) (ret WAFRuleGroupGetNameRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setWAFRuleGroupGetNameAttributeType(arg *WAFRuleGroupGetNameAttributeType, val WAFRuleGroupGetNameRetType) {
	*arg = &val
}

/*
	types and functions for rules
*/

// isArray
type WAFRuleGroupGetRulesAttributeType = *[]WAFRule
type WAFRuleGroupGetRulesArgType = []WAFRule
type WAFRuleGroupGetRulesRetType = []WAFRule

func getWAFRuleGroupGetRulesAttributeTypeOk(arg WAFRuleGroupGetRulesAttributeType) (ret WAFRuleGroupGetRulesRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setWAFRuleGroupGetRulesAttributeType(arg *WAFRuleGroupGetRulesAttributeType, val WAFRuleGroupGetRulesRetType) {
	*arg = &val
}

// WAFRuleGroup struct for WAFRuleGroup
type WAFRuleGroup struct {
	// LocalizedString is a map from language to string value
	// REQUIRED
	Description WAFRuleGroupGetDescriptionAttributeType `json:"description" required:"true"`
	// LocalizedString is a map from language to string value
	// REQUIRED
	Name WAFRuleGroupGetNameAttributeType `json:"name" required:"true"`
	// REQUIRED
	Rules WAFRuleGroupGetRulesAttributeType `json:"rules" required:"true"`
}

type _WAFRuleGroup WAFRuleGroup

// NewWAFRuleGroup instantiates a new WAFRuleGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWAFRuleGroup(description WAFRuleGroupGetDescriptionArgType, name WAFRuleGroupGetNameArgType, rules WAFRuleGroupGetRulesArgType) *WAFRuleGroup {
	this := WAFRuleGroup{}
	setWAFRuleGroupGetDescriptionAttributeType(&this.Description, description)
	setWAFRuleGroupGetNameAttributeType(&this.Name, name)
	setWAFRuleGroupGetRulesAttributeType(&this.Rules, rules)
	return &this
}

// NewWAFRuleGroupWithDefaults instantiates a new WAFRuleGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWAFRuleGroupWithDefaults() *WAFRuleGroup {
	this := WAFRuleGroup{}
	return &this
}

// GetDescription returns the Description field value
func (o *WAFRuleGroup) GetDescription() (ret WAFRuleGroupGetDescriptionRetType) {
	ret, _ = o.GetDescriptionOk()
	return ret
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *WAFRuleGroup) GetDescriptionOk() (ret WAFRuleGroupGetDescriptionRetType, ok bool) {
	return getWAFRuleGroupGetDescriptionAttributeTypeOk(o.Description)
}

// SetDescription sets field value
func (o *WAFRuleGroup) SetDescription(v WAFRuleGroupGetDescriptionRetType) {
	setWAFRuleGroupGetDescriptionAttributeType(&o.Description, v)
}

// GetName returns the Name field value
func (o *WAFRuleGroup) GetName() (ret WAFRuleGroupGetNameRetType) {
	ret, _ = o.GetNameOk()
	return ret
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *WAFRuleGroup) GetNameOk() (ret WAFRuleGroupGetNameRetType, ok bool) {
	return getWAFRuleGroupGetNameAttributeTypeOk(o.Name)
}

// SetName sets field value
func (o *WAFRuleGroup) SetName(v WAFRuleGroupGetNameRetType) {
	setWAFRuleGroupGetNameAttributeType(&o.Name, v)
}

// GetRules returns the Rules field value
func (o *WAFRuleGroup) GetRules() (ret WAFRuleGroupGetRulesRetType) {
	ret, _ = o.GetRulesOk()
	return ret
}

// GetRulesOk returns a tuple with the Rules field value
// and a boolean to check if the value has been set.
func (o *WAFRuleGroup) GetRulesOk() (ret WAFRuleGroupGetRulesRetType, ok bool) {
	return getWAFRuleGroupGetRulesAttributeTypeOk(o.Rules)
}

// SetRules sets field value
func (o *WAFRuleGroup) SetRules(v WAFRuleGroupGetRulesRetType) {
	setWAFRuleGroupGetRulesAttributeType(&o.Rules, v)
}

func (o WAFRuleGroup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getWAFRuleGroupGetDescriptionAttributeTypeOk(o.Description); ok {
		toSerialize["Description"] = val
	}
	if val, ok := getWAFRuleGroupGetNameAttributeTypeOk(o.Name); ok {
		toSerialize["Name"] = val
	}
	if val, ok := getWAFRuleGroupGetRulesAttributeTypeOk(o.Rules); ok {
		toSerialize["Rules"] = val
	}
	return toSerialize, nil
}

type NullableWAFRuleGroup struct {
	value *WAFRuleGroup
	isSet bool
}

func (v NullableWAFRuleGroup) Get() *WAFRuleGroup {
	return v.value
}

func (v *NullableWAFRuleGroup) Set(val *WAFRuleGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableWAFRuleGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableWAFRuleGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWAFRuleGroup(val *WAFRuleGroup) *NullableWAFRuleGroup {
	return &NullableWAFRuleGroup{value: val, isSet: true}
}

func (v NullableWAFRuleGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWAFRuleGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
