/*
CDN API

API used to create and manage your CDN distributions.

API version: 1beta.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cdn

import (
	"encoding/json"
)

// checks if the GetDistributionResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetDistributionResponse{}

/*
	types and functions for distribution
*/

// isModel
type GetDistributionResponseGetDistributionAttributeType = *Distribution
type GetDistributionResponseGetDistributionArgType = Distribution
type GetDistributionResponseGetDistributionRetType = Distribution

func getGetDistributionResponseGetDistributionAttributeTypeOk(arg GetDistributionResponseGetDistributionAttributeType) (ret GetDistributionResponseGetDistributionRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setGetDistributionResponseGetDistributionAttributeType(arg *GetDistributionResponseGetDistributionAttributeType, val GetDistributionResponseGetDistributionRetType) {
	*arg = &val
}

// GetDistributionResponse struct for GetDistributionResponse
type GetDistributionResponse struct {
	// REQUIRED
	Distribution GetDistributionResponseGetDistributionAttributeType `json:"distribution" required:"true"`
}

type _GetDistributionResponse GetDistributionResponse

// NewGetDistributionResponse instantiates a new GetDistributionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetDistributionResponse(distribution GetDistributionResponseGetDistributionArgType) *GetDistributionResponse {
	this := GetDistributionResponse{}
	setGetDistributionResponseGetDistributionAttributeType(&this.Distribution, distribution)
	return &this
}

// NewGetDistributionResponseWithDefaults instantiates a new GetDistributionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetDistributionResponseWithDefaults() *GetDistributionResponse {
	this := GetDistributionResponse{}
	return &this
}

// GetDistribution returns the Distribution field value
func (o *GetDistributionResponse) GetDistribution() (ret GetDistributionResponseGetDistributionRetType) {
	ret, _ = o.GetDistributionOk()
	return ret
}

// GetDistributionOk returns a tuple with the Distribution field value
// and a boolean to check if the value has been set.
func (o *GetDistributionResponse) GetDistributionOk() (ret GetDistributionResponseGetDistributionRetType, ok bool) {
	return getGetDistributionResponseGetDistributionAttributeTypeOk(o.Distribution)
}

// SetDistribution sets field value
func (o *GetDistributionResponse) SetDistribution(v GetDistributionResponseGetDistributionRetType) {
	setGetDistributionResponseGetDistributionAttributeType(&o.Distribution, v)
}

func (o GetDistributionResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getGetDistributionResponseGetDistributionAttributeTypeOk(o.Distribution); ok {
		toSerialize["Distribution"] = val
	}
	return toSerialize, nil
}

type NullableGetDistributionResponse struct {
	value *GetDistributionResponse
	isSet bool
}

func (v NullableGetDistributionResponse) Get() *GetDistributionResponse {
	return v.value
}

func (v *NullableGetDistributionResponse) Set(val *GetDistributionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetDistributionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetDistributionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetDistributionResponse(val *GetDistributionResponse) *NullableGetDistributionResponse {
	return &NullableGetDistributionResponse{value: val, isSet: true}
}

func (v NullableGetDistributionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetDistributionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
