/*
CDN API

API used to create and manage your CDN distributions.

API version: 1beta.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cdn

import (
	"encoding/json"
)

// checks if the LokiLogSink type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LokiLogSink{}

/*
	types and functions for pushUrl
*/

// isNotNullableString
type LokiLogSinkGetPushUrlAttributeType = *string

func getLokiLogSinkGetPushUrlAttributeTypeOk(arg LokiLogSinkGetPushUrlAttributeType) (ret LokiLogSinkGetPushUrlRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setLokiLogSinkGetPushUrlAttributeType(arg *LokiLogSinkGetPushUrlAttributeType, val LokiLogSinkGetPushUrlRetType) {
	*arg = &val
}

type LokiLogSinkGetPushUrlArgType = string
type LokiLogSinkGetPushUrlRetType = string

/*
	types and functions for type
*/

// isNotNullableString
type LokiLogSinkGetTypeAttributeType = *string

func getLokiLogSinkGetTypeAttributeTypeOk(arg LokiLogSinkGetTypeAttributeType) (ret LokiLogSinkGetTypeRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setLokiLogSinkGetTypeAttributeType(arg *LokiLogSinkGetTypeAttributeType, val LokiLogSinkGetTypeRetType) {
	*arg = &val
}

type LokiLogSinkGetTypeArgType = string
type LokiLogSinkGetTypeRetType = string

// LokiLogSink struct for LokiLogSink
type LokiLogSink struct {
	// REQUIRED
	PushUrl LokiLogSinkGetPushUrlAttributeType `json:"pushUrl" required:"true"`
	// REQUIRED
	Type LokiLogSinkGetTypeAttributeType `json:"type" required:"true"`
}

type _LokiLogSink LokiLogSink

// NewLokiLogSink instantiates a new LokiLogSink object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLokiLogSink(pushUrl LokiLogSinkGetPushUrlArgType, types LokiLogSinkGetTypeArgType) *LokiLogSink {
	this := LokiLogSink{}
	setLokiLogSinkGetPushUrlAttributeType(&this.PushUrl, pushUrl)
	setLokiLogSinkGetTypeAttributeType(&this.Type, types)
	return &this
}

// NewLokiLogSinkWithDefaults instantiates a new LokiLogSink object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLokiLogSinkWithDefaults() *LokiLogSink {
	this := LokiLogSink{}
	return &this
}

// GetPushUrl returns the PushUrl field value
func (o *LokiLogSink) GetPushUrl() (ret LokiLogSinkGetPushUrlRetType) {
	ret, _ = o.GetPushUrlOk()
	return ret
}

// GetPushUrlOk returns a tuple with the PushUrl field value
// and a boolean to check if the value has been set.
func (o *LokiLogSink) GetPushUrlOk() (ret LokiLogSinkGetPushUrlRetType, ok bool) {
	return getLokiLogSinkGetPushUrlAttributeTypeOk(o.PushUrl)
}

// SetPushUrl sets field value
func (o *LokiLogSink) SetPushUrl(v LokiLogSinkGetPushUrlRetType) {
	setLokiLogSinkGetPushUrlAttributeType(&o.PushUrl, v)
}

// GetType returns the Type field value
func (o *LokiLogSink) GetType() (ret LokiLogSinkGetTypeRetType) {
	ret, _ = o.GetTypeOk()
	return ret
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *LokiLogSink) GetTypeOk() (ret LokiLogSinkGetTypeRetType, ok bool) {
	return getLokiLogSinkGetTypeAttributeTypeOk(o.Type)
}

// SetType sets field value
func (o *LokiLogSink) SetType(v LokiLogSinkGetTypeRetType) {
	setLokiLogSinkGetTypeAttributeType(&o.Type, v)
}

func (o LokiLogSink) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getLokiLogSinkGetPushUrlAttributeTypeOk(o.PushUrl); ok {
		toSerialize["PushUrl"] = val
	}
	if val, ok := getLokiLogSinkGetTypeAttributeTypeOk(o.Type); ok {
		toSerialize["Type"] = val
	}
	return toSerialize, nil
}

type NullableLokiLogSink struct {
	value *LokiLogSink
	isSet bool
}

func (v NullableLokiLogSink) Get() *LokiLogSink {
	return v.value
}

func (v *NullableLokiLogSink) Set(val *LokiLogSink) {
	v.value = val
	v.isSet = true
}

func (v NullableLokiLogSink) IsSet() bool {
	return v.isSet
}

func (v *NullableLokiLogSink) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLokiLogSink(val *LokiLogSink) *NullableLokiLogSink {
	return &NullableLokiLogSink{value: val, isSet: true}
}

func (v NullableLokiLogSink) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLokiLogSink) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
