/*
CDN API

API used to create and manage your CDN distributions.

API version: 1beta.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cdn

import (
	"encoding/json"
)

// checks if the WAFRule type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WAFRule{}

/*
	types and functions for code
*/

// isNotNullableString
type WAFRuleGetCodeAttributeType = *string

func getWAFRuleGetCodeAttributeTypeOk(arg WAFRuleGetCodeAttributeType) (ret WAFRuleGetCodeRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setWAFRuleGetCodeAttributeType(arg *WAFRuleGetCodeAttributeType, val WAFRuleGetCodeRetType) {
	*arg = &val
}

type WAFRuleGetCodeArgType = string
type WAFRuleGetCodeRetType = string

/*
	types and functions for description
*/

// isContainer
type WAFRuleGetDescriptionAttributeType = *map[string]string
type WAFRuleGetDescriptionArgType = map[string]string
type WAFRuleGetDescriptionRetType = map[string]string

func getWAFRuleGetDescriptionAttributeTypeOk(arg WAFRuleGetDescriptionAttributeType) (ret WAFRuleGetDescriptionRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setWAFRuleGetDescriptionAttributeType(arg *WAFRuleGetDescriptionAttributeType, val WAFRuleGetDescriptionRetType) {
	*arg = &val
}

/*
	types and functions for id
*/

// isNotNullableString
type WAFRuleGetIdAttributeType = *string

func getWAFRuleGetIdAttributeTypeOk(arg WAFRuleGetIdAttributeType) (ret WAFRuleGetIdRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setWAFRuleGetIdAttributeType(arg *WAFRuleGetIdAttributeType, val WAFRuleGetIdRetType) {
	*arg = &val
}

type WAFRuleGetIdArgType = string
type WAFRuleGetIdRetType = string

// WAFRule struct for WAFRule
type WAFRule struct {
	// Optional CoreRuleSet rule ID in case this is a CRS rule
	Code WAFRuleGetCodeAttributeType `json:"code,omitempty"`
	// LocalizedString is a map from language to string value
	// REQUIRED
	Description WAFRuleGetDescriptionAttributeType `json:"description" required:"true"`
	// REQUIRED
	Id WAFRuleGetIdAttributeType `json:"id" required:"true"`
}

type _WAFRule WAFRule

// NewWAFRule instantiates a new WAFRule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWAFRule(description WAFRuleGetDescriptionArgType, id WAFRuleGetIdArgType) *WAFRule {
	this := WAFRule{}
	setWAFRuleGetDescriptionAttributeType(&this.Description, description)
	setWAFRuleGetIdAttributeType(&this.Id, id)
	return &this
}

// NewWAFRuleWithDefaults instantiates a new WAFRule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWAFRuleWithDefaults() *WAFRule {
	this := WAFRule{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *WAFRule) GetCode() (res WAFRuleGetCodeRetType) {
	res, _ = o.GetCodeOk()
	return
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WAFRule) GetCodeOk() (ret WAFRuleGetCodeRetType, ok bool) {
	return getWAFRuleGetCodeAttributeTypeOk(o.Code)
}

// HasCode returns a boolean if a field has been set.
func (o *WAFRule) HasCode() bool {
	_, ok := o.GetCodeOk()
	return ok
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *WAFRule) SetCode(v WAFRuleGetCodeRetType) {
	setWAFRuleGetCodeAttributeType(&o.Code, v)
}

// GetDescription returns the Description field value
func (o *WAFRule) GetDescription() (ret WAFRuleGetDescriptionRetType) {
	ret, _ = o.GetDescriptionOk()
	return ret
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *WAFRule) GetDescriptionOk() (ret WAFRuleGetDescriptionRetType, ok bool) {
	return getWAFRuleGetDescriptionAttributeTypeOk(o.Description)
}

// SetDescription sets field value
func (o *WAFRule) SetDescription(v WAFRuleGetDescriptionRetType) {
	setWAFRuleGetDescriptionAttributeType(&o.Description, v)
}

// GetId returns the Id field value
func (o *WAFRule) GetId() (ret WAFRuleGetIdRetType) {
	ret, _ = o.GetIdOk()
	return ret
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *WAFRule) GetIdOk() (ret WAFRuleGetIdRetType, ok bool) {
	return getWAFRuleGetIdAttributeTypeOk(o.Id)
}

// SetId sets field value
func (o *WAFRule) SetId(v WAFRuleGetIdRetType) {
	setWAFRuleGetIdAttributeType(&o.Id, v)
}

func (o WAFRule) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getWAFRuleGetCodeAttributeTypeOk(o.Code); ok {
		toSerialize["Code"] = val
	}
	if val, ok := getWAFRuleGetDescriptionAttributeTypeOk(o.Description); ok {
		toSerialize["Description"] = val
	}
	if val, ok := getWAFRuleGetIdAttributeTypeOk(o.Id); ok {
		toSerialize["Id"] = val
	}
	return toSerialize, nil
}

type NullableWAFRule struct {
	value *WAFRule
	isSet bool
}

func (v NullableWAFRule) Get() *WAFRule {
	return v.value
}

func (v *NullableWAFRule) Set(val *WAFRule) {
	v.value = val
	v.isSet = true
}

func (v NullableWAFRule) IsSet() bool {
	return v.isSet
}

func (v *NullableWAFRule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWAFRule(val *WAFRule) *NullableWAFRule {
	return &NullableWAFRule{value: val, isSet: true}
}

func (v NullableWAFRule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWAFRule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
