/*
STACKIT Cost API

The cost API provides detailed reports on the costs for a customer or project over a certain amount of time

API version: 3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cost

import (
	"encoding/json"
)

// checks if the ProjectCostsWithReports type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProjectCostsWithReports{}

/*
	types and functions for customerAccountId
*/

// isNotNullableString
type ProjectCostsWithReportsGetCustomerAccountIdAttributeType = *string

func getProjectCostsWithReportsGetCustomerAccountIdAttributeTypeOk(arg ProjectCostsWithReportsGetCustomerAccountIdAttributeType) (ret ProjectCostsWithReportsGetCustomerAccountIdRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setProjectCostsWithReportsGetCustomerAccountIdAttributeType(arg *ProjectCostsWithReportsGetCustomerAccountIdAttributeType, val ProjectCostsWithReportsGetCustomerAccountIdRetType) {
	*arg = &val
}

type ProjectCostsWithReportsGetCustomerAccountIdArgType = string
type ProjectCostsWithReportsGetCustomerAccountIdRetType = string

/*
	types and functions for projectId
*/

// isNotNullableString
type ProjectCostsWithReportsGetProjectIdAttributeType = *string

func getProjectCostsWithReportsGetProjectIdAttributeTypeOk(arg ProjectCostsWithReportsGetProjectIdAttributeType) (ret ProjectCostsWithReportsGetProjectIdRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setProjectCostsWithReportsGetProjectIdAttributeType(arg *ProjectCostsWithReportsGetProjectIdAttributeType, val ProjectCostsWithReportsGetProjectIdRetType) {
	*arg = &val
}

type ProjectCostsWithReportsGetProjectIdArgType = string
type ProjectCostsWithReportsGetProjectIdRetType = string

/*
	types and functions for projectName
*/

// isNotNullableString
type ProjectCostsWithReportsGetProjectNameAttributeType = *string

func getProjectCostsWithReportsGetProjectNameAttributeTypeOk(arg ProjectCostsWithReportsGetProjectNameAttributeType) (ret ProjectCostsWithReportsGetProjectNameRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setProjectCostsWithReportsGetProjectNameAttributeType(arg *ProjectCostsWithReportsGetProjectNameAttributeType, val ProjectCostsWithReportsGetProjectNameRetType) {
	*arg = &val
}

type ProjectCostsWithReportsGetProjectNameArgType = string
type ProjectCostsWithReportsGetProjectNameRetType = string

/*
	types and functions for reportData
*/

// isArray
type ProjectCostsWithReportsGetReportDataAttributeType = *[]ReportData
type ProjectCostsWithReportsGetReportDataArgType = []ReportData
type ProjectCostsWithReportsGetReportDataRetType = []ReportData

func getProjectCostsWithReportsGetReportDataAttributeTypeOk(arg ProjectCostsWithReportsGetReportDataAttributeType) (ret ProjectCostsWithReportsGetReportDataRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setProjectCostsWithReportsGetReportDataAttributeType(arg *ProjectCostsWithReportsGetReportDataAttributeType, val ProjectCostsWithReportsGetReportDataRetType) {
	*arg = &val
}

/*
	types and functions for totalCharge
*/

// isDouble
type ProjectCostsWithReportsGetTotalChargeAttributeType = *float64
type ProjectCostsWithReportsGetTotalChargeArgType = float64
type ProjectCostsWithReportsGetTotalChargeRetType = float64

func getProjectCostsWithReportsGetTotalChargeAttributeTypeOk(arg ProjectCostsWithReportsGetTotalChargeAttributeType) (ret ProjectCostsWithReportsGetTotalChargeRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setProjectCostsWithReportsGetTotalChargeAttributeType(arg *ProjectCostsWithReportsGetTotalChargeAttributeType, val ProjectCostsWithReportsGetTotalChargeRetType) {
	*arg = &val
}

/*
	types and functions for totalDiscount
*/

// isDouble
type ProjectCostsWithReportsGetTotalDiscountAttributeType = *float64
type ProjectCostsWithReportsGetTotalDiscountArgType = float64
type ProjectCostsWithReportsGetTotalDiscountRetType = float64

func getProjectCostsWithReportsGetTotalDiscountAttributeTypeOk(arg ProjectCostsWithReportsGetTotalDiscountAttributeType) (ret ProjectCostsWithReportsGetTotalDiscountRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setProjectCostsWithReportsGetTotalDiscountAttributeType(arg *ProjectCostsWithReportsGetTotalDiscountAttributeType, val ProjectCostsWithReportsGetTotalDiscountRetType) {
	*arg = &val
}

// ProjectCostsWithReports Detailed costs for a project
type ProjectCostsWithReports struct {
	// REQUIRED
	CustomerAccountId ProjectCostsWithReportsGetCustomerAccountIdAttributeType `json:"customerAccountId" required:"true"`
	// REQUIRED
	ProjectId ProjectCostsWithReportsGetProjectIdAttributeType `json:"projectId" required:"true"`
	// REQUIRED
	ProjectName ProjectCostsWithReportsGetProjectNameAttributeType `json:"projectName" required:"true"`
	// Detailed project costs which are ONLY included if granularity is provided AND depth is \"project\"
	ReportData ProjectCostsWithReportsGetReportDataAttributeType `json:"reportData,omitempty"`
	// Total charge for all services and the whole requested date range (value in cents)
	// REQUIRED
	TotalCharge ProjectCostsWithReportsGetTotalChargeAttributeType `json:"totalCharge" required:"true"`
	// Total discount for all services and the whole requested date range (value in cents)
	// REQUIRED
	TotalDiscount ProjectCostsWithReportsGetTotalDiscountAttributeType `json:"totalDiscount" required:"true"`
}

type _ProjectCostsWithReports ProjectCostsWithReports

// NewProjectCostsWithReports instantiates a new ProjectCostsWithReports object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjectCostsWithReports(customerAccountId ProjectCostsWithReportsGetCustomerAccountIdArgType, projectId ProjectCostsWithReportsGetProjectIdArgType, projectName ProjectCostsWithReportsGetProjectNameArgType, totalCharge ProjectCostsWithReportsGetTotalChargeArgType, totalDiscount ProjectCostsWithReportsGetTotalDiscountArgType) *ProjectCostsWithReports {
	this := ProjectCostsWithReports{}
	setProjectCostsWithReportsGetCustomerAccountIdAttributeType(&this.CustomerAccountId, customerAccountId)
	setProjectCostsWithReportsGetProjectIdAttributeType(&this.ProjectId, projectId)
	setProjectCostsWithReportsGetProjectNameAttributeType(&this.ProjectName, projectName)
	setProjectCostsWithReportsGetTotalChargeAttributeType(&this.TotalCharge, totalCharge)
	setProjectCostsWithReportsGetTotalDiscountAttributeType(&this.TotalDiscount, totalDiscount)
	return &this
}

// NewProjectCostsWithReportsWithDefaults instantiates a new ProjectCostsWithReports object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectCostsWithReportsWithDefaults() *ProjectCostsWithReports {
	this := ProjectCostsWithReports{}
	return &this
}

// GetCustomerAccountId returns the CustomerAccountId field value
func (o *ProjectCostsWithReports) GetCustomerAccountId() (ret ProjectCostsWithReportsGetCustomerAccountIdRetType) {
	ret, _ = o.GetCustomerAccountIdOk()
	return ret
}

// GetCustomerAccountIdOk returns a tuple with the CustomerAccountId field value
// and a boolean to check if the value has been set.
func (o *ProjectCostsWithReports) GetCustomerAccountIdOk() (ret ProjectCostsWithReportsGetCustomerAccountIdRetType, ok bool) {
	return getProjectCostsWithReportsGetCustomerAccountIdAttributeTypeOk(o.CustomerAccountId)
}

// SetCustomerAccountId sets field value
func (o *ProjectCostsWithReports) SetCustomerAccountId(v ProjectCostsWithReportsGetCustomerAccountIdRetType) {
	setProjectCostsWithReportsGetCustomerAccountIdAttributeType(&o.CustomerAccountId, v)
}

// GetProjectId returns the ProjectId field value
func (o *ProjectCostsWithReports) GetProjectId() (ret ProjectCostsWithReportsGetProjectIdRetType) {
	ret, _ = o.GetProjectIdOk()
	return ret
}

// GetProjectIdOk returns a tuple with the ProjectId field value
// and a boolean to check if the value has been set.
func (o *ProjectCostsWithReports) GetProjectIdOk() (ret ProjectCostsWithReportsGetProjectIdRetType, ok bool) {
	return getProjectCostsWithReportsGetProjectIdAttributeTypeOk(o.ProjectId)
}

// SetProjectId sets field value
func (o *ProjectCostsWithReports) SetProjectId(v ProjectCostsWithReportsGetProjectIdRetType) {
	setProjectCostsWithReportsGetProjectIdAttributeType(&o.ProjectId, v)
}

// GetProjectName returns the ProjectName field value
func (o *ProjectCostsWithReports) GetProjectName() (ret ProjectCostsWithReportsGetProjectNameRetType) {
	ret, _ = o.GetProjectNameOk()
	return ret
}

// GetProjectNameOk returns a tuple with the ProjectName field value
// and a boolean to check if the value has been set.
func (o *ProjectCostsWithReports) GetProjectNameOk() (ret ProjectCostsWithReportsGetProjectNameRetType, ok bool) {
	return getProjectCostsWithReportsGetProjectNameAttributeTypeOk(o.ProjectName)
}

// SetProjectName sets field value
func (o *ProjectCostsWithReports) SetProjectName(v ProjectCostsWithReportsGetProjectNameRetType) {
	setProjectCostsWithReportsGetProjectNameAttributeType(&o.ProjectName, v)
}

// GetReportData returns the ReportData field value if set, zero value otherwise.
func (o *ProjectCostsWithReports) GetReportData() (res ProjectCostsWithReportsGetReportDataRetType) {
	res, _ = o.GetReportDataOk()
	return
}

// GetReportDataOk returns a tuple with the ReportData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectCostsWithReports) GetReportDataOk() (ret ProjectCostsWithReportsGetReportDataRetType, ok bool) {
	return getProjectCostsWithReportsGetReportDataAttributeTypeOk(o.ReportData)
}

// HasReportData returns a boolean if a field has been set.
func (o *ProjectCostsWithReports) HasReportData() bool {
	_, ok := o.GetReportDataOk()
	return ok
}

// SetReportData gets a reference to the given []ReportData and assigns it to the ReportData field.
func (o *ProjectCostsWithReports) SetReportData(v ProjectCostsWithReportsGetReportDataRetType) {
	setProjectCostsWithReportsGetReportDataAttributeType(&o.ReportData, v)
}

// GetTotalCharge returns the TotalCharge field value
func (o *ProjectCostsWithReports) GetTotalCharge() (ret ProjectCostsWithReportsGetTotalChargeRetType) {
	ret, _ = o.GetTotalChargeOk()
	return ret
}

// GetTotalChargeOk returns a tuple with the TotalCharge field value
// and a boolean to check if the value has been set.
func (o *ProjectCostsWithReports) GetTotalChargeOk() (ret ProjectCostsWithReportsGetTotalChargeRetType, ok bool) {
	return getProjectCostsWithReportsGetTotalChargeAttributeTypeOk(o.TotalCharge)
}

// SetTotalCharge sets field value
func (o *ProjectCostsWithReports) SetTotalCharge(v ProjectCostsWithReportsGetTotalChargeRetType) {
	setProjectCostsWithReportsGetTotalChargeAttributeType(&o.TotalCharge, v)
}

// GetTotalDiscount returns the TotalDiscount field value
func (o *ProjectCostsWithReports) GetTotalDiscount() (ret ProjectCostsWithReportsGetTotalDiscountRetType) {
	ret, _ = o.GetTotalDiscountOk()
	return ret
}

// GetTotalDiscountOk returns a tuple with the TotalDiscount field value
// and a boolean to check if the value has been set.
func (o *ProjectCostsWithReports) GetTotalDiscountOk() (ret ProjectCostsWithReportsGetTotalDiscountRetType, ok bool) {
	return getProjectCostsWithReportsGetTotalDiscountAttributeTypeOk(o.TotalDiscount)
}

// SetTotalDiscount sets field value
func (o *ProjectCostsWithReports) SetTotalDiscount(v ProjectCostsWithReportsGetTotalDiscountRetType) {
	setProjectCostsWithReportsGetTotalDiscountAttributeType(&o.TotalDiscount, v)
}

func (o ProjectCostsWithReports) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getProjectCostsWithReportsGetCustomerAccountIdAttributeTypeOk(o.CustomerAccountId); ok {
		toSerialize["CustomerAccountId"] = val
	}
	if val, ok := getProjectCostsWithReportsGetProjectIdAttributeTypeOk(o.ProjectId); ok {
		toSerialize["ProjectId"] = val
	}
	if val, ok := getProjectCostsWithReportsGetProjectNameAttributeTypeOk(o.ProjectName); ok {
		toSerialize["ProjectName"] = val
	}
	if val, ok := getProjectCostsWithReportsGetReportDataAttributeTypeOk(o.ReportData); ok {
		toSerialize["ReportData"] = val
	}
	if val, ok := getProjectCostsWithReportsGetTotalChargeAttributeTypeOk(o.TotalCharge); ok {
		toSerialize["TotalCharge"] = val
	}
	if val, ok := getProjectCostsWithReportsGetTotalDiscountAttributeTypeOk(o.TotalDiscount); ok {
		toSerialize["TotalDiscount"] = val
	}
	return toSerialize, nil
}

type NullableProjectCostsWithReports struct {
	value *ProjectCostsWithReports
	isSet bool
}

func (v NullableProjectCostsWithReports) Get() *ProjectCostsWithReports {
	return v.value
}

func (v *NullableProjectCostsWithReports) Set(val *ProjectCostsWithReports) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectCostsWithReports) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectCostsWithReports) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectCostsWithReports(val *ProjectCostsWithReports) *NullableProjectCostsWithReports {
	return &NullableProjectCostsWithReports{value: val, isSet: true}
}

func (v NullableProjectCostsWithReports) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectCostsWithReports) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
