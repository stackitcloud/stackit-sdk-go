/*
STACKIT Cost API

The cost API provides detailed reports on the costs for a customer or project over a certain amount of time

API version: 3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cost

import (
	"encoding/json"
)

// checks if the DefaultError type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DefaultError{}

/*
	types and functions for code
*/

// isNotNullableString
type DefaultErrorGetCodeAttributeType = *string

func getDefaultErrorGetCodeAttributeTypeOk(arg DefaultErrorGetCodeAttributeType) (ret DefaultErrorGetCodeRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setDefaultErrorGetCodeAttributeType(arg *DefaultErrorGetCodeAttributeType, val DefaultErrorGetCodeRetType) {
	*arg = &val
}

type DefaultErrorGetCodeArgType = string
type DefaultErrorGetCodeRetType = string

/*
	types and functions for message
*/

// isNotNullableString
type DefaultErrorGetMessageAttributeType = *string

func getDefaultErrorGetMessageAttributeTypeOk(arg DefaultErrorGetMessageAttributeType) (ret DefaultErrorGetMessageRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setDefaultErrorGetMessageAttributeType(arg *DefaultErrorGetMessageAttributeType, val DefaultErrorGetMessageRetType) {
	*arg = &val
}

type DefaultErrorGetMessageArgType = string
type DefaultErrorGetMessageRetType = string

// DefaultError A standard error object.
type DefaultError struct {
	// REQUIRED
	Code    DefaultErrorGetCodeAttributeType    `json:"code" required:"true"`
	Message DefaultErrorGetMessageAttributeType `json:"message,omitempty"`
}

type _DefaultError DefaultError

// NewDefaultError instantiates a new DefaultError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDefaultError(code DefaultErrorGetCodeArgType) *DefaultError {
	this := DefaultError{}
	setDefaultErrorGetCodeAttributeType(&this.Code, code)
	return &this
}

// NewDefaultErrorWithDefaults instantiates a new DefaultError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDefaultErrorWithDefaults() *DefaultError {
	this := DefaultError{}
	return &this
}

// GetCode returns the Code field value
func (o *DefaultError) GetCode() (ret DefaultErrorGetCodeRetType) {
	ret, _ = o.GetCodeOk()
	return ret
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *DefaultError) GetCodeOk() (ret DefaultErrorGetCodeRetType, ok bool) {
	return getDefaultErrorGetCodeAttributeTypeOk(o.Code)
}

// SetCode sets field value
func (o *DefaultError) SetCode(v DefaultErrorGetCodeRetType) {
	setDefaultErrorGetCodeAttributeType(&o.Code, v)
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *DefaultError) GetMessage() (res DefaultErrorGetMessageRetType) {
	res, _ = o.GetMessageOk()
	return
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DefaultError) GetMessageOk() (ret DefaultErrorGetMessageRetType, ok bool) {
	return getDefaultErrorGetMessageAttributeTypeOk(o.Message)
}

// HasMessage returns a boolean if a field has been set.
func (o *DefaultError) HasMessage() bool {
	_, ok := o.GetMessageOk()
	return ok
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *DefaultError) SetMessage(v DefaultErrorGetMessageRetType) {
	setDefaultErrorGetMessageAttributeType(&o.Message, v)
}

func (o DefaultError) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getDefaultErrorGetCodeAttributeTypeOk(o.Code); ok {
		toSerialize["Code"] = val
	}
	if val, ok := getDefaultErrorGetMessageAttributeTypeOk(o.Message); ok {
		toSerialize["Message"] = val
	}
	return toSerialize, nil
}

type NullableDefaultError struct {
	value *DefaultError
	isSet bool
}

func (v NullableDefaultError) Get() *DefaultError {
	return v.value
}

func (v *NullableDefaultError) Set(val *DefaultError) {
	v.value = val
	v.isSet = true
}

func (v NullableDefaultError) IsSet() bool {
	return v.isSet
}

func (v *NullableDefaultError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDefaultError(val *DefaultError) *NullableDefaultError {
	return &NullableDefaultError{value: val, isSet: true}
}

func (v NullableDefaultError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDefaultError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
