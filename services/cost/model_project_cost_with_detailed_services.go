/*
STACKIT Cost API

The cost API provides detailed reports on the costs for a customer or project over a certain amount of time

API version: 3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cost

import (
	"encoding/json"
)

// checks if the ProjectCostWithDetailedServices type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProjectCostWithDetailedServices{}

/*
	types and functions for customerAccountId
*/

// isNotNullableString
type ProjectCostWithDetailedServicesGetCustomerAccountIdAttributeType = *string

func getProjectCostWithDetailedServicesGetCustomerAccountIdAttributeTypeOk(arg ProjectCostWithDetailedServicesGetCustomerAccountIdAttributeType) (ret ProjectCostWithDetailedServicesGetCustomerAccountIdRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setProjectCostWithDetailedServicesGetCustomerAccountIdAttributeType(arg *ProjectCostWithDetailedServicesGetCustomerAccountIdAttributeType, val ProjectCostWithDetailedServicesGetCustomerAccountIdRetType) {
	*arg = &val
}

type ProjectCostWithDetailedServicesGetCustomerAccountIdArgType = string
type ProjectCostWithDetailedServicesGetCustomerAccountIdRetType = string

/*
	types and functions for projectId
*/

// isNotNullableString
type ProjectCostWithDetailedServicesGetProjectIdAttributeType = *string

func getProjectCostWithDetailedServicesGetProjectIdAttributeTypeOk(arg ProjectCostWithDetailedServicesGetProjectIdAttributeType) (ret ProjectCostWithDetailedServicesGetProjectIdRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setProjectCostWithDetailedServicesGetProjectIdAttributeType(arg *ProjectCostWithDetailedServicesGetProjectIdAttributeType, val ProjectCostWithDetailedServicesGetProjectIdRetType) {
	*arg = &val
}

type ProjectCostWithDetailedServicesGetProjectIdArgType = string
type ProjectCostWithDetailedServicesGetProjectIdRetType = string

/*
	types and functions for projectName
*/

// isNotNullableString
type ProjectCostWithDetailedServicesGetProjectNameAttributeType = *string

func getProjectCostWithDetailedServicesGetProjectNameAttributeTypeOk(arg ProjectCostWithDetailedServicesGetProjectNameAttributeType) (ret ProjectCostWithDetailedServicesGetProjectNameRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setProjectCostWithDetailedServicesGetProjectNameAttributeType(arg *ProjectCostWithDetailedServicesGetProjectNameAttributeType, val ProjectCostWithDetailedServicesGetProjectNameRetType) {
	*arg = &val
}

type ProjectCostWithDetailedServicesGetProjectNameArgType = string
type ProjectCostWithDetailedServicesGetProjectNameRetType = string

/*
	types and functions for services
*/

// isArray
type ProjectCostWithDetailedServicesGetServicesAttributeType = *[]DetailedServiceCost
type ProjectCostWithDetailedServicesGetServicesArgType = []DetailedServiceCost
type ProjectCostWithDetailedServicesGetServicesRetType = []DetailedServiceCost

func getProjectCostWithDetailedServicesGetServicesAttributeTypeOk(arg ProjectCostWithDetailedServicesGetServicesAttributeType) (ret ProjectCostWithDetailedServicesGetServicesRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setProjectCostWithDetailedServicesGetServicesAttributeType(arg *ProjectCostWithDetailedServicesGetServicesAttributeType, val ProjectCostWithDetailedServicesGetServicesRetType) {
	*arg = &val
}

/*
	types and functions for totalCharge
*/

// isDouble
type ProjectCostWithDetailedServicesGetTotalChargeAttributeType = *float64
type ProjectCostWithDetailedServicesGetTotalChargeArgType = float64
type ProjectCostWithDetailedServicesGetTotalChargeRetType = float64

func getProjectCostWithDetailedServicesGetTotalChargeAttributeTypeOk(arg ProjectCostWithDetailedServicesGetTotalChargeAttributeType) (ret ProjectCostWithDetailedServicesGetTotalChargeRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setProjectCostWithDetailedServicesGetTotalChargeAttributeType(arg *ProjectCostWithDetailedServicesGetTotalChargeAttributeType, val ProjectCostWithDetailedServicesGetTotalChargeRetType) {
	*arg = &val
}

/*
	types and functions for totalDiscount
*/

// isDouble
type ProjectCostWithDetailedServicesGetTotalDiscountAttributeType = *float64
type ProjectCostWithDetailedServicesGetTotalDiscountArgType = float64
type ProjectCostWithDetailedServicesGetTotalDiscountRetType = float64

func getProjectCostWithDetailedServicesGetTotalDiscountAttributeTypeOk(arg ProjectCostWithDetailedServicesGetTotalDiscountAttributeType) (ret ProjectCostWithDetailedServicesGetTotalDiscountRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setProjectCostWithDetailedServicesGetTotalDiscountAttributeType(arg *ProjectCostWithDetailedServicesGetTotalDiscountAttributeType, val ProjectCostWithDetailedServicesGetTotalDiscountRetType) {
	*arg = &val
}

// ProjectCostWithDetailedServices Detailed costs for a project including service costs
type ProjectCostWithDetailedServices struct {
	// REQUIRED
	CustomerAccountId ProjectCostWithDetailedServicesGetCustomerAccountIdAttributeType `json:"customerAccountId" required:"true"`
	// REQUIRED
	ProjectId ProjectCostWithDetailedServicesGetProjectIdAttributeType `json:"projectId" required:"true"`
	// REQUIRED
	ProjectName ProjectCostWithDetailedServicesGetProjectNameAttributeType `json:"projectName" required:"true"`
	// Total discount for all services and the whole requested date range (value in cents). Please see \"depth\" parameter for more details.
	Services ProjectCostWithDetailedServicesGetServicesAttributeType `json:"services,omitempty"`
	// Total charge for all services and the whole requested date range (value in cents)
	// REQUIRED
	TotalCharge ProjectCostWithDetailedServicesGetTotalChargeAttributeType `json:"totalCharge" required:"true"`
	// Total discount rounded for all services and the whole requested date range (value in cents)
	// REQUIRED
	TotalDiscount ProjectCostWithDetailedServicesGetTotalDiscountAttributeType `json:"totalDiscount" required:"true"`
}

type _ProjectCostWithDetailedServices ProjectCostWithDetailedServices

// NewProjectCostWithDetailedServices instantiates a new ProjectCostWithDetailedServices object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjectCostWithDetailedServices(customerAccountId ProjectCostWithDetailedServicesGetCustomerAccountIdArgType, projectId ProjectCostWithDetailedServicesGetProjectIdArgType, projectName ProjectCostWithDetailedServicesGetProjectNameArgType, totalCharge ProjectCostWithDetailedServicesGetTotalChargeArgType, totalDiscount ProjectCostWithDetailedServicesGetTotalDiscountArgType) *ProjectCostWithDetailedServices {
	this := ProjectCostWithDetailedServices{}
	setProjectCostWithDetailedServicesGetCustomerAccountIdAttributeType(&this.CustomerAccountId, customerAccountId)
	setProjectCostWithDetailedServicesGetProjectIdAttributeType(&this.ProjectId, projectId)
	setProjectCostWithDetailedServicesGetProjectNameAttributeType(&this.ProjectName, projectName)
	setProjectCostWithDetailedServicesGetTotalChargeAttributeType(&this.TotalCharge, totalCharge)
	setProjectCostWithDetailedServicesGetTotalDiscountAttributeType(&this.TotalDiscount, totalDiscount)
	return &this
}

// NewProjectCostWithDetailedServicesWithDefaults instantiates a new ProjectCostWithDetailedServices object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectCostWithDetailedServicesWithDefaults() *ProjectCostWithDetailedServices {
	this := ProjectCostWithDetailedServices{}
	return &this
}

// GetCustomerAccountId returns the CustomerAccountId field value
func (o *ProjectCostWithDetailedServices) GetCustomerAccountId() (ret ProjectCostWithDetailedServicesGetCustomerAccountIdRetType) {
	ret, _ = o.GetCustomerAccountIdOk()
	return ret
}

// GetCustomerAccountIdOk returns a tuple with the CustomerAccountId field value
// and a boolean to check if the value has been set.
func (o *ProjectCostWithDetailedServices) GetCustomerAccountIdOk() (ret ProjectCostWithDetailedServicesGetCustomerAccountIdRetType, ok bool) {
	return getProjectCostWithDetailedServicesGetCustomerAccountIdAttributeTypeOk(o.CustomerAccountId)
}

// SetCustomerAccountId sets field value
func (o *ProjectCostWithDetailedServices) SetCustomerAccountId(v ProjectCostWithDetailedServicesGetCustomerAccountIdRetType) {
	setProjectCostWithDetailedServicesGetCustomerAccountIdAttributeType(&o.CustomerAccountId, v)
}

// GetProjectId returns the ProjectId field value
func (o *ProjectCostWithDetailedServices) GetProjectId() (ret ProjectCostWithDetailedServicesGetProjectIdRetType) {
	ret, _ = o.GetProjectIdOk()
	return ret
}

// GetProjectIdOk returns a tuple with the ProjectId field value
// and a boolean to check if the value has been set.
func (o *ProjectCostWithDetailedServices) GetProjectIdOk() (ret ProjectCostWithDetailedServicesGetProjectIdRetType, ok bool) {
	return getProjectCostWithDetailedServicesGetProjectIdAttributeTypeOk(o.ProjectId)
}

// SetProjectId sets field value
func (o *ProjectCostWithDetailedServices) SetProjectId(v ProjectCostWithDetailedServicesGetProjectIdRetType) {
	setProjectCostWithDetailedServicesGetProjectIdAttributeType(&o.ProjectId, v)
}

// GetProjectName returns the ProjectName field value
func (o *ProjectCostWithDetailedServices) GetProjectName() (ret ProjectCostWithDetailedServicesGetProjectNameRetType) {
	ret, _ = o.GetProjectNameOk()
	return ret
}

// GetProjectNameOk returns a tuple with the ProjectName field value
// and a boolean to check if the value has been set.
func (o *ProjectCostWithDetailedServices) GetProjectNameOk() (ret ProjectCostWithDetailedServicesGetProjectNameRetType, ok bool) {
	return getProjectCostWithDetailedServicesGetProjectNameAttributeTypeOk(o.ProjectName)
}

// SetProjectName sets field value
func (o *ProjectCostWithDetailedServices) SetProjectName(v ProjectCostWithDetailedServicesGetProjectNameRetType) {
	setProjectCostWithDetailedServicesGetProjectNameAttributeType(&o.ProjectName, v)
}

// GetServices returns the Services field value if set, zero value otherwise.
func (o *ProjectCostWithDetailedServices) GetServices() (res ProjectCostWithDetailedServicesGetServicesRetType) {
	res, _ = o.GetServicesOk()
	return
}

// GetServicesOk returns a tuple with the Services field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectCostWithDetailedServices) GetServicesOk() (ret ProjectCostWithDetailedServicesGetServicesRetType, ok bool) {
	return getProjectCostWithDetailedServicesGetServicesAttributeTypeOk(o.Services)
}

// HasServices returns a boolean if a field has been set.
func (o *ProjectCostWithDetailedServices) HasServices() bool {
	_, ok := o.GetServicesOk()
	return ok
}

// SetServices gets a reference to the given []DetailedServiceCost and assigns it to the Services field.
func (o *ProjectCostWithDetailedServices) SetServices(v ProjectCostWithDetailedServicesGetServicesRetType) {
	setProjectCostWithDetailedServicesGetServicesAttributeType(&o.Services, v)
}

// GetTotalCharge returns the TotalCharge field value
func (o *ProjectCostWithDetailedServices) GetTotalCharge() (ret ProjectCostWithDetailedServicesGetTotalChargeRetType) {
	ret, _ = o.GetTotalChargeOk()
	return ret
}

// GetTotalChargeOk returns a tuple with the TotalCharge field value
// and a boolean to check if the value has been set.
func (o *ProjectCostWithDetailedServices) GetTotalChargeOk() (ret ProjectCostWithDetailedServicesGetTotalChargeRetType, ok bool) {
	return getProjectCostWithDetailedServicesGetTotalChargeAttributeTypeOk(o.TotalCharge)
}

// SetTotalCharge sets field value
func (o *ProjectCostWithDetailedServices) SetTotalCharge(v ProjectCostWithDetailedServicesGetTotalChargeRetType) {
	setProjectCostWithDetailedServicesGetTotalChargeAttributeType(&o.TotalCharge, v)
}

// GetTotalDiscount returns the TotalDiscount field value
func (o *ProjectCostWithDetailedServices) GetTotalDiscount() (ret ProjectCostWithDetailedServicesGetTotalDiscountRetType) {
	ret, _ = o.GetTotalDiscountOk()
	return ret
}

// GetTotalDiscountOk returns a tuple with the TotalDiscount field value
// and a boolean to check if the value has been set.
func (o *ProjectCostWithDetailedServices) GetTotalDiscountOk() (ret ProjectCostWithDetailedServicesGetTotalDiscountRetType, ok bool) {
	return getProjectCostWithDetailedServicesGetTotalDiscountAttributeTypeOk(o.TotalDiscount)
}

// SetTotalDiscount sets field value
func (o *ProjectCostWithDetailedServices) SetTotalDiscount(v ProjectCostWithDetailedServicesGetTotalDiscountRetType) {
	setProjectCostWithDetailedServicesGetTotalDiscountAttributeType(&o.TotalDiscount, v)
}

func (o ProjectCostWithDetailedServices) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getProjectCostWithDetailedServicesGetCustomerAccountIdAttributeTypeOk(o.CustomerAccountId); ok {
		toSerialize["CustomerAccountId"] = val
	}
	if val, ok := getProjectCostWithDetailedServicesGetProjectIdAttributeTypeOk(o.ProjectId); ok {
		toSerialize["ProjectId"] = val
	}
	if val, ok := getProjectCostWithDetailedServicesGetProjectNameAttributeTypeOk(o.ProjectName); ok {
		toSerialize["ProjectName"] = val
	}
	if val, ok := getProjectCostWithDetailedServicesGetServicesAttributeTypeOk(o.Services); ok {
		toSerialize["Services"] = val
	}
	if val, ok := getProjectCostWithDetailedServicesGetTotalChargeAttributeTypeOk(o.TotalCharge); ok {
		toSerialize["TotalCharge"] = val
	}
	if val, ok := getProjectCostWithDetailedServicesGetTotalDiscountAttributeTypeOk(o.TotalDiscount); ok {
		toSerialize["TotalDiscount"] = val
	}
	return toSerialize, nil
}

type NullableProjectCostWithDetailedServices struct {
	value *ProjectCostWithDetailedServices
	isSet bool
}

func (v NullableProjectCostWithDetailedServices) Get() *ProjectCostWithDetailedServices {
	return v.value
}

func (v *NullableProjectCostWithDetailedServices) Set(val *ProjectCostWithDetailedServices) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectCostWithDetailedServices) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectCostWithDetailedServices) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectCostWithDetailedServices(val *ProjectCostWithDetailedServices) *NullableProjectCostWithDetailedServices {
	return &NullableProjectCostWithDetailedServices{value: val, isSet: true}
}

func (v NullableProjectCostWithDetailedServices) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectCostWithDetailedServices) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
