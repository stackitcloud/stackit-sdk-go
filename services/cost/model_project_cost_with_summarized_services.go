/*
STACKIT Cost API

The cost API provides detailed reports on the costs for a customer or project over a certain amount of time

API version: 3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cost

import (
	"encoding/json"
)

// checks if the ProjectCostWithSummarizedServices type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProjectCostWithSummarizedServices{}

/*
	types and functions for customerAccountId
*/

// isNotNullableString
type ProjectCostWithSummarizedServicesGetCustomerAccountIdAttributeType = *string

func getProjectCostWithSummarizedServicesGetCustomerAccountIdAttributeTypeOk(arg ProjectCostWithSummarizedServicesGetCustomerAccountIdAttributeType) (ret ProjectCostWithSummarizedServicesGetCustomerAccountIdRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setProjectCostWithSummarizedServicesGetCustomerAccountIdAttributeType(arg *ProjectCostWithSummarizedServicesGetCustomerAccountIdAttributeType, val ProjectCostWithSummarizedServicesGetCustomerAccountIdRetType) {
	*arg = &val
}

type ProjectCostWithSummarizedServicesGetCustomerAccountIdArgType = string
type ProjectCostWithSummarizedServicesGetCustomerAccountIdRetType = string

/*
	types and functions for projectId
*/

// isNotNullableString
type ProjectCostWithSummarizedServicesGetProjectIdAttributeType = *string

func getProjectCostWithSummarizedServicesGetProjectIdAttributeTypeOk(arg ProjectCostWithSummarizedServicesGetProjectIdAttributeType) (ret ProjectCostWithSummarizedServicesGetProjectIdRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setProjectCostWithSummarizedServicesGetProjectIdAttributeType(arg *ProjectCostWithSummarizedServicesGetProjectIdAttributeType, val ProjectCostWithSummarizedServicesGetProjectIdRetType) {
	*arg = &val
}

type ProjectCostWithSummarizedServicesGetProjectIdArgType = string
type ProjectCostWithSummarizedServicesGetProjectIdRetType = string

/*
	types and functions for projectName
*/

// isNotNullableString
type ProjectCostWithSummarizedServicesGetProjectNameAttributeType = *string

func getProjectCostWithSummarizedServicesGetProjectNameAttributeTypeOk(arg ProjectCostWithSummarizedServicesGetProjectNameAttributeType) (ret ProjectCostWithSummarizedServicesGetProjectNameRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setProjectCostWithSummarizedServicesGetProjectNameAttributeType(arg *ProjectCostWithSummarizedServicesGetProjectNameAttributeType, val ProjectCostWithSummarizedServicesGetProjectNameRetType) {
	*arg = &val
}

type ProjectCostWithSummarizedServicesGetProjectNameArgType = string
type ProjectCostWithSummarizedServicesGetProjectNameRetType = string

/*
	types and functions for services
*/

// isArray
type ProjectCostWithSummarizedServicesGetServicesAttributeType = *[]SummarizedServiceCost
type ProjectCostWithSummarizedServicesGetServicesArgType = []SummarizedServiceCost
type ProjectCostWithSummarizedServicesGetServicesRetType = []SummarizedServiceCost

func getProjectCostWithSummarizedServicesGetServicesAttributeTypeOk(arg ProjectCostWithSummarizedServicesGetServicesAttributeType) (ret ProjectCostWithSummarizedServicesGetServicesRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setProjectCostWithSummarizedServicesGetServicesAttributeType(arg *ProjectCostWithSummarizedServicesGetServicesAttributeType, val ProjectCostWithSummarizedServicesGetServicesRetType) {
	*arg = &val
}

/*
	types and functions for totalCharge
*/

// isDouble
type ProjectCostWithSummarizedServicesGetTotalChargeAttributeType = *float64
type ProjectCostWithSummarizedServicesGetTotalChargeArgType = float64
type ProjectCostWithSummarizedServicesGetTotalChargeRetType = float64

func getProjectCostWithSummarizedServicesGetTotalChargeAttributeTypeOk(arg ProjectCostWithSummarizedServicesGetTotalChargeAttributeType) (ret ProjectCostWithSummarizedServicesGetTotalChargeRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setProjectCostWithSummarizedServicesGetTotalChargeAttributeType(arg *ProjectCostWithSummarizedServicesGetTotalChargeAttributeType, val ProjectCostWithSummarizedServicesGetTotalChargeRetType) {
	*arg = &val
}

/*
	types and functions for totalDiscount
*/

// isDouble
type ProjectCostWithSummarizedServicesGetTotalDiscountAttributeType = *float64
type ProjectCostWithSummarizedServicesGetTotalDiscountArgType = float64
type ProjectCostWithSummarizedServicesGetTotalDiscountRetType = float64

func getProjectCostWithSummarizedServicesGetTotalDiscountAttributeTypeOk(arg ProjectCostWithSummarizedServicesGetTotalDiscountAttributeType) (ret ProjectCostWithSummarizedServicesGetTotalDiscountRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setProjectCostWithSummarizedServicesGetTotalDiscountAttributeType(arg *ProjectCostWithSummarizedServicesGetTotalDiscountAttributeType, val ProjectCostWithSummarizedServicesGetTotalDiscountRetType) {
	*arg = &val
}

// ProjectCostWithSummarizedServices Costs for a project including summarized service costs
type ProjectCostWithSummarizedServices struct {
	// REQUIRED
	CustomerAccountId ProjectCostWithSummarizedServicesGetCustomerAccountIdAttributeType `json:"customerAccountId" required:"true"`
	// REQUIRED
	ProjectId ProjectCostWithSummarizedServicesGetProjectIdAttributeType `json:"projectId" required:"true"`
	// REQUIRED
	ProjectName ProjectCostWithSummarizedServicesGetProjectNameAttributeType `json:"projectName" required:"true"`
	// Summarized service costs
	Services ProjectCostWithSummarizedServicesGetServicesAttributeType `json:"services,omitempty"`
	// Total charge for all services and the whole requested date range (value in cents)
	// REQUIRED
	TotalCharge ProjectCostWithSummarizedServicesGetTotalChargeAttributeType `json:"totalCharge" required:"true"`
	// Total discount for all services and the whole requested date range (value in cents)
	// REQUIRED
	TotalDiscount ProjectCostWithSummarizedServicesGetTotalDiscountAttributeType `json:"totalDiscount" required:"true"`
}

type _ProjectCostWithSummarizedServices ProjectCostWithSummarizedServices

// NewProjectCostWithSummarizedServices instantiates a new ProjectCostWithSummarizedServices object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjectCostWithSummarizedServices(customerAccountId ProjectCostWithSummarizedServicesGetCustomerAccountIdArgType, projectId ProjectCostWithSummarizedServicesGetProjectIdArgType, projectName ProjectCostWithSummarizedServicesGetProjectNameArgType, totalCharge ProjectCostWithSummarizedServicesGetTotalChargeArgType, totalDiscount ProjectCostWithSummarizedServicesGetTotalDiscountArgType) *ProjectCostWithSummarizedServices {
	this := ProjectCostWithSummarizedServices{}
	setProjectCostWithSummarizedServicesGetCustomerAccountIdAttributeType(&this.CustomerAccountId, customerAccountId)
	setProjectCostWithSummarizedServicesGetProjectIdAttributeType(&this.ProjectId, projectId)
	setProjectCostWithSummarizedServicesGetProjectNameAttributeType(&this.ProjectName, projectName)
	setProjectCostWithSummarizedServicesGetTotalChargeAttributeType(&this.TotalCharge, totalCharge)
	setProjectCostWithSummarizedServicesGetTotalDiscountAttributeType(&this.TotalDiscount, totalDiscount)
	return &this
}

// NewProjectCostWithSummarizedServicesWithDefaults instantiates a new ProjectCostWithSummarizedServices object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectCostWithSummarizedServicesWithDefaults() *ProjectCostWithSummarizedServices {
	this := ProjectCostWithSummarizedServices{}
	return &this
}

// GetCustomerAccountId returns the CustomerAccountId field value
func (o *ProjectCostWithSummarizedServices) GetCustomerAccountId() (ret ProjectCostWithSummarizedServicesGetCustomerAccountIdRetType) {
	ret, _ = o.GetCustomerAccountIdOk()
	return ret
}

// GetCustomerAccountIdOk returns a tuple with the CustomerAccountId field value
// and a boolean to check if the value has been set.
func (o *ProjectCostWithSummarizedServices) GetCustomerAccountIdOk() (ret ProjectCostWithSummarizedServicesGetCustomerAccountIdRetType, ok bool) {
	return getProjectCostWithSummarizedServicesGetCustomerAccountIdAttributeTypeOk(o.CustomerAccountId)
}

// SetCustomerAccountId sets field value
func (o *ProjectCostWithSummarizedServices) SetCustomerAccountId(v ProjectCostWithSummarizedServicesGetCustomerAccountIdRetType) {
	setProjectCostWithSummarizedServicesGetCustomerAccountIdAttributeType(&o.CustomerAccountId, v)
}

// GetProjectId returns the ProjectId field value
func (o *ProjectCostWithSummarizedServices) GetProjectId() (ret ProjectCostWithSummarizedServicesGetProjectIdRetType) {
	ret, _ = o.GetProjectIdOk()
	return ret
}

// GetProjectIdOk returns a tuple with the ProjectId field value
// and a boolean to check if the value has been set.
func (o *ProjectCostWithSummarizedServices) GetProjectIdOk() (ret ProjectCostWithSummarizedServicesGetProjectIdRetType, ok bool) {
	return getProjectCostWithSummarizedServicesGetProjectIdAttributeTypeOk(o.ProjectId)
}

// SetProjectId sets field value
func (o *ProjectCostWithSummarizedServices) SetProjectId(v ProjectCostWithSummarizedServicesGetProjectIdRetType) {
	setProjectCostWithSummarizedServicesGetProjectIdAttributeType(&o.ProjectId, v)
}

// GetProjectName returns the ProjectName field value
func (o *ProjectCostWithSummarizedServices) GetProjectName() (ret ProjectCostWithSummarizedServicesGetProjectNameRetType) {
	ret, _ = o.GetProjectNameOk()
	return ret
}

// GetProjectNameOk returns a tuple with the ProjectName field value
// and a boolean to check if the value has been set.
func (o *ProjectCostWithSummarizedServices) GetProjectNameOk() (ret ProjectCostWithSummarizedServicesGetProjectNameRetType, ok bool) {
	return getProjectCostWithSummarizedServicesGetProjectNameAttributeTypeOk(o.ProjectName)
}

// SetProjectName sets field value
func (o *ProjectCostWithSummarizedServices) SetProjectName(v ProjectCostWithSummarizedServicesGetProjectNameRetType) {
	setProjectCostWithSummarizedServicesGetProjectNameAttributeType(&o.ProjectName, v)
}

// GetServices returns the Services field value if set, zero value otherwise.
func (o *ProjectCostWithSummarizedServices) GetServices() (res ProjectCostWithSummarizedServicesGetServicesRetType) {
	res, _ = o.GetServicesOk()
	return
}

// GetServicesOk returns a tuple with the Services field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectCostWithSummarizedServices) GetServicesOk() (ret ProjectCostWithSummarizedServicesGetServicesRetType, ok bool) {
	return getProjectCostWithSummarizedServicesGetServicesAttributeTypeOk(o.Services)
}

// HasServices returns a boolean if a field has been set.
func (o *ProjectCostWithSummarizedServices) HasServices() bool {
	_, ok := o.GetServicesOk()
	return ok
}

// SetServices gets a reference to the given []SummarizedServiceCost and assigns it to the Services field.
func (o *ProjectCostWithSummarizedServices) SetServices(v ProjectCostWithSummarizedServicesGetServicesRetType) {
	setProjectCostWithSummarizedServicesGetServicesAttributeType(&o.Services, v)
}

// GetTotalCharge returns the TotalCharge field value
func (o *ProjectCostWithSummarizedServices) GetTotalCharge() (ret ProjectCostWithSummarizedServicesGetTotalChargeRetType) {
	ret, _ = o.GetTotalChargeOk()
	return ret
}

// GetTotalChargeOk returns a tuple with the TotalCharge field value
// and a boolean to check if the value has been set.
func (o *ProjectCostWithSummarizedServices) GetTotalChargeOk() (ret ProjectCostWithSummarizedServicesGetTotalChargeRetType, ok bool) {
	return getProjectCostWithSummarizedServicesGetTotalChargeAttributeTypeOk(o.TotalCharge)
}

// SetTotalCharge sets field value
func (o *ProjectCostWithSummarizedServices) SetTotalCharge(v ProjectCostWithSummarizedServicesGetTotalChargeRetType) {
	setProjectCostWithSummarizedServicesGetTotalChargeAttributeType(&o.TotalCharge, v)
}

// GetTotalDiscount returns the TotalDiscount field value
func (o *ProjectCostWithSummarizedServices) GetTotalDiscount() (ret ProjectCostWithSummarizedServicesGetTotalDiscountRetType) {
	ret, _ = o.GetTotalDiscountOk()
	return ret
}

// GetTotalDiscountOk returns a tuple with the TotalDiscount field value
// and a boolean to check if the value has been set.
func (o *ProjectCostWithSummarizedServices) GetTotalDiscountOk() (ret ProjectCostWithSummarizedServicesGetTotalDiscountRetType, ok bool) {
	return getProjectCostWithSummarizedServicesGetTotalDiscountAttributeTypeOk(o.TotalDiscount)
}

// SetTotalDiscount sets field value
func (o *ProjectCostWithSummarizedServices) SetTotalDiscount(v ProjectCostWithSummarizedServicesGetTotalDiscountRetType) {
	setProjectCostWithSummarizedServicesGetTotalDiscountAttributeType(&o.TotalDiscount, v)
}

func (o ProjectCostWithSummarizedServices) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getProjectCostWithSummarizedServicesGetCustomerAccountIdAttributeTypeOk(o.CustomerAccountId); ok {
		toSerialize["CustomerAccountId"] = val
	}
	if val, ok := getProjectCostWithSummarizedServicesGetProjectIdAttributeTypeOk(o.ProjectId); ok {
		toSerialize["ProjectId"] = val
	}
	if val, ok := getProjectCostWithSummarizedServicesGetProjectNameAttributeTypeOk(o.ProjectName); ok {
		toSerialize["ProjectName"] = val
	}
	if val, ok := getProjectCostWithSummarizedServicesGetServicesAttributeTypeOk(o.Services); ok {
		toSerialize["Services"] = val
	}
	if val, ok := getProjectCostWithSummarizedServicesGetTotalChargeAttributeTypeOk(o.TotalCharge); ok {
		toSerialize["TotalCharge"] = val
	}
	if val, ok := getProjectCostWithSummarizedServicesGetTotalDiscountAttributeTypeOk(o.TotalDiscount); ok {
		toSerialize["TotalDiscount"] = val
	}
	return toSerialize, nil
}

type NullableProjectCostWithSummarizedServices struct {
	value *ProjectCostWithSummarizedServices
	isSet bool
}

func (v NullableProjectCostWithSummarizedServices) Get() *ProjectCostWithSummarizedServices {
	return v.value
}

func (v *NullableProjectCostWithSummarizedServices) Set(val *ProjectCostWithSummarizedServices) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectCostWithSummarizedServices) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectCostWithSummarizedServices) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectCostWithSummarizedServices(val *ProjectCostWithSummarizedServices) *NullableProjectCostWithSummarizedServices {
	return &NullableProjectCostWithSummarizedServices{value: val, isSet: true}
}

func (v NullableProjectCostWithSummarizedServices) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectCostWithSummarizedServices) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
