/*
STACKIT MongoDB Service API

This is the documentation for the STACKIT MongoDB Flex Service API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mongodbflex

import (
	"encoding/json"
)

// checks if the CloneInstanceResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CloneInstanceResponse{}

/*
	types and functions for instanceId
*/

// isNotNullableString
type CloneInstanceResponseGetInstanceIdAttributeType = *string

func getCloneInstanceResponseGetInstanceIdAttributeTypeOk(arg CloneInstanceResponseGetInstanceIdAttributeType) (ret CloneInstanceResponseGetInstanceIdRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setCloneInstanceResponseGetInstanceIdAttributeType(arg *CloneInstanceResponseGetInstanceIdAttributeType, val CloneInstanceResponseGetInstanceIdRetType) {
	*arg = &val
}

type CloneInstanceResponseGetInstanceIdArgType = string
type CloneInstanceResponseGetInstanceIdRetType = string

// CloneInstanceResponse struct for CloneInstanceResponse
type CloneInstanceResponse struct {
	InstanceId CloneInstanceResponseGetInstanceIdAttributeType `json:"instanceId,omitempty"`
}

// NewCloneInstanceResponse instantiates a new CloneInstanceResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloneInstanceResponse() *CloneInstanceResponse {
	this := CloneInstanceResponse{}
	return &this
}

// NewCloneInstanceResponseWithDefaults instantiates a new CloneInstanceResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloneInstanceResponseWithDefaults() *CloneInstanceResponse {
	this := CloneInstanceResponse{}
	return &this
}

// GetInstanceId returns the InstanceId field value if set, zero value otherwise.
func (o *CloneInstanceResponse) GetInstanceId() (res CloneInstanceResponseGetInstanceIdRetType) {
	res, _ = o.GetInstanceIdOk()
	return
}

// GetInstanceIdOk returns a tuple with the InstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloneInstanceResponse) GetInstanceIdOk() (ret CloneInstanceResponseGetInstanceIdRetType, ok bool) {
	return getCloneInstanceResponseGetInstanceIdAttributeTypeOk(o.InstanceId)
}

// HasInstanceId returns a boolean if a field has been set.
func (o *CloneInstanceResponse) HasInstanceId() bool {
	_, ok := o.GetInstanceIdOk()
	return ok
}

// SetInstanceId gets a reference to the given string and assigns it to the InstanceId field.
func (o *CloneInstanceResponse) SetInstanceId(v CloneInstanceResponseGetInstanceIdRetType) {
	setCloneInstanceResponseGetInstanceIdAttributeType(&o.InstanceId, v)
}

func (o CloneInstanceResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getCloneInstanceResponseGetInstanceIdAttributeTypeOk(o.InstanceId); ok {
		toSerialize["InstanceId"] = val
	}
	return toSerialize, nil
}

type NullableCloneInstanceResponse struct {
	value *CloneInstanceResponse
	isSet bool
}

func (v NullableCloneInstanceResponse) Get() *CloneInstanceResponse {
	return v.value
}

func (v *NullableCloneInstanceResponse) Set(val *CloneInstanceResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCloneInstanceResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCloneInstanceResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloneInstanceResponse(val *CloneInstanceResponse) *NullableCloneInstanceResponse {
	return &NullableCloneInstanceResponse{value: val, isSet: true}
}

func (v NullableCloneInstanceResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloneInstanceResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
