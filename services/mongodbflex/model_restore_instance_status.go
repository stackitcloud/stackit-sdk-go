/*
STACKIT MongoDB Service API

This is the documentation for the STACKIT MongoDB Flex Service API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mongodbflex

import (
	"encoding/json"
)

// checks if the RestoreInstanceStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RestoreInstanceStatus{}

/*
	types and functions for backupID
*/

// isNotNullableString
type RestoreInstanceStatusGetBackupIDAttributeType = *string

func getRestoreInstanceStatusGetBackupIDAttributeTypeOk(arg RestoreInstanceStatusGetBackupIDAttributeType) (ret RestoreInstanceStatusGetBackupIDRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setRestoreInstanceStatusGetBackupIDAttributeType(arg *RestoreInstanceStatusGetBackupIDAttributeType, val RestoreInstanceStatusGetBackupIDRetType) {
	*arg = &val
}

type RestoreInstanceStatusGetBackupIDArgType = string
type RestoreInstanceStatusGetBackupIDRetType = string

/*
	types and functions for date
*/

// isNotNullableString
type RestoreInstanceStatusGetDateAttributeType = *string

func getRestoreInstanceStatusGetDateAttributeTypeOk(arg RestoreInstanceStatusGetDateAttributeType) (ret RestoreInstanceStatusGetDateRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setRestoreInstanceStatusGetDateAttributeType(arg *RestoreInstanceStatusGetDateAttributeType, val RestoreInstanceStatusGetDateRetType) {
	*arg = &val
}

type RestoreInstanceStatusGetDateArgType = string
type RestoreInstanceStatusGetDateRetType = string

/*
	types and functions for id
*/

// isNotNullableString
type RestoreInstanceStatusGetIdAttributeType = *string

func getRestoreInstanceStatusGetIdAttributeTypeOk(arg RestoreInstanceStatusGetIdAttributeType) (ret RestoreInstanceStatusGetIdRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setRestoreInstanceStatusGetIdAttributeType(arg *RestoreInstanceStatusGetIdAttributeType, val RestoreInstanceStatusGetIdRetType) {
	*arg = &val
}

type RestoreInstanceStatusGetIdArgType = string
type RestoreInstanceStatusGetIdRetType = string

/*
	types and functions for instanceId
*/

// isNotNullableString
type RestoreInstanceStatusGetInstanceIdAttributeType = *string

func getRestoreInstanceStatusGetInstanceIdAttributeTypeOk(arg RestoreInstanceStatusGetInstanceIdAttributeType) (ret RestoreInstanceStatusGetInstanceIdRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setRestoreInstanceStatusGetInstanceIdAttributeType(arg *RestoreInstanceStatusGetInstanceIdAttributeType, val RestoreInstanceStatusGetInstanceIdRetType) {
	*arg = &val
}

type RestoreInstanceStatusGetInstanceIdArgType = string
type RestoreInstanceStatusGetInstanceIdRetType = string

/*
	types and functions for status
*/

// isNotNullableString
type RestoreInstanceStatusGetStatusAttributeType = *string

func getRestoreInstanceStatusGetStatusAttributeTypeOk(arg RestoreInstanceStatusGetStatusAttributeType) (ret RestoreInstanceStatusGetStatusRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setRestoreInstanceStatusGetStatusAttributeType(arg *RestoreInstanceStatusGetStatusAttributeType, val RestoreInstanceStatusGetStatusRetType) {
	*arg = &val
}

type RestoreInstanceStatusGetStatusArgType = string
type RestoreInstanceStatusGetStatusRetType = string

// RestoreInstanceStatus struct for RestoreInstanceStatus
type RestoreInstanceStatus struct {
	BackupID   RestoreInstanceStatusGetBackupIDAttributeType   `json:"backupID,omitempty"`
	Date       RestoreInstanceStatusGetDateAttributeType       `json:"date,omitempty"`
	Id         RestoreInstanceStatusGetIdAttributeType         `json:"id,omitempty"`
	InstanceId RestoreInstanceStatusGetInstanceIdAttributeType `json:"instanceId,omitempty"`
	Status     RestoreInstanceStatusGetStatusAttributeType     `json:"status,omitempty"`
}

// NewRestoreInstanceStatus instantiates a new RestoreInstanceStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestoreInstanceStatus() *RestoreInstanceStatus {
	this := RestoreInstanceStatus{}
	return &this
}

// NewRestoreInstanceStatusWithDefaults instantiates a new RestoreInstanceStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestoreInstanceStatusWithDefaults() *RestoreInstanceStatus {
	this := RestoreInstanceStatus{}
	return &this
}

// GetBackupID returns the BackupID field value if set, zero value otherwise.
func (o *RestoreInstanceStatus) GetBackupID() (res RestoreInstanceStatusGetBackupIDRetType) {
	res, _ = o.GetBackupIDOk()
	return
}

// GetBackupIDOk returns a tuple with the BackupID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreInstanceStatus) GetBackupIDOk() (ret RestoreInstanceStatusGetBackupIDRetType, ok bool) {
	return getRestoreInstanceStatusGetBackupIDAttributeTypeOk(o.BackupID)
}

// HasBackupID returns a boolean if a field has been set.
func (o *RestoreInstanceStatus) HasBackupID() bool {
	_, ok := o.GetBackupIDOk()
	return ok
}

// SetBackupID gets a reference to the given string and assigns it to the BackupID field.
func (o *RestoreInstanceStatus) SetBackupID(v RestoreInstanceStatusGetBackupIDRetType) {
	setRestoreInstanceStatusGetBackupIDAttributeType(&o.BackupID, v)
}

// GetDate returns the Date field value if set, zero value otherwise.
func (o *RestoreInstanceStatus) GetDate() (res RestoreInstanceStatusGetDateRetType) {
	res, _ = o.GetDateOk()
	return
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreInstanceStatus) GetDateOk() (ret RestoreInstanceStatusGetDateRetType, ok bool) {
	return getRestoreInstanceStatusGetDateAttributeTypeOk(o.Date)
}

// HasDate returns a boolean if a field has been set.
func (o *RestoreInstanceStatus) HasDate() bool {
	_, ok := o.GetDateOk()
	return ok
}

// SetDate gets a reference to the given string and assigns it to the Date field.
func (o *RestoreInstanceStatus) SetDate(v RestoreInstanceStatusGetDateRetType) {
	setRestoreInstanceStatusGetDateAttributeType(&o.Date, v)
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *RestoreInstanceStatus) GetId() (res RestoreInstanceStatusGetIdRetType) {
	res, _ = o.GetIdOk()
	return
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreInstanceStatus) GetIdOk() (ret RestoreInstanceStatusGetIdRetType, ok bool) {
	return getRestoreInstanceStatusGetIdAttributeTypeOk(o.Id)
}

// HasId returns a boolean if a field has been set.
func (o *RestoreInstanceStatus) HasId() bool {
	_, ok := o.GetIdOk()
	return ok
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *RestoreInstanceStatus) SetId(v RestoreInstanceStatusGetIdRetType) {
	setRestoreInstanceStatusGetIdAttributeType(&o.Id, v)
}

// GetInstanceId returns the InstanceId field value if set, zero value otherwise.
func (o *RestoreInstanceStatus) GetInstanceId() (res RestoreInstanceStatusGetInstanceIdRetType) {
	res, _ = o.GetInstanceIdOk()
	return
}

// GetInstanceIdOk returns a tuple with the InstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreInstanceStatus) GetInstanceIdOk() (ret RestoreInstanceStatusGetInstanceIdRetType, ok bool) {
	return getRestoreInstanceStatusGetInstanceIdAttributeTypeOk(o.InstanceId)
}

// HasInstanceId returns a boolean if a field has been set.
func (o *RestoreInstanceStatus) HasInstanceId() bool {
	_, ok := o.GetInstanceIdOk()
	return ok
}

// SetInstanceId gets a reference to the given string and assigns it to the InstanceId field.
func (o *RestoreInstanceStatus) SetInstanceId(v RestoreInstanceStatusGetInstanceIdRetType) {
	setRestoreInstanceStatusGetInstanceIdAttributeType(&o.InstanceId, v)
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *RestoreInstanceStatus) GetStatus() (res RestoreInstanceStatusGetStatusRetType) {
	res, _ = o.GetStatusOk()
	return
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreInstanceStatus) GetStatusOk() (ret RestoreInstanceStatusGetStatusRetType, ok bool) {
	return getRestoreInstanceStatusGetStatusAttributeTypeOk(o.Status)
}

// HasStatus returns a boolean if a field has been set.
func (o *RestoreInstanceStatus) HasStatus() bool {
	_, ok := o.GetStatusOk()
	return ok
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *RestoreInstanceStatus) SetStatus(v RestoreInstanceStatusGetStatusRetType) {
	setRestoreInstanceStatusGetStatusAttributeType(&o.Status, v)
}

func (o RestoreInstanceStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getRestoreInstanceStatusGetBackupIDAttributeTypeOk(o.BackupID); ok {
		toSerialize["BackupID"] = val
	}
	if val, ok := getRestoreInstanceStatusGetDateAttributeTypeOk(o.Date); ok {
		toSerialize["Date"] = val
	}
	if val, ok := getRestoreInstanceStatusGetIdAttributeTypeOk(o.Id); ok {
		toSerialize["Id"] = val
	}
	if val, ok := getRestoreInstanceStatusGetInstanceIdAttributeTypeOk(o.InstanceId); ok {
		toSerialize["InstanceId"] = val
	}
	if val, ok := getRestoreInstanceStatusGetStatusAttributeTypeOk(o.Status); ok {
		toSerialize["Status"] = val
	}
	return toSerialize, nil
}

type NullableRestoreInstanceStatus struct {
	value *RestoreInstanceStatus
	isSet bool
}

func (v NullableRestoreInstanceStatus) Get() *RestoreInstanceStatus {
	return v.value
}

func (v *NullableRestoreInstanceStatus) Set(val *RestoreInstanceStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableRestoreInstanceStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableRestoreInstanceStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestoreInstanceStatus(val *RestoreInstanceStatus) *NullableRestoreInstanceStatus {
	return &NullableRestoreInstanceStatus{value: val, isSet: true}
}

func (v NullableRestoreInstanceStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestoreInstanceStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
