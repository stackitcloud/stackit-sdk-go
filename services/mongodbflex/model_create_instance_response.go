/*
STACKIT MongoDB Service API

This is the documentation for the STACKIT MongoDB Flex Service API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mongodbflex

import (
	"encoding/json"
)

// checks if the CreateInstanceResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateInstanceResponse{}

// CreateInstanceResponse struct for CreateInstanceResponse
type CreateInstanceResponse struct {
	Id *string `json:"id,omitempty"`
}

// NewCreateInstanceResponse instantiates a new CreateInstanceResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateInstanceResponse() *CreateInstanceResponse {
	this := CreateInstanceResponse{}
	return &this
}

// NewCreateInstanceResponseWithDefaults instantiates a new CreateInstanceResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateInstanceResponseWithDefaults() *CreateInstanceResponse {
	this := CreateInstanceResponse{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CreateInstanceResponse) GetId() *string {
	if o == nil || IsNil(o.Id) {
		var ret *string
		return ret
	}
	return o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateInstanceResponse) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CreateInstanceResponse) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CreateInstanceResponse) SetId(v *string) {
	o.Id = v
}

func (o CreateInstanceResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	return toSerialize, nil
}

type NullableCreateInstanceResponse struct {
	value *CreateInstanceResponse
	isSet bool
}

func (v NullableCreateInstanceResponse) Get() *CreateInstanceResponse {
	return v.value
}

func (v *NullableCreateInstanceResponse) Set(val *CreateInstanceResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateInstanceResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateInstanceResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateInstanceResponse(val *CreateInstanceResponse) *NullableCreateInstanceResponse {
	return &NullableCreateInstanceResponse{value: val, isSet: true}
}

func (v NullableCreateInstanceResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateInstanceResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
