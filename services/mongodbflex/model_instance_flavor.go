/*
STACKIT MongoDB Service API

This is the documentation for the STACKIT MongoDB Flex Service API

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mongodbflex

import (
	"encoding/json"
)

// checks if the InstanceFlavor type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InstanceFlavor{}

/*
	types and functions for categories
*/

// isArray
type InstanceFlavorGetCategoriesAttributeType = *[]string
type InstanceFlavorGetCategoriesArgType = []string
type InstanceFlavorGetCategoriesRetType = []string

func getInstanceFlavorGetCategoriesAttributeTypeOk(arg InstanceFlavorGetCategoriesAttributeType) (ret InstanceFlavorGetCategoriesRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setInstanceFlavorGetCategoriesAttributeType(arg *InstanceFlavorGetCategoriesAttributeType, val InstanceFlavorGetCategoriesRetType) {
	*arg = &val
}

/*
	types and functions for cpu
*/

// isInteger
type InstanceFlavorGetCpuAttributeType = *int64
type InstanceFlavorGetCpuArgType = int64
type InstanceFlavorGetCpuRetType = int64

func getInstanceFlavorGetCpuAttributeTypeOk(arg InstanceFlavorGetCpuAttributeType) (ret InstanceFlavorGetCpuRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setInstanceFlavorGetCpuAttributeType(arg *InstanceFlavorGetCpuAttributeType, val InstanceFlavorGetCpuRetType) {
	*arg = &val
}

/*
	types and functions for description
*/

// isNotNullableString
type InstanceFlavorGetDescriptionAttributeType = *string

func getInstanceFlavorGetDescriptionAttributeTypeOk(arg InstanceFlavorGetDescriptionAttributeType) (ret InstanceFlavorGetDescriptionRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setInstanceFlavorGetDescriptionAttributeType(arg *InstanceFlavorGetDescriptionAttributeType, val InstanceFlavorGetDescriptionRetType) {
	*arg = &val
}

type InstanceFlavorGetDescriptionArgType = string
type InstanceFlavorGetDescriptionRetType = string

/*
	types and functions for id
*/

// isNotNullableString
type InstanceFlavorGetIdAttributeType = *string

func getInstanceFlavorGetIdAttributeTypeOk(arg InstanceFlavorGetIdAttributeType) (ret InstanceFlavorGetIdRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setInstanceFlavorGetIdAttributeType(arg *InstanceFlavorGetIdAttributeType, val InstanceFlavorGetIdRetType) {
	*arg = &val
}

type InstanceFlavorGetIdArgType = string
type InstanceFlavorGetIdRetType = string

/*
	types and functions for memory
*/

// isInteger
type InstanceFlavorGetMemoryAttributeType = *int64
type InstanceFlavorGetMemoryArgType = int64
type InstanceFlavorGetMemoryRetType = int64

func getInstanceFlavorGetMemoryAttributeTypeOk(arg InstanceFlavorGetMemoryAttributeType) (ret InstanceFlavorGetMemoryRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setInstanceFlavorGetMemoryAttributeType(arg *InstanceFlavorGetMemoryAttributeType, val InstanceFlavorGetMemoryRetType) {
	*arg = &val
}

// InstanceFlavor struct for InstanceFlavor
type InstanceFlavor struct {
	Categories InstanceFlavorGetCategoriesAttributeType `json:"categories,omitempty"`
	// Can be cast to int32 without loss of precision.
	Cpu         InstanceFlavorGetCpuAttributeType         `json:"cpu,omitempty"`
	Description InstanceFlavorGetDescriptionAttributeType `json:"description,omitempty"`
	Id          InstanceFlavorGetIdAttributeType          `json:"id,omitempty"`
	// Can be cast to int32 without loss of precision.
	Memory InstanceFlavorGetMemoryAttributeType `json:"memory,omitempty"`
}

// NewInstanceFlavor instantiates a new InstanceFlavor object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInstanceFlavor() *InstanceFlavor {
	this := InstanceFlavor{}
	return &this
}

// NewInstanceFlavorWithDefaults instantiates a new InstanceFlavor object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInstanceFlavorWithDefaults() *InstanceFlavor {
	this := InstanceFlavor{}
	return &this
}

// GetCategories returns the Categories field value if set, zero value otherwise.
func (o *InstanceFlavor) GetCategories() (res InstanceFlavorGetCategoriesRetType) {
	res, _ = o.GetCategoriesOk()
	return
}

// GetCategoriesOk returns a tuple with the Categories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceFlavor) GetCategoriesOk() (ret InstanceFlavorGetCategoriesRetType, ok bool) {
	return getInstanceFlavorGetCategoriesAttributeTypeOk(o.Categories)
}

// HasCategories returns a boolean if a field has been set.
func (o *InstanceFlavor) HasCategories() bool {
	_, ok := o.GetCategoriesOk()
	return ok
}

// SetCategories gets a reference to the given []string and assigns it to the Categories field.
func (o *InstanceFlavor) SetCategories(v InstanceFlavorGetCategoriesRetType) {
	setInstanceFlavorGetCategoriesAttributeType(&o.Categories, v)
}

// GetCpu returns the Cpu field value if set, zero value otherwise.
func (o *InstanceFlavor) GetCpu() (res InstanceFlavorGetCpuRetType) {
	res, _ = o.GetCpuOk()
	return
}

// GetCpuOk returns a tuple with the Cpu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceFlavor) GetCpuOk() (ret InstanceFlavorGetCpuRetType, ok bool) {
	return getInstanceFlavorGetCpuAttributeTypeOk(o.Cpu)
}

// HasCpu returns a boolean if a field has been set.
func (o *InstanceFlavor) HasCpu() bool {
	_, ok := o.GetCpuOk()
	return ok
}

// SetCpu gets a reference to the given int64 and assigns it to the Cpu field.
func (o *InstanceFlavor) SetCpu(v InstanceFlavorGetCpuRetType) {
	setInstanceFlavorGetCpuAttributeType(&o.Cpu, v)
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *InstanceFlavor) GetDescription() (res InstanceFlavorGetDescriptionRetType) {
	res, _ = o.GetDescriptionOk()
	return
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceFlavor) GetDescriptionOk() (ret InstanceFlavorGetDescriptionRetType, ok bool) {
	return getInstanceFlavorGetDescriptionAttributeTypeOk(o.Description)
}

// HasDescription returns a boolean if a field has been set.
func (o *InstanceFlavor) HasDescription() bool {
	_, ok := o.GetDescriptionOk()
	return ok
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *InstanceFlavor) SetDescription(v InstanceFlavorGetDescriptionRetType) {
	setInstanceFlavorGetDescriptionAttributeType(&o.Description, v)
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InstanceFlavor) GetId() (res InstanceFlavorGetIdRetType) {
	res, _ = o.GetIdOk()
	return
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceFlavor) GetIdOk() (ret InstanceFlavorGetIdRetType, ok bool) {
	return getInstanceFlavorGetIdAttributeTypeOk(o.Id)
}

// HasId returns a boolean if a field has been set.
func (o *InstanceFlavor) HasId() bool {
	_, ok := o.GetIdOk()
	return ok
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *InstanceFlavor) SetId(v InstanceFlavorGetIdRetType) {
	setInstanceFlavorGetIdAttributeType(&o.Id, v)
}

// GetMemory returns the Memory field value if set, zero value otherwise.
func (o *InstanceFlavor) GetMemory() (res InstanceFlavorGetMemoryRetType) {
	res, _ = o.GetMemoryOk()
	return
}

// GetMemoryOk returns a tuple with the Memory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceFlavor) GetMemoryOk() (ret InstanceFlavorGetMemoryRetType, ok bool) {
	return getInstanceFlavorGetMemoryAttributeTypeOk(o.Memory)
}

// HasMemory returns a boolean if a field has been set.
func (o *InstanceFlavor) HasMemory() bool {
	_, ok := o.GetMemoryOk()
	return ok
}

// SetMemory gets a reference to the given int64 and assigns it to the Memory field.
func (o *InstanceFlavor) SetMemory(v InstanceFlavorGetMemoryRetType) {
	setInstanceFlavorGetMemoryAttributeType(&o.Memory, v)
}

func (o InstanceFlavor) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getInstanceFlavorGetCategoriesAttributeTypeOk(o.Categories); ok {
		toSerialize["Categories"] = val
	}
	if val, ok := getInstanceFlavorGetCpuAttributeTypeOk(o.Cpu); ok {
		toSerialize["Cpu"] = val
	}
	if val, ok := getInstanceFlavorGetDescriptionAttributeTypeOk(o.Description); ok {
		toSerialize["Description"] = val
	}
	if val, ok := getInstanceFlavorGetIdAttributeTypeOk(o.Id); ok {
		toSerialize["Id"] = val
	}
	if val, ok := getInstanceFlavorGetMemoryAttributeTypeOk(o.Memory); ok {
		toSerialize["Memory"] = val
	}
	return toSerialize, nil
}

type NullableInstanceFlavor struct {
	value *InstanceFlavor
	isSet bool
}

func (v NullableInstanceFlavor) Get() *InstanceFlavor {
	return v.value
}

func (v *NullableInstanceFlavor) Set(val *InstanceFlavor) {
	v.value = val
	v.isSet = true
}

func (v NullableInstanceFlavor) IsSet() bool {
	return v.isSet
}

func (v *NullableInstanceFlavor) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInstanceFlavor(val *InstanceFlavor) *NullableInstanceFlavor {
	return &NullableInstanceFlavor{value: val, isSet: true}
}

func (v NullableInstanceFlavor) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInstanceFlavor) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
