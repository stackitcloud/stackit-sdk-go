/*
STACKIT MongoDB Service API

This is the documentation for the STACKIT MongoDB Flex Service API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mongodbflex

import (
	"encoding/json"
)

// checks if the MongodbatlasOperationStats type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MongodbatlasOperationStats{}

/*
	types and functions for ms
*/

// isNumber
type MongodbatlasOperationStatsGetMsAttributeType = *float64
type MongodbatlasOperationStatsGetMsArgType = float64
type MongodbatlasOperationStatsGetMsRetType = float64

func getMongodbatlasOperationStatsGetMsAttributeTypeOk(arg MongodbatlasOperationStatsGetMsAttributeType) (ret MongodbatlasOperationStatsGetMsRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setMongodbatlasOperationStatsGetMsAttributeType(arg *MongodbatlasOperationStatsGetMsAttributeType, val MongodbatlasOperationStatsGetMsRetType) {
	*arg = &val
}

/*
	types and functions for nReturned
*/

// isInteger
type MongodbatlasOperationStatsGetNReturnedAttributeType = *int64
type MongodbatlasOperationStatsGetNReturnedArgType = int64
type MongodbatlasOperationStatsGetNReturnedRetType = int64

func getMongodbatlasOperationStatsGetNReturnedAttributeTypeOk(arg MongodbatlasOperationStatsGetNReturnedAttributeType) (ret MongodbatlasOperationStatsGetNReturnedRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setMongodbatlasOperationStatsGetNReturnedAttributeType(arg *MongodbatlasOperationStatsGetNReturnedAttributeType, val MongodbatlasOperationStatsGetNReturnedRetType) {
	*arg = &val
}

/*
	types and functions for nScanned
*/

// isInteger
type MongodbatlasOperationStatsGetNScannedAttributeType = *int64
type MongodbatlasOperationStatsGetNScannedArgType = int64
type MongodbatlasOperationStatsGetNScannedRetType = int64

func getMongodbatlasOperationStatsGetNScannedAttributeTypeOk(arg MongodbatlasOperationStatsGetNScannedAttributeType) (ret MongodbatlasOperationStatsGetNScannedRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setMongodbatlasOperationStatsGetNScannedAttributeType(arg *MongodbatlasOperationStatsGetNScannedAttributeType, val MongodbatlasOperationStatsGetNScannedRetType) {
	*arg = &val
}

/*
	types and functions for ts
*/

// isInteger
type MongodbatlasOperationStatsGetTsAttributeType = *int64
type MongodbatlasOperationStatsGetTsArgType = int64
type MongodbatlasOperationStatsGetTsRetType = int64

func getMongodbatlasOperationStatsGetTsAttributeTypeOk(arg MongodbatlasOperationStatsGetTsAttributeType) (ret MongodbatlasOperationStatsGetTsRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setMongodbatlasOperationStatsGetTsAttributeType(arg *MongodbatlasOperationStatsGetTsAttributeType, val MongodbatlasOperationStatsGetTsRetType) {
	*arg = &val
}

// MongodbatlasOperationStats Query statistics.
type MongodbatlasOperationStats struct {
	// Duration in milliseconds of the query.
	Ms MongodbatlasOperationStatsGetMsAttributeType `json:"ms,omitempty"`
	// Number of results returned by the query.
	NReturned MongodbatlasOperationStatsGetNReturnedAttributeType `json:"nReturned,omitempty"`
	// Number of documents read by the query.
	NScanned MongodbatlasOperationStatsGetNScannedAttributeType `json:"nScanned,omitempty"`
	// Query timestamp, in seconds since epoch.
	Ts MongodbatlasOperationStatsGetTsAttributeType `json:"ts,omitempty"`
}

// NewMongodbatlasOperationStats instantiates a new MongodbatlasOperationStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMongodbatlasOperationStats() *MongodbatlasOperationStats {
	this := MongodbatlasOperationStats{}
	return &this
}

// NewMongodbatlasOperationStatsWithDefaults instantiates a new MongodbatlasOperationStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMongodbatlasOperationStatsWithDefaults() *MongodbatlasOperationStats {
	this := MongodbatlasOperationStats{}
	return &this
}

// GetMs returns the Ms field value if set, zero value otherwise.
func (o *MongodbatlasOperationStats) GetMs() (res MongodbatlasOperationStatsGetMsRetType) {
	res, _ = o.GetMsOk()
	return
}

// GetMsOk returns a tuple with the Ms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MongodbatlasOperationStats) GetMsOk() (ret MongodbatlasOperationStatsGetMsRetType, ok bool) {
	return getMongodbatlasOperationStatsGetMsAttributeTypeOk(o.Ms)
}

// HasMs returns a boolean if a field has been set.
func (o *MongodbatlasOperationStats) HasMs() bool {
	_, ok := o.GetMsOk()
	return ok
}

// SetMs gets a reference to the given float64 and assigns it to the Ms field.
func (o *MongodbatlasOperationStats) SetMs(v MongodbatlasOperationStatsGetMsRetType) {
	setMongodbatlasOperationStatsGetMsAttributeType(&o.Ms, v)
}

// GetNReturned returns the NReturned field value if set, zero value otherwise.
func (o *MongodbatlasOperationStats) GetNReturned() (res MongodbatlasOperationStatsGetNReturnedRetType) {
	res, _ = o.GetNReturnedOk()
	return
}

// GetNReturnedOk returns a tuple with the NReturned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MongodbatlasOperationStats) GetNReturnedOk() (ret MongodbatlasOperationStatsGetNReturnedRetType, ok bool) {
	return getMongodbatlasOperationStatsGetNReturnedAttributeTypeOk(o.NReturned)
}

// HasNReturned returns a boolean if a field has been set.
func (o *MongodbatlasOperationStats) HasNReturned() bool {
	_, ok := o.GetNReturnedOk()
	return ok
}

// SetNReturned gets a reference to the given int64 and assigns it to the NReturned field.
func (o *MongodbatlasOperationStats) SetNReturned(v MongodbatlasOperationStatsGetNReturnedRetType) {
	setMongodbatlasOperationStatsGetNReturnedAttributeType(&o.NReturned, v)
}

// GetNScanned returns the NScanned field value if set, zero value otherwise.
func (o *MongodbatlasOperationStats) GetNScanned() (res MongodbatlasOperationStatsGetNScannedRetType) {
	res, _ = o.GetNScannedOk()
	return
}

// GetNScannedOk returns a tuple with the NScanned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MongodbatlasOperationStats) GetNScannedOk() (ret MongodbatlasOperationStatsGetNScannedRetType, ok bool) {
	return getMongodbatlasOperationStatsGetNScannedAttributeTypeOk(o.NScanned)
}

// HasNScanned returns a boolean if a field has been set.
func (o *MongodbatlasOperationStats) HasNScanned() bool {
	_, ok := o.GetNScannedOk()
	return ok
}

// SetNScanned gets a reference to the given int64 and assigns it to the NScanned field.
func (o *MongodbatlasOperationStats) SetNScanned(v MongodbatlasOperationStatsGetNScannedRetType) {
	setMongodbatlasOperationStatsGetNScannedAttributeType(&o.NScanned, v)
}

// GetTs returns the Ts field value if set, zero value otherwise.
func (o *MongodbatlasOperationStats) GetTs() (res MongodbatlasOperationStatsGetTsRetType) {
	res, _ = o.GetTsOk()
	return
}

// GetTsOk returns a tuple with the Ts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MongodbatlasOperationStats) GetTsOk() (ret MongodbatlasOperationStatsGetTsRetType, ok bool) {
	return getMongodbatlasOperationStatsGetTsAttributeTypeOk(o.Ts)
}

// HasTs returns a boolean if a field has been set.
func (o *MongodbatlasOperationStats) HasTs() bool {
	_, ok := o.GetTsOk()
	return ok
}

// SetTs gets a reference to the given int64 and assigns it to the Ts field.
func (o *MongodbatlasOperationStats) SetTs(v MongodbatlasOperationStatsGetTsRetType) {
	setMongodbatlasOperationStatsGetTsAttributeType(&o.Ts, v)
}

func (o MongodbatlasOperationStats) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getMongodbatlasOperationStatsGetMsAttributeTypeOk(o.Ms); ok {
		toSerialize["Ms"] = val
	}
	if val, ok := getMongodbatlasOperationStatsGetNReturnedAttributeTypeOk(o.NReturned); ok {
		toSerialize["NReturned"] = val
	}
	if val, ok := getMongodbatlasOperationStatsGetNScannedAttributeTypeOk(o.NScanned); ok {
		toSerialize["NScanned"] = val
	}
	if val, ok := getMongodbatlasOperationStatsGetTsAttributeTypeOk(o.Ts); ok {
		toSerialize["Ts"] = val
	}
	return toSerialize, nil
}

type NullableMongodbatlasOperationStats struct {
	value *MongodbatlasOperationStats
	isSet bool
}

func (v NullableMongodbatlasOperationStats) Get() *MongodbatlasOperationStats {
	return v.value
}

func (v *NullableMongodbatlasOperationStats) Set(val *MongodbatlasOperationStats) {
	v.value = val
	v.isSet = true
}

func (v NullableMongodbatlasOperationStats) IsSet() bool {
	return v.isSet
}

func (v *NullableMongodbatlasOperationStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMongodbatlasOperationStats(val *MongodbatlasOperationStats) *NullableMongodbatlasOperationStats {
	return &NullableMongodbatlasOperationStats{value: val, isSet: true}
}

func (v NullableMongodbatlasOperationStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMongodbatlasOperationStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
