/*
STACKIT MongoDB Service API

This is the documentation for the STACKIT MongoDB Flex Service API

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mongodbflex

import (
	"encoding/json"
)

// checks if the ListVersionsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListVersionsResponse{}

/*
	types and functions for versions
*/

// isArray
type ListVersionsResponseGetVersionsAttributeType = *[]string
type ListVersionsResponseGetVersionsArgType = []string
type ListVersionsResponseGetVersionsRetType = []string

func getListVersionsResponseGetVersionsAttributeTypeOk(arg ListVersionsResponseGetVersionsAttributeType) (ret ListVersionsResponseGetVersionsRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setListVersionsResponseGetVersionsAttributeType(arg *ListVersionsResponseGetVersionsAttributeType, val ListVersionsResponseGetVersionsRetType) {
	*arg = &val
}

// ListVersionsResponse struct for ListVersionsResponse
type ListVersionsResponse struct {
	Versions ListVersionsResponseGetVersionsAttributeType `json:"versions,omitempty"`
}

// NewListVersionsResponse instantiates a new ListVersionsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListVersionsResponse() *ListVersionsResponse {
	this := ListVersionsResponse{}
	return &this
}

// NewListVersionsResponseWithDefaults instantiates a new ListVersionsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListVersionsResponseWithDefaults() *ListVersionsResponse {
	this := ListVersionsResponse{}
	return &this
}

// GetVersions returns the Versions field value if set, zero value otherwise.
func (o *ListVersionsResponse) GetVersions() (res ListVersionsResponseGetVersionsRetType) {
	res, _ = o.GetVersionsOk()
	return
}

// GetVersionsOk returns a tuple with the Versions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListVersionsResponse) GetVersionsOk() (ret ListVersionsResponseGetVersionsRetType, ok bool) {
	return getListVersionsResponseGetVersionsAttributeTypeOk(o.Versions)
}

// HasVersions returns a boolean if a field has been set.
func (o *ListVersionsResponse) HasVersions() bool {
	_, ok := o.GetVersionsOk()
	return ok
}

// SetVersions gets a reference to the given []string and assigns it to the Versions field.
func (o *ListVersionsResponse) SetVersions(v ListVersionsResponseGetVersionsRetType) {
	setListVersionsResponseGetVersionsAttributeType(&o.Versions, v)
}

func (o ListVersionsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getListVersionsResponseGetVersionsAttributeTypeOk(o.Versions); ok {
		toSerialize["Versions"] = val
	}
	return toSerialize, nil
}

type NullableListVersionsResponse struct {
	value *ListVersionsResponse
	isSet bool
}

func (v NullableListVersionsResponse) Get() *ListVersionsResponse {
	return v.value
}

func (v *NullableListVersionsResponse) Set(val *ListVersionsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListVersionsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListVersionsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListVersionsResponse(val *ListVersionsResponse) *NullableListVersionsResponse {
	return &NullableListVersionsResponse{value: val, isSet: true}
}

func (v NullableListVersionsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListVersionsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
