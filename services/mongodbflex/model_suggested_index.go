/*
STACKIT MongoDB Service API

This is the documentation for the STACKIT MongoDB Flex Service API

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mongodbflex

import (
	"encoding/json"
)

// checks if the SuggestedIndex type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SuggestedIndex{}

/*
	types and functions for id
*/

// isNotNullableString
type SuggestedIndexGetIdAttributeType = *string

func getSuggestedIndexGetIdAttributeTypeOk(arg SuggestedIndexGetIdAttributeType) (ret SuggestedIndexGetIdRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setSuggestedIndexGetIdAttributeType(arg *SuggestedIndexGetIdAttributeType, val SuggestedIndexGetIdRetType) {
	*arg = &val
}

type SuggestedIndexGetIdArgType = string
type SuggestedIndexGetIdRetType = string

/*
	types and functions for impact
*/

// isArray
type SuggestedIndexGetImpactAttributeType = *[]string
type SuggestedIndexGetImpactArgType = []string
type SuggestedIndexGetImpactRetType = []string

func getSuggestedIndexGetImpactAttributeTypeOk(arg SuggestedIndexGetImpactAttributeType) (ret SuggestedIndexGetImpactRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setSuggestedIndexGetImpactAttributeType(arg *SuggestedIndexGetImpactAttributeType, val SuggestedIndexGetImpactRetType) {
	*arg = &val
}

/*
	types and functions for index
*/

// isArray
type SuggestedIndexGetIndexAttributeType = *[]map[string]int32
type SuggestedIndexGetIndexArgType = []map[string]int32
type SuggestedIndexGetIndexRetType = []map[string]int32

func getSuggestedIndexGetIndexAttributeTypeOk(arg SuggestedIndexGetIndexAttributeType) (ret SuggestedIndexGetIndexRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setSuggestedIndexGetIndexAttributeType(arg *SuggestedIndexGetIndexAttributeType, val SuggestedIndexGetIndexRetType) {
	*arg = &val
}

/*
	types and functions for namespace
*/

// isNotNullableString
type SuggestedIndexGetNamespaceAttributeType = *string

func getSuggestedIndexGetNamespaceAttributeTypeOk(arg SuggestedIndexGetNamespaceAttributeType) (ret SuggestedIndexGetNamespaceRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setSuggestedIndexGetNamespaceAttributeType(arg *SuggestedIndexGetNamespaceAttributeType, val SuggestedIndexGetNamespaceRetType) {
	*arg = &val
}

type SuggestedIndexGetNamespaceArgType = string
type SuggestedIndexGetNamespaceRetType = string

/*
	types and functions for weight
*/

// isNumber
type SuggestedIndexGetWeightAttributeType = *float64
type SuggestedIndexGetWeightArgType = float64
type SuggestedIndexGetWeightRetType = float64

func getSuggestedIndexGetWeightAttributeTypeOk(arg SuggestedIndexGetWeightAttributeType) (ret SuggestedIndexGetWeightRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setSuggestedIndexGetWeightAttributeType(arg *SuggestedIndexGetWeightAttributeType, val SuggestedIndexGetWeightRetType) {
	*arg = &val
}

// SuggestedIndex struct for SuggestedIndex
type SuggestedIndex struct {
	// Unique id for this suggested index.
	Id SuggestedIndexGetIdAttributeType `json:"id,omitempty"`
	// List of unique identifiers which correspond the query shapes in this response which pertain to this suggested index.
	Impact SuggestedIndexGetImpactAttributeType `json:"impact,omitempty"`
	// Array of documents that specifies a key in the index and its sort order, ascending or descending.
	Index SuggestedIndexGetIndexAttributeType `json:"index,omitempty"`
	// Namespace of the suggested index.
	Namespace SuggestedIndexGetNamespaceAttributeType `json:"namespace,omitempty"`
	// Estimated percentage performance improvement that the suggested index would provide.
	Weight SuggestedIndexGetWeightAttributeType `json:"weight,omitempty"`
}

// NewSuggestedIndex instantiates a new SuggestedIndex object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSuggestedIndex() *SuggestedIndex {
	this := SuggestedIndex{}
	return &this
}

// NewSuggestedIndexWithDefaults instantiates a new SuggestedIndex object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSuggestedIndexWithDefaults() *SuggestedIndex {
	this := SuggestedIndex{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SuggestedIndex) GetId() (res SuggestedIndexGetIdRetType) {
	res, _ = o.GetIdOk()
	return
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuggestedIndex) GetIdOk() (ret SuggestedIndexGetIdRetType, ok bool) {
	return getSuggestedIndexGetIdAttributeTypeOk(o.Id)
}

// HasId returns a boolean if a field has been set.
func (o *SuggestedIndex) HasId() bool {
	_, ok := o.GetIdOk()
	return ok
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *SuggestedIndex) SetId(v SuggestedIndexGetIdRetType) {
	setSuggestedIndexGetIdAttributeType(&o.Id, v)
}

// GetImpact returns the Impact field value if set, zero value otherwise.
func (o *SuggestedIndex) GetImpact() (res SuggestedIndexGetImpactRetType) {
	res, _ = o.GetImpactOk()
	return
}

// GetImpactOk returns a tuple with the Impact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuggestedIndex) GetImpactOk() (ret SuggestedIndexGetImpactRetType, ok bool) {
	return getSuggestedIndexGetImpactAttributeTypeOk(o.Impact)
}

// HasImpact returns a boolean if a field has been set.
func (o *SuggestedIndex) HasImpact() bool {
	_, ok := o.GetImpactOk()
	return ok
}

// SetImpact gets a reference to the given []string and assigns it to the Impact field.
func (o *SuggestedIndex) SetImpact(v SuggestedIndexGetImpactRetType) {
	setSuggestedIndexGetImpactAttributeType(&o.Impact, v)
}

// GetIndex returns the Index field value if set, zero value otherwise.
func (o *SuggestedIndex) GetIndex() (res SuggestedIndexGetIndexRetType) {
	res, _ = o.GetIndexOk()
	return
}

// GetIndexOk returns a tuple with the Index field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuggestedIndex) GetIndexOk() (ret SuggestedIndexGetIndexRetType, ok bool) {
	return getSuggestedIndexGetIndexAttributeTypeOk(o.Index)
}

// HasIndex returns a boolean if a field has been set.
func (o *SuggestedIndex) HasIndex() bool {
	_, ok := o.GetIndexOk()
	return ok
}

// SetIndex gets a reference to the given []map[string]int32 and assigns it to the Index field.
func (o *SuggestedIndex) SetIndex(v SuggestedIndexGetIndexRetType) {
	setSuggestedIndexGetIndexAttributeType(&o.Index, v)
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *SuggestedIndex) GetNamespace() (res SuggestedIndexGetNamespaceRetType) {
	res, _ = o.GetNamespaceOk()
	return
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuggestedIndex) GetNamespaceOk() (ret SuggestedIndexGetNamespaceRetType, ok bool) {
	return getSuggestedIndexGetNamespaceAttributeTypeOk(o.Namespace)
}

// HasNamespace returns a boolean if a field has been set.
func (o *SuggestedIndex) HasNamespace() bool {
	_, ok := o.GetNamespaceOk()
	return ok
}

// SetNamespace gets a reference to the given string and assigns it to the Namespace field.
func (o *SuggestedIndex) SetNamespace(v SuggestedIndexGetNamespaceRetType) {
	setSuggestedIndexGetNamespaceAttributeType(&o.Namespace, v)
}

// GetWeight returns the Weight field value if set, zero value otherwise.
func (o *SuggestedIndex) GetWeight() (res SuggestedIndexGetWeightRetType) {
	res, _ = o.GetWeightOk()
	return
}

// GetWeightOk returns a tuple with the Weight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuggestedIndex) GetWeightOk() (ret SuggestedIndexGetWeightRetType, ok bool) {
	return getSuggestedIndexGetWeightAttributeTypeOk(o.Weight)
}

// HasWeight returns a boolean if a field has been set.
func (o *SuggestedIndex) HasWeight() bool {
	_, ok := o.GetWeightOk()
	return ok
}

// SetWeight gets a reference to the given float64 and assigns it to the Weight field.
func (o *SuggestedIndex) SetWeight(v SuggestedIndexGetWeightRetType) {
	setSuggestedIndexGetWeightAttributeType(&o.Weight, v)
}

func (o SuggestedIndex) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getSuggestedIndexGetIdAttributeTypeOk(o.Id); ok {
		toSerialize["Id"] = val
	}
	if val, ok := getSuggestedIndexGetImpactAttributeTypeOk(o.Impact); ok {
		toSerialize["Impact"] = val
	}
	if val, ok := getSuggestedIndexGetIndexAttributeTypeOk(o.Index); ok {
		toSerialize["Index"] = val
	}
	if val, ok := getSuggestedIndexGetNamespaceAttributeTypeOk(o.Namespace); ok {
		toSerialize["Namespace"] = val
	}
	if val, ok := getSuggestedIndexGetWeightAttributeTypeOk(o.Weight); ok {
		toSerialize["Weight"] = val
	}
	return toSerialize, nil
}

type NullableSuggestedIndex struct {
	value *SuggestedIndex
	isSet bool
}

func (v NullableSuggestedIndex) Get() *SuggestedIndex {
	return v.value
}

func (v *NullableSuggestedIndex) Set(val *SuggestedIndex) {
	v.value = val
	v.isSet = true
}

func (v NullableSuggestedIndex) IsSet() bool {
	return v.isSet
}

func (v *NullableSuggestedIndex) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSuggestedIndex(val *SuggestedIndex) *NullableSuggestedIndex {
	return &NullableSuggestedIndex{value: val, isSet: true}
}

func (v NullableSuggestedIndex) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSuggestedIndex) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
