/*
STACKIT MongoDB Service API

This is the documentation for the STACKIT MongoDB Flex Service API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mongodbflex

import (
	"encoding/json"
)

// checks if the InstanceListInstance type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InstanceListInstance{}

/*
	types and functions for id
*/

// isNotNullableString
type InstanceListInstanceGetIdAttributeType = *string

func getInstanceListInstanceGetIdAttributeTypeOk(arg InstanceListInstanceGetIdAttributeType) (ret InstanceListInstanceGetIdRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setInstanceListInstanceGetIdAttributeType(arg *InstanceListInstanceGetIdAttributeType, val InstanceListInstanceGetIdRetType) {
	*arg = &val
}

type InstanceListInstanceGetIdArgType = string
type InstanceListInstanceGetIdRetType = string

/*
	types and functions for name
*/

// isNotNullableString
type InstanceListInstanceGetNameAttributeType = *string

func getInstanceListInstanceGetNameAttributeTypeOk(arg InstanceListInstanceGetNameAttributeType) (ret InstanceListInstanceGetNameRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setInstanceListInstanceGetNameAttributeType(arg *InstanceListInstanceGetNameAttributeType, val InstanceListInstanceGetNameRetType) {
	*arg = &val
}

type InstanceListInstanceGetNameArgType = string
type InstanceListInstanceGetNameRetType = string

/*
	types and functions for status
*/

// isNotNullableString
type InstanceListInstanceGetStatusAttributeType = *string

func getInstanceListInstanceGetStatusAttributeTypeOk(arg InstanceListInstanceGetStatusAttributeType) (ret InstanceListInstanceGetStatusRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setInstanceListInstanceGetStatusAttributeType(arg *InstanceListInstanceGetStatusAttributeType, val InstanceListInstanceGetStatusRetType) {
	*arg = &val
}

type InstanceListInstanceGetStatusArgType = string
type InstanceListInstanceGetStatusRetType = string

// InstanceListInstance struct for InstanceListInstance
type InstanceListInstance struct {
	Id     InstanceListInstanceGetIdAttributeType     `json:"id,omitempty"`
	Name   InstanceListInstanceGetNameAttributeType   `json:"name,omitempty"`
	Status InstanceListInstanceGetStatusAttributeType `json:"status,omitempty"`
}

// NewInstanceListInstance instantiates a new InstanceListInstance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInstanceListInstance() *InstanceListInstance {
	this := InstanceListInstance{}
	return &this
}

// NewInstanceListInstanceWithDefaults instantiates a new InstanceListInstance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInstanceListInstanceWithDefaults() *InstanceListInstance {
	this := InstanceListInstance{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InstanceListInstance) GetId() (res InstanceListInstanceGetIdRetType) {
	res, _ = o.GetIdOk()
	return
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceListInstance) GetIdOk() (ret InstanceListInstanceGetIdRetType, ok bool) {
	return getInstanceListInstanceGetIdAttributeTypeOk(o.Id)
}

// HasId returns a boolean if a field has been set.
func (o *InstanceListInstance) HasId() bool {
	_, ok := o.GetIdOk()
	return ok
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *InstanceListInstance) SetId(v InstanceListInstanceGetIdRetType) {
	setInstanceListInstanceGetIdAttributeType(&o.Id, v)
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *InstanceListInstance) GetName() (res InstanceListInstanceGetNameRetType) {
	res, _ = o.GetNameOk()
	return
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceListInstance) GetNameOk() (ret InstanceListInstanceGetNameRetType, ok bool) {
	return getInstanceListInstanceGetNameAttributeTypeOk(o.Name)
}

// HasName returns a boolean if a field has been set.
func (o *InstanceListInstance) HasName() bool {
	_, ok := o.GetNameOk()
	return ok
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *InstanceListInstance) SetName(v InstanceListInstanceGetNameRetType) {
	setInstanceListInstanceGetNameAttributeType(&o.Name, v)
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *InstanceListInstance) GetStatus() (res InstanceListInstanceGetStatusRetType) {
	res, _ = o.GetStatusOk()
	return
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceListInstance) GetStatusOk() (ret InstanceListInstanceGetStatusRetType, ok bool) {
	return getInstanceListInstanceGetStatusAttributeTypeOk(o.Status)
}

// HasStatus returns a boolean if a field has been set.
func (o *InstanceListInstance) HasStatus() bool {
	_, ok := o.GetStatusOk()
	return ok
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *InstanceListInstance) SetStatus(v InstanceListInstanceGetStatusRetType) {
	setInstanceListInstanceGetStatusAttributeType(&o.Status, v)
}

func (o InstanceListInstance) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getInstanceListInstanceGetIdAttributeTypeOk(o.Id); ok {
		toSerialize["Id"] = val
	}
	if val, ok := getInstanceListInstanceGetNameAttributeTypeOk(o.Name); ok {
		toSerialize["Name"] = val
	}
	if val, ok := getInstanceListInstanceGetStatusAttributeTypeOk(o.Status); ok {
		toSerialize["Status"] = val
	}
	return toSerialize, nil
}

type NullableInstanceListInstance struct {
	value *InstanceListInstance
	isSet bool
}

func (v NullableInstanceListInstance) Get() *InstanceListInstance {
	return v.value
}

func (v *NullableInstanceListInstance) Set(val *InstanceListInstance) {
	v.value = val
	v.isSet = true
}

func (v NullableInstanceListInstance) IsSet() bool {
	return v.isSet
}

func (v *NullableInstanceListInstance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInstanceListInstance(val *InstanceListInstance) *NullableInstanceListInstance {
	return &NullableInstanceListInstance{value: val, isSet: true}
}

func (v NullableInstanceListInstance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInstanceListInstance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
