/*
SKE-API

The SKE API provides endpoints to create, update, delete clusters within STACKIT portal projects and to trigger further cluster management tasks.

API version: 1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ske

import (
	"encoding/json"
)

// checks if the Maintenance type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Maintenance{}

/*
	types and functions for autoUpdate
*/

// isModel
type MaintenanceGetAutoUpdateAttributeType = *MaintenanceAutoUpdate
type MaintenanceGetAutoUpdateArgType = MaintenanceAutoUpdate
type MaintenanceGetAutoUpdateRetType = MaintenanceAutoUpdate

func getMaintenanceGetAutoUpdateAttributeTypeOk(arg MaintenanceGetAutoUpdateAttributeType) (ret MaintenanceGetAutoUpdateRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setMaintenanceGetAutoUpdateAttributeType(arg *MaintenanceGetAutoUpdateAttributeType, val MaintenanceGetAutoUpdateRetType) {
	*arg = &val
}

/*
	types and functions for timeWindow
*/

// isModel
type MaintenanceGetTimeWindowAttributeType = *TimeWindow
type MaintenanceGetTimeWindowArgType = TimeWindow
type MaintenanceGetTimeWindowRetType = TimeWindow

func getMaintenanceGetTimeWindowAttributeTypeOk(arg MaintenanceGetTimeWindowAttributeType) (ret MaintenanceGetTimeWindowRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setMaintenanceGetTimeWindowAttributeType(arg *MaintenanceGetTimeWindowAttributeType, val MaintenanceGetTimeWindowRetType) {
	*arg = &val
}

// Maintenance struct for Maintenance
type Maintenance struct {
	// REQUIRED
	AutoUpdate MaintenanceGetAutoUpdateAttributeType `json:"autoUpdate" required:"true"`
	// REQUIRED
	TimeWindow MaintenanceGetTimeWindowAttributeType `json:"timeWindow" required:"true"`
}

type _Maintenance Maintenance

// NewMaintenance instantiates a new Maintenance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMaintenance(autoUpdate MaintenanceGetAutoUpdateArgType, timeWindow MaintenanceGetTimeWindowArgType) *Maintenance {
	this := Maintenance{}
	setMaintenanceGetAutoUpdateAttributeType(&this.AutoUpdate, autoUpdate)
	setMaintenanceGetTimeWindowAttributeType(&this.TimeWindow, timeWindow)
	return &this
}

// NewMaintenanceWithDefaults instantiates a new Maintenance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMaintenanceWithDefaults() *Maintenance {
	this := Maintenance{}
	return &this
}

// GetAutoUpdate returns the AutoUpdate field value
func (o *Maintenance) GetAutoUpdate() (ret MaintenanceGetAutoUpdateRetType) {
	ret, _ = o.GetAutoUpdateOk()
	return ret
}

// GetAutoUpdateOk returns a tuple with the AutoUpdate field value
// and a boolean to check if the value has been set.
func (o *Maintenance) GetAutoUpdateOk() (ret MaintenanceGetAutoUpdateRetType, ok bool) {
	return getMaintenanceGetAutoUpdateAttributeTypeOk(o.AutoUpdate)
}

// SetAutoUpdate sets field value
func (o *Maintenance) SetAutoUpdate(v MaintenanceGetAutoUpdateRetType) {
	setMaintenanceGetAutoUpdateAttributeType(&o.AutoUpdate, v)
}

// GetTimeWindow returns the TimeWindow field value
func (o *Maintenance) GetTimeWindow() (ret MaintenanceGetTimeWindowRetType) {
	ret, _ = o.GetTimeWindowOk()
	return ret
}

// GetTimeWindowOk returns a tuple with the TimeWindow field value
// and a boolean to check if the value has been set.
func (o *Maintenance) GetTimeWindowOk() (ret MaintenanceGetTimeWindowRetType, ok bool) {
	return getMaintenanceGetTimeWindowAttributeTypeOk(o.TimeWindow)
}

// SetTimeWindow sets field value
func (o *Maintenance) SetTimeWindow(v MaintenanceGetTimeWindowRetType) {
	setMaintenanceGetTimeWindowAttributeType(&o.TimeWindow, v)
}

func (o Maintenance) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getMaintenanceGetAutoUpdateAttributeTypeOk(o.AutoUpdate); ok {
		toSerialize["AutoUpdate"] = val
	}
	if val, ok := getMaintenanceGetTimeWindowAttributeTypeOk(o.TimeWindow); ok {
		toSerialize["TimeWindow"] = val
	}
	return toSerialize, nil
}

type NullableMaintenance struct {
	value *Maintenance
	isSet bool
}

func (v NullableMaintenance) Get() *Maintenance {
	return v.value
}

func (v *NullableMaintenance) Set(val *Maintenance) {
	v.value = val
	v.isSet = true
}

func (v NullableMaintenance) IsSet() bool {
	return v.isSet
}

func (v *NullableMaintenance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMaintenance(val *Maintenance) *NullableMaintenance {
	return &NullableMaintenance{value: val, isSet: true}
}

func (v NullableMaintenance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMaintenance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
