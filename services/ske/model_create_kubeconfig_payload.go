/*
SKE-API

The SKE API provides endpoints to create, update, delete clusters within STACKIT portal projects and to trigger further cluster management tasks.

API version: 1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ske

import (
	"encoding/json"
)

// checks if the CreateKubeconfigPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateKubeconfigPayload{}

// CreateKubeconfigPayload struct for CreateKubeconfigPayload
type CreateKubeconfigPayload struct {
	ExpirationSeconds *string `json:"expirationSeconds,omitempty"`
}

// NewCreateKubeconfigPayload instantiates a new CreateKubeconfigPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateKubeconfigPayload() *CreateKubeconfigPayload {
	this := CreateKubeconfigPayload{}
	return &this
}

// NewCreateKubeconfigPayloadWithDefaults instantiates a new CreateKubeconfigPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateKubeconfigPayloadWithDefaults() *CreateKubeconfigPayload {
	this := CreateKubeconfigPayload{}
	return &this
}

// GetExpirationSeconds returns the ExpirationSeconds field value if set, zero value otherwise.
func (o *CreateKubeconfigPayload) GetExpirationSeconds() *string {
	if o == nil || IsNil(o.ExpirationSeconds) {
		var ret *string
		return ret
	}
	return o.ExpirationSeconds
}

// GetExpirationSecondsOk returns a tuple with the ExpirationSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateKubeconfigPayload) GetExpirationSecondsOk() (*string, bool) {
	if o == nil || IsNil(o.ExpirationSeconds) {
		return nil, false
	}
	return o.ExpirationSeconds, true
}

// HasExpirationSeconds returns a boolean if a field has been set.
func (o *CreateKubeconfigPayload) HasExpirationSeconds() bool {
	if o != nil && !IsNil(o.ExpirationSeconds) {
		return true
	}

	return false
}

// SetExpirationSeconds gets a reference to the given string and assigns it to the ExpirationSeconds field.
func (o *CreateKubeconfigPayload) SetExpirationSeconds(v *string) {
	o.ExpirationSeconds = v
}

func (o CreateKubeconfigPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ExpirationSeconds) {
		toSerialize["expirationSeconds"] = o.ExpirationSeconds
	}
	return toSerialize, nil
}

type NullableCreateKubeconfigPayload struct {
	value *CreateKubeconfigPayload
	isSet bool
}

func (v NullableCreateKubeconfigPayload) Get() *CreateKubeconfigPayload {
	return v.value
}

func (v *NullableCreateKubeconfigPayload) Set(val *CreateKubeconfigPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateKubeconfigPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateKubeconfigPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateKubeconfigPayload(val *CreateKubeconfigPayload) *NullableCreateKubeconfigPayload {
	return &NullableCreateKubeconfigPayload{value: val, isSet: true}
}

func (v NullableCreateKubeconfigPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateKubeconfigPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
