/*
SKE-API

The SKE API provides endpoints to create, update, delete clusters within STACKIT portal projects and to trigger further cluster management tasks.

API version: 1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ske

import (
	"encoding/json"
)

// checks if the Extension type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Extension{}

/*
	types and functions for acl
*/

// isModel
type ExtensionGetAclAttributeType = *ACL
type ExtensionGetAclArgType = ACL
type ExtensionGetAclRetType = ACL

func getExtensionGetAclAttributeTypeOk(arg ExtensionGetAclAttributeType) (ret ExtensionGetAclRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setExtensionGetAclAttributeType(arg *ExtensionGetAclAttributeType, val ExtensionGetAclRetType) {
	*arg = &val
}

/*
	types and functions for argus
*/

// isModel
type ExtensionGetArgusAttributeType = *Argus
type ExtensionGetArgusArgType = Argus
type ExtensionGetArgusRetType = Argus

func getExtensionGetArgusAttributeTypeOk(arg ExtensionGetArgusAttributeType) (ret ExtensionGetArgusRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setExtensionGetArgusAttributeType(arg *ExtensionGetArgusAttributeType, val ExtensionGetArgusRetType) {
	*arg = &val
}

/*
	types and functions for dns
*/

// isModel
type ExtensionGetDnsAttributeType = *DNS
type ExtensionGetDnsArgType = DNS
type ExtensionGetDnsRetType = DNS

func getExtensionGetDnsAttributeTypeOk(arg ExtensionGetDnsAttributeType) (ret ExtensionGetDnsRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setExtensionGetDnsAttributeType(arg *ExtensionGetDnsAttributeType, val ExtensionGetDnsRetType) {
	*arg = &val
}

// Extension struct for Extension
type Extension struct {
	Acl   ExtensionGetAclAttributeType   `json:"acl,omitempty"`
	Argus ExtensionGetArgusAttributeType `json:"argus,omitempty"`
	Dns   ExtensionGetDnsAttributeType   `json:"dns,omitempty"`
}

// NewExtension instantiates a new Extension object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExtension() *Extension {
	this := Extension{}
	return &this
}

// NewExtensionWithDefaults instantiates a new Extension object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExtensionWithDefaults() *Extension {
	this := Extension{}
	return &this
}

// GetAcl returns the Acl field value if set, zero value otherwise.
func (o *Extension) GetAcl() (res ExtensionGetAclRetType) {
	res, _ = o.GetAclOk()
	return
}

// GetAclOk returns a tuple with the Acl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Extension) GetAclOk() (ret ExtensionGetAclRetType, ok bool) {
	return getExtensionGetAclAttributeTypeOk(o.Acl)
}

// HasAcl returns a boolean if a field has been set.
func (o *Extension) HasAcl() bool {
	_, ok := o.GetAclOk()
	return ok
}

// SetAcl gets a reference to the given ACL and assigns it to the Acl field.
func (o *Extension) SetAcl(v ExtensionGetAclRetType) {
	setExtensionGetAclAttributeType(&o.Acl, v)
}

// GetArgus returns the Argus field value if set, zero value otherwise.
func (o *Extension) GetArgus() (res ExtensionGetArgusRetType) {
	res, _ = o.GetArgusOk()
	return
}

// GetArgusOk returns a tuple with the Argus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Extension) GetArgusOk() (ret ExtensionGetArgusRetType, ok bool) {
	return getExtensionGetArgusAttributeTypeOk(o.Argus)
}

// HasArgus returns a boolean if a field has been set.
func (o *Extension) HasArgus() bool {
	_, ok := o.GetArgusOk()
	return ok
}

// SetArgus gets a reference to the given Argus and assigns it to the Argus field.
func (o *Extension) SetArgus(v ExtensionGetArgusRetType) {
	setExtensionGetArgusAttributeType(&o.Argus, v)
}

// GetDns returns the Dns field value if set, zero value otherwise.
func (o *Extension) GetDns() (res ExtensionGetDnsRetType) {
	res, _ = o.GetDnsOk()
	return
}

// GetDnsOk returns a tuple with the Dns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Extension) GetDnsOk() (ret ExtensionGetDnsRetType, ok bool) {
	return getExtensionGetDnsAttributeTypeOk(o.Dns)
}

// HasDns returns a boolean if a field has been set.
func (o *Extension) HasDns() bool {
	_, ok := o.GetDnsOk()
	return ok
}

// SetDns gets a reference to the given DNS and assigns it to the Dns field.
func (o *Extension) SetDns(v ExtensionGetDnsRetType) {
	setExtensionGetDnsAttributeType(&o.Dns, v)
}

func (o Extension) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getExtensionGetAclAttributeTypeOk(o.Acl); ok {
		toSerialize["Acl"] = val
	}
	if val, ok := getExtensionGetArgusAttributeTypeOk(o.Argus); ok {
		toSerialize["Argus"] = val
	}
	if val, ok := getExtensionGetDnsAttributeTypeOk(o.Dns); ok {
		toSerialize["Dns"] = val
	}
	return toSerialize, nil
}

type NullableExtension struct {
	value *Extension
	isSet bool
}

func (v NullableExtension) Get() *Extension {
	return v.value
}

func (v *NullableExtension) Set(val *Extension) {
	v.value = val
	v.isSet = true
}

func (v NullableExtension) IsSet() bool {
	return v.isSet
}

func (v *NullableExtension) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExtension(val *Extension) *NullableExtension {
	return &NullableExtension{value: val, isSet: true}
}

func (v NullableExtension) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExtension) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
