/*
SKE-API

The SKE API provides endpoints to create, update, delete clusters within STACKIT portal projects and to trigger further cluster management tasks.

API version: 1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ske

import (
	"encoding/json"
)

// checks if the MachineImage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MachineImage{}

/*
	types and functions for name
*/

// isNotNullableString
type MachineImageGetNameAttributeType = *string

func getMachineImageGetNameAttributeTypeOk(arg MachineImageGetNameAttributeType) (ret MachineImageGetNameRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setMachineImageGetNameAttributeType(arg *MachineImageGetNameAttributeType, val MachineImageGetNameRetType) {
	*arg = &val
}

type MachineImageGetNameArgType = string
type MachineImageGetNameRetType = string

/*
	types and functions for versions
*/

// isArray
type MachineImageGetVersionsAttributeType = *[]MachineImageVersion
type MachineImageGetVersionsArgType = []MachineImageVersion
type MachineImageGetVersionsRetType = []MachineImageVersion

func getMachineImageGetVersionsAttributeTypeOk(arg MachineImageGetVersionsAttributeType) (ret MachineImageGetVersionsRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setMachineImageGetVersionsAttributeType(arg *MachineImageGetVersionsAttributeType, val MachineImageGetVersionsRetType) {
	*arg = &val
}

// MachineImage struct for MachineImage
type MachineImage struct {
	Name     MachineImageGetNameAttributeType     `json:"name,omitempty"`
	Versions MachineImageGetVersionsAttributeType `json:"versions,omitempty"`
}

// NewMachineImage instantiates a new MachineImage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMachineImage() *MachineImage {
	this := MachineImage{}
	return &this
}

// NewMachineImageWithDefaults instantiates a new MachineImage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMachineImageWithDefaults() *MachineImage {
	this := MachineImage{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *MachineImage) GetName() (res MachineImageGetNameRetType) {
	res, _ = o.GetNameOk()
	return
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineImage) GetNameOk() (ret MachineImageGetNameRetType, ok bool) {
	return getMachineImageGetNameAttributeTypeOk(o.Name)
}

// HasName returns a boolean if a field has been set.
func (o *MachineImage) HasName() bool {
	_, ok := o.GetNameOk()
	return ok
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *MachineImage) SetName(v MachineImageGetNameRetType) {
	setMachineImageGetNameAttributeType(&o.Name, v)
}

// GetVersions returns the Versions field value if set, zero value otherwise.
func (o *MachineImage) GetVersions() (res MachineImageGetVersionsRetType) {
	res, _ = o.GetVersionsOk()
	return
}

// GetVersionsOk returns a tuple with the Versions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineImage) GetVersionsOk() (ret MachineImageGetVersionsRetType, ok bool) {
	return getMachineImageGetVersionsAttributeTypeOk(o.Versions)
}

// HasVersions returns a boolean if a field has been set.
func (o *MachineImage) HasVersions() bool {
	_, ok := o.GetVersionsOk()
	return ok
}

// SetVersions gets a reference to the given []MachineImageVersion and assigns it to the Versions field.
func (o *MachineImage) SetVersions(v MachineImageGetVersionsRetType) {
	setMachineImageGetVersionsAttributeType(&o.Versions, v)
}

func (o MachineImage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getMachineImageGetNameAttributeTypeOk(o.Name); ok {
		toSerialize["Name"] = val
	}
	if val, ok := getMachineImageGetVersionsAttributeTypeOk(o.Versions); ok {
		toSerialize["Versions"] = val
	}
	return toSerialize, nil
}

type NullableMachineImage struct {
	value *MachineImage
	isSet bool
}

func (v NullableMachineImage) Get() *MachineImage {
	return v.value
}

func (v *NullableMachineImage) Set(val *MachineImage) {
	v.value = val
	v.isSet = true
}

func (v NullableMachineImage) IsSet() bool {
	return v.isSet
}

func (v *NullableMachineImage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMachineImage(val *MachineImage) *NullableMachineImage {
	return &NullableMachineImage{value: val, isSet: true}
}

func (v NullableMachineImage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMachineImage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
