/*
SKE-API

The SKE API provides endpoints to create, update, delete clusters within STACKIT portal projects and to trigger further cluster management tasks.

API version: 1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ske

import (
	"encoding/json"
)

// checks if the Machine type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Machine{}

// Machine struct for Machine
type Machine struct {
	// REQUIRED
	Image *Image `json:"image"`
	// For valid types please take a look at [provider-options](#tag/ProviderOptions/operation/SkeService_GetProviderOptions) `machineTypes`.
	// REQUIRED
	Type *string `json:"type"`
}

type _Machine Machine

// NewMachine instantiates a new Machine object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMachine(image *Image, type_ *string) *Machine {
	this := Machine{}
	this.Image = image
	this.Type = type_
	return &this
}

// NewMachineWithDefaults instantiates a new Machine object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMachineWithDefaults() *Machine {
	this := Machine{}
	return &this
}

// GetImage returns the Image field value
func (o *Machine) GetImage() *Image {
	if o == nil || IsNil(o.Image) {
		var ret *Image
		return ret
	}

	return o.Image
}

// GetImageOk returns a tuple with the Image field value
// and a boolean to check if the value has been set.
func (o *Machine) GetImageOk() (*Image, bool) {
	if o == nil {
		return nil, false
	}
	return o.Image, true
}

// SetImage sets field value
func (o *Machine) SetImage(v *Image) {
	o.Image = v
}

// GetType returns the Type field value
func (o *Machine) GetType() *string {
	if o == nil || IsNil(o.Type) {
		var ret *string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *Machine) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Type, true
}

// SetType sets field value
func (o *Machine) SetType(v *string) {
	o.Type = v
}

func (o Machine) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["image"] = o.Image
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

type NullableMachine struct {
	value *Machine
	isSet bool
}

func (v NullableMachine) Get() *Machine {
	return v.value
}

func (v *NullableMachine) Set(val *Machine) {
	v.value = val
	v.isSet = true
}

func (v NullableMachine) IsSet() bool {
	return v.isSet
}

func (v *NullableMachine) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMachine(val *Machine) *NullableMachine {
	return &NullableMachine{value: val, isSet: true}
}

func (v NullableMachine) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMachine) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
