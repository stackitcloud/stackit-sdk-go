/*
SKE-API

The SKE API provides endpoints to create, update, delete clusters within STACKIT portal projects and to trigger further cluster management tasks.

API version: 1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ske

import (
	"encoding/json"
	"time"
)

// checks if the ClusterStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterStatus{}

/*
	types and functions for aggregated
*/

// isEnumRef
type ClusterStatusGetAggregatedAttributeType = *ClusterStatusState
type ClusterStatusGetAggregatedArgType = ClusterStatusState
type ClusterStatusGetAggregatedRetType = ClusterStatusState

func getClusterStatusGetAggregatedAttributeTypeOk(arg ClusterStatusGetAggregatedAttributeType) (ret ClusterStatusGetAggregatedRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setClusterStatusGetAggregatedAttributeType(arg *ClusterStatusGetAggregatedAttributeType, val ClusterStatusGetAggregatedRetType) {
	*arg = &val
}

/*
	types and functions for creationTime
*/

// isDateTime
type ClusterStatusGetCreationTimeAttributeType = *time.Time
type ClusterStatusGetCreationTimeArgType = time.Time
type ClusterStatusGetCreationTimeRetType = time.Time

func getClusterStatusGetCreationTimeAttributeTypeOk(arg ClusterStatusGetCreationTimeAttributeType) (ret ClusterStatusGetCreationTimeRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setClusterStatusGetCreationTimeAttributeType(arg *ClusterStatusGetCreationTimeAttributeType, val ClusterStatusGetCreationTimeRetType) {
	*arg = &val
}

/*
	types and functions for credentialsRotation
*/

// isModel
type ClusterStatusGetCredentialsRotationAttributeType = *CredentialsRotationState
type ClusterStatusGetCredentialsRotationArgType = CredentialsRotationState
type ClusterStatusGetCredentialsRotationRetType = CredentialsRotationState

func getClusterStatusGetCredentialsRotationAttributeTypeOk(arg ClusterStatusGetCredentialsRotationAttributeType) (ret ClusterStatusGetCredentialsRotationRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setClusterStatusGetCredentialsRotationAttributeType(arg *ClusterStatusGetCredentialsRotationAttributeType, val ClusterStatusGetCredentialsRotationRetType) {
	*arg = &val
}

/*
	types and functions for egressAddressRanges
*/

// isArray
type ClusterStatusGetEgressAddressRangesAttributeType = *[]string
type ClusterStatusGetEgressAddressRangesArgType = []string
type ClusterStatusGetEgressAddressRangesRetType = []string

func getClusterStatusGetEgressAddressRangesAttributeTypeOk(arg ClusterStatusGetEgressAddressRangesAttributeType) (ret ClusterStatusGetEgressAddressRangesRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setClusterStatusGetEgressAddressRangesAttributeType(arg *ClusterStatusGetEgressAddressRangesAttributeType, val ClusterStatusGetEgressAddressRangesRetType) {
	*arg = &val
}

/*
	types and functions for error
*/

// isModel
type ClusterStatusGetErrorAttributeType = *RuntimeError
type ClusterStatusGetErrorArgType = RuntimeError
type ClusterStatusGetErrorRetType = RuntimeError

func getClusterStatusGetErrorAttributeTypeOk(arg ClusterStatusGetErrorAttributeType) (ret ClusterStatusGetErrorRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setClusterStatusGetErrorAttributeType(arg *ClusterStatusGetErrorAttributeType, val ClusterStatusGetErrorRetType) {
	*arg = &val
}

/*
	types and functions for errors
*/

// isArray
type ClusterStatusGetErrorsAttributeType = *[]ClusterError
type ClusterStatusGetErrorsArgType = []ClusterError
type ClusterStatusGetErrorsRetType = []ClusterError

func getClusterStatusGetErrorsAttributeTypeOk(arg ClusterStatusGetErrorsAttributeType) (ret ClusterStatusGetErrorsRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setClusterStatusGetErrorsAttributeType(arg *ClusterStatusGetErrorsAttributeType, val ClusterStatusGetErrorsRetType) {
	*arg = &val
}

/*
	types and functions for hibernated
*/

// isBoolean
type ClusterStatusgetHibernatedAttributeType = *bool
type ClusterStatusgetHibernatedArgType = bool
type ClusterStatusgetHibernatedRetType = bool

func getClusterStatusgetHibernatedAttributeTypeOk(arg ClusterStatusgetHibernatedAttributeType) (ret ClusterStatusgetHibernatedRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setClusterStatusgetHibernatedAttributeType(arg *ClusterStatusgetHibernatedAttributeType, val ClusterStatusgetHibernatedRetType) {
	*arg = &val
}

// ClusterStatus struct for ClusterStatus
type ClusterStatus struct {
	Aggregated ClusterStatusGetAggregatedAttributeType `json:"aggregated,omitempty"`
	// Format: `2024-02-15T11:06:29Z`
	CreationTime        ClusterStatusGetCreationTimeAttributeType        `json:"creationTime,omitempty"`
	CredentialsRotation ClusterStatusGetCredentialsRotationAttributeType `json:"credentialsRotation,omitempty"`
	// The outgoing network ranges (in CIDR notation) of traffic originating from workload on the cluster.
	EgressAddressRanges ClusterStatusGetEgressAddressRangesAttributeType `json:"egressAddressRanges,omitempty"`
	Error               ClusterStatusGetErrorAttributeType               `json:"error,omitempty"`
	Errors              ClusterStatusGetErrorsAttributeType              `json:"errors,omitempty"`
	Hibernated          ClusterStatusgetHibernatedAttributeType          `json:"hibernated,omitempty"`
}

// NewClusterStatus instantiates a new ClusterStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterStatus() *ClusterStatus {
	this := ClusterStatus{}
	return &this
}

// NewClusterStatusWithDefaults instantiates a new ClusterStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterStatusWithDefaults() *ClusterStatus {
	this := ClusterStatus{}
	var aggregated ClusterStatusState = CLUSTERSTATUSSTATE_UNSPECIFIED
	this.Aggregated = &aggregated
	return &this
}

// GetAggregated returns the Aggregated field value if set, zero value otherwise.
func (o *ClusterStatus) GetAggregated() (res ClusterStatusGetAggregatedRetType) {
	res, _ = o.GetAggregatedOk()
	return
}

// GetAggregatedOk returns a tuple with the Aggregated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterStatus) GetAggregatedOk() (ret ClusterStatusGetAggregatedRetType, ok bool) {
	return getClusterStatusGetAggregatedAttributeTypeOk(o.Aggregated)
}

// HasAggregated returns a boolean if a field has been set.
func (o *ClusterStatus) HasAggregated() bool {
	_, ok := o.GetAggregatedOk()
	return ok
}

// SetAggregated gets a reference to the given ClusterStatusState and assigns it to the Aggregated field.
func (o *ClusterStatus) SetAggregated(v ClusterStatusGetAggregatedRetType) {
	setClusterStatusGetAggregatedAttributeType(&o.Aggregated, v)
}

// GetCreationTime returns the CreationTime field value if set, zero value otherwise.
func (o *ClusterStatus) GetCreationTime() (res ClusterStatusGetCreationTimeRetType) {
	res, _ = o.GetCreationTimeOk()
	return
}

// GetCreationTimeOk returns a tuple with the CreationTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterStatus) GetCreationTimeOk() (ret ClusterStatusGetCreationTimeRetType, ok bool) {
	return getClusterStatusGetCreationTimeAttributeTypeOk(o.CreationTime)
}

// HasCreationTime returns a boolean if a field has been set.
func (o *ClusterStatus) HasCreationTime() bool {
	_, ok := o.GetCreationTimeOk()
	return ok
}

// SetCreationTime gets a reference to the given time.Time and assigns it to the CreationTime field.
func (o *ClusterStatus) SetCreationTime(v ClusterStatusGetCreationTimeRetType) {
	setClusterStatusGetCreationTimeAttributeType(&o.CreationTime, v)
}

// GetCredentialsRotation returns the CredentialsRotation field value if set, zero value otherwise.
func (o *ClusterStatus) GetCredentialsRotation() (res ClusterStatusGetCredentialsRotationRetType) {
	res, _ = o.GetCredentialsRotationOk()
	return
}

// GetCredentialsRotationOk returns a tuple with the CredentialsRotation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterStatus) GetCredentialsRotationOk() (ret ClusterStatusGetCredentialsRotationRetType, ok bool) {
	return getClusterStatusGetCredentialsRotationAttributeTypeOk(o.CredentialsRotation)
}

// HasCredentialsRotation returns a boolean if a field has been set.
func (o *ClusterStatus) HasCredentialsRotation() bool {
	_, ok := o.GetCredentialsRotationOk()
	return ok
}

// SetCredentialsRotation gets a reference to the given CredentialsRotationState and assigns it to the CredentialsRotation field.
func (o *ClusterStatus) SetCredentialsRotation(v ClusterStatusGetCredentialsRotationRetType) {
	setClusterStatusGetCredentialsRotationAttributeType(&o.CredentialsRotation, v)
}

// GetEgressAddressRanges returns the EgressAddressRanges field value if set, zero value otherwise.
func (o *ClusterStatus) GetEgressAddressRanges() (res ClusterStatusGetEgressAddressRangesRetType) {
	res, _ = o.GetEgressAddressRangesOk()
	return
}

// GetEgressAddressRangesOk returns a tuple with the EgressAddressRanges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterStatus) GetEgressAddressRangesOk() (ret ClusterStatusGetEgressAddressRangesRetType, ok bool) {
	return getClusterStatusGetEgressAddressRangesAttributeTypeOk(o.EgressAddressRanges)
}

// HasEgressAddressRanges returns a boolean if a field has been set.
func (o *ClusterStatus) HasEgressAddressRanges() bool {
	_, ok := o.GetEgressAddressRangesOk()
	return ok
}

// SetEgressAddressRanges gets a reference to the given []string and assigns it to the EgressAddressRanges field.
func (o *ClusterStatus) SetEgressAddressRanges(v ClusterStatusGetEgressAddressRangesRetType) {
	setClusterStatusGetEgressAddressRangesAttributeType(&o.EgressAddressRanges, v)
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *ClusterStatus) GetError() (res ClusterStatusGetErrorRetType) {
	res, _ = o.GetErrorOk()
	return
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterStatus) GetErrorOk() (ret ClusterStatusGetErrorRetType, ok bool) {
	return getClusterStatusGetErrorAttributeTypeOk(o.Error)
}

// HasError returns a boolean if a field has been set.
func (o *ClusterStatus) HasError() bool {
	_, ok := o.GetErrorOk()
	return ok
}

// SetError gets a reference to the given RuntimeError and assigns it to the Error field.
func (o *ClusterStatus) SetError(v ClusterStatusGetErrorRetType) {
	setClusterStatusGetErrorAttributeType(&o.Error, v)
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *ClusterStatus) GetErrors() (res ClusterStatusGetErrorsRetType) {
	res, _ = o.GetErrorsOk()
	return
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterStatus) GetErrorsOk() (ret ClusterStatusGetErrorsRetType, ok bool) {
	return getClusterStatusGetErrorsAttributeTypeOk(o.Errors)
}

// HasErrors returns a boolean if a field has been set.
func (o *ClusterStatus) HasErrors() bool {
	_, ok := o.GetErrorsOk()
	return ok
}

// SetErrors gets a reference to the given []ClusterError and assigns it to the Errors field.
func (o *ClusterStatus) SetErrors(v ClusterStatusGetErrorsRetType) {
	setClusterStatusGetErrorsAttributeType(&o.Errors, v)
}

// GetHibernated returns the Hibernated field value if set, zero value otherwise.
func (o *ClusterStatus) GetHibernated() (res ClusterStatusgetHibernatedRetType) {
	res, _ = o.GetHibernatedOk()
	return
}

// GetHibernatedOk returns a tuple with the Hibernated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterStatus) GetHibernatedOk() (ret ClusterStatusgetHibernatedRetType, ok bool) {
	return getClusterStatusgetHibernatedAttributeTypeOk(o.Hibernated)
}

// HasHibernated returns a boolean if a field has been set.
func (o *ClusterStatus) HasHibernated() bool {
	_, ok := o.GetHibernatedOk()
	return ok
}

// SetHibernated gets a reference to the given bool and assigns it to the Hibernated field.
func (o *ClusterStatus) SetHibernated(v ClusterStatusgetHibernatedRetType) {
	setClusterStatusgetHibernatedAttributeType(&o.Hibernated, v)
}

func (o ClusterStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getClusterStatusGetAggregatedAttributeTypeOk(o.Aggregated); ok {
		toSerialize["Aggregated"] = val
	}
	if val, ok := getClusterStatusGetCreationTimeAttributeTypeOk(o.CreationTime); ok {
		toSerialize["CreationTime"] = val
	}
	if val, ok := getClusterStatusGetCredentialsRotationAttributeTypeOk(o.CredentialsRotation); ok {
		toSerialize["CredentialsRotation"] = val
	}
	if val, ok := getClusterStatusGetEgressAddressRangesAttributeTypeOk(o.EgressAddressRanges); ok {
		toSerialize["EgressAddressRanges"] = val
	}
	if val, ok := getClusterStatusGetErrorAttributeTypeOk(o.Error); ok {
		toSerialize["Error"] = val
	}
	if val, ok := getClusterStatusGetErrorsAttributeTypeOk(o.Errors); ok {
		toSerialize["Errors"] = val
	}
	if val, ok := getClusterStatusgetHibernatedAttributeTypeOk(o.Hibernated); ok {
		toSerialize["Hibernated"] = val
	}
	return toSerialize, nil
}

type NullableClusterStatus struct {
	value *ClusterStatus
	isSet bool
}

func (v NullableClusterStatus) Get() *ClusterStatus {
	return v.value
}

func (v *NullableClusterStatus) Set(val *ClusterStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterStatus(val *ClusterStatus) *NullableClusterStatus {
	return &NullableClusterStatus{value: val, isSet: true}
}

func (v NullableClusterStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
