/*
SKE-API

The SKE API provides endpoints to create, update, delete clusters within STACKIT portal projects and to trigger further cluster management tasks.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ske

import (
	"encoding/json"
)

// checks if the ListClustersResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListClustersResponse{}

/*
	types and functions for items
*/

// isArray
type ListClustersResponseGetItemsAttributeType = *[]Cluster
type ListClustersResponseGetItemsArgType = []Cluster
type ListClustersResponseGetItemsRetType = []Cluster

func getListClustersResponseGetItemsAttributeTypeOk(arg ListClustersResponseGetItemsAttributeType) (ret ListClustersResponseGetItemsRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setListClustersResponseGetItemsAttributeType(arg *ListClustersResponseGetItemsAttributeType, val ListClustersResponseGetItemsRetType) {
	*arg = &val
}

// ListClustersResponse struct for ListClustersResponse
type ListClustersResponse struct {
	Items ListClustersResponseGetItemsAttributeType `json:"items,omitempty"`
}

// NewListClustersResponse instantiates a new ListClustersResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListClustersResponse() *ListClustersResponse {
	this := ListClustersResponse{}
	return &this
}

// NewListClustersResponseWithDefaults instantiates a new ListClustersResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListClustersResponseWithDefaults() *ListClustersResponse {
	this := ListClustersResponse{}
	return &this
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *ListClustersResponse) GetItems() (res ListClustersResponseGetItemsRetType) {
	res, _ = o.GetItemsOk()
	return
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListClustersResponse) GetItemsOk() (ret ListClustersResponseGetItemsRetType, ok bool) {
	return getListClustersResponseGetItemsAttributeTypeOk(o.Items)
}

// HasItems returns a boolean if a field has been set.
func (o *ListClustersResponse) HasItems() bool {
	_, ok := o.GetItemsOk()
	return ok
}

// SetItems gets a reference to the given []Cluster and assigns it to the Items field.
func (o *ListClustersResponse) SetItems(v ListClustersResponseGetItemsRetType) {
	setListClustersResponseGetItemsAttributeType(&o.Items, v)
}

func (o ListClustersResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getListClustersResponseGetItemsAttributeTypeOk(o.Items); ok {
		toSerialize["Items"] = val
	}
	return toSerialize, nil
}

type NullableListClustersResponse struct {
	value *ListClustersResponse
	isSet bool
}

func (v NullableListClustersResponse) Get() *ListClustersResponse {
	return v.value
}

func (v *NullableListClustersResponse) Set(val *ListClustersResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListClustersResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListClustersResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListClustersResponse(val *ListClustersResponse) *NullableListClustersResponse {
	return &NullableListClustersResponse{value: val, isSet: true}
}

func (v NullableListClustersResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListClustersResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
