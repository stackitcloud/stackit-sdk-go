/*
SKE-API

The SKE API provides endpoints to create, update, delete clusters within STACKIT portal projects and to trigger further cluster management tasks.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ske

import (
	"encoding/json"
)

// checks if the MachineType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MachineType{}

/*
	types and functions for architecture
*/

// isNotNullableString
type MachineTypeGetArchitectureAttributeType = *string

func getMachineTypeGetArchitectureAttributeTypeOk(arg MachineTypeGetArchitectureAttributeType) (ret MachineTypeGetArchitectureRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setMachineTypeGetArchitectureAttributeType(arg *MachineTypeGetArchitectureAttributeType, val MachineTypeGetArchitectureRetType) {
	*arg = &val
}

type MachineTypeGetArchitectureArgType = string
type MachineTypeGetArchitectureRetType = string

/*
	types and functions for cpu
*/

// isInteger
type MachineTypeGetCpuAttributeType = *int64
type MachineTypeGetCpuArgType = int64
type MachineTypeGetCpuRetType = int64

func getMachineTypeGetCpuAttributeTypeOk(arg MachineTypeGetCpuAttributeType) (ret MachineTypeGetCpuRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setMachineTypeGetCpuAttributeType(arg *MachineTypeGetCpuAttributeType, val MachineTypeGetCpuRetType) {
	*arg = &val
}

/*
	types and functions for gpu
*/

// isInteger
type MachineTypeGetGpuAttributeType = *int64
type MachineTypeGetGpuArgType = int64
type MachineTypeGetGpuRetType = int64

func getMachineTypeGetGpuAttributeTypeOk(arg MachineTypeGetGpuAttributeType) (ret MachineTypeGetGpuRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setMachineTypeGetGpuAttributeType(arg *MachineTypeGetGpuAttributeType, val MachineTypeGetGpuRetType) {
	*arg = &val
}

/*
	types and functions for memory
*/

// isInteger
type MachineTypeGetMemoryAttributeType = *int64
type MachineTypeGetMemoryArgType = int64
type MachineTypeGetMemoryRetType = int64

func getMachineTypeGetMemoryAttributeTypeOk(arg MachineTypeGetMemoryAttributeType) (ret MachineTypeGetMemoryRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setMachineTypeGetMemoryAttributeType(arg *MachineTypeGetMemoryAttributeType, val MachineTypeGetMemoryRetType) {
	*arg = &val
}

/*
	types and functions for name
*/

// isNotNullableString
type MachineTypeGetNameAttributeType = *string

func getMachineTypeGetNameAttributeTypeOk(arg MachineTypeGetNameAttributeType) (ret MachineTypeGetNameRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setMachineTypeGetNameAttributeType(arg *MachineTypeGetNameAttributeType, val MachineTypeGetNameRetType) {
	*arg = &val
}

type MachineTypeGetNameArgType = string
type MachineTypeGetNameRetType = string

// MachineType struct for MachineType
type MachineType struct {
	Architecture MachineTypeGetArchitectureAttributeType `json:"architecture,omitempty"`
	// Can be cast to int32 without loss of precision.
	Cpu MachineTypeGetCpuAttributeType `json:"cpu,omitempty"`
	// Can be cast to int32 without loss of precision.
	Gpu MachineTypeGetGpuAttributeType `json:"gpu,omitempty"`
	// Can be cast to int32 without loss of precision.
	Memory MachineTypeGetMemoryAttributeType `json:"memory,omitempty"`
	Name   MachineTypeGetNameAttributeType   `json:"name,omitempty"`
}

// NewMachineType instantiates a new MachineType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMachineType() *MachineType {
	this := MachineType{}
	return &this
}

// NewMachineTypeWithDefaults instantiates a new MachineType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMachineTypeWithDefaults() *MachineType {
	this := MachineType{}
	return &this
}

// GetArchitecture returns the Architecture field value if set, zero value otherwise.
func (o *MachineType) GetArchitecture() (res MachineTypeGetArchitectureRetType) {
	res, _ = o.GetArchitectureOk()
	return
}

// GetArchitectureOk returns a tuple with the Architecture field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineType) GetArchitectureOk() (ret MachineTypeGetArchitectureRetType, ok bool) {
	return getMachineTypeGetArchitectureAttributeTypeOk(o.Architecture)
}

// HasArchitecture returns a boolean if a field has been set.
func (o *MachineType) HasArchitecture() bool {
	_, ok := o.GetArchitectureOk()
	return ok
}

// SetArchitecture gets a reference to the given string and assigns it to the Architecture field.
func (o *MachineType) SetArchitecture(v MachineTypeGetArchitectureRetType) {
	setMachineTypeGetArchitectureAttributeType(&o.Architecture, v)
}

// GetCpu returns the Cpu field value if set, zero value otherwise.
func (o *MachineType) GetCpu() (res MachineTypeGetCpuRetType) {
	res, _ = o.GetCpuOk()
	return
}

// GetCpuOk returns a tuple with the Cpu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineType) GetCpuOk() (ret MachineTypeGetCpuRetType, ok bool) {
	return getMachineTypeGetCpuAttributeTypeOk(o.Cpu)
}

// HasCpu returns a boolean if a field has been set.
func (o *MachineType) HasCpu() bool {
	_, ok := o.GetCpuOk()
	return ok
}

// SetCpu gets a reference to the given int64 and assigns it to the Cpu field.
func (o *MachineType) SetCpu(v MachineTypeGetCpuRetType) {
	setMachineTypeGetCpuAttributeType(&o.Cpu, v)
}

// GetGpu returns the Gpu field value if set, zero value otherwise.
func (o *MachineType) GetGpu() (res MachineTypeGetGpuRetType) {
	res, _ = o.GetGpuOk()
	return
}

// GetGpuOk returns a tuple with the Gpu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineType) GetGpuOk() (ret MachineTypeGetGpuRetType, ok bool) {
	return getMachineTypeGetGpuAttributeTypeOk(o.Gpu)
}

// HasGpu returns a boolean if a field has been set.
func (o *MachineType) HasGpu() bool {
	_, ok := o.GetGpuOk()
	return ok
}

// SetGpu gets a reference to the given int64 and assigns it to the Gpu field.
func (o *MachineType) SetGpu(v MachineTypeGetGpuRetType) {
	setMachineTypeGetGpuAttributeType(&o.Gpu, v)
}

// GetMemory returns the Memory field value if set, zero value otherwise.
func (o *MachineType) GetMemory() (res MachineTypeGetMemoryRetType) {
	res, _ = o.GetMemoryOk()
	return
}

// GetMemoryOk returns a tuple with the Memory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineType) GetMemoryOk() (ret MachineTypeGetMemoryRetType, ok bool) {
	return getMachineTypeGetMemoryAttributeTypeOk(o.Memory)
}

// HasMemory returns a boolean if a field has been set.
func (o *MachineType) HasMemory() bool {
	_, ok := o.GetMemoryOk()
	return ok
}

// SetMemory gets a reference to the given int64 and assigns it to the Memory field.
func (o *MachineType) SetMemory(v MachineTypeGetMemoryRetType) {
	setMachineTypeGetMemoryAttributeType(&o.Memory, v)
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *MachineType) GetName() (res MachineTypeGetNameRetType) {
	res, _ = o.GetNameOk()
	return
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineType) GetNameOk() (ret MachineTypeGetNameRetType, ok bool) {
	return getMachineTypeGetNameAttributeTypeOk(o.Name)
}

// HasName returns a boolean if a field has been set.
func (o *MachineType) HasName() bool {
	_, ok := o.GetNameOk()
	return ok
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *MachineType) SetName(v MachineTypeGetNameRetType) {
	setMachineTypeGetNameAttributeType(&o.Name, v)
}

func (o MachineType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getMachineTypeGetArchitectureAttributeTypeOk(o.Architecture); ok {
		toSerialize["Architecture"] = val
	}
	if val, ok := getMachineTypeGetCpuAttributeTypeOk(o.Cpu); ok {
		toSerialize["Cpu"] = val
	}
	if val, ok := getMachineTypeGetGpuAttributeTypeOk(o.Gpu); ok {
		toSerialize["Gpu"] = val
	}
	if val, ok := getMachineTypeGetMemoryAttributeTypeOk(o.Memory); ok {
		toSerialize["Memory"] = val
	}
	if val, ok := getMachineTypeGetNameAttributeTypeOk(o.Name); ok {
		toSerialize["Name"] = val
	}
	return toSerialize, nil
}

type NullableMachineType struct {
	value *MachineType
	isSet bool
}

func (v NullableMachineType) Get() *MachineType {
	return v.value
}

func (v *NullableMachineType) Set(val *MachineType) {
	v.value = val
	v.isSet = true
}

func (v NullableMachineType) IsSet() bool {
	return v.isSet
}

func (v *NullableMachineType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMachineType(val *MachineType) *NullableMachineType {
	return &NullableMachineType{value: val, isSet: true}
}

func (v NullableMachineType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMachineType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
