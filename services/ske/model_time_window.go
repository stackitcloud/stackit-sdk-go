/*
SKE-API

The SKE API provides endpoints to create, update, delete clusters within STACKIT portal projects and to trigger further cluster management tasks.

API version: 1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ske

import (
	"encoding/json"
	"time"
)

// checks if the TimeWindow type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TimeWindow{}

// TimeWindow struct for TimeWindow
type TimeWindow struct {
	// REQUIRED
	End *time.Time `json:"end"`
	// REQUIRED
	Start *time.Time `json:"start"`
}

type _TimeWindow TimeWindow

// NewTimeWindow instantiates a new TimeWindow object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTimeWindow(end *time.Time, start *time.Time) *TimeWindow {
	this := TimeWindow{}
	this.End = end
	this.Start = start
	return &this
}

// NewTimeWindowWithDefaults instantiates a new TimeWindow object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTimeWindowWithDefaults() *TimeWindow {
	this := TimeWindow{}
	return &this
}

// GetEnd returns the End field value
func (o *TimeWindow) GetEnd() *time.Time {
	if o == nil || IsNil(o.End) {
		var ret *time.Time
		return ret
	}

	return o.End
}

// GetEndOk returns a tuple with the End field value
// and a boolean to check if the value has been set.
func (o *TimeWindow) GetEndOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.End, true
}

// SetEnd sets field value
func (o *TimeWindow) SetEnd(v *time.Time) {
	o.End = v
}

// GetStart returns the Start field value
func (o *TimeWindow) GetStart() *time.Time {
	if o == nil || IsNil(o.Start) {
		var ret *time.Time
		return ret
	}

	return o.Start
}

// GetStartOk returns a tuple with the Start field value
// and a boolean to check if the value has been set.
func (o *TimeWindow) GetStartOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.Start, true
}

// SetStart sets field value
func (o *TimeWindow) SetStart(v *time.Time) {
	o.Start = v
}

func (o TimeWindow) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["end"] = o.End
	toSerialize["start"] = o.Start
	return toSerialize, nil
}

type NullableTimeWindow struct {
	value *TimeWindow
	isSet bool
}

func (v NullableTimeWindow) Get() *TimeWindow {
	return v.value
}

func (v *NullableTimeWindow) Set(val *TimeWindow) {
	v.value = val
	v.isSet = true
}

func (v NullableTimeWindow) IsSet() bool {
	return v.isSet
}

func (v *NullableTimeWindow) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTimeWindow(val *TimeWindow) *NullableTimeWindow {
	return &NullableTimeWindow{value: val, isSet: true}
}

func (v NullableTimeWindow) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTimeWindow) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
