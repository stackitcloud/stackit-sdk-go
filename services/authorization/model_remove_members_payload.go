/*
STACKIT Membership API

The Membership API is used to manage memberships, roles and permissions of STACKIT resources, like projects, folders, organizations and other resources.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package authorization

import (
	"encoding/json"
)

// checks if the RemoveMembersPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RemoveMembersPayload{}

/*
	types and functions for forceRemove
*/

// isBoolean
type RemoveMembersPayloadgetForceRemoveAttributeType = *bool
type RemoveMembersPayloadgetForceRemoveArgType = bool
type RemoveMembersPayloadgetForceRemoveRetType = bool

func getRemoveMembersPayloadgetForceRemoveAttributeTypeOk(arg RemoveMembersPayloadgetForceRemoveAttributeType) (ret RemoveMembersPayloadgetForceRemoveRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setRemoveMembersPayloadgetForceRemoveAttributeType(arg *RemoveMembersPayloadgetForceRemoveAttributeType, val RemoveMembersPayloadgetForceRemoveRetType) {
	*arg = &val
}

/*
	types and functions for members
*/

// isArray
type RemoveMembersPayloadGetMembersAttributeType = *[]Member
type RemoveMembersPayloadGetMembersArgType = []Member
type RemoveMembersPayloadGetMembersRetType = []Member

func getRemoveMembersPayloadGetMembersAttributeTypeOk(arg RemoveMembersPayloadGetMembersAttributeType) (ret RemoveMembersPayloadGetMembersRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setRemoveMembersPayloadGetMembersAttributeType(arg *RemoveMembersPayloadGetMembersAttributeType, val RemoveMembersPayloadGetMembersRetType) {
	*arg = &val
}

/*
	types and functions for resourceType
*/

// isNotNullableString
type RemoveMembersPayloadGetResourceTypeAttributeType = *string

func getRemoveMembersPayloadGetResourceTypeAttributeTypeOk(arg RemoveMembersPayloadGetResourceTypeAttributeType) (ret RemoveMembersPayloadGetResourceTypeRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setRemoveMembersPayloadGetResourceTypeAttributeType(arg *RemoveMembersPayloadGetResourceTypeAttributeType, val RemoveMembersPayloadGetResourceTypeRetType) {
	*arg = &val
}

type RemoveMembersPayloadGetResourceTypeArgType = string
type RemoveMembersPayloadGetResourceTypeRetType = string

// RemoveMembersPayload struct for RemoveMembersPayload
type RemoveMembersPayload struct {
	ForceRemove RemoveMembersPayloadgetForceRemoveAttributeType `json:"forceRemove,omitempty"`
	// REQUIRED
	Members RemoveMembersPayloadGetMembersAttributeType `json:"members"`
	// REQUIRED
	ResourceType RemoveMembersPayloadGetResourceTypeAttributeType `json:"resourceType"`
}

type _RemoveMembersPayload RemoveMembersPayload

// NewRemoveMembersPayload instantiates a new RemoveMembersPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRemoveMembersPayload(members RemoveMembersPayloadGetMembersArgType, resourceType RemoveMembersPayloadGetResourceTypeArgType) *RemoveMembersPayload {
	this := RemoveMembersPayload{}
	setRemoveMembersPayloadGetMembersAttributeType(&this.Members, members)
	setRemoveMembersPayloadGetResourceTypeAttributeType(&this.ResourceType, resourceType)
	return &this
}

// NewRemoveMembersPayloadWithDefaults instantiates a new RemoveMembersPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRemoveMembersPayloadWithDefaults() *RemoveMembersPayload {
	this := RemoveMembersPayload{}
	return &this
}

// GetForceRemove returns the ForceRemove field value if set, zero value otherwise.
func (o *RemoveMembersPayload) GetForceRemove() (res RemoveMembersPayloadgetForceRemoveRetType) {
	res, _ = o.GetForceRemoveOk()
	return
}

// GetForceRemoveOk returns a tuple with the ForceRemove field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoveMembersPayload) GetForceRemoveOk() (ret RemoveMembersPayloadgetForceRemoveRetType, ok bool) {
	return getRemoveMembersPayloadgetForceRemoveAttributeTypeOk(o.ForceRemove)
}

// HasForceRemove returns a boolean if a field has been set.
func (o *RemoveMembersPayload) HasForceRemove() bool {
	_, ok := o.GetForceRemoveOk()
	return ok
}

// SetForceRemove gets a reference to the given bool and assigns it to the ForceRemove field.
func (o *RemoveMembersPayload) SetForceRemove(v RemoveMembersPayloadgetForceRemoveRetType) {
	setRemoveMembersPayloadgetForceRemoveAttributeType(&o.ForceRemove, v)
}

// GetMembers returns the Members field value
func (o *RemoveMembersPayload) GetMembers() (ret RemoveMembersPayloadGetMembersRetType) {
	ret, _ = o.GetMembersOk()
	return ret
}

// GetMembersOk returns a tuple with the Members field value
// and a boolean to check if the value has been set.
func (o *RemoveMembersPayload) GetMembersOk() (ret RemoveMembersPayloadGetMembersRetType, ok bool) {
	return getRemoveMembersPayloadGetMembersAttributeTypeOk(o.Members)
}

// SetMembers sets field value
func (o *RemoveMembersPayload) SetMembers(v RemoveMembersPayloadGetMembersRetType) {
	setRemoveMembersPayloadGetMembersAttributeType(&o.Members, v)
}

// GetResourceType returns the ResourceType field value
func (o *RemoveMembersPayload) GetResourceType() (ret RemoveMembersPayloadGetResourceTypeRetType) {
	ret, _ = o.GetResourceTypeOk()
	return ret
}

// GetResourceTypeOk returns a tuple with the ResourceType field value
// and a boolean to check if the value has been set.
func (o *RemoveMembersPayload) GetResourceTypeOk() (ret RemoveMembersPayloadGetResourceTypeRetType, ok bool) {
	return getRemoveMembersPayloadGetResourceTypeAttributeTypeOk(o.ResourceType)
}

// SetResourceType sets field value
func (o *RemoveMembersPayload) SetResourceType(v RemoveMembersPayloadGetResourceTypeRetType) {
	setRemoveMembersPayloadGetResourceTypeAttributeType(&o.ResourceType, v)
}

func (o RemoveMembersPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getRemoveMembersPayloadgetForceRemoveAttributeTypeOk(o.ForceRemove); ok {
		toSerialize["ForceRemove"] = val
	}
	if val, ok := getRemoveMembersPayloadGetMembersAttributeTypeOk(o.Members); ok {
		toSerialize["Members"] = val
	}
	if val, ok := getRemoveMembersPayloadGetResourceTypeAttributeTypeOk(o.ResourceType); ok {
		toSerialize["ResourceType"] = val
	}
	return toSerialize, nil
}

type NullableRemoveMembersPayload struct {
	value *RemoveMembersPayload
	isSet bool
}

func (v NullableRemoveMembersPayload) Get() *RemoveMembersPayload {
	return v.value
}

func (v *NullableRemoveMembersPayload) Set(val *RemoveMembersPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableRemoveMembersPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableRemoveMembersPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRemoveMembersPayload(val *RemoveMembersPayload) *NullableRemoveMembersPayload {
	return &NullableRemoveMembersPayload{value: val, isSet: true}
}

func (v NullableRemoveMembersPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRemoveMembersPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
