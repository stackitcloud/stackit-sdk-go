/*
STACKIT Membership API

The Membership API is used to manage memberships, roles and permissions of STACKIT resources, like projects, folders, organizations and other resources.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package authorization

import (
	"encoding/json"
)

// checks if the MembersResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MembersResponse{}

/*
	types and functions for members
*/

// isArray
type MembersResponseGetMembersAttributeType = *[]Member
type MembersResponseGetMembersArgType = []Member
type MembersResponseGetMembersRetType = []Member

func getMembersResponseGetMembersAttributeTypeOk(arg MembersResponseGetMembersAttributeType) (ret MembersResponseGetMembersRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setMembersResponseGetMembersAttributeType(arg *MembersResponseGetMembersAttributeType, val MembersResponseGetMembersRetType) {
	*arg = &val
}

/*
	types and functions for resourceId
*/

// isNotNullableString
type MembersResponseGetResourceIdAttributeType = *string

func getMembersResponseGetResourceIdAttributeTypeOk(arg MembersResponseGetResourceIdAttributeType) (ret MembersResponseGetResourceIdRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setMembersResponseGetResourceIdAttributeType(arg *MembersResponseGetResourceIdAttributeType, val MembersResponseGetResourceIdRetType) {
	*arg = &val
}

type MembersResponseGetResourceIdArgType = string
type MembersResponseGetResourceIdRetType = string

/*
	types and functions for resourceType
*/

// isNotNullableString
type MembersResponseGetResourceTypeAttributeType = *string

func getMembersResponseGetResourceTypeAttributeTypeOk(arg MembersResponseGetResourceTypeAttributeType) (ret MembersResponseGetResourceTypeRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setMembersResponseGetResourceTypeAttributeType(arg *MembersResponseGetResourceTypeAttributeType, val MembersResponseGetResourceTypeRetType) {
	*arg = &val
}

type MembersResponseGetResourceTypeArgType = string
type MembersResponseGetResourceTypeRetType = string

/*
	types and functions for writtenAt
*/

// isModel
type MembersResponseGetWrittenAtAttributeType = *Zookie
type MembersResponseGetWrittenAtArgType = Zookie
type MembersResponseGetWrittenAtRetType = Zookie

func getMembersResponseGetWrittenAtAttributeTypeOk(arg MembersResponseGetWrittenAtAttributeType) (ret MembersResponseGetWrittenAtRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setMembersResponseGetWrittenAtAttributeType(arg *MembersResponseGetWrittenAtAttributeType, val MembersResponseGetWrittenAtRetType) {
	*arg = &val
}

// MembersResponse struct for MembersResponse
type MembersResponse struct {
	// REQUIRED
	Members MembersResponseGetMembersAttributeType `json:"members" required:"true"`
	// REQUIRED
	ResourceId MembersResponseGetResourceIdAttributeType `json:"resourceId" required:"true"`
	// REQUIRED
	ResourceType MembersResponseGetResourceTypeAttributeType `json:"resourceType" required:"true"`
	WrittenAt    MembersResponseGetWrittenAtAttributeType    `json:"writtenAt,omitempty"`
}

type _MembersResponse MembersResponse

// NewMembersResponse instantiates a new MembersResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMembersResponse(members MembersResponseGetMembersArgType, resourceId MembersResponseGetResourceIdArgType, resourceType MembersResponseGetResourceTypeArgType) *MembersResponse {
	this := MembersResponse{}
	setMembersResponseGetMembersAttributeType(&this.Members, members)
	setMembersResponseGetResourceIdAttributeType(&this.ResourceId, resourceId)
	setMembersResponseGetResourceTypeAttributeType(&this.ResourceType, resourceType)
	return &this
}

// NewMembersResponseWithDefaults instantiates a new MembersResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMembersResponseWithDefaults() *MembersResponse {
	this := MembersResponse{}
	return &this
}

// GetMembers returns the Members field value
func (o *MembersResponse) GetMembers() (ret MembersResponseGetMembersRetType) {
	ret, _ = o.GetMembersOk()
	return ret
}

// GetMembersOk returns a tuple with the Members field value
// and a boolean to check if the value has been set.
func (o *MembersResponse) GetMembersOk() (ret MembersResponseGetMembersRetType, ok bool) {
	return getMembersResponseGetMembersAttributeTypeOk(o.Members)
}

// SetMembers sets field value
func (o *MembersResponse) SetMembers(v MembersResponseGetMembersRetType) {
	setMembersResponseGetMembersAttributeType(&o.Members, v)
}

// GetResourceId returns the ResourceId field value
func (o *MembersResponse) GetResourceId() (ret MembersResponseGetResourceIdRetType) {
	ret, _ = o.GetResourceIdOk()
	return ret
}

// GetResourceIdOk returns a tuple with the ResourceId field value
// and a boolean to check if the value has been set.
func (o *MembersResponse) GetResourceIdOk() (ret MembersResponseGetResourceIdRetType, ok bool) {
	return getMembersResponseGetResourceIdAttributeTypeOk(o.ResourceId)
}

// SetResourceId sets field value
func (o *MembersResponse) SetResourceId(v MembersResponseGetResourceIdRetType) {
	setMembersResponseGetResourceIdAttributeType(&o.ResourceId, v)
}

// GetResourceType returns the ResourceType field value
func (o *MembersResponse) GetResourceType() (ret MembersResponseGetResourceTypeRetType) {
	ret, _ = o.GetResourceTypeOk()
	return ret
}

// GetResourceTypeOk returns a tuple with the ResourceType field value
// and a boolean to check if the value has been set.
func (o *MembersResponse) GetResourceTypeOk() (ret MembersResponseGetResourceTypeRetType, ok bool) {
	return getMembersResponseGetResourceTypeAttributeTypeOk(o.ResourceType)
}

// SetResourceType sets field value
func (o *MembersResponse) SetResourceType(v MembersResponseGetResourceTypeRetType) {
	setMembersResponseGetResourceTypeAttributeType(&o.ResourceType, v)
}

// GetWrittenAt returns the WrittenAt field value if set, zero value otherwise.
func (o *MembersResponse) GetWrittenAt() (res MembersResponseGetWrittenAtRetType) {
	res, _ = o.GetWrittenAtOk()
	return
}

// GetWrittenAtOk returns a tuple with the WrittenAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembersResponse) GetWrittenAtOk() (ret MembersResponseGetWrittenAtRetType, ok bool) {
	return getMembersResponseGetWrittenAtAttributeTypeOk(o.WrittenAt)
}

// HasWrittenAt returns a boolean if a field has been set.
func (o *MembersResponse) HasWrittenAt() bool {
	_, ok := o.GetWrittenAtOk()
	return ok
}

// SetWrittenAt gets a reference to the given Zookie and assigns it to the WrittenAt field.
func (o *MembersResponse) SetWrittenAt(v MembersResponseGetWrittenAtRetType) {
	setMembersResponseGetWrittenAtAttributeType(&o.WrittenAt, v)
}

func (o MembersResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getMembersResponseGetMembersAttributeTypeOk(o.Members); ok {
		toSerialize["Members"] = val
	}
	if val, ok := getMembersResponseGetResourceIdAttributeTypeOk(o.ResourceId); ok {
		toSerialize["ResourceId"] = val
	}
	if val, ok := getMembersResponseGetResourceTypeAttributeTypeOk(o.ResourceType); ok {
		toSerialize["ResourceType"] = val
	}
	if val, ok := getMembersResponseGetWrittenAtAttributeTypeOk(o.WrittenAt); ok {
		toSerialize["WrittenAt"] = val
	}
	return toSerialize, nil
}

type NullableMembersResponse struct {
	value *MembersResponse
	isSet bool
}

func (v NullableMembersResponse) Get() *MembersResponse {
	return v.value
}

func (v *NullableMembersResponse) Set(val *MembersResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableMembersResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableMembersResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMembersResponse(val *MembersResponse) *NullableMembersResponse {
	return &NullableMembersResponse{value: val, isSet: true}
}

func (v NullableMembersResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMembersResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
