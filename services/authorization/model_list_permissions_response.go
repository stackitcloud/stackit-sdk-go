/*
STACKIT Membership API

The Membership API is used to manage memberships, roles and permissions of STACKIT resources, like projects, folders, organizations and other resources.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package authorization

import (
	"encoding/json"
)

// checks if the ListPermissionsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListPermissionsResponse{}

/*
	types and functions for permissions
*/

// isArray
type ListPermissionsResponseGetPermissionsAttributeType = *[]Permission
type ListPermissionsResponseGetPermissionsArgType = []Permission
type ListPermissionsResponseGetPermissionsRetType = []Permission

func getListPermissionsResponseGetPermissionsAttributeTypeOk(arg ListPermissionsResponseGetPermissionsAttributeType) (ret ListPermissionsResponseGetPermissionsRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setListPermissionsResponseGetPermissionsAttributeType(arg *ListPermissionsResponseGetPermissionsAttributeType, val ListPermissionsResponseGetPermissionsRetType) {
	*arg = &val
}

// ListPermissionsResponse struct for ListPermissionsResponse
type ListPermissionsResponse struct {
	// REQUIRED
	Permissions ListPermissionsResponseGetPermissionsAttributeType `json:"permissions" required:"true"`
}

type _ListPermissionsResponse ListPermissionsResponse

// NewListPermissionsResponse instantiates a new ListPermissionsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListPermissionsResponse(permissions ListPermissionsResponseGetPermissionsArgType) *ListPermissionsResponse {
	this := ListPermissionsResponse{}
	setListPermissionsResponseGetPermissionsAttributeType(&this.Permissions, permissions)
	return &this
}

// NewListPermissionsResponseWithDefaults instantiates a new ListPermissionsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListPermissionsResponseWithDefaults() *ListPermissionsResponse {
	this := ListPermissionsResponse{}
	return &this
}

// GetPermissions returns the Permissions field value
func (o *ListPermissionsResponse) GetPermissions() (ret ListPermissionsResponseGetPermissionsRetType) {
	ret, _ = o.GetPermissionsOk()
	return ret
}

// GetPermissionsOk returns a tuple with the Permissions field value
// and a boolean to check if the value has been set.
func (o *ListPermissionsResponse) GetPermissionsOk() (ret ListPermissionsResponseGetPermissionsRetType, ok bool) {
	return getListPermissionsResponseGetPermissionsAttributeTypeOk(o.Permissions)
}

// SetPermissions sets field value
func (o *ListPermissionsResponse) SetPermissions(v ListPermissionsResponseGetPermissionsRetType) {
	setListPermissionsResponseGetPermissionsAttributeType(&o.Permissions, v)
}

func (o ListPermissionsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getListPermissionsResponseGetPermissionsAttributeTypeOk(o.Permissions); ok {
		toSerialize["Permissions"] = val
	}
	return toSerialize, nil
}

type NullableListPermissionsResponse struct {
	value *ListPermissionsResponse
	isSet bool
}

func (v NullableListPermissionsResponse) Get() *ListPermissionsResponse {
	return v.value
}

func (v *NullableListPermissionsResponse) Set(val *ListPermissionsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListPermissionsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListPermissionsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListPermissionsResponse(val *ListPermissionsResponse) *NullableListPermissionsResponse {
	return &NullableListPermissionsResponse{value: val, isSet: true}
}

func (v NullableListPermissionsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListPermissionsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
