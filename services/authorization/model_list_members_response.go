/*
STACKIT Membership API

The Membership API is used to manage memberships, roles and permissions of STACKIT resources, like projects, folders, organizations and other resources.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package authorization

import (
	"encoding/json"
)

// checks if the ListMembersResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListMembersResponse{}

/*
	types and functions for members
*/

// isArray
type ListMembersResponseGetMembersAttributeType = *[]Member
type ListMembersResponseGetMembersArgType = []Member
type ListMembersResponseGetMembersRetType = []Member

func getListMembersResponseGetMembersAttributeTypeOk(arg ListMembersResponseGetMembersAttributeType) (ret ListMembersResponseGetMembersRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setListMembersResponseGetMembersAttributeType(arg *ListMembersResponseGetMembersAttributeType, val ListMembersResponseGetMembersRetType) {
	*arg = &val
}

/*
	types and functions for resourceId
*/

// isNotNullableString
type ListMembersResponseGetResourceIdAttributeType = *string

func getListMembersResponseGetResourceIdAttributeTypeOk(arg ListMembersResponseGetResourceIdAttributeType) (ret ListMembersResponseGetResourceIdRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setListMembersResponseGetResourceIdAttributeType(arg *ListMembersResponseGetResourceIdAttributeType, val ListMembersResponseGetResourceIdRetType) {
	*arg = &val
}

type ListMembersResponseGetResourceIdArgType = string
type ListMembersResponseGetResourceIdRetType = string

/*
	types and functions for resourceType
*/

// isNotNullableString
type ListMembersResponseGetResourceTypeAttributeType = *string

func getListMembersResponseGetResourceTypeAttributeTypeOk(arg ListMembersResponseGetResourceTypeAttributeType) (ret ListMembersResponseGetResourceTypeRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setListMembersResponseGetResourceTypeAttributeType(arg *ListMembersResponseGetResourceTypeAttributeType, val ListMembersResponseGetResourceTypeRetType) {
	*arg = &val
}

type ListMembersResponseGetResourceTypeArgType = string
type ListMembersResponseGetResourceTypeRetType = string

// ListMembersResponse struct for ListMembersResponse
type ListMembersResponse struct {
	// REQUIRED
	Members ListMembersResponseGetMembersAttributeType `json:"members"`
	// REQUIRED
	ResourceId ListMembersResponseGetResourceIdAttributeType `json:"resourceId"`
	// REQUIRED
	ResourceType ListMembersResponseGetResourceTypeAttributeType `json:"resourceType"`
}

type _ListMembersResponse ListMembersResponse

// NewListMembersResponse instantiates a new ListMembersResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListMembersResponse(members ListMembersResponseGetMembersArgType, resourceId ListMembersResponseGetResourceIdArgType, resourceType ListMembersResponseGetResourceTypeArgType) *ListMembersResponse {
	this := ListMembersResponse{}
	setListMembersResponseGetMembersAttributeType(&this.Members, members)
	setListMembersResponseGetResourceIdAttributeType(&this.ResourceId, resourceId)
	setListMembersResponseGetResourceTypeAttributeType(&this.ResourceType, resourceType)
	return &this
}

// NewListMembersResponseWithDefaults instantiates a new ListMembersResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListMembersResponseWithDefaults() *ListMembersResponse {
	this := ListMembersResponse{}
	return &this
}

// GetMembers returns the Members field value
func (o *ListMembersResponse) GetMembers() (ret ListMembersResponseGetMembersRetType) {
	ret, _ = o.GetMembersOk()
	return ret
}

// GetMembersOk returns a tuple with the Members field value
// and a boolean to check if the value has been set.
func (o *ListMembersResponse) GetMembersOk() (ret ListMembersResponseGetMembersRetType, ok bool) {
	return getListMembersResponseGetMembersAttributeTypeOk(o.Members)
}

// SetMembers sets field value
func (o *ListMembersResponse) SetMembers(v ListMembersResponseGetMembersRetType) {
	setListMembersResponseGetMembersAttributeType(&o.Members, v)
}

// GetResourceId returns the ResourceId field value
func (o *ListMembersResponse) GetResourceId() (ret ListMembersResponseGetResourceIdRetType) {
	ret, _ = o.GetResourceIdOk()
	return ret
}

// GetResourceIdOk returns a tuple with the ResourceId field value
// and a boolean to check if the value has been set.
func (o *ListMembersResponse) GetResourceIdOk() (ret ListMembersResponseGetResourceIdRetType, ok bool) {
	return getListMembersResponseGetResourceIdAttributeTypeOk(o.ResourceId)
}

// SetResourceId sets field value
func (o *ListMembersResponse) SetResourceId(v ListMembersResponseGetResourceIdRetType) {
	setListMembersResponseGetResourceIdAttributeType(&o.ResourceId, v)
}

// GetResourceType returns the ResourceType field value
func (o *ListMembersResponse) GetResourceType() (ret ListMembersResponseGetResourceTypeRetType) {
	ret, _ = o.GetResourceTypeOk()
	return ret
}

// GetResourceTypeOk returns a tuple with the ResourceType field value
// and a boolean to check if the value has been set.
func (o *ListMembersResponse) GetResourceTypeOk() (ret ListMembersResponseGetResourceTypeRetType, ok bool) {
	return getListMembersResponseGetResourceTypeAttributeTypeOk(o.ResourceType)
}

// SetResourceType sets field value
func (o *ListMembersResponse) SetResourceType(v ListMembersResponseGetResourceTypeRetType) {
	setListMembersResponseGetResourceTypeAttributeType(&o.ResourceType, v)
}

func (o ListMembersResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getListMembersResponseGetMembersAttributeTypeOk(o.Members); ok {
		toSerialize["Members"] = val
	}
	if val, ok := getListMembersResponseGetResourceIdAttributeTypeOk(o.ResourceId); ok {
		toSerialize["ResourceId"] = val
	}
	if val, ok := getListMembersResponseGetResourceTypeAttributeTypeOk(o.ResourceType); ok {
		toSerialize["ResourceType"] = val
	}
	return toSerialize, nil
}

type NullableListMembersResponse struct {
	value *ListMembersResponse
	isSet bool
}

func (v NullableListMembersResponse) Get() *ListMembersResponse {
	return v.value
}

func (v *NullableListMembersResponse) Set(val *ListMembersResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListMembersResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListMembersResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListMembersResponse(val *ListMembersResponse) *NullableListMembersResponse {
	return &NullableListMembersResponse{value: val, isSet: true}
}

func (v NullableListMembersResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListMembersResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
