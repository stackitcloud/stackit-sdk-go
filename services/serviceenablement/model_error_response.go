/*
STACKIT Service Enablement API

STACKIT Service Enablement API

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package serviceenablement

import (
	"encoding/json"
	"time"
)

// checks if the ErrorResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ErrorResponse{}

/*
	types and functions for error
*/

// isNotNullableString
type ErrorResponseGetErrorAttributeType = *string

func getErrorResponseGetErrorAttributeTypeOk(arg ErrorResponseGetErrorAttributeType) (ret ErrorResponseGetErrorRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setErrorResponseGetErrorAttributeType(arg *ErrorResponseGetErrorAttributeType, val ErrorResponseGetErrorRetType) {
	*arg = &val
}

type ErrorResponseGetErrorArgType = string
type ErrorResponseGetErrorRetType = string

/*
	types and functions for message
*/

// isNotNullableString
type ErrorResponseGetMessageAttributeType = *string

func getErrorResponseGetMessageAttributeTypeOk(arg ErrorResponseGetMessageAttributeType) (ret ErrorResponseGetMessageRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setErrorResponseGetMessageAttributeType(arg *ErrorResponseGetMessageAttributeType, val ErrorResponseGetMessageRetType) {
	*arg = &val
}

type ErrorResponseGetMessageArgType = string
type ErrorResponseGetMessageRetType = string

/*
	types and functions for path
*/

// isNotNullableString
type ErrorResponseGetPathAttributeType = *string

func getErrorResponseGetPathAttributeTypeOk(arg ErrorResponseGetPathAttributeType) (ret ErrorResponseGetPathRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setErrorResponseGetPathAttributeType(arg *ErrorResponseGetPathAttributeType, val ErrorResponseGetPathRetType) {
	*arg = &val
}

type ErrorResponseGetPathArgType = string
type ErrorResponseGetPathRetType = string

/*
	types and functions for status
*/

// isInteger
type ErrorResponseGetStatusAttributeType = *int64
type ErrorResponseGetStatusArgType = int64
type ErrorResponseGetStatusRetType = int64

func getErrorResponseGetStatusAttributeTypeOk(arg ErrorResponseGetStatusAttributeType) (ret ErrorResponseGetStatusRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setErrorResponseGetStatusAttributeType(arg *ErrorResponseGetStatusAttributeType, val ErrorResponseGetStatusRetType) {
	*arg = &val
}

/*
	types and functions for timestamp
*/

// isDateTime
type ErrorResponseGetTimestampAttributeType = *time.Time
type ErrorResponseGetTimestampArgType = time.Time
type ErrorResponseGetTimestampRetType = time.Time

func getErrorResponseGetTimestampAttributeTypeOk(arg ErrorResponseGetTimestampAttributeType) (ret ErrorResponseGetTimestampRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setErrorResponseGetTimestampAttributeType(arg *ErrorResponseGetTimestampAttributeType, val ErrorResponseGetTimestampRetType) {
	*arg = &val
}

// ErrorResponse struct for ErrorResponse
type ErrorResponse struct {
	Error   ErrorResponseGetErrorAttributeType   `json:"error,omitempty"`
	Message ErrorResponseGetMessageAttributeType `json:"message,omitempty"`
	Path    ErrorResponseGetPathAttributeType    `json:"path,omitempty"`
	// Can be cast to int32 without loss of precision.
	Status    ErrorResponseGetStatusAttributeType    `json:"status,omitempty"`
	Timestamp ErrorResponseGetTimestampAttributeType `json:"timestamp,omitempty"`
}

// NewErrorResponse instantiates a new ErrorResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewErrorResponse() *ErrorResponse {
	this := ErrorResponse{}
	return &this
}

// NewErrorResponseWithDefaults instantiates a new ErrorResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewErrorResponseWithDefaults() *ErrorResponse {
	this := ErrorResponse{}
	return &this
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *ErrorResponse) GetError() (res ErrorResponseGetErrorRetType) {
	res, _ = o.GetErrorOk()
	return
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrorResponse) GetErrorOk() (ret ErrorResponseGetErrorRetType, ok bool) {
	return getErrorResponseGetErrorAttributeTypeOk(o.Error)
}

// HasError returns a boolean if a field has been set.
func (o *ErrorResponse) HasError() bool {
	_, ok := o.GetErrorOk()
	return ok
}

// SetError gets a reference to the given string and assigns it to the Error field.
func (o *ErrorResponse) SetError(v ErrorResponseGetErrorRetType) {
	setErrorResponseGetErrorAttributeType(&o.Error, v)
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *ErrorResponse) GetMessage() (res ErrorResponseGetMessageRetType) {
	res, _ = o.GetMessageOk()
	return
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrorResponse) GetMessageOk() (ret ErrorResponseGetMessageRetType, ok bool) {
	return getErrorResponseGetMessageAttributeTypeOk(o.Message)
}

// HasMessage returns a boolean if a field has been set.
func (o *ErrorResponse) HasMessage() bool {
	_, ok := o.GetMessageOk()
	return ok
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *ErrorResponse) SetMessage(v ErrorResponseGetMessageRetType) {
	setErrorResponseGetMessageAttributeType(&o.Message, v)
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *ErrorResponse) GetPath() (res ErrorResponseGetPathRetType) {
	res, _ = o.GetPathOk()
	return
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrorResponse) GetPathOk() (ret ErrorResponseGetPathRetType, ok bool) {
	return getErrorResponseGetPathAttributeTypeOk(o.Path)
}

// HasPath returns a boolean if a field has been set.
func (o *ErrorResponse) HasPath() bool {
	_, ok := o.GetPathOk()
	return ok
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *ErrorResponse) SetPath(v ErrorResponseGetPathRetType) {
	setErrorResponseGetPathAttributeType(&o.Path, v)
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ErrorResponse) GetStatus() (res ErrorResponseGetStatusRetType) {
	res, _ = o.GetStatusOk()
	return
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrorResponse) GetStatusOk() (ret ErrorResponseGetStatusRetType, ok bool) {
	return getErrorResponseGetStatusAttributeTypeOk(o.Status)
}

// HasStatus returns a boolean if a field has been set.
func (o *ErrorResponse) HasStatus() bool {
	_, ok := o.GetStatusOk()
	return ok
}

// SetStatus gets a reference to the given int64 and assigns it to the Status field.
func (o *ErrorResponse) SetStatus(v ErrorResponseGetStatusRetType) {
	setErrorResponseGetStatusAttributeType(&o.Status, v)
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *ErrorResponse) GetTimestamp() (res ErrorResponseGetTimestampRetType) {
	res, _ = o.GetTimestampOk()
	return
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrorResponse) GetTimestampOk() (ret ErrorResponseGetTimestampRetType, ok bool) {
	return getErrorResponseGetTimestampAttributeTypeOk(o.Timestamp)
}

// HasTimestamp returns a boolean if a field has been set.
func (o *ErrorResponse) HasTimestamp() bool {
	_, ok := o.GetTimestampOk()
	return ok
}

// SetTimestamp gets a reference to the given time.Time and assigns it to the Timestamp field.
func (o *ErrorResponse) SetTimestamp(v ErrorResponseGetTimestampRetType) {
	setErrorResponseGetTimestampAttributeType(&o.Timestamp, v)
}

func (o ErrorResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getErrorResponseGetErrorAttributeTypeOk(o.Error); ok {
		toSerialize["Error"] = val
	}
	if val, ok := getErrorResponseGetMessageAttributeTypeOk(o.Message); ok {
		toSerialize["Message"] = val
	}
	if val, ok := getErrorResponseGetPathAttributeTypeOk(o.Path); ok {
		toSerialize["Path"] = val
	}
	if val, ok := getErrorResponseGetStatusAttributeTypeOk(o.Status); ok {
		toSerialize["Status"] = val
	}
	if val, ok := getErrorResponseGetTimestampAttributeTypeOk(o.Timestamp); ok {
		toSerialize["Timestamp"] = val
	}
	return toSerialize, nil
}

type NullableErrorResponse struct {
	value *ErrorResponse
	isSet bool
}

func (v NullableErrorResponse) Get() *ErrorResponse {
	return v.value
}

func (v *NullableErrorResponse) Set(val *ErrorResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableErrorResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableErrorResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableErrorResponse(val *ErrorResponse) *NullableErrorResponse {
	return &NullableErrorResponse{value: val, isSet: true}
}

func (v NullableErrorResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableErrorResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
