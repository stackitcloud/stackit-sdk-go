/*
STACKIT Service Enablement API

STACKIT Service Enablement API

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package serviceenablement

import (
	"encoding/json"
)

// checks if the Parameters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Parameters{}

/*
	types and functions for general
*/

// isModel
type ParametersGetGeneralAttributeType = *ParametersGeneral
type ParametersGetGeneralArgType = ParametersGeneral
type ParametersGetGeneralRetType = ParametersGeneral

func getParametersGetGeneralAttributeTypeOk(arg ParametersGetGeneralAttributeType) (ret ParametersGetGeneralRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setParametersGetGeneralAttributeType(arg *ParametersGetGeneralAttributeType, val ParametersGetGeneralRetType) {
	*arg = &val
}

// Parameters service parameters
type Parameters struct {
	General ParametersGetGeneralAttributeType `json:"general,omitempty"`
}

// NewParameters instantiates a new Parameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewParameters() *Parameters {
	this := Parameters{}
	return &this
}

// NewParametersWithDefaults instantiates a new Parameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewParametersWithDefaults() *Parameters {
	this := Parameters{}
	return &this
}

// GetGeneral returns the General field value if set, zero value otherwise.
func (o *Parameters) GetGeneral() (res ParametersGetGeneralRetType) {
	res, _ = o.GetGeneralOk()
	return
}

// GetGeneralOk returns a tuple with the General field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Parameters) GetGeneralOk() (ret ParametersGetGeneralRetType, ok bool) {
	return getParametersGetGeneralAttributeTypeOk(o.General)
}

// HasGeneral returns a boolean if a field has been set.
func (o *Parameters) HasGeneral() bool {
	_, ok := o.GetGeneralOk()
	return ok
}

// SetGeneral gets a reference to the given ParametersGeneral and assigns it to the General field.
func (o *Parameters) SetGeneral(v ParametersGetGeneralRetType) {
	setParametersGetGeneralAttributeType(&o.General, v)
}

func (o Parameters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getParametersGetGeneralAttributeTypeOk(o.General); ok {
		toSerialize["General"] = val
	}
	return toSerialize, nil
}

type NullableParameters struct {
	value *Parameters
	isSet bool
}

func (v NullableParameters) Get() *Parameters {
	return v.value
}

func (v *NullableParameters) Set(val *Parameters) {
	v.value = val
	v.isSet = true
}

func (v NullableParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableParameters(val *Parameters) *NullableParameters {
	return &NullableParameters{value: val, isSet: true}
}

func (v NullableParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
