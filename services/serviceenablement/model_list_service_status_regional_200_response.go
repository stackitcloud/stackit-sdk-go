/*
STACKIT Service Enablement API

STACKIT Service Enablement API

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package serviceenablement

import (
	"encoding/json"
)

// checks if the ListServiceStatusRegional200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListServiceStatusRegional200Response{}

// ListServiceStatusRegional200Response struct for ListServiceStatusRegional200Response
type ListServiceStatusRegional200Response struct {
	Items      *[]ServiceStatus `json:"items,omitempty"`
	NextCursor *string          `json:"nextCursor,omitempty"`
}

// NewListServiceStatusRegional200Response instantiates a new ListServiceStatusRegional200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListServiceStatusRegional200Response() *ListServiceStatusRegional200Response {
	this := ListServiceStatusRegional200Response{}
	return &this
}

// NewListServiceStatusRegional200ResponseWithDefaults instantiates a new ListServiceStatusRegional200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListServiceStatusRegional200ResponseWithDefaults() *ListServiceStatusRegional200Response {
	this := ListServiceStatusRegional200Response{}
	return &this
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *ListServiceStatusRegional200Response) GetItems() *[]ServiceStatus {
	if o == nil || IsNil(o.Items) {
		var ret *[]ServiceStatus
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListServiceStatusRegional200Response) GetItemsOk() (*[]ServiceStatus, bool) {
	if o == nil || IsNil(o.Items) {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *ListServiceStatusRegional200Response) HasItems() bool {
	if o != nil && !IsNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given []ServiceStatus and assigns it to the Items field.
func (o *ListServiceStatusRegional200Response) SetItems(v *[]ServiceStatus) {
	o.Items = v
}

// GetNextCursor returns the NextCursor field value if set, zero value otherwise.
func (o *ListServiceStatusRegional200Response) GetNextCursor() *string {
	if o == nil || IsNil(o.NextCursor) {
		var ret *string
		return ret
	}
	return o.NextCursor
}

// GetNextCursorOk returns a tuple with the NextCursor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListServiceStatusRegional200Response) GetNextCursorOk() (*string, bool) {
	if o == nil || IsNil(o.NextCursor) {
		return nil, false
	}
	return o.NextCursor, true
}

// HasNextCursor returns a boolean if a field has been set.
func (o *ListServiceStatusRegional200Response) HasNextCursor() bool {
	if o != nil && !IsNil(o.NextCursor) {
		return true
	}

	return false
}

// SetNextCursor gets a reference to the given string and assigns it to the NextCursor field.
func (o *ListServiceStatusRegional200Response) SetNextCursor(v *string) {
	o.NextCursor = v
}

func (o ListServiceStatusRegional200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Items) {
		toSerialize["items"] = o.Items
	}
	if !IsNil(o.NextCursor) {
		toSerialize["nextCursor"] = o.NextCursor
	}
	return toSerialize, nil
}

type NullableListServiceStatusRegional200Response struct {
	value *ListServiceStatusRegional200Response
	isSet bool
}

func (v NullableListServiceStatusRegional200Response) Get() *ListServiceStatusRegional200Response {
	return v.value
}

func (v *NullableListServiceStatusRegional200Response) Set(val *ListServiceStatusRegional200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableListServiceStatusRegional200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableListServiceStatusRegional200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListServiceStatusRegional200Response(val *ListServiceStatusRegional200Response) *NullableListServiceStatusRegional200Response {
	return &NullableListServiceStatusRegional200Response{value: val, isSet: true}
}

func (v NullableListServiceStatusRegional200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListServiceStatusRegional200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
