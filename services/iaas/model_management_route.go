/*
IaaS-API

This API allows you to create and modify IaaS resources.

API version: 2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iaas

import (
	"encoding/json"
	"time"
)

// checks if the ManagementRoute type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ManagementRoute{}

/*
	types and functions for createdAt
*/

// isDateTime
type ManagementRouteGetCreatedAtAttributeType = *time.Time
type ManagementRouteGetCreatedAtArgType = time.Time
type ManagementRouteGetCreatedAtRetType = time.Time

func getManagementRouteGetCreatedAtAttributeTypeOk(arg ManagementRouteGetCreatedAtAttributeType) (ret ManagementRouteGetCreatedAtRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setManagementRouteGetCreatedAtAttributeType(arg *ManagementRouteGetCreatedAtAttributeType, val ManagementRouteGetCreatedAtRetType) {
	*arg = &val
}

/*
	types and functions for destination
*/

// isModel
type ManagementRouteGetDestinationAttributeType = *ManagementRouteDestination
type ManagementRouteGetDestinationArgType = ManagementRouteDestination
type ManagementRouteGetDestinationRetType = ManagementRouteDestination

func getManagementRouteGetDestinationAttributeTypeOk(arg ManagementRouteGetDestinationAttributeType) (ret ManagementRouteGetDestinationRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setManagementRouteGetDestinationAttributeType(arg *ManagementRouteGetDestinationAttributeType, val ManagementRouteGetDestinationRetType) {
	*arg = &val
}

/*
	types and functions for id
*/

// isNotNullableString
type ManagementRouteGetIdAttributeType = *string

func getManagementRouteGetIdAttributeTypeOk(arg ManagementRouteGetIdAttributeType) (ret ManagementRouteGetIdRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setManagementRouteGetIdAttributeType(arg *ManagementRouteGetIdAttributeType, val ManagementRouteGetIdRetType) {
	*arg = &val
}

type ManagementRouteGetIdArgType = string
type ManagementRouteGetIdRetType = string

/*
	types and functions for labels
*/

// isFreeform
type ManagementRouteGetLabelsAttributeType = *map[string]interface{}
type ManagementRouteGetLabelsArgType = map[string]interface{}
type ManagementRouteGetLabelsRetType = map[string]interface{}

func getManagementRouteGetLabelsAttributeTypeOk(arg ManagementRouteGetLabelsAttributeType) (ret ManagementRouteGetLabelsRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setManagementRouteGetLabelsAttributeType(arg *ManagementRouteGetLabelsAttributeType, val ManagementRouteGetLabelsRetType) {
	*arg = &val
}

/*
	types and functions for nexthop
*/

// isModel
type ManagementRouteGetNexthopAttributeType = *ManagementRouteNexthop
type ManagementRouteGetNexthopArgType = ManagementRouteNexthop
type ManagementRouteGetNexthopRetType = ManagementRouteNexthop

func getManagementRouteGetNexthopAttributeTypeOk(arg ManagementRouteGetNexthopAttributeType) (ret ManagementRouteGetNexthopRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setManagementRouteGetNexthopAttributeType(arg *ManagementRouteGetNexthopAttributeType, val ManagementRouteGetNexthopRetType) {
	*arg = &val
}

/*
	types and functions for updatedAt
*/

// isDateTime
type ManagementRouteGetUpdatedAtAttributeType = *time.Time
type ManagementRouteGetUpdatedAtArgType = time.Time
type ManagementRouteGetUpdatedAtRetType = time.Time

func getManagementRouteGetUpdatedAtAttributeTypeOk(arg ManagementRouteGetUpdatedAtAttributeType) (ret ManagementRouteGetUpdatedAtRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setManagementRouteGetUpdatedAtAttributeType(arg *ManagementRouteGetUpdatedAtAttributeType, val ManagementRouteGetUpdatedAtRetType) {
	*arg = &val
}

// ManagementRoute Object represents a management network route (IPv6 only).
type ManagementRoute struct {
	// Date-time when resource was created.
	CreatedAt ManagementRouteGetCreatedAtAttributeType `json:"createdAt,omitempty"`
	// REQUIRED
	Destination ManagementRouteGetDestinationAttributeType `json:"destination" required:"true"`
	// Universally Unique Identifier (UUID).
	Id ManagementRouteGetIdAttributeType `json:"id,omitempty"`
	// Object that represents the labels of an object. Regex for keys: `^(?=.{1,63}$)([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$`. Regex for values: `^(?=.{0,63}$)(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])*$`. Providing a `null` value for a key will remove that key.
	Labels ManagementRouteGetLabelsAttributeType `json:"labels,omitempty"`
	// REQUIRED
	Nexthop ManagementRouteGetNexthopAttributeType `json:"nexthop" required:"true"`
	// Date-time when resource was last updated.
	UpdatedAt ManagementRouteGetUpdatedAtAttributeType `json:"updatedAt,omitempty"`
}

type _ManagementRoute ManagementRoute

// NewManagementRoute instantiates a new ManagementRoute object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManagementRoute(destination ManagementRouteGetDestinationArgType, nexthop ManagementRouteGetNexthopArgType) *ManagementRoute {
	this := ManagementRoute{}
	setManagementRouteGetDestinationAttributeType(&this.Destination, destination)
	setManagementRouteGetNexthopAttributeType(&this.Nexthop, nexthop)
	return &this
}

// NewManagementRouteWithDefaults instantiates a new ManagementRoute object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManagementRouteWithDefaults() *ManagementRoute {
	this := ManagementRoute{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ManagementRoute) GetCreatedAt() (res ManagementRouteGetCreatedAtRetType) {
	res, _ = o.GetCreatedAtOk()
	return
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagementRoute) GetCreatedAtOk() (ret ManagementRouteGetCreatedAtRetType, ok bool) {
	return getManagementRouteGetCreatedAtAttributeTypeOk(o.CreatedAt)
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ManagementRoute) HasCreatedAt() bool {
	_, ok := o.GetCreatedAtOk()
	return ok
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *ManagementRoute) SetCreatedAt(v ManagementRouteGetCreatedAtRetType) {
	setManagementRouteGetCreatedAtAttributeType(&o.CreatedAt, v)
}

// GetDestination returns the Destination field value
func (o *ManagementRoute) GetDestination() (ret ManagementRouteGetDestinationRetType) {
	ret, _ = o.GetDestinationOk()
	return ret
}

// GetDestinationOk returns a tuple with the Destination field value
// and a boolean to check if the value has been set.
func (o *ManagementRoute) GetDestinationOk() (ret ManagementRouteGetDestinationRetType, ok bool) {
	return getManagementRouteGetDestinationAttributeTypeOk(o.Destination)
}

// SetDestination sets field value
func (o *ManagementRoute) SetDestination(v ManagementRouteGetDestinationRetType) {
	setManagementRouteGetDestinationAttributeType(&o.Destination, v)
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ManagementRoute) GetId() (res ManagementRouteGetIdRetType) {
	res, _ = o.GetIdOk()
	return
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagementRoute) GetIdOk() (ret ManagementRouteGetIdRetType, ok bool) {
	return getManagementRouteGetIdAttributeTypeOk(o.Id)
}

// HasId returns a boolean if a field has been set.
func (o *ManagementRoute) HasId() bool {
	_, ok := o.GetIdOk()
	return ok
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ManagementRoute) SetId(v ManagementRouteGetIdRetType) {
	setManagementRouteGetIdAttributeType(&o.Id, v)
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *ManagementRoute) GetLabels() (res ManagementRouteGetLabelsRetType) {
	res, _ = o.GetLabelsOk()
	return
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagementRoute) GetLabelsOk() (ret ManagementRouteGetLabelsRetType, ok bool) {
	return getManagementRouteGetLabelsAttributeTypeOk(o.Labels)
}

// HasLabels returns a boolean if a field has been set.
func (o *ManagementRoute) HasLabels() bool {
	_, ok := o.GetLabelsOk()
	return ok
}

// SetLabels gets a reference to the given map[string]interface{} and assigns it to the Labels field.
func (o *ManagementRoute) SetLabels(v ManagementRouteGetLabelsRetType) {
	setManagementRouteGetLabelsAttributeType(&o.Labels, v)
}

// GetNexthop returns the Nexthop field value
func (o *ManagementRoute) GetNexthop() (ret ManagementRouteGetNexthopRetType) {
	ret, _ = o.GetNexthopOk()
	return ret
}

// GetNexthopOk returns a tuple with the Nexthop field value
// and a boolean to check if the value has been set.
func (o *ManagementRoute) GetNexthopOk() (ret ManagementRouteGetNexthopRetType, ok bool) {
	return getManagementRouteGetNexthopAttributeTypeOk(o.Nexthop)
}

// SetNexthop sets field value
func (o *ManagementRoute) SetNexthop(v ManagementRouteGetNexthopRetType) {
	setManagementRouteGetNexthopAttributeType(&o.Nexthop, v)
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *ManagementRoute) GetUpdatedAt() (res ManagementRouteGetUpdatedAtRetType) {
	res, _ = o.GetUpdatedAtOk()
	return
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagementRoute) GetUpdatedAtOk() (ret ManagementRouteGetUpdatedAtRetType, ok bool) {
	return getManagementRouteGetUpdatedAtAttributeTypeOk(o.UpdatedAt)
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *ManagementRoute) HasUpdatedAt() bool {
	_, ok := o.GetUpdatedAtOk()
	return ok
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *ManagementRoute) SetUpdatedAt(v ManagementRouteGetUpdatedAtRetType) {
	setManagementRouteGetUpdatedAtAttributeType(&o.UpdatedAt, v)
}

func (o ManagementRoute) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getManagementRouteGetCreatedAtAttributeTypeOk(o.CreatedAt); ok {
		toSerialize["CreatedAt"] = val
	}
	if val, ok := getManagementRouteGetDestinationAttributeTypeOk(o.Destination); ok {
		toSerialize["Destination"] = val
	}
	if val, ok := getManagementRouteGetIdAttributeTypeOk(o.Id); ok {
		toSerialize["Id"] = val
	}
	if val, ok := getManagementRouteGetLabelsAttributeTypeOk(o.Labels); ok {
		toSerialize["Labels"] = val
	}
	if val, ok := getManagementRouteGetNexthopAttributeTypeOk(o.Nexthop); ok {
		toSerialize["Nexthop"] = val
	}
	if val, ok := getManagementRouteGetUpdatedAtAttributeTypeOk(o.UpdatedAt); ok {
		toSerialize["UpdatedAt"] = val
	}
	return toSerialize, nil
}

type NullableManagementRoute struct {
	value *ManagementRoute
	isSet bool
}

func (v NullableManagementRoute) Get() *ManagementRoute {
	return v.value
}

func (v *NullableManagementRoute) Set(val *ManagementRoute) {
	v.value = val
	v.isSet = true
}

func (v NullableManagementRoute) IsSet() bool {
	return v.isSet
}

func (v *NullableManagementRoute) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManagementRoute(val *ManagementRoute) *NullableManagementRoute {
	return &NullableManagementRoute{value: val, isSet: true}
}

func (v NullableManagementRoute) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManagementRoute) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
