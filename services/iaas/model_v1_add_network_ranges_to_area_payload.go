/*
IaaS-API

This API allows you to create and modify IaaS resources.

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iaas

import (
	"encoding/json"
)

// checks if the V1AddNetworkRangesToAreaPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1AddNetworkRangesToAreaPayload{}

// V1AddNetworkRangesToAreaPayload struct for V1AddNetworkRangesToAreaPayload
type V1AddNetworkRangesToAreaPayload struct {
	// A list of network ranges.
	Ipv4 *[]NetworkRange `json:"ipv4,omitempty"`
}

// NewV1AddNetworkRangesToAreaPayload instantiates a new V1AddNetworkRangesToAreaPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1AddNetworkRangesToAreaPayload() *V1AddNetworkRangesToAreaPayload {
	this := V1AddNetworkRangesToAreaPayload{}
	return &this
}

// NewV1AddNetworkRangesToAreaPayloadWithDefaults instantiates a new V1AddNetworkRangesToAreaPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1AddNetworkRangesToAreaPayloadWithDefaults() *V1AddNetworkRangesToAreaPayload {
	this := V1AddNetworkRangesToAreaPayload{}
	return &this
}

// GetIpv4 returns the Ipv4 field value if set, zero value otherwise.
func (o *V1AddNetworkRangesToAreaPayload) GetIpv4() *[]NetworkRange {
	if o == nil || IsNil(o.Ipv4) {
		var ret *[]NetworkRange
		return ret
	}
	return o.Ipv4
}

// GetIpv4Ok returns a tuple with the Ipv4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1AddNetworkRangesToAreaPayload) GetIpv4Ok() (*[]NetworkRange, bool) {
	if o == nil || IsNil(o.Ipv4) {
		return nil, false
	}
	return o.Ipv4, true
}

// HasIpv4 returns a boolean if a field has been set.
func (o *V1AddNetworkRangesToAreaPayload) HasIpv4() bool {
	if o != nil && !IsNil(o.Ipv4) {
		return true
	}

	return false
}

// SetIpv4 gets a reference to the given []NetworkRange and assigns it to the Ipv4 field.
func (o *V1AddNetworkRangesToAreaPayload) SetIpv4(v *[]NetworkRange) {
	o.Ipv4 = v
}

func (o V1AddNetworkRangesToAreaPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ipv4) {
		toSerialize["ipv4"] = o.Ipv4
	}
	return toSerialize, nil
}

type NullableV1AddNetworkRangesToAreaPayload struct {
	value *V1AddNetworkRangesToAreaPayload
	isSet bool
}

func (v NullableV1AddNetworkRangesToAreaPayload) Get() *V1AddNetworkRangesToAreaPayload {
	return v.value
}

func (v *NullableV1AddNetworkRangesToAreaPayload) Set(val *V1AddNetworkRangesToAreaPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableV1AddNetworkRangesToAreaPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableV1AddNetworkRangesToAreaPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1AddNetworkRangesToAreaPayload(val *V1AddNetworkRangesToAreaPayload) *NullableV1AddNetworkRangesToAreaPayload {
	return &NullableV1AddNetworkRangesToAreaPayload{value: val, isSet: true}
}

func (v NullableV1AddNetworkRangesToAreaPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1AddNetworkRangesToAreaPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
