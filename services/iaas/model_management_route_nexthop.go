/*
IaaS-API

This API allows you to create and modify IaaS resources.

API version: 2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iaas

import (
	"encoding/json"
)

// checks if the ManagementRouteNexthop type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ManagementRouteNexthop{}

/*
	types and functions for type
*/

// isNotNullableString
type ManagementRouteNexthopGetTypeAttributeType = *string

func getManagementRouteNexthopGetTypeAttributeTypeOk(arg ManagementRouteNexthopGetTypeAttributeType) (ret ManagementRouteNexthopGetTypeRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setManagementRouteNexthopGetTypeAttributeType(arg *ManagementRouteNexthopGetTypeAttributeType, val ManagementRouteNexthopGetTypeRetType) {
	*arg = &val
}

type ManagementRouteNexthopGetTypeArgType = string
type ManagementRouteNexthopGetTypeRetType = string

/*
	types and functions for value
*/

// isNotNullableString
type ManagementRouteNexthopGetValueAttributeType = *string

func getManagementRouteNexthopGetValueAttributeTypeOk(arg ManagementRouteNexthopGetValueAttributeType) (ret ManagementRouteNexthopGetValueRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setManagementRouteNexthopGetValueAttributeType(arg *ManagementRouteNexthopGetValueAttributeType, val ManagementRouteNexthopGetValueRetType) {
	*arg = &val
}

type ManagementRouteNexthopGetValueArgType = string
type ManagementRouteNexthopGetValueRetType = string

// ManagementRouteNexthop struct for ManagementRouteNexthop
type ManagementRouteNexthop struct {
	// REQUIRED
	Type ManagementRouteNexthopGetTypeAttributeType `json:"type" required:"true"`
	// An IPv6 address.
	// REQUIRED
	Value ManagementRouteNexthopGetValueAttributeType `json:"value" required:"true"`
}

type _ManagementRouteNexthop ManagementRouteNexthop

// NewManagementRouteNexthop instantiates a new ManagementRouteNexthop object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManagementRouteNexthop(types ManagementRouteNexthopGetTypeArgType, value ManagementRouteNexthopGetValueArgType) *ManagementRouteNexthop {
	this := ManagementRouteNexthop{}
	setManagementRouteNexthopGetTypeAttributeType(&this.Type, types)
	setManagementRouteNexthopGetValueAttributeType(&this.Value, value)
	return &this
}

// NewManagementRouteNexthopWithDefaults instantiates a new ManagementRouteNexthop object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManagementRouteNexthopWithDefaults() *ManagementRouteNexthop {
	this := ManagementRouteNexthop{}
	return &this
}

// GetType returns the Type field value
func (o *ManagementRouteNexthop) GetType() (ret ManagementRouteNexthopGetTypeRetType) {
	ret, _ = o.GetTypeOk()
	return ret
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ManagementRouteNexthop) GetTypeOk() (ret ManagementRouteNexthopGetTypeRetType, ok bool) {
	return getManagementRouteNexthopGetTypeAttributeTypeOk(o.Type)
}

// SetType sets field value
func (o *ManagementRouteNexthop) SetType(v ManagementRouteNexthopGetTypeRetType) {
	setManagementRouteNexthopGetTypeAttributeType(&o.Type, v)
}

// GetValue returns the Value field value
func (o *ManagementRouteNexthop) GetValue() (ret ManagementRouteNexthopGetValueRetType) {
	ret, _ = o.GetValueOk()
	return ret
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *ManagementRouteNexthop) GetValueOk() (ret ManagementRouteNexthopGetValueRetType, ok bool) {
	return getManagementRouteNexthopGetValueAttributeTypeOk(o.Value)
}

// SetValue sets field value
func (o *ManagementRouteNexthop) SetValue(v ManagementRouteNexthopGetValueRetType) {
	setManagementRouteNexthopGetValueAttributeType(&o.Value, v)
}

func (o ManagementRouteNexthop) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getManagementRouteNexthopGetTypeAttributeTypeOk(o.Type); ok {
		toSerialize["Type"] = val
	}
	if val, ok := getManagementRouteNexthopGetValueAttributeTypeOk(o.Value); ok {
		toSerialize["Value"] = val
	}
	return toSerialize, nil
}

type NullableManagementRouteNexthop struct {
	value *ManagementRouteNexthop
	isSet bool
}

func (v NullableManagementRouteNexthop) Get() *ManagementRouteNexthop {
	return v.value
}

func (v *NullableManagementRouteNexthop) Set(val *ManagementRouteNexthop) {
	v.value = val
	v.isSet = true
}

func (v NullableManagementRouteNexthop) IsSet() bool {
	return v.isSet
}

func (v *NullableManagementRouteNexthop) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManagementRouteNexthop(val *ManagementRouteNexthop) *NullableManagementRouteNexthop {
	return &NullableManagementRouteNexthop{value: val, isSet: true}
}

func (v NullableManagementRouteNexthop) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManagementRouteNexthop) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
