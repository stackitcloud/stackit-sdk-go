/*
IaaS-API

This API allows you to create and modify IaaS resources.

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iaas

import (
	"testing"
)

// isOneOf

func TestAreaId_UnmarshalJSON(t *testing.T) {
	type args struct {
		src []byte
	}
	tests := []struct {
		name    string
		args    args
		wantErr bool
	}{

		{
			name: "success - string d61a8564-c8dd-4ffb-bc15-143e7d0c85ed",
			args: args{
				src: []byte(`"d61a8564-c8dd-4ffb-bc15-143e7d0c85ed"`),
			},
			wantErr: false,
		},

		{
			name: "success - StaticAreaID PUBLIC",
			args: args{
				src: []byte(`"PUBLIC"`),
			},
			wantErr: false,
		},
		{
			name: "success - StaticAreaID SCHWARZ",
			args: args{
				src: []byte(`"SCHWARZ"`),
			},
			wantErr: false,
		},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			v := &AreaId{}
			if err := v.UnmarshalJSON(tt.args.src); (err != nil) != tt.wantErr {
				t.Errorf("UnmarshalJSON() error = %v, wantErr %v", err, tt.wantErr)
			}
			marshalJson, err := v.MarshalJSON()
			if err != nil {
				t.Fatalf("failed marshalling AreaId: %v", err)
			}
			if string(marshalJson) != string(tt.args.src) {
				t.Fatalf("wanted %s, get %s", tt.args.src, marshalJson)
			}
		})
	}
}
