/*
IaaS-API

This API allows you to create and modify IaaS resources.

API version: 1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iaas

import (
	"encoding/json"
)

// checks if the CreateServerNetworking type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateServerNetworking{}

// CreateServerNetworking The initial networking setup for the server creation with a network.
type CreateServerNetworking struct {
	// Universally Unique Identifier (UUID).
	NetworkId *string `json:"networkId,omitempty"`
}

// NewCreateServerNetworking instantiates a new CreateServerNetworking object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateServerNetworking() *CreateServerNetworking {
	this := CreateServerNetworking{}
	return &this
}

// NewCreateServerNetworkingWithDefaults instantiates a new CreateServerNetworking object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateServerNetworkingWithDefaults() *CreateServerNetworking {
	this := CreateServerNetworking{}
	return &this
}

// GetNetworkId returns the NetworkId field value if set, zero value otherwise.
func (o *CreateServerNetworking) GetNetworkId() *string {
	if o == nil || IsNil(o.NetworkId) {
		var ret *string
		return ret
	}
	return o.NetworkId
}

// GetNetworkIdOk returns a tuple with the NetworkId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateServerNetworking) GetNetworkIdOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkId) {
		return nil, false
	}
	return o.NetworkId, true
}

// HasNetworkId returns a boolean if a field has been set.
func (o *CreateServerNetworking) HasNetworkId() bool {
	if o != nil && !IsNil(o.NetworkId) {
		return true
	}

	return false
}

// SetNetworkId gets a reference to the given string and assigns it to the NetworkId field.
func (o *CreateServerNetworking) SetNetworkId(v *string) {
	o.NetworkId = v
}

func (o CreateServerNetworking) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NetworkId) {
		toSerialize["networkId"] = o.NetworkId
	}
	return toSerialize, nil
}

type NullableCreateServerNetworking struct {
	value *CreateServerNetworking
	isSet bool
}

func (v NullableCreateServerNetworking) Get() *CreateServerNetworking {
	return v.value
}

func (v *NullableCreateServerNetworking) Set(val *CreateServerNetworking) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateServerNetworking) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateServerNetworking) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateServerNetworking(val *CreateServerNetworking) *NullableCreateServerNetworking {
	return &NullableCreateServerNetworking{value: val, isSet: true}
}

func (v NullableCreateServerNetworking) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateServerNetworking) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
