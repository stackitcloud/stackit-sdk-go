/*
IaaS-API

This API allows you to create and modify IaaS resources.

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iaas

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the PublicNetworkListResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PublicNetworkListResponse{}

/*
	types and functions for items
*/

// isArray
type PublicNetworkListResponseGetItemsAttributeType = *[]PublicNetwork
type PublicNetworkListResponseGetItemsArgType = []PublicNetwork
type PublicNetworkListResponseGetItemsRetType = []PublicNetwork

func getPublicNetworkListResponseGetItemsAttributeTypeOk(arg PublicNetworkListResponseGetItemsAttributeType) (ret PublicNetworkListResponseGetItemsRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setPublicNetworkListResponseGetItemsAttributeType(arg *PublicNetworkListResponseGetItemsAttributeType, val PublicNetworkListResponseGetItemsRetType) {
	*arg = &val
}

// PublicNetworkListResponse Public network list response.
type PublicNetworkListResponse struct {
	// A list of public networks.
	// REQUIRED
	Items PublicNetworkListResponseGetItemsAttributeType `json:"items"`
}

type _PublicNetworkListResponse PublicNetworkListResponse

// NewPublicNetworkListResponse instantiates a new PublicNetworkListResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPublicNetworkListResponse(items PublicNetworkListResponseGetItemsArgType) *PublicNetworkListResponse {
	this := PublicNetworkListResponse{}
	setPublicNetworkListResponseGetItemsAttributeType(&this.Items, items)
	return &this
}

// NewPublicNetworkListResponseWithDefaults instantiates a new PublicNetworkListResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPublicNetworkListResponseWithDefaults() *PublicNetworkListResponse {
	this := PublicNetworkListResponse{}
	return &this
}

// GetItems returns the Items field value
func (o *PublicNetworkListResponse) GetItems() (ret PublicNetworkListResponseGetItemsRetType) {
	ret, _ = o.GetItemsOk()
	return ret
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *PublicNetworkListResponse) GetItemsOk() (ret PublicNetworkListResponseGetItemsRetType, ok bool) {
	return getPublicNetworkListResponseGetItemsAttributeTypeOk(o.Items)
}

// SetItems sets field value
func (o *PublicNetworkListResponse) SetItems(v PublicNetworkListResponseGetItemsRetType) {
	setPublicNetworkListResponseGetItemsAttributeType(&o.Items, v)
}

func (o PublicNetworkListResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PublicNetworkListResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getPublicNetworkListResponseGetItemsAttributeTypeOk(o.Items); ok {
		toSerialize["Items"] = val
	}
	return toSerialize, nil
}

func (o *PublicNetworkListResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"items",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPublicNetworkListResponse := _PublicNetworkListResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPublicNetworkListResponse)

	if err != nil {
		return err
	}

	*o = PublicNetworkListResponse(varPublicNetworkListResponse)

	return err
}

type NullablePublicNetworkListResponse struct {
	value *PublicNetworkListResponse
	isSet bool
}

func (v NullablePublicNetworkListResponse) Get() *PublicNetworkListResponse {
	return v.value
}

func (v *NullablePublicNetworkListResponse) Set(val *PublicNetworkListResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePublicNetworkListResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePublicNetworkListResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePublicNetworkListResponse(val *PublicNetworkListResponse) *NullablePublicNetworkListResponse {
	return &NullablePublicNetworkListResponse{value: val, isSet: true}
}

func (v NullablePublicNetworkListResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePublicNetworkListResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
