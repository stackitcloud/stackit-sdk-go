/*
IaaS-API

This API allows you to create and modify IaaS resources.

API version: 1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iaas

import (
	"encoding/json"
)

// checks if the QuotaListPublicIps type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QuotaListPublicIps{}

// QuotaListPublicIps Number of public IP addresses.
type QuotaListPublicIps struct {
	// REQUIRED
	Limit *int64 `json:"limit"`
	// REQUIRED
	Usage *int64 `json:"usage"`
}

type _QuotaListPublicIps QuotaListPublicIps

// NewQuotaListPublicIps instantiates a new QuotaListPublicIps object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuotaListPublicIps(limit *int64, usage *int64) *QuotaListPublicIps {
	this := QuotaListPublicIps{}
	this.Limit = limit
	this.Usage = usage
	return &this
}

// NewQuotaListPublicIpsWithDefaults instantiates a new QuotaListPublicIps object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuotaListPublicIpsWithDefaults() *QuotaListPublicIps {
	this := QuotaListPublicIps{}
	return &this
}

// GetLimit returns the Limit field value
func (o *QuotaListPublicIps) GetLimit() *int64 {
	if o == nil || IsNil(o.Limit) {
		var ret *int64
		return ret
	}

	return o.Limit
}

// GetLimitOk returns a tuple with the Limit field value
// and a boolean to check if the value has been set.
func (o *QuotaListPublicIps) GetLimitOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Limit, true
}

// SetLimit sets field value
func (o *QuotaListPublicIps) SetLimit(v *int64) {
	o.Limit = v
}

// GetUsage returns the Usage field value
func (o *QuotaListPublicIps) GetUsage() *int64 {
	if o == nil || IsNil(o.Usage) {
		var ret *int64
		return ret
	}

	return o.Usage
}

// GetUsageOk returns a tuple with the Usage field value
// and a boolean to check if the value has been set.
func (o *QuotaListPublicIps) GetUsageOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Usage, true
}

// SetUsage sets field value
func (o *QuotaListPublicIps) SetUsage(v *int64) {
	o.Usage = v
}

func (o QuotaListPublicIps) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["limit"] = o.Limit
	toSerialize["usage"] = o.Usage
	return toSerialize, nil
}

type NullableQuotaListPublicIps struct {
	value *QuotaListPublicIps
	isSet bool
}

func (v NullableQuotaListPublicIps) Get() *QuotaListPublicIps {
	return v.value
}

func (v *NullableQuotaListPublicIps) Set(val *QuotaListPublicIps) {
	v.value = val
	v.isSet = true
}

func (v NullableQuotaListPublicIps) IsSet() bool {
	return v.isSet
}

func (v *NullableQuotaListPublicIps) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuotaListPublicIps(val *QuotaListPublicIps) *NullableQuotaListPublicIps {
	return &NullableQuotaListPublicIps{value: val, isSet: true}
}

func (v NullableQuotaListPublicIps) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuotaListPublicIps) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
