/*
STACKIT MSSQL Service API

This is the documentation for the STACKIT MSSQL service

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sqlserverflex

import (
	"encoding/json"
)

// checks if the Host type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Host{}

/*
	types and functions for hostMetrics
*/

// isArray
type HostGetHostMetricsAttributeType = *[]HostMetric
type HostGetHostMetricsArgType = []HostMetric
type HostGetHostMetricsRetType = []HostMetric

func getHostGetHostMetricsAttributeTypeOk(arg HostGetHostMetricsAttributeType) (ret HostGetHostMetricsRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setHostGetHostMetricsAttributeType(arg *HostGetHostMetricsAttributeType, val HostGetHostMetricsRetType) {
	*arg = &val
}

/*
	types and functions for id
*/

// isNotNullableString
type HostGetIdAttributeType = *string

func getHostGetIdAttributeTypeOk(arg HostGetIdAttributeType) (ret HostGetIdRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setHostGetIdAttributeType(arg *HostGetIdAttributeType, val HostGetIdRetType) {
	*arg = &val
}

type HostGetIdArgType = string
type HostGetIdRetType = string

// Host struct for Host
type Host struct {
	HostMetrics HostGetHostMetricsAttributeType `json:"hostMetrics,omitempty"`
	Id          HostGetIdAttributeType          `json:"id,omitempty"`
}

// NewHost instantiates a new Host object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHost() *Host {
	this := Host{}
	return &this
}

// NewHostWithDefaults instantiates a new Host object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHostWithDefaults() *Host {
	this := Host{}
	return &this
}

// GetHostMetrics returns the HostMetrics field value if set, zero value otherwise.
func (o *Host) GetHostMetrics() (res HostGetHostMetricsRetType) {
	res, _ = o.GetHostMetricsOk()
	return
}

// GetHostMetricsOk returns a tuple with the HostMetrics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetHostMetricsOk() (ret HostGetHostMetricsRetType, ok bool) {
	return getHostGetHostMetricsAttributeTypeOk(o.HostMetrics)
}

// HasHostMetrics returns a boolean if a field has been set.
func (o *Host) HasHostMetrics() bool {
	_, ok := o.GetHostMetricsOk()
	return ok
}

// SetHostMetrics gets a reference to the given []HostMetric and assigns it to the HostMetrics field.
func (o *Host) SetHostMetrics(v HostGetHostMetricsRetType) {
	setHostGetHostMetricsAttributeType(&o.HostMetrics, v)
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Host) GetId() (res HostGetIdRetType) {
	res, _ = o.GetIdOk()
	return
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetIdOk() (ret HostGetIdRetType, ok bool) {
	return getHostGetIdAttributeTypeOk(o.Id)
}

// HasId returns a boolean if a field has been set.
func (o *Host) HasId() bool {
	_, ok := o.GetIdOk()
	return ok
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Host) SetId(v HostGetIdRetType) {
	setHostGetIdAttributeType(&o.Id, v)
}

func (o Host) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getHostGetHostMetricsAttributeTypeOk(o.HostMetrics); ok {
		toSerialize["HostMetrics"] = val
	}
	if val, ok := getHostGetIdAttributeTypeOk(o.Id); ok {
		toSerialize["Id"] = val
	}
	return toSerialize, nil
}

type NullableHost struct {
	value *Host
	isSet bool
}

func (v NullableHost) Get() *Host {
	return v.value
}

func (v *NullableHost) Set(val *Host) {
	v.value = val
	v.isSet = true
}

func (v NullableHost) IsSet() bool {
	return v.isSet
}

func (v *NullableHost) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHost(val *Host) *NullableHost {
	return &NullableHost{value: val, isSet: true}
}

func (v NullableHost) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHost) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
