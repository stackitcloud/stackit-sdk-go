/*
STACKIT MSSQL Service API

This is the documentation for the STACKIT MSSQL service

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sqlserverflex

import (
	"encoding/json"
)

// checks if the DatabaseDocumentationCreateDatabaseRequestOptions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DatabaseDocumentationCreateDatabaseRequestOptions{}

/*
	types and functions for collation
*/

// isNotNullableString
type DatabaseDocumentationCreateDatabaseRequestOptionsGetCollationAttributeType = *string

func getDatabaseDocumentationCreateDatabaseRequestOptionsGetCollationAttributeTypeOk(arg DatabaseDocumentationCreateDatabaseRequestOptionsGetCollationAttributeType) (ret DatabaseDocumentationCreateDatabaseRequestOptionsGetCollationRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setDatabaseDocumentationCreateDatabaseRequestOptionsGetCollationAttributeType(arg *DatabaseDocumentationCreateDatabaseRequestOptionsGetCollationAttributeType, val DatabaseDocumentationCreateDatabaseRequestOptionsGetCollationRetType) {
	*arg = &val
}

type DatabaseDocumentationCreateDatabaseRequestOptionsGetCollationArgType = string
type DatabaseDocumentationCreateDatabaseRequestOptionsGetCollationRetType = string

/*
	types and functions for compatibilityLevel
*/

// isNotNullableString
type DatabaseDocumentationCreateDatabaseRequestOptionsGetCompatibilityLevelAttributeType = *string

func getDatabaseDocumentationCreateDatabaseRequestOptionsGetCompatibilityLevelAttributeTypeOk(arg DatabaseDocumentationCreateDatabaseRequestOptionsGetCompatibilityLevelAttributeType) (ret DatabaseDocumentationCreateDatabaseRequestOptionsGetCompatibilityLevelRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setDatabaseDocumentationCreateDatabaseRequestOptionsGetCompatibilityLevelAttributeType(arg *DatabaseDocumentationCreateDatabaseRequestOptionsGetCompatibilityLevelAttributeType, val DatabaseDocumentationCreateDatabaseRequestOptionsGetCompatibilityLevelRetType) {
	*arg = &val
}

type DatabaseDocumentationCreateDatabaseRequestOptionsGetCompatibilityLevelArgType = string
type DatabaseDocumentationCreateDatabaseRequestOptionsGetCompatibilityLevelRetType = string

/*
	types and functions for owner
*/

// isNotNullableString
type DatabaseDocumentationCreateDatabaseRequestOptionsGetOwnerAttributeType = *string

func getDatabaseDocumentationCreateDatabaseRequestOptionsGetOwnerAttributeTypeOk(arg DatabaseDocumentationCreateDatabaseRequestOptionsGetOwnerAttributeType) (ret DatabaseDocumentationCreateDatabaseRequestOptionsGetOwnerRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setDatabaseDocumentationCreateDatabaseRequestOptionsGetOwnerAttributeType(arg *DatabaseDocumentationCreateDatabaseRequestOptionsGetOwnerAttributeType, val DatabaseDocumentationCreateDatabaseRequestOptionsGetOwnerRetType) {
	*arg = &val
}

type DatabaseDocumentationCreateDatabaseRequestOptionsGetOwnerArgType = string
type DatabaseDocumentationCreateDatabaseRequestOptionsGetOwnerRetType = string

// DatabaseDocumentationCreateDatabaseRequestOptions struct for DatabaseDocumentationCreateDatabaseRequestOptions
type DatabaseDocumentationCreateDatabaseRequestOptions struct {
	// Collation of the database
	Collation DatabaseDocumentationCreateDatabaseRequestOptionsGetCollationAttributeType `json:"collation,omitempty"`
	// CompatibilityLevel of the Database.
	CompatibilityLevel DatabaseDocumentationCreateDatabaseRequestOptionsGetCompatibilityLevelAttributeType `json:"compatibilityLevel,omitempty"`
	// Name of the owner of the database.
	// REQUIRED
	Owner DatabaseDocumentationCreateDatabaseRequestOptionsGetOwnerAttributeType `json:"owner" required:"true"`
}

type _DatabaseDocumentationCreateDatabaseRequestOptions DatabaseDocumentationCreateDatabaseRequestOptions

// NewDatabaseDocumentationCreateDatabaseRequestOptions instantiates a new DatabaseDocumentationCreateDatabaseRequestOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDatabaseDocumentationCreateDatabaseRequestOptions(owner DatabaseDocumentationCreateDatabaseRequestOptionsGetOwnerArgType) *DatabaseDocumentationCreateDatabaseRequestOptions {
	this := DatabaseDocumentationCreateDatabaseRequestOptions{}
	setDatabaseDocumentationCreateDatabaseRequestOptionsGetOwnerAttributeType(&this.Owner, owner)
	return &this
}

// NewDatabaseDocumentationCreateDatabaseRequestOptionsWithDefaults instantiates a new DatabaseDocumentationCreateDatabaseRequestOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDatabaseDocumentationCreateDatabaseRequestOptionsWithDefaults() *DatabaseDocumentationCreateDatabaseRequestOptions {
	this := DatabaseDocumentationCreateDatabaseRequestOptions{}
	return &this
}

// GetCollation returns the Collation field value if set, zero value otherwise.
func (o *DatabaseDocumentationCreateDatabaseRequestOptions) GetCollation() (res DatabaseDocumentationCreateDatabaseRequestOptionsGetCollationRetType) {
	res, _ = o.GetCollationOk()
	return
}

// GetCollationOk returns a tuple with the Collation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DatabaseDocumentationCreateDatabaseRequestOptions) GetCollationOk() (ret DatabaseDocumentationCreateDatabaseRequestOptionsGetCollationRetType, ok bool) {
	return getDatabaseDocumentationCreateDatabaseRequestOptionsGetCollationAttributeTypeOk(o.Collation)
}

// HasCollation returns a boolean if a field has been set.
func (o *DatabaseDocumentationCreateDatabaseRequestOptions) HasCollation() bool {
	_, ok := o.GetCollationOk()
	return ok
}

// SetCollation gets a reference to the given string and assigns it to the Collation field.
func (o *DatabaseDocumentationCreateDatabaseRequestOptions) SetCollation(v DatabaseDocumentationCreateDatabaseRequestOptionsGetCollationRetType) {
	setDatabaseDocumentationCreateDatabaseRequestOptionsGetCollationAttributeType(&o.Collation, v)
}

// GetCompatibilityLevel returns the CompatibilityLevel field value if set, zero value otherwise.
func (o *DatabaseDocumentationCreateDatabaseRequestOptions) GetCompatibilityLevel() (res DatabaseDocumentationCreateDatabaseRequestOptionsGetCompatibilityLevelRetType) {
	res, _ = o.GetCompatibilityLevelOk()
	return
}

// GetCompatibilityLevelOk returns a tuple with the CompatibilityLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DatabaseDocumentationCreateDatabaseRequestOptions) GetCompatibilityLevelOk() (ret DatabaseDocumentationCreateDatabaseRequestOptionsGetCompatibilityLevelRetType, ok bool) {
	return getDatabaseDocumentationCreateDatabaseRequestOptionsGetCompatibilityLevelAttributeTypeOk(o.CompatibilityLevel)
}

// HasCompatibilityLevel returns a boolean if a field has been set.
func (o *DatabaseDocumentationCreateDatabaseRequestOptions) HasCompatibilityLevel() bool {
	_, ok := o.GetCompatibilityLevelOk()
	return ok
}

// SetCompatibilityLevel gets a reference to the given string and assigns it to the CompatibilityLevel field.
func (o *DatabaseDocumentationCreateDatabaseRequestOptions) SetCompatibilityLevel(v DatabaseDocumentationCreateDatabaseRequestOptionsGetCompatibilityLevelRetType) {
	setDatabaseDocumentationCreateDatabaseRequestOptionsGetCompatibilityLevelAttributeType(&o.CompatibilityLevel, v)
}

// GetOwner returns the Owner field value
func (o *DatabaseDocumentationCreateDatabaseRequestOptions) GetOwner() (ret DatabaseDocumentationCreateDatabaseRequestOptionsGetOwnerRetType) {
	ret, _ = o.GetOwnerOk()
	return ret
}

// GetOwnerOk returns a tuple with the Owner field value
// and a boolean to check if the value has been set.
func (o *DatabaseDocumentationCreateDatabaseRequestOptions) GetOwnerOk() (ret DatabaseDocumentationCreateDatabaseRequestOptionsGetOwnerRetType, ok bool) {
	return getDatabaseDocumentationCreateDatabaseRequestOptionsGetOwnerAttributeTypeOk(o.Owner)
}

// SetOwner sets field value
func (o *DatabaseDocumentationCreateDatabaseRequestOptions) SetOwner(v DatabaseDocumentationCreateDatabaseRequestOptionsGetOwnerRetType) {
	setDatabaseDocumentationCreateDatabaseRequestOptionsGetOwnerAttributeType(&o.Owner, v)
}

func (o DatabaseDocumentationCreateDatabaseRequestOptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getDatabaseDocumentationCreateDatabaseRequestOptionsGetCollationAttributeTypeOk(o.Collation); ok {
		toSerialize["Collation"] = val
	}
	if val, ok := getDatabaseDocumentationCreateDatabaseRequestOptionsGetCompatibilityLevelAttributeTypeOk(o.CompatibilityLevel); ok {
		toSerialize["CompatibilityLevel"] = val
	}
	if val, ok := getDatabaseDocumentationCreateDatabaseRequestOptionsGetOwnerAttributeTypeOk(o.Owner); ok {
		toSerialize["Owner"] = val
	}
	return toSerialize, nil
}

type NullableDatabaseDocumentationCreateDatabaseRequestOptions struct {
	value *DatabaseDocumentationCreateDatabaseRequestOptions
	isSet bool
}

func (v NullableDatabaseDocumentationCreateDatabaseRequestOptions) Get() *DatabaseDocumentationCreateDatabaseRequestOptions {
	return v.value
}

func (v *NullableDatabaseDocumentationCreateDatabaseRequestOptions) Set(val *DatabaseDocumentationCreateDatabaseRequestOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableDatabaseDocumentationCreateDatabaseRequestOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableDatabaseDocumentationCreateDatabaseRequestOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDatabaseDocumentationCreateDatabaseRequestOptions(val *DatabaseDocumentationCreateDatabaseRequestOptions) *NullableDatabaseDocumentationCreateDatabaseRequestOptions {
	return &NullableDatabaseDocumentationCreateDatabaseRequestOptions{value: val, isSet: true}
}

func (v NullableDatabaseDocumentationCreateDatabaseRequestOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDatabaseDocumentationCreateDatabaseRequestOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
