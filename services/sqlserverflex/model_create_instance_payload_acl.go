/*
STACKIT MSSQL Service API

This is the documentation for the STACKIT MSSQL service

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sqlserverflex

import (
	"encoding/json"
)

// checks if the CreateInstancePayloadAcl type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateInstancePayloadAcl{}

/*
	types and functions for items
*/

// isArray
type CreateInstancePayloadAclGetItemsAttributeType = *[]string
type CreateInstancePayloadAclGetItemsArgType = []string
type CreateInstancePayloadAclGetItemsRetType = []string

func getCreateInstancePayloadAclGetItemsAttributeTypeOk(arg CreateInstancePayloadAclGetItemsAttributeType) (ret CreateInstancePayloadAclGetItemsRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setCreateInstancePayloadAclGetItemsAttributeType(arg *CreateInstancePayloadAclGetItemsAttributeType, val CreateInstancePayloadAclGetItemsRetType) {
	*arg = &val
}

// CreateInstancePayloadAcl ACL is the Access Control List defining the IP ranges allowed to connect to the database
type CreateInstancePayloadAcl struct {
	// a simple list with IP addresses with CIDR.
	Items CreateInstancePayloadAclGetItemsAttributeType `json:"items,omitempty"`
}

// NewCreateInstancePayloadAcl instantiates a new CreateInstancePayloadAcl object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateInstancePayloadAcl() *CreateInstancePayloadAcl {
	this := CreateInstancePayloadAcl{}
	return &this
}

// NewCreateInstancePayloadAclWithDefaults instantiates a new CreateInstancePayloadAcl object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateInstancePayloadAclWithDefaults() *CreateInstancePayloadAcl {
	this := CreateInstancePayloadAcl{}
	return &this
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *CreateInstancePayloadAcl) GetItems() (res CreateInstancePayloadAclGetItemsRetType) {
	res, _ = o.GetItemsOk()
	return
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateInstancePayloadAcl) GetItemsOk() (ret CreateInstancePayloadAclGetItemsRetType, ok bool) {
	return getCreateInstancePayloadAclGetItemsAttributeTypeOk(o.Items)
}

// HasItems returns a boolean if a field has been set.
func (o *CreateInstancePayloadAcl) HasItems() bool {
	_, ok := o.GetItemsOk()
	return ok
}

// SetItems gets a reference to the given []string and assigns it to the Items field.
func (o *CreateInstancePayloadAcl) SetItems(v CreateInstancePayloadAclGetItemsRetType) {
	setCreateInstancePayloadAclGetItemsAttributeType(&o.Items, v)
}

func (o CreateInstancePayloadAcl) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getCreateInstancePayloadAclGetItemsAttributeTypeOk(o.Items); ok {
		toSerialize["Items"] = val
	}
	return toSerialize, nil
}

type NullableCreateInstancePayloadAcl struct {
	value *CreateInstancePayloadAcl
	isSet bool
}

func (v NullableCreateInstancePayloadAcl) Get() *CreateInstancePayloadAcl {
	return v.value
}

func (v *NullableCreateInstancePayloadAcl) Set(val *CreateInstancePayloadAcl) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateInstancePayloadAcl) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateInstancePayloadAcl) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateInstancePayloadAcl(val *CreateInstancePayloadAcl) *NullableCreateInstancePayloadAcl {
	return &NullableCreateInstancePayloadAcl{value: val, isSet: true}
}

func (v NullableCreateInstancePayloadAcl) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateInstancePayloadAcl) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
