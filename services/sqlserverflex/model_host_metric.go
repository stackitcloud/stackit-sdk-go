/*
STACKIT MSSQL Service API

This is the documentation for the STACKIT MSSQL service

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sqlserverflex

import (
	"encoding/json"
)

// checks if the HostMetric type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HostMetric{}

/*
	types and functions for datapoints
*/

// isArray
type HostMetricGetDatapointsAttributeType = *[]DataPoint
type HostMetricGetDatapointsArgType = []DataPoint
type HostMetricGetDatapointsRetType = []DataPoint

func getHostMetricGetDatapointsAttributeTypeOk(arg HostMetricGetDatapointsAttributeType) (ret HostMetricGetDatapointsRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setHostMetricGetDatapointsAttributeType(arg *HostMetricGetDatapointsAttributeType, val HostMetricGetDatapointsRetType) {
	*arg = &val
}

/*
	types and functions for name
*/

// isNotNullableString
type HostMetricGetNameAttributeType = *string

func getHostMetricGetNameAttributeTypeOk(arg HostMetricGetNameAttributeType) (ret HostMetricGetNameRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setHostMetricGetNameAttributeType(arg *HostMetricGetNameAttributeType, val HostMetricGetNameRetType) {
	*arg = &val
}

type HostMetricGetNameArgType = string
type HostMetricGetNameRetType = string

/*
	types and functions for units
*/

// isNotNullableString
type HostMetricGetUnitsAttributeType = *string

func getHostMetricGetUnitsAttributeTypeOk(arg HostMetricGetUnitsAttributeType) (ret HostMetricGetUnitsRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setHostMetricGetUnitsAttributeType(arg *HostMetricGetUnitsAttributeType, val HostMetricGetUnitsRetType) {
	*arg = &val
}

type HostMetricGetUnitsArgType = string
type HostMetricGetUnitsRetType = string

// HostMetric struct for HostMetric
type HostMetric struct {
	Datapoints HostMetricGetDatapointsAttributeType `json:"datapoints,omitempty"`
	Name       HostMetricGetNameAttributeType       `json:"name,omitempty"`
	Units      HostMetricGetUnitsAttributeType      `json:"units,omitempty"`
}

// NewHostMetric instantiates a new HostMetric object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHostMetric() *HostMetric {
	this := HostMetric{}
	return &this
}

// NewHostMetricWithDefaults instantiates a new HostMetric object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHostMetricWithDefaults() *HostMetric {
	this := HostMetric{}
	return &this
}

// GetDatapoints returns the Datapoints field value if set, zero value otherwise.
func (o *HostMetric) GetDatapoints() (res HostMetricGetDatapointsRetType) {
	res, _ = o.GetDatapointsOk()
	return
}

// GetDatapointsOk returns a tuple with the Datapoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostMetric) GetDatapointsOk() (ret HostMetricGetDatapointsRetType, ok bool) {
	return getHostMetricGetDatapointsAttributeTypeOk(o.Datapoints)
}

// HasDatapoints returns a boolean if a field has been set.
func (o *HostMetric) HasDatapoints() bool {
	_, ok := o.GetDatapointsOk()
	return ok
}

// SetDatapoints gets a reference to the given []DataPoint and assigns it to the Datapoints field.
func (o *HostMetric) SetDatapoints(v HostMetricGetDatapointsRetType) {
	setHostMetricGetDatapointsAttributeType(&o.Datapoints, v)
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *HostMetric) GetName() (res HostMetricGetNameRetType) {
	res, _ = o.GetNameOk()
	return
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostMetric) GetNameOk() (ret HostMetricGetNameRetType, ok bool) {
	return getHostMetricGetNameAttributeTypeOk(o.Name)
}

// HasName returns a boolean if a field has been set.
func (o *HostMetric) HasName() bool {
	_, ok := o.GetNameOk()
	return ok
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *HostMetric) SetName(v HostMetricGetNameRetType) {
	setHostMetricGetNameAttributeType(&o.Name, v)
}

// GetUnits returns the Units field value if set, zero value otherwise.
func (o *HostMetric) GetUnits() (res HostMetricGetUnitsRetType) {
	res, _ = o.GetUnitsOk()
	return
}

// GetUnitsOk returns a tuple with the Units field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostMetric) GetUnitsOk() (ret HostMetricGetUnitsRetType, ok bool) {
	return getHostMetricGetUnitsAttributeTypeOk(o.Units)
}

// HasUnits returns a boolean if a field has been set.
func (o *HostMetric) HasUnits() bool {
	_, ok := o.GetUnitsOk()
	return ok
}

// SetUnits gets a reference to the given string and assigns it to the Units field.
func (o *HostMetric) SetUnits(v HostMetricGetUnitsRetType) {
	setHostMetricGetUnitsAttributeType(&o.Units, v)
}

func (o HostMetric) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getHostMetricGetDatapointsAttributeTypeOk(o.Datapoints); ok {
		toSerialize["Datapoints"] = val
	}
	if val, ok := getHostMetricGetNameAttributeTypeOk(o.Name); ok {
		toSerialize["Name"] = val
	}
	if val, ok := getHostMetricGetUnitsAttributeTypeOk(o.Units); ok {
		toSerialize["Units"] = val
	}
	return toSerialize, nil
}

type NullableHostMetric struct {
	value *HostMetric
	isSet bool
}

func (v NullableHostMetric) Get() *HostMetric {
	return v.value
}

func (v *NullableHostMetric) Set(val *HostMetric) {
	v.value = val
	v.isSet = true
}

func (v NullableHostMetric) IsSet() bool {
	return v.isSet
}

func (v *NullableHostMetric) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHostMetric(val *HostMetric) *NullableHostMetric {
	return &NullableHostMetric{value: val, isSet: true}
}

func (v NullableHostMetric) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHostMetric) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
