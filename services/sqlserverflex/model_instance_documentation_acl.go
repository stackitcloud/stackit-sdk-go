/*
STACKIT MSSQL Service API

This is the documentation for the STACKIT MSSQL service

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sqlserverflex

import (
	"encoding/json"
)

// checks if the InstanceDocumentationACL type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InstanceDocumentationACL{}

// InstanceDocumentationACL struct for InstanceDocumentationACL
type InstanceDocumentationACL struct {
	// a simple list with IP addresses with CIDR.
	Items *[]string `json:"items,omitempty"`
}

// NewInstanceDocumentationACL instantiates a new InstanceDocumentationACL object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInstanceDocumentationACL() *InstanceDocumentationACL {
	this := InstanceDocumentationACL{}
	return &this
}

// NewInstanceDocumentationACLWithDefaults instantiates a new InstanceDocumentationACL object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInstanceDocumentationACLWithDefaults() *InstanceDocumentationACL {
	this := InstanceDocumentationACL{}
	return &this
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *InstanceDocumentationACL) GetItems() *[]string {
	if o == nil || IsNil(o.Items) {
		var ret *[]string
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceDocumentationACL) GetItemsOk() (*[]string, bool) {
	if o == nil || IsNil(o.Items) {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *InstanceDocumentationACL) HasItems() bool {
	if o != nil && !IsNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given []string and assigns it to the Items field.
func (o *InstanceDocumentationACL) SetItems(v *[]string) {
	o.Items = v
}

func (o InstanceDocumentationACL) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Items) {
		toSerialize["items"] = o.Items
	}
	return toSerialize, nil
}

type NullableInstanceDocumentationACL struct {
	value *InstanceDocumentationACL
	isSet bool
}

func (v NullableInstanceDocumentationACL) Get() *InstanceDocumentationACL {
	return v.value
}

func (v *NullableInstanceDocumentationACL) Set(val *InstanceDocumentationACL) {
	v.value = val
	v.isSet = true
}

func (v NullableInstanceDocumentationACL) IsSet() bool {
	return v.isSet
}

func (v *NullableInstanceDocumentationACL) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInstanceDocumentationACL(val *InstanceDocumentationACL) *NullableInstanceDocumentationACL {
	return &NullableInstanceDocumentationACL{value: val, isSet: true}
}

func (v NullableInstanceDocumentationACL) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInstanceDocumentationACL) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
