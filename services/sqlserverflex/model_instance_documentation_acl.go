/*
STACKIT MSSQL Service API

This is the documentation for the STACKIT MSSQL service

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sqlserverflex

import (
	"encoding/json"
)

// checks if the InstanceDocumentationACL type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InstanceDocumentationACL{}

/*
	types and functions for items
*/

// isArray
type InstanceDocumentationACLGetItemsAttributeType = *[]string
type InstanceDocumentationACLGetItemsArgType = []string
type InstanceDocumentationACLGetItemsRetType = []string

func getInstanceDocumentationACLGetItemsAttributeTypeOk(arg InstanceDocumentationACLGetItemsAttributeType) (ret InstanceDocumentationACLGetItemsRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setInstanceDocumentationACLGetItemsAttributeType(arg *InstanceDocumentationACLGetItemsAttributeType, val InstanceDocumentationACLGetItemsRetType) {
	*arg = &val
}

// InstanceDocumentationACL struct for InstanceDocumentationACL
type InstanceDocumentationACL struct {
	// a simple list with IP addresses with CIDR.
	Items InstanceDocumentationACLGetItemsAttributeType `json:"items,omitempty"`
}

// NewInstanceDocumentationACL instantiates a new InstanceDocumentationACL object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInstanceDocumentationACL() *InstanceDocumentationACL {
	this := InstanceDocumentationACL{}
	return &this
}

// NewInstanceDocumentationACLWithDefaults instantiates a new InstanceDocumentationACL object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInstanceDocumentationACLWithDefaults() *InstanceDocumentationACL {
	this := InstanceDocumentationACL{}
	return &this
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *InstanceDocumentationACL) GetItems() (res InstanceDocumentationACLGetItemsRetType) {
	res, _ = o.GetItemsOk()
	return
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceDocumentationACL) GetItemsOk() (ret InstanceDocumentationACLGetItemsRetType, ok bool) {
	return getInstanceDocumentationACLGetItemsAttributeTypeOk(o.Items)
}

// HasItems returns a boolean if a field has been set.
func (o *InstanceDocumentationACL) HasItems() bool {
	_, ok := o.GetItemsOk()
	return ok
}

// SetItems gets a reference to the given []string and assigns it to the Items field.
func (o *InstanceDocumentationACL) SetItems(v InstanceDocumentationACLGetItemsRetType) {
	setInstanceDocumentationACLGetItemsAttributeType(&o.Items, v)
}

func (o InstanceDocumentationACL) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getInstanceDocumentationACLGetItemsAttributeTypeOk(o.Items); ok {
		toSerialize["Items"] = val
	}
	return toSerialize, nil
}

type NullableInstanceDocumentationACL struct {
	value *InstanceDocumentationACL
	isSet bool
}

func (v NullableInstanceDocumentationACL) Get() *InstanceDocumentationACL {
	return v.value
}

func (v *NullableInstanceDocumentationACL) Set(val *InstanceDocumentationACL) {
	v.value = val
	v.isSet = true
}

func (v NullableInstanceDocumentationACL) IsSet() bool {
	return v.isSet
}

func (v *NullableInstanceDocumentationACL) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInstanceDocumentationACL(val *InstanceDocumentationACL) *NullableInstanceDocumentationACL {
	return &NullableInstanceDocumentationACL{value: val, isSet: true}
}

func (v NullableInstanceDocumentationACL) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInstanceDocumentationACL) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
