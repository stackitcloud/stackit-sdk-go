/*
STACKIT MSSQL Service API

This is the documentation for the STACKIT MSSQL service

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sqlserverflex

import (
	"encoding/json"
)

// checks if the CreateUserPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateUserPayload{}

/*
	types and functions for default_database
*/

// isNotNullableString
type CreateUserPayloadGetDefaultDatabaseAttributeType = *string

func getCreateUserPayloadGetDefaultDatabaseAttributeTypeOk(arg CreateUserPayloadGetDefaultDatabaseAttributeType) (ret CreateUserPayloadGetDefaultDatabaseRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setCreateUserPayloadGetDefaultDatabaseAttributeType(arg *CreateUserPayloadGetDefaultDatabaseAttributeType, val CreateUserPayloadGetDefaultDatabaseRetType) {
	*arg = &val
}

type CreateUserPayloadGetDefaultDatabaseArgType = string
type CreateUserPayloadGetDefaultDatabaseRetType = string

/*
	types and functions for roles
*/

// isArray
type CreateUserPayloadGetRolesAttributeType = *[]string
type CreateUserPayloadGetRolesArgType = []string
type CreateUserPayloadGetRolesRetType = []string

func getCreateUserPayloadGetRolesAttributeTypeOk(arg CreateUserPayloadGetRolesAttributeType) (ret CreateUserPayloadGetRolesRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setCreateUserPayloadGetRolesAttributeType(arg *CreateUserPayloadGetRolesAttributeType, val CreateUserPayloadGetRolesRetType) {
	*arg = &val
}

/*
	types and functions for username
*/

// isNotNullableString
type CreateUserPayloadGetUsernameAttributeType = *string

func getCreateUserPayloadGetUsernameAttributeTypeOk(arg CreateUserPayloadGetUsernameAttributeType) (ret CreateUserPayloadGetUsernameRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setCreateUserPayloadGetUsernameAttributeType(arg *CreateUserPayloadGetUsernameAttributeType, val CreateUserPayloadGetUsernameRetType) {
	*arg = &val
}

type CreateUserPayloadGetUsernameArgType = string
type CreateUserPayloadGetUsernameRetType = string

// CreateUserPayload struct for CreateUserPayload
type CreateUserPayload struct {
	DefaultDatabase CreateUserPayloadGetDefaultDatabaseAttributeType `json:"default_database,omitempty"`
	// REQUIRED
	Roles CreateUserPayloadGetRolesAttributeType `json:"roles"`
	// REQUIRED
	Username CreateUserPayloadGetUsernameAttributeType `json:"username"`
}

type _CreateUserPayload CreateUserPayload

// NewCreateUserPayload instantiates a new CreateUserPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateUserPayload(roles CreateUserPayloadGetRolesArgType, username CreateUserPayloadGetUsernameArgType) *CreateUserPayload {
	this := CreateUserPayload{}
	setCreateUserPayloadGetRolesAttributeType(&this.Roles, roles)
	setCreateUserPayloadGetUsernameAttributeType(&this.Username, username)
	return &this
}

// NewCreateUserPayloadWithDefaults instantiates a new CreateUserPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateUserPayloadWithDefaults() *CreateUserPayload {
	this := CreateUserPayload{}
	return &this
}

// GetDefaultDatabase returns the DefaultDatabase field value if set, zero value otherwise.
func (o *CreateUserPayload) GetDefaultDatabase() (res CreateUserPayloadGetDefaultDatabaseRetType) {
	res, _ = o.GetDefaultDatabaseOk()
	return
}

// GetDefaultDatabaseOk returns a tuple with the DefaultDatabase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUserPayload) GetDefaultDatabaseOk() (ret CreateUserPayloadGetDefaultDatabaseRetType, ok bool) {
	return getCreateUserPayloadGetDefaultDatabaseAttributeTypeOk(o.DefaultDatabase)
}

// HasDefaultDatabase returns a boolean if a field has been set.
func (o *CreateUserPayload) HasDefaultDatabase() bool {
	_, ok := o.GetDefaultDatabaseOk()
	return ok
}

// SetDefaultDatabase gets a reference to the given string and assigns it to the DefaultDatabase field.
func (o *CreateUserPayload) SetDefaultDatabase(v CreateUserPayloadGetDefaultDatabaseRetType) {
	setCreateUserPayloadGetDefaultDatabaseAttributeType(&o.DefaultDatabase, v)
}

// GetRoles returns the Roles field value
func (o *CreateUserPayload) GetRoles() (ret CreateUserPayloadGetRolesRetType) {
	ret, _ = o.GetRolesOk()
	return ret
}

// GetRolesOk returns a tuple with the Roles field value
// and a boolean to check if the value has been set.
func (o *CreateUserPayload) GetRolesOk() (ret CreateUserPayloadGetRolesRetType, ok bool) {
	return getCreateUserPayloadGetRolesAttributeTypeOk(o.Roles)
}

// SetRoles sets field value
func (o *CreateUserPayload) SetRoles(v CreateUserPayloadGetRolesRetType) {
	setCreateUserPayloadGetRolesAttributeType(&o.Roles, v)
}

// GetUsername returns the Username field value
func (o *CreateUserPayload) GetUsername() (ret CreateUserPayloadGetUsernameRetType) {
	ret, _ = o.GetUsernameOk()
	return ret
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
func (o *CreateUserPayload) GetUsernameOk() (ret CreateUserPayloadGetUsernameRetType, ok bool) {
	return getCreateUserPayloadGetUsernameAttributeTypeOk(o.Username)
}

// SetUsername sets field value
func (o *CreateUserPayload) SetUsername(v CreateUserPayloadGetUsernameRetType) {
	setCreateUserPayloadGetUsernameAttributeType(&o.Username, v)
}

func (o CreateUserPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getCreateUserPayloadGetDefaultDatabaseAttributeTypeOk(o.DefaultDatabase); ok {
		toSerialize["DefaultDatabase"] = val
	}
	if val, ok := getCreateUserPayloadGetRolesAttributeTypeOk(o.Roles); ok {
		toSerialize["Roles"] = val
	}
	if val, ok := getCreateUserPayloadGetUsernameAttributeTypeOk(o.Username); ok {
		toSerialize["Username"] = val
	}
	return toSerialize, nil
}

type NullableCreateUserPayload struct {
	value *CreateUserPayload
	isSet bool
}

func (v NullableCreateUserPayload) Get() *CreateUserPayload {
	return v.value
}

func (v *NullableCreateUserPayload) Set(val *CreateUserPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateUserPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateUserPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateUserPayload(val *CreateUserPayload) *NullableCreateUserPayload {
	return &NullableCreateUserPayload{value: val, isSet: true}
}

func (v NullableCreateUserPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateUserPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
