/*
STACKIT MSSQL Service API

This is the documentation for the STACKIT MSSQL service

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sqlserverflex

import (
	"encoding/json"
)

// checks if the InstanceError type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InstanceError{}

/*
	types and functions for code
*/

// isInteger
type InstanceErrorGetCodeAttributeType = *int64
type InstanceErrorGetCodeArgType = int64
type InstanceErrorGetCodeRetType = int64

func getInstanceErrorGetCodeAttributeTypeOk(arg InstanceErrorGetCodeAttributeType) (ret InstanceErrorGetCodeRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setInstanceErrorGetCodeAttributeType(arg *InstanceErrorGetCodeAttributeType, val InstanceErrorGetCodeRetType) {
	*arg = &val
}

/*
	types and functions for fields
*/

// isContainer
type InstanceErrorGetFieldsAttributeType = *map[string][]string
type InstanceErrorGetFieldsArgType = map[string][]string
type InstanceErrorGetFieldsRetType = map[string][]string

func getInstanceErrorGetFieldsAttributeTypeOk(arg InstanceErrorGetFieldsAttributeType) (ret InstanceErrorGetFieldsRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setInstanceErrorGetFieldsAttributeType(arg *InstanceErrorGetFieldsAttributeType, val InstanceErrorGetFieldsRetType) {
	*arg = &val
}

/*
	types and functions for message
*/

// isNotNullableString
type InstanceErrorGetMessageAttributeType = *string

func getInstanceErrorGetMessageAttributeTypeOk(arg InstanceErrorGetMessageAttributeType) (ret InstanceErrorGetMessageRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setInstanceErrorGetMessageAttributeType(arg *InstanceErrorGetMessageAttributeType, val InstanceErrorGetMessageRetType) {
	*arg = &val
}

type InstanceErrorGetMessageArgType = string
type InstanceErrorGetMessageRetType = string

/*
	types and functions for type
*/

// isEnumRef
type InstanceErrorGetTypeAttributeType = *Type
type InstanceErrorGetTypeArgType = Type
type InstanceErrorGetTypeRetType = Type

func getInstanceErrorGetTypeAttributeTypeOk(arg InstanceErrorGetTypeAttributeType) (ret InstanceErrorGetTypeRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setInstanceErrorGetTypeAttributeType(arg *InstanceErrorGetTypeAttributeType, val InstanceErrorGetTypeRetType) {
	*arg = &val
}

// InstanceError struct for InstanceError
type InstanceError struct {
	// Can be cast to int32 without loss of precision.
	Code    InstanceErrorGetCodeAttributeType    `json:"code,omitempty"`
	Fields  InstanceErrorGetFieldsAttributeType  `json:"fields,omitempty"`
	Message InstanceErrorGetMessageAttributeType `json:"message,omitempty"`
	Type    InstanceErrorGetTypeAttributeType    `json:"type,omitempty"`
}

// NewInstanceError instantiates a new InstanceError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInstanceError() *InstanceError {
	this := InstanceError{}
	return &this
}

// NewInstanceErrorWithDefaults instantiates a new InstanceError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInstanceErrorWithDefaults() *InstanceError {
	this := InstanceError{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *InstanceError) GetCode() (res InstanceErrorGetCodeRetType) {
	res, _ = o.GetCodeOk()
	return
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceError) GetCodeOk() (ret InstanceErrorGetCodeRetType, ok bool) {
	return getInstanceErrorGetCodeAttributeTypeOk(o.Code)
}

// HasCode returns a boolean if a field has been set.
func (o *InstanceError) HasCode() bool {
	_, ok := o.GetCodeOk()
	return ok
}

// SetCode gets a reference to the given int64 and assigns it to the Code field.
func (o *InstanceError) SetCode(v InstanceErrorGetCodeRetType) {
	setInstanceErrorGetCodeAttributeType(&o.Code, v)
}

// GetFields returns the Fields field value if set, zero value otherwise.
func (o *InstanceError) GetFields() (res InstanceErrorGetFieldsRetType) {
	res, _ = o.GetFieldsOk()
	return
}

// GetFieldsOk returns a tuple with the Fields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceError) GetFieldsOk() (ret InstanceErrorGetFieldsRetType, ok bool) {
	return getInstanceErrorGetFieldsAttributeTypeOk(o.Fields)
}

// HasFields returns a boolean if a field has been set.
func (o *InstanceError) HasFields() bool {
	_, ok := o.GetFieldsOk()
	return ok
}

// SetFields gets a reference to the given map[string][]string and assigns it to the Fields field.
func (o *InstanceError) SetFields(v InstanceErrorGetFieldsRetType) {
	setInstanceErrorGetFieldsAttributeType(&o.Fields, v)
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *InstanceError) GetMessage() (res InstanceErrorGetMessageRetType) {
	res, _ = o.GetMessageOk()
	return
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceError) GetMessageOk() (ret InstanceErrorGetMessageRetType, ok bool) {
	return getInstanceErrorGetMessageAttributeTypeOk(o.Message)
}

// HasMessage returns a boolean if a field has been set.
func (o *InstanceError) HasMessage() bool {
	_, ok := o.GetMessageOk()
	return ok
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *InstanceError) SetMessage(v InstanceErrorGetMessageRetType) {
	setInstanceErrorGetMessageAttributeType(&o.Message, v)
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *InstanceError) GetType() (res InstanceErrorGetTypeRetType) {
	res, _ = o.GetTypeOk()
	return
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceError) GetTypeOk() (ret InstanceErrorGetTypeRetType, ok bool) {
	return getInstanceErrorGetTypeAttributeTypeOk(o.Type)
}

// HasType returns a boolean if a field has been set.
func (o *InstanceError) HasType() bool {
	_, ok := o.GetTypeOk()
	return ok
}

// SetType gets a reference to the given Type and assigns it to the Type field.
func (o *InstanceError) SetType(v InstanceErrorGetTypeRetType) {
	setInstanceErrorGetTypeAttributeType(&o.Type, v)
}

func (o InstanceError) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getInstanceErrorGetCodeAttributeTypeOk(o.Code); ok {
		toSerialize["Code"] = val
	}
	if val, ok := getInstanceErrorGetFieldsAttributeTypeOk(o.Fields); ok {
		toSerialize["Fields"] = val
	}
	if val, ok := getInstanceErrorGetMessageAttributeTypeOk(o.Message); ok {
		toSerialize["Message"] = val
	}
	if val, ok := getInstanceErrorGetTypeAttributeTypeOk(o.Type); ok {
		toSerialize["Type"] = val
	}
	return toSerialize, nil
}

type NullableInstanceError struct {
	value *InstanceError
	isSet bool
}

func (v NullableInstanceError) Get() *InstanceError {
	return v.value
}

func (v *NullableInstanceError) Set(val *InstanceError) {
	v.value = val
	v.isSet = true
}

func (v NullableInstanceError) IsSet() bool {
	return v.isSet
}

func (v *NullableInstanceError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInstanceError(val *InstanceError) *NullableInstanceError {
	return &NullableInstanceError{value: val, isSet: true}
}

func (v NullableInstanceError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInstanceError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
