/*
STACKIT MSSQL Service API

This is the documentation for the STACKIT MSSQL service

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sqlserverflex

import (
	"encoding/json"
)

// checks if the InstanceDocumentationStorage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InstanceDocumentationStorage{}

/*
	types and functions for class
*/

// isNotNullableString
type InstanceDocumentationStorageGetClassAttributeType = *string

func getInstanceDocumentationStorageGetClassAttributeTypeOk(arg InstanceDocumentationStorageGetClassAttributeType) (ret InstanceDocumentationStorageGetClassRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setInstanceDocumentationStorageGetClassAttributeType(arg *InstanceDocumentationStorageGetClassAttributeType, val InstanceDocumentationStorageGetClassRetType) {
	*arg = &val
}

type InstanceDocumentationStorageGetClassArgType = string
type InstanceDocumentationStorageGetClassRetType = string

/*
	types and functions for size
*/

// isLong
type InstanceDocumentationStorageGetSizeAttributeType = *int64
type InstanceDocumentationStorageGetSizeArgType = int64
type InstanceDocumentationStorageGetSizeRetType = int64

func getInstanceDocumentationStorageGetSizeAttributeTypeOk(arg InstanceDocumentationStorageGetSizeAttributeType) (ret InstanceDocumentationStorageGetSizeRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setInstanceDocumentationStorageGetSizeAttributeType(arg *InstanceDocumentationStorageGetSizeAttributeType, val InstanceDocumentationStorageGetSizeRetType) {
	*arg = &val
}

// InstanceDocumentationStorage struct for InstanceDocumentationStorage
type InstanceDocumentationStorage struct {
	// Class of the instance.
	Class InstanceDocumentationStorageGetClassAttributeType `json:"class,omitempty"`
	// Size of the instance storage in GB
	Size InstanceDocumentationStorageGetSizeAttributeType `json:"size,omitempty"`
}

// NewInstanceDocumentationStorage instantiates a new InstanceDocumentationStorage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInstanceDocumentationStorage() *InstanceDocumentationStorage {
	this := InstanceDocumentationStorage{}
	return &this
}

// NewInstanceDocumentationStorageWithDefaults instantiates a new InstanceDocumentationStorage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInstanceDocumentationStorageWithDefaults() *InstanceDocumentationStorage {
	this := InstanceDocumentationStorage{}
	var class string = "premium-perf12-stackit"
	this.Class = &class
	return &this
}

// GetClass returns the Class field value if set, zero value otherwise.
func (o *InstanceDocumentationStorage) GetClass() (res InstanceDocumentationStorageGetClassRetType) {
	res, _ = o.GetClassOk()
	return
}

// GetClassOk returns a tuple with the Class field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceDocumentationStorage) GetClassOk() (ret InstanceDocumentationStorageGetClassRetType, ok bool) {
	return getInstanceDocumentationStorageGetClassAttributeTypeOk(o.Class)
}

// HasClass returns a boolean if a field has been set.
func (o *InstanceDocumentationStorage) HasClass() bool {
	_, ok := o.GetClassOk()
	return ok
}

// SetClass gets a reference to the given string and assigns it to the Class field.
func (o *InstanceDocumentationStorage) SetClass(v InstanceDocumentationStorageGetClassRetType) {
	setInstanceDocumentationStorageGetClassAttributeType(&o.Class, v)
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *InstanceDocumentationStorage) GetSize() (res InstanceDocumentationStorageGetSizeRetType) {
	res, _ = o.GetSizeOk()
	return
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceDocumentationStorage) GetSizeOk() (ret InstanceDocumentationStorageGetSizeRetType, ok bool) {
	return getInstanceDocumentationStorageGetSizeAttributeTypeOk(o.Size)
}

// HasSize returns a boolean if a field has been set.
func (o *InstanceDocumentationStorage) HasSize() bool {
	_, ok := o.GetSizeOk()
	return ok
}

// SetSize gets a reference to the given int64 and assigns it to the Size field.
func (o *InstanceDocumentationStorage) SetSize(v InstanceDocumentationStorageGetSizeRetType) {
	setInstanceDocumentationStorageGetSizeAttributeType(&o.Size, v)
}

func (o InstanceDocumentationStorage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getInstanceDocumentationStorageGetClassAttributeTypeOk(o.Class); ok {
		toSerialize["Class"] = val
	}
	if val, ok := getInstanceDocumentationStorageGetSizeAttributeTypeOk(o.Size); ok {
		toSerialize["Size"] = val
	}
	return toSerialize, nil
}

type NullableInstanceDocumentationStorage struct {
	value *InstanceDocumentationStorage
	isSet bool
}

func (v NullableInstanceDocumentationStorage) Get() *InstanceDocumentationStorage {
	return v.value
}

func (v *NullableInstanceDocumentationStorage) Set(val *InstanceDocumentationStorage) {
	v.value = val
	v.isSet = true
}

func (v NullableInstanceDocumentationStorage) IsSet() bool {
	return v.isSet
}

func (v *NullableInstanceDocumentationStorage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInstanceDocumentationStorage(val *InstanceDocumentationStorage) *NullableInstanceDocumentationStorage {
	return &NullableInstanceDocumentationStorage{value: val, isSet: true}
}

func (v NullableInstanceDocumentationStorage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInstanceDocumentationStorage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
