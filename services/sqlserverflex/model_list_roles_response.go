/*
STACKIT MSSQL Service API

This is the documentation for the STACKIT MSSQL service

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sqlserverflex

import (
	"encoding/json"
)

// checks if the ListRolesResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListRolesResponse{}

/*
	types and functions for roles
*/

// isArray
type ListRolesResponseGetRolesAttributeType = *[]string
type ListRolesResponseGetRolesArgType = []string
type ListRolesResponseGetRolesRetType = []string

func getListRolesResponseGetRolesAttributeTypeOk(arg ListRolesResponseGetRolesAttributeType) (ret ListRolesResponseGetRolesRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setListRolesResponseGetRolesAttributeType(arg *ListRolesResponseGetRolesAttributeType, val ListRolesResponseGetRolesRetType) {
	*arg = &val
}

// ListRolesResponse struct for ListRolesResponse
type ListRolesResponse struct {
	Roles ListRolesResponseGetRolesAttributeType `json:"roles,omitempty"`
}

// NewListRolesResponse instantiates a new ListRolesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListRolesResponse() *ListRolesResponse {
	this := ListRolesResponse{}
	return &this
}

// NewListRolesResponseWithDefaults instantiates a new ListRolesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListRolesResponseWithDefaults() *ListRolesResponse {
	this := ListRolesResponse{}
	return &this
}

// GetRoles returns the Roles field value if set, zero value otherwise.
func (o *ListRolesResponse) GetRoles() (res ListRolesResponseGetRolesRetType) {
	res, _ = o.GetRolesOk()
	return
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListRolesResponse) GetRolesOk() (ret ListRolesResponseGetRolesRetType, ok bool) {
	return getListRolesResponseGetRolesAttributeTypeOk(o.Roles)
}

// HasRoles returns a boolean if a field has been set.
func (o *ListRolesResponse) HasRoles() bool {
	_, ok := o.GetRolesOk()
	return ok
}

// SetRoles gets a reference to the given []string and assigns it to the Roles field.
func (o *ListRolesResponse) SetRoles(v ListRolesResponseGetRolesRetType) {
	setListRolesResponseGetRolesAttributeType(&o.Roles, v)
}

func (o ListRolesResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getListRolesResponseGetRolesAttributeTypeOk(o.Roles); ok {
		toSerialize["Roles"] = val
	}
	return toSerialize, nil
}

type NullableListRolesResponse struct {
	value *ListRolesResponse
	isSet bool
}

func (v NullableListRolesResponse) Get() *ListRolesResponse {
	return v.value
}

func (v *NullableListRolesResponse) Set(val *ListRolesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListRolesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListRolesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListRolesResponse(val *ListRolesResponse) *NullableListRolesResponse {
	return &NullableListRolesResponse{value: val, isSet: true}
}

func (v NullableListRolesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListRolesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
