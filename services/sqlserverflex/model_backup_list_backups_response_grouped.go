/*
STACKIT MSSQL Service API

This is the documentation for the STACKIT MSSQL service

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sqlserverflex

import (
	"encoding/json"
)

// checks if the BackupListBackupsResponseGrouped type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BackupListBackupsResponseGrouped{}

/*
	types and functions for backups
*/

// isArray
type BackupListBackupsResponseGroupedGetBackupsAttributeType = *[]Backup
type BackupListBackupsResponseGroupedGetBackupsArgType = []Backup
type BackupListBackupsResponseGroupedGetBackupsRetType = []Backup

func getBackupListBackupsResponseGroupedGetBackupsAttributeTypeOk(arg BackupListBackupsResponseGroupedGetBackupsAttributeType) (ret BackupListBackupsResponseGroupedGetBackupsRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setBackupListBackupsResponseGroupedGetBackupsAttributeType(arg *BackupListBackupsResponseGroupedGetBackupsAttributeType, val BackupListBackupsResponseGroupedGetBackupsRetType) {
	*arg = &val
}

/*
	types and functions for name
*/

// isNotNullableString
type BackupListBackupsResponseGroupedGetNameAttributeType = *string

func getBackupListBackupsResponseGroupedGetNameAttributeTypeOk(arg BackupListBackupsResponseGroupedGetNameAttributeType) (ret BackupListBackupsResponseGroupedGetNameRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setBackupListBackupsResponseGroupedGetNameAttributeType(arg *BackupListBackupsResponseGroupedGetNameAttributeType, val BackupListBackupsResponseGroupedGetNameRetType) {
	*arg = &val
}

type BackupListBackupsResponseGroupedGetNameArgType = string
type BackupListBackupsResponseGroupedGetNameRetType = string

// BackupListBackupsResponseGrouped struct for BackupListBackupsResponseGrouped
type BackupListBackupsResponseGrouped struct {
	Backups BackupListBackupsResponseGroupedGetBackupsAttributeType `json:"backups,omitempty"`
	Name    BackupListBackupsResponseGroupedGetNameAttributeType    `json:"name,omitempty"`
}

// NewBackupListBackupsResponseGrouped instantiates a new BackupListBackupsResponseGrouped object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBackupListBackupsResponseGrouped() *BackupListBackupsResponseGrouped {
	this := BackupListBackupsResponseGrouped{}
	return &this
}

// NewBackupListBackupsResponseGroupedWithDefaults instantiates a new BackupListBackupsResponseGrouped object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBackupListBackupsResponseGroupedWithDefaults() *BackupListBackupsResponseGrouped {
	this := BackupListBackupsResponseGrouped{}
	return &this
}

// GetBackups returns the Backups field value if set, zero value otherwise.
func (o *BackupListBackupsResponseGrouped) GetBackups() (res BackupListBackupsResponseGroupedGetBackupsRetType) {
	res, _ = o.GetBackupsOk()
	return
}

// GetBackupsOk returns a tuple with the Backups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupListBackupsResponseGrouped) GetBackupsOk() (ret BackupListBackupsResponseGroupedGetBackupsRetType, ok bool) {
	return getBackupListBackupsResponseGroupedGetBackupsAttributeTypeOk(o.Backups)
}

// HasBackups returns a boolean if a field has been set.
func (o *BackupListBackupsResponseGrouped) HasBackups() bool {
	_, ok := o.GetBackupsOk()
	return ok
}

// SetBackups gets a reference to the given []Backup and assigns it to the Backups field.
func (o *BackupListBackupsResponseGrouped) SetBackups(v BackupListBackupsResponseGroupedGetBackupsRetType) {
	setBackupListBackupsResponseGroupedGetBackupsAttributeType(&o.Backups, v)
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *BackupListBackupsResponseGrouped) GetName() (res BackupListBackupsResponseGroupedGetNameRetType) {
	res, _ = o.GetNameOk()
	return
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupListBackupsResponseGrouped) GetNameOk() (ret BackupListBackupsResponseGroupedGetNameRetType, ok bool) {
	return getBackupListBackupsResponseGroupedGetNameAttributeTypeOk(o.Name)
}

// HasName returns a boolean if a field has been set.
func (o *BackupListBackupsResponseGrouped) HasName() bool {
	_, ok := o.GetNameOk()
	return ok
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *BackupListBackupsResponseGrouped) SetName(v BackupListBackupsResponseGroupedGetNameRetType) {
	setBackupListBackupsResponseGroupedGetNameAttributeType(&o.Name, v)
}

func (o BackupListBackupsResponseGrouped) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getBackupListBackupsResponseGroupedGetBackupsAttributeTypeOk(o.Backups); ok {
		toSerialize["Backups"] = val
	}
	if val, ok := getBackupListBackupsResponseGroupedGetNameAttributeTypeOk(o.Name); ok {
		toSerialize["Name"] = val
	}
	return toSerialize, nil
}

type NullableBackupListBackupsResponseGrouped struct {
	value *BackupListBackupsResponseGrouped
	isSet bool
}

func (v NullableBackupListBackupsResponseGrouped) Get() *BackupListBackupsResponseGrouped {
	return v.value
}

func (v *NullableBackupListBackupsResponseGrouped) Set(val *BackupListBackupsResponseGrouped) {
	v.value = val
	v.isSet = true
}

func (v NullableBackupListBackupsResponseGrouped) IsSet() bool {
	return v.isSet
}

func (v *NullableBackupListBackupsResponseGrouped) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBackupListBackupsResponseGrouped(val *BackupListBackupsResponseGrouped) *NullableBackupListBackupsResponseGrouped {
	return &NullableBackupListBackupsResponseGrouped{value: val, isSet: true}
}

func (v NullableBackupListBackupsResponseGrouped) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBackupListBackupsResponseGrouped) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
