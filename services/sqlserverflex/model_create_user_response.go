/*
STACKIT MSSQL Service API

This is the documentation for the STACKIT MSSQL service

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sqlserverflex

import (
	"encoding/json"
)

// checks if the CreateUserResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateUserResponse{}

/*
	types and functions for item
*/

// isModel
type CreateUserResponseGetItemAttributeType = *SingleUser
type CreateUserResponseGetItemArgType = SingleUser
type CreateUserResponseGetItemRetType = SingleUser

func getCreateUserResponseGetItemAttributeTypeOk(arg CreateUserResponseGetItemAttributeType) (ret CreateUserResponseGetItemRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setCreateUserResponseGetItemAttributeType(arg *CreateUserResponseGetItemAttributeType, val CreateUserResponseGetItemRetType) {
	*arg = &val
}

// CreateUserResponse struct for CreateUserResponse
type CreateUserResponse struct {
	Item CreateUserResponseGetItemAttributeType `json:"item,omitempty"`
}

// NewCreateUserResponse instantiates a new CreateUserResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateUserResponse() *CreateUserResponse {
	this := CreateUserResponse{}
	return &this
}

// NewCreateUserResponseWithDefaults instantiates a new CreateUserResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateUserResponseWithDefaults() *CreateUserResponse {
	this := CreateUserResponse{}
	return &this
}

// GetItem returns the Item field value if set, zero value otherwise.
func (o *CreateUserResponse) GetItem() (res CreateUserResponseGetItemRetType) {
	res, _ = o.GetItemOk()
	return
}

// GetItemOk returns a tuple with the Item field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUserResponse) GetItemOk() (ret CreateUserResponseGetItemRetType, ok bool) {
	return getCreateUserResponseGetItemAttributeTypeOk(o.Item)
}

// HasItem returns a boolean if a field has been set.
func (o *CreateUserResponse) HasItem() bool {
	_, ok := o.GetItemOk()
	return ok
}

// SetItem gets a reference to the given SingleUser and assigns it to the Item field.
func (o *CreateUserResponse) SetItem(v CreateUserResponseGetItemRetType) {
	setCreateUserResponseGetItemAttributeType(&o.Item, v)
}

func (o CreateUserResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getCreateUserResponseGetItemAttributeTypeOk(o.Item); ok {
		toSerialize["Item"] = val
	}
	return toSerialize, nil
}

type NullableCreateUserResponse struct {
	value *CreateUserResponse
	isSet bool
}

func (v NullableCreateUserResponse) Get() *CreateUserResponse {
	return v.value
}

func (v *NullableCreateUserResponse) Set(val *CreateUserResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateUserResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateUserResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateUserResponse(val *CreateUserResponse) *NullableCreateUserResponse {
	return &NullableCreateUserResponse{value: val, isSet: true}
}

func (v NullableCreateUserResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateUserResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
