/*
STACKIT Intake API

This API provides endpoints for managing Intakes.

API version: 1beta.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package intake

import (
	"encoding/json"
)

// checks if the CatalogAuthPatch type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogAuthPatch{}

/*
	types and functions for dremio
*/

// isModel
type CatalogAuthPatchGetDremioAttributeType = *DremioAuthPatch
type CatalogAuthPatchGetDremioArgType = DremioAuthPatch
type CatalogAuthPatchGetDremioRetType = DremioAuthPatch

func getCatalogAuthPatchGetDremioAttributeTypeOk(arg CatalogAuthPatchGetDremioAttributeType) (ret CatalogAuthPatchGetDremioRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setCatalogAuthPatchGetDremioAttributeType(arg *CatalogAuthPatchGetDremioAttributeType, val CatalogAuthPatchGetDremioRetType) {
	*arg = &val
}

/*
	types and functions for type
*/

// isEnumRef
type CatalogAuthPatchGetTypeAttributeType = *CatalogAuthType
type CatalogAuthPatchGetTypeArgType = CatalogAuthType
type CatalogAuthPatchGetTypeRetType = CatalogAuthType

func getCatalogAuthPatchGetTypeAttributeTypeOk(arg CatalogAuthPatchGetTypeAttributeType) (ret CatalogAuthPatchGetTypeRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setCatalogAuthPatchGetTypeAttributeType(arg *CatalogAuthPatchGetTypeAttributeType, val CatalogAuthPatchGetTypeRetType) {
	*arg = &val
}

// CatalogAuthPatch Configures authentication for the Iceberg catalog
type CatalogAuthPatch struct {
	Dremio CatalogAuthPatchGetDremioAttributeType `json:"dremio,omitempty"`
	Type   CatalogAuthPatchGetTypeAttributeType   `json:"type,omitempty"`
}

// NewCatalogAuthPatch instantiates a new CatalogAuthPatch object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogAuthPatch() *CatalogAuthPatch {
	this := CatalogAuthPatch{}
	return &this
}

// NewCatalogAuthPatchWithDefaults instantiates a new CatalogAuthPatch object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogAuthPatchWithDefaults() *CatalogAuthPatch {
	this := CatalogAuthPatch{}
	return &this
}

// GetDremio returns the Dremio field value if set, zero value otherwise.
func (o *CatalogAuthPatch) GetDremio() (res CatalogAuthPatchGetDremioRetType) {
	res, _ = o.GetDremioOk()
	return
}

// GetDremioOk returns a tuple with the Dremio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogAuthPatch) GetDremioOk() (ret CatalogAuthPatchGetDremioRetType, ok bool) {
	return getCatalogAuthPatchGetDremioAttributeTypeOk(o.Dremio)
}

// HasDremio returns a boolean if a field has been set.
func (o *CatalogAuthPatch) HasDremio() bool {
	_, ok := o.GetDremioOk()
	return ok
}

// SetDremio gets a reference to the given DremioAuthPatch and assigns it to the Dremio field.
func (o *CatalogAuthPatch) SetDremio(v CatalogAuthPatchGetDremioRetType) {
	setCatalogAuthPatchGetDremioAttributeType(&o.Dremio, v)
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *CatalogAuthPatch) GetType() (res CatalogAuthPatchGetTypeRetType) {
	res, _ = o.GetTypeOk()
	return
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogAuthPatch) GetTypeOk() (ret CatalogAuthPatchGetTypeRetType, ok bool) {
	return getCatalogAuthPatchGetTypeAttributeTypeOk(o.Type)
}

// HasType returns a boolean if a field has been set.
func (o *CatalogAuthPatch) HasType() bool {
	_, ok := o.GetTypeOk()
	return ok
}

// SetType gets a reference to the given CatalogAuthType and assigns it to the Type field.
func (o *CatalogAuthPatch) SetType(v CatalogAuthPatchGetTypeRetType) {
	setCatalogAuthPatchGetTypeAttributeType(&o.Type, v)
}

func (o CatalogAuthPatch) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getCatalogAuthPatchGetDremioAttributeTypeOk(o.Dremio); ok {
		toSerialize["Dremio"] = val
	}
	if val, ok := getCatalogAuthPatchGetTypeAttributeTypeOk(o.Type); ok {
		toSerialize["Type"] = val
	}
	return toSerialize, nil
}

type NullableCatalogAuthPatch struct {
	value *CatalogAuthPatch
	isSet bool
}

func (v NullableCatalogAuthPatch) Get() *CatalogAuthPatch {
	return v.value
}

func (v *NullableCatalogAuthPatch) Set(val *CatalogAuthPatch) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogAuthPatch) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogAuthPatch) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogAuthPatch(val *CatalogAuthPatch) *NullableCatalogAuthPatch {
	return &NullableCatalogAuthPatch{value: val, isSet: true}
}

func (v NullableCatalogAuthPatch) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogAuthPatch) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
