/*
STACKIT Intake API

This API provides endpoints for managing Intakes.

API version: 1beta.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package intake

import (
	"encoding/json"
)

// checks if the ListIntakeUsersResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListIntakeUsersResponse{}

/*
	types and functions for intakeUsers
*/

// isArray
type ListIntakeUsersResponseGetIntakeUsersAttributeType = *[]IntakeUserResponse
type ListIntakeUsersResponseGetIntakeUsersArgType = []IntakeUserResponse
type ListIntakeUsersResponseGetIntakeUsersRetType = []IntakeUserResponse

func getListIntakeUsersResponseGetIntakeUsersAttributeTypeOk(arg ListIntakeUsersResponseGetIntakeUsersAttributeType) (ret ListIntakeUsersResponseGetIntakeUsersRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setListIntakeUsersResponseGetIntakeUsersAttributeType(arg *ListIntakeUsersResponseGetIntakeUsersAttributeType, val ListIntakeUsersResponseGetIntakeUsersRetType) {
	*arg = &val
}

/*
	types and functions for nextPageToken
*/

// isNotNullableString
type ListIntakeUsersResponseGetNextPageTokenAttributeType = *string

func getListIntakeUsersResponseGetNextPageTokenAttributeTypeOk(arg ListIntakeUsersResponseGetNextPageTokenAttributeType) (ret ListIntakeUsersResponseGetNextPageTokenRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setListIntakeUsersResponseGetNextPageTokenAttributeType(arg *ListIntakeUsersResponseGetNextPageTokenAttributeType, val ListIntakeUsersResponseGetNextPageTokenRetType) {
	*arg = &val
}

type ListIntakeUsersResponseGetNextPageTokenArgType = string
type ListIntakeUsersResponseGetNextPageTokenRetType = string

// ListIntakeUsersResponse struct for ListIntakeUsersResponse
type ListIntakeUsersResponse struct {
	// REQUIRED
	IntakeUsers ListIntakeUsersResponseGetIntakeUsersAttributeType `json:"intakeUsers" required:"true"`
	// A token to retrieve the next page of results.
	NextPageToken ListIntakeUsersResponseGetNextPageTokenAttributeType `json:"nextPageToken,omitempty"`
}

type _ListIntakeUsersResponse ListIntakeUsersResponse

// NewListIntakeUsersResponse instantiates a new ListIntakeUsersResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListIntakeUsersResponse(intakeUsers ListIntakeUsersResponseGetIntakeUsersArgType) *ListIntakeUsersResponse {
	this := ListIntakeUsersResponse{}
	setListIntakeUsersResponseGetIntakeUsersAttributeType(&this.IntakeUsers, intakeUsers)
	return &this
}

// NewListIntakeUsersResponseWithDefaults instantiates a new ListIntakeUsersResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListIntakeUsersResponseWithDefaults() *ListIntakeUsersResponse {
	this := ListIntakeUsersResponse{}
	return &this
}

// GetIntakeUsers returns the IntakeUsers field value
func (o *ListIntakeUsersResponse) GetIntakeUsers() (ret ListIntakeUsersResponseGetIntakeUsersRetType) {
	ret, _ = o.GetIntakeUsersOk()
	return ret
}

// GetIntakeUsersOk returns a tuple with the IntakeUsers field value
// and a boolean to check if the value has been set.
func (o *ListIntakeUsersResponse) GetIntakeUsersOk() (ret ListIntakeUsersResponseGetIntakeUsersRetType, ok bool) {
	return getListIntakeUsersResponseGetIntakeUsersAttributeTypeOk(o.IntakeUsers)
}

// SetIntakeUsers sets field value
func (o *ListIntakeUsersResponse) SetIntakeUsers(v ListIntakeUsersResponseGetIntakeUsersRetType) {
	setListIntakeUsersResponseGetIntakeUsersAttributeType(&o.IntakeUsers, v)
}

// GetNextPageToken returns the NextPageToken field value if set, zero value otherwise.
func (o *ListIntakeUsersResponse) GetNextPageToken() (res ListIntakeUsersResponseGetNextPageTokenRetType) {
	res, _ = o.GetNextPageTokenOk()
	return
}

// GetNextPageTokenOk returns a tuple with the NextPageToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListIntakeUsersResponse) GetNextPageTokenOk() (ret ListIntakeUsersResponseGetNextPageTokenRetType, ok bool) {
	return getListIntakeUsersResponseGetNextPageTokenAttributeTypeOk(o.NextPageToken)
}

// HasNextPageToken returns a boolean if a field has been set.
func (o *ListIntakeUsersResponse) HasNextPageToken() bool {
	_, ok := o.GetNextPageTokenOk()
	return ok
}

// SetNextPageToken gets a reference to the given string and assigns it to the NextPageToken field.
func (o *ListIntakeUsersResponse) SetNextPageToken(v ListIntakeUsersResponseGetNextPageTokenRetType) {
	setListIntakeUsersResponseGetNextPageTokenAttributeType(&o.NextPageToken, v)
}

func (o ListIntakeUsersResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getListIntakeUsersResponseGetIntakeUsersAttributeTypeOk(o.IntakeUsers); ok {
		toSerialize["IntakeUsers"] = val
	}
	if val, ok := getListIntakeUsersResponseGetNextPageTokenAttributeTypeOk(o.NextPageToken); ok {
		toSerialize["NextPageToken"] = val
	}
	return toSerialize, nil
}

type NullableListIntakeUsersResponse struct {
	value *ListIntakeUsersResponse
	isSet bool
}

func (v NullableListIntakeUsersResponse) Get() *ListIntakeUsersResponse {
	return v.value
}

func (v *NullableListIntakeUsersResponse) Set(val *ListIntakeUsersResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListIntakeUsersResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListIntakeUsersResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListIntakeUsersResponse(val *ListIntakeUsersResponse) *NullableListIntakeUsersResponse {
	return &NullableListIntakeUsersResponse{value: val, isSet: true}
}

func (v NullableListIntakeUsersResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListIntakeUsersResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
