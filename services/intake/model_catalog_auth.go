/*
STACKIT Intake API

This API provides endpoints for managing Intakes.

API version: 1beta.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package intake

import (
	"encoding/json"
)

// checks if the CatalogAuth type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogAuth{}

/*
	types and functions for dremio
*/

// isModel
type CatalogAuthGetDremioAttributeType = *DremioAuth
type CatalogAuthGetDremioArgType = DremioAuth
type CatalogAuthGetDremioRetType = DremioAuth

func getCatalogAuthGetDremioAttributeTypeOk(arg CatalogAuthGetDremioAttributeType) (ret CatalogAuthGetDremioRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setCatalogAuthGetDremioAttributeType(arg *CatalogAuthGetDremioAttributeType, val CatalogAuthGetDremioRetType) {
	*arg = &val
}

/*
	types and functions for type
*/

// isEnumRef
type CatalogAuthGetTypeAttributeType = *CatalogAuthType
type CatalogAuthGetTypeArgType = CatalogAuthType
type CatalogAuthGetTypeRetType = CatalogAuthType

func getCatalogAuthGetTypeAttributeTypeOk(arg CatalogAuthGetTypeAttributeType) (ret CatalogAuthGetTypeRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setCatalogAuthGetTypeAttributeType(arg *CatalogAuthGetTypeAttributeType, val CatalogAuthGetTypeRetType) {
	*arg = &val
}

// CatalogAuth Configures authentication for the Iceberg catalog
type CatalogAuth struct {
	Dremio CatalogAuthGetDremioAttributeType `json:"dremio,omitempty"`
	// REQUIRED
	Type CatalogAuthGetTypeAttributeType `json:"type" required:"true"`
}

type _CatalogAuth CatalogAuth

// NewCatalogAuth instantiates a new CatalogAuth object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogAuth(types CatalogAuthGetTypeArgType) *CatalogAuth {
	this := CatalogAuth{}
	setCatalogAuthGetTypeAttributeType(&this.Type, types)
	return &this
}

// NewCatalogAuthWithDefaults instantiates a new CatalogAuth object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogAuthWithDefaults() *CatalogAuth {
	this := CatalogAuth{}
	return &this
}

// GetDremio returns the Dremio field value if set, zero value otherwise.
func (o *CatalogAuth) GetDremio() (res CatalogAuthGetDremioRetType) {
	res, _ = o.GetDremioOk()
	return
}

// GetDremioOk returns a tuple with the Dremio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogAuth) GetDremioOk() (ret CatalogAuthGetDremioRetType, ok bool) {
	return getCatalogAuthGetDremioAttributeTypeOk(o.Dremio)
}

// HasDremio returns a boolean if a field has been set.
func (o *CatalogAuth) HasDremio() bool {
	_, ok := o.GetDremioOk()
	return ok
}

// SetDremio gets a reference to the given DremioAuth and assigns it to the Dremio field.
func (o *CatalogAuth) SetDremio(v CatalogAuthGetDremioRetType) {
	setCatalogAuthGetDremioAttributeType(&o.Dremio, v)
}

// GetType returns the Type field value
func (o *CatalogAuth) GetType() (ret CatalogAuthGetTypeRetType) {
	ret, _ = o.GetTypeOk()
	return ret
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *CatalogAuth) GetTypeOk() (ret CatalogAuthGetTypeRetType, ok bool) {
	return getCatalogAuthGetTypeAttributeTypeOk(o.Type)
}

// SetType sets field value
func (o *CatalogAuth) SetType(v CatalogAuthGetTypeRetType) {
	setCatalogAuthGetTypeAttributeType(&o.Type, v)
}

func (o CatalogAuth) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getCatalogAuthGetDremioAttributeTypeOk(o.Dremio); ok {
		toSerialize["Dremio"] = val
	}
	if val, ok := getCatalogAuthGetTypeAttributeTypeOk(o.Type); ok {
		toSerialize["Type"] = val
	}
	return toSerialize, nil
}

type NullableCatalogAuth struct {
	value *CatalogAuth
	isSet bool
}

func (v NullableCatalogAuth) Get() *CatalogAuth {
	return v.value
}

func (v *NullableCatalogAuth) Set(val *CatalogAuth) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogAuth) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogAuth) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogAuth(val *CatalogAuth) *NullableCatalogAuth {
	return &NullableCatalogAuth{value: val, isSet: true}
}

func (v NullableCatalogAuth) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogAuth) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
