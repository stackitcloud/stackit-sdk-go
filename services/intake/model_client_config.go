/*
STACKIT Intake API

This API provides endpoints for managing Intakes.

API version: 1beta.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package intake

import (
	"encoding/json"
)

// checks if the ClientConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClientConfig{}

/*
	types and functions for java
*/

// isNotNullableString
type ClientConfigGetJavaAttributeType = *string

func getClientConfigGetJavaAttributeTypeOk(arg ClientConfigGetJavaAttributeType) (ret ClientConfigGetJavaRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setClientConfigGetJavaAttributeType(arg *ClientConfigGetJavaAttributeType, val ClientConfigGetJavaRetType) {
	*arg = &val
}

type ClientConfigGetJavaArgType = string
type ClientConfigGetJavaRetType = string

/*
	types and functions for librdkafka
*/

// isNotNullableString
type ClientConfigGetLibrdkafkaAttributeType = *string

func getClientConfigGetLibrdkafkaAttributeTypeOk(arg ClientConfigGetLibrdkafkaAttributeType) (ret ClientConfigGetLibrdkafkaRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setClientConfigGetLibrdkafkaAttributeType(arg *ClientConfigGetLibrdkafkaAttributeType, val ClientConfigGetLibrdkafkaRetType) {
	*arg = &val
}

type ClientConfigGetLibrdkafkaArgType = string
type ClientConfigGetLibrdkafkaRetType = string

// ClientConfig Configuration properties for supported clients.
type ClientConfig struct {
	// Configuration for Java Kafka clients.
	// REQUIRED
	Java ClientConfigGetJavaAttributeType `json:"java" required:"true"`
	// Configuration for Kafka clients using librdkafka
	// REQUIRED
	Librdkafka ClientConfigGetLibrdkafkaAttributeType `json:"librdkafka" required:"true"`
}

type _ClientConfig ClientConfig

// NewClientConfig instantiates a new ClientConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClientConfig(java ClientConfigGetJavaArgType, librdkafka ClientConfigGetLibrdkafkaArgType) *ClientConfig {
	this := ClientConfig{}
	setClientConfigGetJavaAttributeType(&this.Java, java)
	setClientConfigGetLibrdkafkaAttributeType(&this.Librdkafka, librdkafka)
	return &this
}

// NewClientConfigWithDefaults instantiates a new ClientConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClientConfigWithDefaults() *ClientConfig {
	this := ClientConfig{}
	return &this
}

// GetJava returns the Java field value
func (o *ClientConfig) GetJava() (ret ClientConfigGetJavaRetType) {
	ret, _ = o.GetJavaOk()
	return ret
}

// GetJavaOk returns a tuple with the Java field value
// and a boolean to check if the value has been set.
func (o *ClientConfig) GetJavaOk() (ret ClientConfigGetJavaRetType, ok bool) {
	return getClientConfigGetJavaAttributeTypeOk(o.Java)
}

// SetJava sets field value
func (o *ClientConfig) SetJava(v ClientConfigGetJavaRetType) {
	setClientConfigGetJavaAttributeType(&o.Java, v)
}

// GetLibrdkafka returns the Librdkafka field value
func (o *ClientConfig) GetLibrdkafka() (ret ClientConfigGetLibrdkafkaRetType) {
	ret, _ = o.GetLibrdkafkaOk()
	return ret
}

// GetLibrdkafkaOk returns a tuple with the Librdkafka field value
// and a boolean to check if the value has been set.
func (o *ClientConfig) GetLibrdkafkaOk() (ret ClientConfigGetLibrdkafkaRetType, ok bool) {
	return getClientConfigGetLibrdkafkaAttributeTypeOk(o.Librdkafka)
}

// SetLibrdkafka sets field value
func (o *ClientConfig) SetLibrdkafka(v ClientConfigGetLibrdkafkaRetType) {
	setClientConfigGetLibrdkafkaAttributeType(&o.Librdkafka, v)
}

func (o ClientConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getClientConfigGetJavaAttributeTypeOk(o.Java); ok {
		toSerialize["Java"] = val
	}
	if val, ok := getClientConfigGetLibrdkafkaAttributeTypeOk(o.Librdkafka); ok {
		toSerialize["Librdkafka"] = val
	}
	return toSerialize, nil
}

type NullableClientConfig struct {
	value *ClientConfig
	isSet bool
}

func (v NullableClientConfig) Get() *ClientConfig {
	return v.value
}

func (v *NullableClientConfig) Set(val *ClientConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableClientConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableClientConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientConfig(val *ClientConfig) *NullableClientConfig {
	return &NullableClientConfig{value: val, isSet: true}
}

func (v NullableClientConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
