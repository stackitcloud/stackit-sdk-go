/*
STACKIT Cloud Foundry API

API endpoints for managing STACKIT Cloud Foundry

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package scf

import (
	"encoding/json"
)

// checks if the CreateOrgRolePayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateOrgRolePayload{}

/*
	types and functions for type
*/

// isEnumRef
type CreateOrgRolePayloadGetTypeAttributeType = *OrgRoleType
type CreateOrgRolePayloadGetTypeArgType = OrgRoleType
type CreateOrgRolePayloadGetTypeRetType = OrgRoleType

func getCreateOrgRolePayloadGetTypeAttributeTypeOk(arg CreateOrgRolePayloadGetTypeAttributeType) (ret CreateOrgRolePayloadGetTypeRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setCreateOrgRolePayloadGetTypeAttributeType(arg *CreateOrgRolePayloadGetTypeAttributeType, val CreateOrgRolePayloadGetTypeRetType) {
	*arg = &val
}

/*
	types and functions for userGuid
*/

// isNotNullableString
type CreateOrgRolePayloadGetUserGuidAttributeType = *string

func getCreateOrgRolePayloadGetUserGuidAttributeTypeOk(arg CreateOrgRolePayloadGetUserGuidAttributeType) (ret CreateOrgRolePayloadGetUserGuidRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setCreateOrgRolePayloadGetUserGuidAttributeType(arg *CreateOrgRolePayloadGetUserGuidAttributeType, val CreateOrgRolePayloadGetUserGuidRetType) {
	*arg = &val
}

type CreateOrgRolePayloadGetUserGuidArgType = string
type CreateOrgRolePayloadGetUserGuidRetType = string

/*
	types and functions for userName
*/

// isNotNullableString
type CreateOrgRolePayloadGetUserNameAttributeType = *string

func getCreateOrgRolePayloadGetUserNameAttributeTypeOk(arg CreateOrgRolePayloadGetUserNameAttributeType) (ret CreateOrgRolePayloadGetUserNameRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setCreateOrgRolePayloadGetUserNameAttributeType(arg *CreateOrgRolePayloadGetUserNameAttributeType, val CreateOrgRolePayloadGetUserNameRetType) {
	*arg = &val
}

type CreateOrgRolePayloadGetUserNameArgType = string
type CreateOrgRolePayloadGetUserNameRetType = string

// CreateOrgRolePayload struct for CreateOrgRolePayload
type CreateOrgRolePayload struct {
	// REQUIRED
	Type     CreateOrgRolePayloadGetTypeAttributeType     `json:"type" required:"true"`
	UserGuid CreateOrgRolePayloadGetUserGuidAttributeType `json:"userGuid,omitempty"`
	UserName CreateOrgRolePayloadGetUserNameAttributeType `json:"userName,omitempty"`
}

type _CreateOrgRolePayload CreateOrgRolePayload

// NewCreateOrgRolePayload instantiates a new CreateOrgRolePayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateOrgRolePayload(types CreateOrgRolePayloadGetTypeArgType) *CreateOrgRolePayload {
	this := CreateOrgRolePayload{}
	setCreateOrgRolePayloadGetTypeAttributeType(&this.Type, types)
	return &this
}

// NewCreateOrgRolePayloadWithDefaults instantiates a new CreateOrgRolePayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateOrgRolePayloadWithDefaults() *CreateOrgRolePayload {
	this := CreateOrgRolePayload{}
	return &this
}

// GetType returns the Type field value
func (o *CreateOrgRolePayload) GetType() (ret CreateOrgRolePayloadGetTypeRetType) {
	ret, _ = o.GetTypeOk()
	return ret
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *CreateOrgRolePayload) GetTypeOk() (ret CreateOrgRolePayloadGetTypeRetType, ok bool) {
	return getCreateOrgRolePayloadGetTypeAttributeTypeOk(o.Type)
}

// SetType sets field value
func (o *CreateOrgRolePayload) SetType(v CreateOrgRolePayloadGetTypeRetType) {
	setCreateOrgRolePayloadGetTypeAttributeType(&o.Type, v)
}

// GetUserGuid returns the UserGuid field value if set, zero value otherwise.
func (o *CreateOrgRolePayload) GetUserGuid() (res CreateOrgRolePayloadGetUserGuidRetType) {
	res, _ = o.GetUserGuidOk()
	return
}

// GetUserGuidOk returns a tuple with the UserGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrgRolePayload) GetUserGuidOk() (ret CreateOrgRolePayloadGetUserGuidRetType, ok bool) {
	return getCreateOrgRolePayloadGetUserGuidAttributeTypeOk(o.UserGuid)
}

// HasUserGuid returns a boolean if a field has been set.
func (o *CreateOrgRolePayload) HasUserGuid() bool {
	_, ok := o.GetUserGuidOk()
	return ok
}

// SetUserGuid gets a reference to the given string and assigns it to the UserGuid field.
func (o *CreateOrgRolePayload) SetUserGuid(v CreateOrgRolePayloadGetUserGuidRetType) {
	setCreateOrgRolePayloadGetUserGuidAttributeType(&o.UserGuid, v)
}

// GetUserName returns the UserName field value if set, zero value otherwise.
func (o *CreateOrgRolePayload) GetUserName() (res CreateOrgRolePayloadGetUserNameRetType) {
	res, _ = o.GetUserNameOk()
	return
}

// GetUserNameOk returns a tuple with the UserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrgRolePayload) GetUserNameOk() (ret CreateOrgRolePayloadGetUserNameRetType, ok bool) {
	return getCreateOrgRolePayloadGetUserNameAttributeTypeOk(o.UserName)
}

// HasUserName returns a boolean if a field has been set.
func (o *CreateOrgRolePayload) HasUserName() bool {
	_, ok := o.GetUserNameOk()
	return ok
}

// SetUserName gets a reference to the given string and assigns it to the UserName field.
func (o *CreateOrgRolePayload) SetUserName(v CreateOrgRolePayloadGetUserNameRetType) {
	setCreateOrgRolePayloadGetUserNameAttributeType(&o.UserName, v)
}

func (o CreateOrgRolePayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getCreateOrgRolePayloadGetTypeAttributeTypeOk(o.Type); ok {
		toSerialize["Type"] = val
	}
	if val, ok := getCreateOrgRolePayloadGetUserGuidAttributeTypeOk(o.UserGuid); ok {
		toSerialize["UserGuid"] = val
	}
	if val, ok := getCreateOrgRolePayloadGetUserNameAttributeTypeOk(o.UserName); ok {
		toSerialize["UserName"] = val
	}
	return toSerialize, nil
}

type NullableCreateOrgRolePayload struct {
	value *CreateOrgRolePayload
	isSet bool
}

func (v NullableCreateOrgRolePayload) Get() *CreateOrgRolePayload {
	return v.value
}

func (v *NullableCreateOrgRolePayload) Set(val *CreateOrgRolePayload) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateOrgRolePayload) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateOrgRolePayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateOrgRolePayload(val *CreateOrgRolePayload) *NullableCreateOrgRolePayload {
	return &NullableCreateOrgRolePayload{value: val, isSet: true}
}

func (v NullableCreateOrgRolePayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateOrgRolePayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
