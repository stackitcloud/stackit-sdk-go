/*
STACKIT Cloud Foundry API

API endpoints for managing STACKIT Cloud Foundry

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package scf

import (
	"encoding/json"
)

// checks if the UpdateSpacePayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateSpacePayload{}

/*
	types and functions for name
*/

// isNotNullableString
type UpdateSpacePayloadGetNameAttributeType = *string

func getUpdateSpacePayloadGetNameAttributeTypeOk(arg UpdateSpacePayloadGetNameAttributeType) (ret UpdateSpacePayloadGetNameRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setUpdateSpacePayloadGetNameAttributeType(arg *UpdateSpacePayloadGetNameAttributeType, val UpdateSpacePayloadGetNameRetType) {
	*arg = &val
}

type UpdateSpacePayloadGetNameArgType = string
type UpdateSpacePayloadGetNameRetType = string

// UpdateSpacePayload struct for UpdateSpacePayload
type UpdateSpacePayload struct {
	// Name of the space
	// REQUIRED
	Name UpdateSpacePayloadGetNameAttributeType `json:"name" required:"true"`
}

type _UpdateSpacePayload UpdateSpacePayload

// NewUpdateSpacePayload instantiates a new UpdateSpacePayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateSpacePayload(name UpdateSpacePayloadGetNameArgType) *UpdateSpacePayload {
	this := UpdateSpacePayload{}
	setUpdateSpacePayloadGetNameAttributeType(&this.Name, name)
	return &this
}

// NewUpdateSpacePayloadWithDefaults instantiates a new UpdateSpacePayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateSpacePayloadWithDefaults() *UpdateSpacePayload {
	this := UpdateSpacePayload{}
	return &this
}

// GetName returns the Name field value
func (o *UpdateSpacePayload) GetName() (ret UpdateSpacePayloadGetNameRetType) {
	ret, _ = o.GetNameOk()
	return ret
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *UpdateSpacePayload) GetNameOk() (ret UpdateSpacePayloadGetNameRetType, ok bool) {
	return getUpdateSpacePayloadGetNameAttributeTypeOk(o.Name)
}

// SetName sets field value
func (o *UpdateSpacePayload) SetName(v UpdateSpacePayloadGetNameRetType) {
	setUpdateSpacePayloadGetNameAttributeType(&o.Name, v)
}

func (o UpdateSpacePayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getUpdateSpacePayloadGetNameAttributeTypeOk(o.Name); ok {
		toSerialize["Name"] = val
	}
	return toSerialize, nil
}

type NullableUpdateSpacePayload struct {
	value *UpdateSpacePayload
	isSet bool
}

func (v NullableUpdateSpacePayload) Get() *UpdateSpacePayload {
	return v.value
}

func (v *NullableUpdateSpacePayload) Set(val *UpdateSpacePayload) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateSpacePayload) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateSpacePayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateSpacePayload(val *UpdateSpacePayload) *NullableUpdateSpacePayload {
	return &NullableUpdateSpacePayload{value: val, isSet: true}
}

func (v NullableUpdateSpacePayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateSpacePayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
