/*
STACKIT Cloud Foundry API

API endpoints for managing STACKIT Cloud Foundry

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package scf

import (
	"encoding/json"
)

// checks if the UsageSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UsageSummary{}

/*
	types and functions for domains
*/

// isLong
type UsageSummaryGetDomainsAttributeType = *int64
type UsageSummaryGetDomainsArgType = int64
type UsageSummaryGetDomainsRetType = int64

func getUsageSummaryGetDomainsAttributeTypeOk(arg UsageSummaryGetDomainsAttributeType) (ret UsageSummaryGetDomainsRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setUsageSummaryGetDomainsAttributeType(arg *UsageSummaryGetDomainsAttributeType, val UsageSummaryGetDomainsRetType) {
	*arg = &val
}

/*
	types and functions for memoryInMb
*/

// isLong
type UsageSummaryGetMemoryInMbAttributeType = *int64
type UsageSummaryGetMemoryInMbArgType = int64
type UsageSummaryGetMemoryInMbRetType = int64

func getUsageSummaryGetMemoryInMbAttributeTypeOk(arg UsageSummaryGetMemoryInMbAttributeType) (ret UsageSummaryGetMemoryInMbRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setUsageSummaryGetMemoryInMbAttributeType(arg *UsageSummaryGetMemoryInMbAttributeType, val UsageSummaryGetMemoryInMbRetType) {
	*arg = &val
}

/*
	types and functions for perAppTasks
*/

// isLong
type UsageSummaryGetPerAppTasksAttributeType = *int64
type UsageSummaryGetPerAppTasksArgType = int64
type UsageSummaryGetPerAppTasksRetType = int64

func getUsageSummaryGetPerAppTasksAttributeTypeOk(arg UsageSummaryGetPerAppTasksAttributeType) (ret UsageSummaryGetPerAppTasksRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setUsageSummaryGetPerAppTasksAttributeType(arg *UsageSummaryGetPerAppTasksAttributeType, val UsageSummaryGetPerAppTasksRetType) {
	*arg = &val
}

/*
	types and functions for reservedPorts
*/

// isLong
type UsageSummaryGetReservedPortsAttributeType = *int64
type UsageSummaryGetReservedPortsArgType = int64
type UsageSummaryGetReservedPortsRetType = int64

func getUsageSummaryGetReservedPortsAttributeTypeOk(arg UsageSummaryGetReservedPortsAttributeType) (ret UsageSummaryGetReservedPortsRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setUsageSummaryGetReservedPortsAttributeType(arg *UsageSummaryGetReservedPortsAttributeType, val UsageSummaryGetReservedPortsRetType) {
	*arg = &val
}

/*
	types and functions for routes
*/

// isLong
type UsageSummaryGetRoutesAttributeType = *int64
type UsageSummaryGetRoutesArgType = int64
type UsageSummaryGetRoutesRetType = int64

func getUsageSummaryGetRoutesAttributeTypeOk(arg UsageSummaryGetRoutesAttributeType) (ret UsageSummaryGetRoutesRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setUsageSummaryGetRoutesAttributeType(arg *UsageSummaryGetRoutesAttributeType, val UsageSummaryGetRoutesRetType) {
	*arg = &val
}

/*
	types and functions for serviceInstances
*/

// isLong
type UsageSummaryGetServiceInstancesAttributeType = *int64
type UsageSummaryGetServiceInstancesArgType = int64
type UsageSummaryGetServiceInstancesRetType = int64

func getUsageSummaryGetServiceInstancesAttributeTypeOk(arg UsageSummaryGetServiceInstancesAttributeType) (ret UsageSummaryGetServiceInstancesRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setUsageSummaryGetServiceInstancesAttributeType(arg *UsageSummaryGetServiceInstancesAttributeType, val UsageSummaryGetServiceInstancesRetType) {
	*arg = &val
}

/*
	types and functions for serviceKeys
*/

// isLong
type UsageSummaryGetServiceKeysAttributeType = *int64
type UsageSummaryGetServiceKeysArgType = int64
type UsageSummaryGetServiceKeysRetType = int64

func getUsageSummaryGetServiceKeysAttributeTypeOk(arg UsageSummaryGetServiceKeysAttributeType) (ret UsageSummaryGetServiceKeysRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setUsageSummaryGetServiceKeysAttributeType(arg *UsageSummaryGetServiceKeysAttributeType, val UsageSummaryGetServiceKeysRetType) {
	*arg = &val
}

/*
	types and functions for startedInstances
*/

// isLong
type UsageSummaryGetStartedInstancesAttributeType = *int64
type UsageSummaryGetStartedInstancesArgType = int64
type UsageSummaryGetStartedInstancesRetType = int64

func getUsageSummaryGetStartedInstancesAttributeTypeOk(arg UsageSummaryGetStartedInstancesAttributeType) (ret UsageSummaryGetStartedInstancesRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setUsageSummaryGetStartedInstancesAttributeType(arg *UsageSummaryGetStartedInstancesAttributeType, val UsageSummaryGetStartedInstancesRetType) {
	*arg = &val
}

// UsageSummary struct for UsageSummary
type UsageSummary struct {
	// REQUIRED
	Domains UsageSummaryGetDomainsAttributeType `json:"domains" required:"true"`
	// REQUIRED
	MemoryInMb UsageSummaryGetMemoryInMbAttributeType `json:"memoryInMb" required:"true"`
	// REQUIRED
	PerAppTasks UsageSummaryGetPerAppTasksAttributeType `json:"perAppTasks" required:"true"`
	// REQUIRED
	ReservedPorts UsageSummaryGetReservedPortsAttributeType `json:"reservedPorts" required:"true"`
	// REQUIRED
	Routes UsageSummaryGetRoutesAttributeType `json:"routes" required:"true"`
	// REQUIRED
	ServiceInstances UsageSummaryGetServiceInstancesAttributeType `json:"serviceInstances" required:"true"`
	// REQUIRED
	ServiceKeys UsageSummaryGetServiceKeysAttributeType `json:"serviceKeys" required:"true"`
	// REQUIRED
	StartedInstances UsageSummaryGetStartedInstancesAttributeType `json:"startedInstances" required:"true"`
}

type _UsageSummary UsageSummary

// NewUsageSummary instantiates a new UsageSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUsageSummary(domains UsageSummaryGetDomainsArgType, memoryInMb UsageSummaryGetMemoryInMbArgType, perAppTasks UsageSummaryGetPerAppTasksArgType, reservedPorts UsageSummaryGetReservedPortsArgType, routes UsageSummaryGetRoutesArgType, serviceInstances UsageSummaryGetServiceInstancesArgType, serviceKeys UsageSummaryGetServiceKeysArgType, startedInstances UsageSummaryGetStartedInstancesArgType) *UsageSummary {
	this := UsageSummary{}
	setUsageSummaryGetDomainsAttributeType(&this.Domains, domains)
	setUsageSummaryGetMemoryInMbAttributeType(&this.MemoryInMb, memoryInMb)
	setUsageSummaryGetPerAppTasksAttributeType(&this.PerAppTasks, perAppTasks)
	setUsageSummaryGetReservedPortsAttributeType(&this.ReservedPorts, reservedPorts)
	setUsageSummaryGetRoutesAttributeType(&this.Routes, routes)
	setUsageSummaryGetServiceInstancesAttributeType(&this.ServiceInstances, serviceInstances)
	setUsageSummaryGetServiceKeysAttributeType(&this.ServiceKeys, serviceKeys)
	setUsageSummaryGetStartedInstancesAttributeType(&this.StartedInstances, startedInstances)
	return &this
}

// NewUsageSummaryWithDefaults instantiates a new UsageSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUsageSummaryWithDefaults() *UsageSummary {
	this := UsageSummary{}
	return &this
}

// GetDomains returns the Domains field value
func (o *UsageSummary) GetDomains() (ret UsageSummaryGetDomainsRetType) {
	ret, _ = o.GetDomainsOk()
	return ret
}

// GetDomainsOk returns a tuple with the Domains field value
// and a boolean to check if the value has been set.
func (o *UsageSummary) GetDomainsOk() (ret UsageSummaryGetDomainsRetType, ok bool) {
	return getUsageSummaryGetDomainsAttributeTypeOk(o.Domains)
}

// SetDomains sets field value
func (o *UsageSummary) SetDomains(v UsageSummaryGetDomainsRetType) {
	setUsageSummaryGetDomainsAttributeType(&o.Domains, v)
}

// GetMemoryInMb returns the MemoryInMb field value
func (o *UsageSummary) GetMemoryInMb() (ret UsageSummaryGetMemoryInMbRetType) {
	ret, _ = o.GetMemoryInMbOk()
	return ret
}

// GetMemoryInMbOk returns a tuple with the MemoryInMb field value
// and a boolean to check if the value has been set.
func (o *UsageSummary) GetMemoryInMbOk() (ret UsageSummaryGetMemoryInMbRetType, ok bool) {
	return getUsageSummaryGetMemoryInMbAttributeTypeOk(o.MemoryInMb)
}

// SetMemoryInMb sets field value
func (o *UsageSummary) SetMemoryInMb(v UsageSummaryGetMemoryInMbRetType) {
	setUsageSummaryGetMemoryInMbAttributeType(&o.MemoryInMb, v)
}

// GetPerAppTasks returns the PerAppTasks field value
func (o *UsageSummary) GetPerAppTasks() (ret UsageSummaryGetPerAppTasksRetType) {
	ret, _ = o.GetPerAppTasksOk()
	return ret
}

// GetPerAppTasksOk returns a tuple with the PerAppTasks field value
// and a boolean to check if the value has been set.
func (o *UsageSummary) GetPerAppTasksOk() (ret UsageSummaryGetPerAppTasksRetType, ok bool) {
	return getUsageSummaryGetPerAppTasksAttributeTypeOk(o.PerAppTasks)
}

// SetPerAppTasks sets field value
func (o *UsageSummary) SetPerAppTasks(v UsageSummaryGetPerAppTasksRetType) {
	setUsageSummaryGetPerAppTasksAttributeType(&o.PerAppTasks, v)
}

// GetReservedPorts returns the ReservedPorts field value
func (o *UsageSummary) GetReservedPorts() (ret UsageSummaryGetReservedPortsRetType) {
	ret, _ = o.GetReservedPortsOk()
	return ret
}

// GetReservedPortsOk returns a tuple with the ReservedPorts field value
// and a boolean to check if the value has been set.
func (o *UsageSummary) GetReservedPortsOk() (ret UsageSummaryGetReservedPortsRetType, ok bool) {
	return getUsageSummaryGetReservedPortsAttributeTypeOk(o.ReservedPorts)
}

// SetReservedPorts sets field value
func (o *UsageSummary) SetReservedPorts(v UsageSummaryGetReservedPortsRetType) {
	setUsageSummaryGetReservedPortsAttributeType(&o.ReservedPorts, v)
}

// GetRoutes returns the Routes field value
func (o *UsageSummary) GetRoutes() (ret UsageSummaryGetRoutesRetType) {
	ret, _ = o.GetRoutesOk()
	return ret
}

// GetRoutesOk returns a tuple with the Routes field value
// and a boolean to check if the value has been set.
func (o *UsageSummary) GetRoutesOk() (ret UsageSummaryGetRoutesRetType, ok bool) {
	return getUsageSummaryGetRoutesAttributeTypeOk(o.Routes)
}

// SetRoutes sets field value
func (o *UsageSummary) SetRoutes(v UsageSummaryGetRoutesRetType) {
	setUsageSummaryGetRoutesAttributeType(&o.Routes, v)
}

// GetServiceInstances returns the ServiceInstances field value
func (o *UsageSummary) GetServiceInstances() (ret UsageSummaryGetServiceInstancesRetType) {
	ret, _ = o.GetServiceInstancesOk()
	return ret
}

// GetServiceInstancesOk returns a tuple with the ServiceInstances field value
// and a boolean to check if the value has been set.
func (o *UsageSummary) GetServiceInstancesOk() (ret UsageSummaryGetServiceInstancesRetType, ok bool) {
	return getUsageSummaryGetServiceInstancesAttributeTypeOk(o.ServiceInstances)
}

// SetServiceInstances sets field value
func (o *UsageSummary) SetServiceInstances(v UsageSummaryGetServiceInstancesRetType) {
	setUsageSummaryGetServiceInstancesAttributeType(&o.ServiceInstances, v)
}

// GetServiceKeys returns the ServiceKeys field value
func (o *UsageSummary) GetServiceKeys() (ret UsageSummaryGetServiceKeysRetType) {
	ret, _ = o.GetServiceKeysOk()
	return ret
}

// GetServiceKeysOk returns a tuple with the ServiceKeys field value
// and a boolean to check if the value has been set.
func (o *UsageSummary) GetServiceKeysOk() (ret UsageSummaryGetServiceKeysRetType, ok bool) {
	return getUsageSummaryGetServiceKeysAttributeTypeOk(o.ServiceKeys)
}

// SetServiceKeys sets field value
func (o *UsageSummary) SetServiceKeys(v UsageSummaryGetServiceKeysRetType) {
	setUsageSummaryGetServiceKeysAttributeType(&o.ServiceKeys, v)
}

// GetStartedInstances returns the StartedInstances field value
func (o *UsageSummary) GetStartedInstances() (ret UsageSummaryGetStartedInstancesRetType) {
	ret, _ = o.GetStartedInstancesOk()
	return ret
}

// GetStartedInstancesOk returns a tuple with the StartedInstances field value
// and a boolean to check if the value has been set.
func (o *UsageSummary) GetStartedInstancesOk() (ret UsageSummaryGetStartedInstancesRetType, ok bool) {
	return getUsageSummaryGetStartedInstancesAttributeTypeOk(o.StartedInstances)
}

// SetStartedInstances sets field value
func (o *UsageSummary) SetStartedInstances(v UsageSummaryGetStartedInstancesRetType) {
	setUsageSummaryGetStartedInstancesAttributeType(&o.StartedInstances, v)
}

func (o UsageSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getUsageSummaryGetDomainsAttributeTypeOk(o.Domains); ok {
		toSerialize["Domains"] = val
	}
	if val, ok := getUsageSummaryGetMemoryInMbAttributeTypeOk(o.MemoryInMb); ok {
		toSerialize["MemoryInMb"] = val
	}
	if val, ok := getUsageSummaryGetPerAppTasksAttributeTypeOk(o.PerAppTasks); ok {
		toSerialize["PerAppTasks"] = val
	}
	if val, ok := getUsageSummaryGetReservedPortsAttributeTypeOk(o.ReservedPorts); ok {
		toSerialize["ReservedPorts"] = val
	}
	if val, ok := getUsageSummaryGetRoutesAttributeTypeOk(o.Routes); ok {
		toSerialize["Routes"] = val
	}
	if val, ok := getUsageSummaryGetServiceInstancesAttributeTypeOk(o.ServiceInstances); ok {
		toSerialize["ServiceInstances"] = val
	}
	if val, ok := getUsageSummaryGetServiceKeysAttributeTypeOk(o.ServiceKeys); ok {
		toSerialize["ServiceKeys"] = val
	}
	if val, ok := getUsageSummaryGetStartedInstancesAttributeTypeOk(o.StartedInstances); ok {
		toSerialize["StartedInstances"] = val
	}
	return toSerialize, nil
}

type NullableUsageSummary struct {
	value *UsageSummary
	isSet bool
}

func (v NullableUsageSummary) Get() *UsageSummary {
	return v.value
}

func (v *NullableUsageSummary) Set(val *UsageSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableUsageSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableUsageSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUsageSummary(val *UsageSummary) *NullableUsageSummary {
	return &NullableUsageSummary{value: val, isSet: true}
}

func (v NullableUsageSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUsageSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
