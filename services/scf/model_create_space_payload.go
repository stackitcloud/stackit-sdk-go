/*
STACKIT Cloud Foundry API

API endpoints for managing STACKIT Cloud Foundry

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package scf

import (
	"encoding/json"
)

// checks if the CreateSpacePayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateSpacePayload{}

/*
	types and functions for name
*/

// isNotNullableString
type CreateSpacePayloadGetNameAttributeType = *string

func getCreateSpacePayloadGetNameAttributeTypeOk(arg CreateSpacePayloadGetNameAttributeType) (ret CreateSpacePayloadGetNameRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setCreateSpacePayloadGetNameAttributeType(arg *CreateSpacePayloadGetNameAttributeType, val CreateSpacePayloadGetNameRetType) {
	*arg = &val
}

type CreateSpacePayloadGetNameArgType = string
type CreateSpacePayloadGetNameRetType = string

// CreateSpacePayload struct for CreateSpacePayload
type CreateSpacePayload struct {
	// Name of the space
	// REQUIRED
	Name CreateSpacePayloadGetNameAttributeType `json:"name" required:"true"`
}

type _CreateSpacePayload CreateSpacePayload

// NewCreateSpacePayload instantiates a new CreateSpacePayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateSpacePayload(name CreateSpacePayloadGetNameArgType) *CreateSpacePayload {
	this := CreateSpacePayload{}
	setCreateSpacePayloadGetNameAttributeType(&this.Name, name)
	return &this
}

// NewCreateSpacePayloadWithDefaults instantiates a new CreateSpacePayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateSpacePayloadWithDefaults() *CreateSpacePayload {
	this := CreateSpacePayload{}
	return &this
}

// GetName returns the Name field value
func (o *CreateSpacePayload) GetName() (ret CreateSpacePayloadGetNameRetType) {
	ret, _ = o.GetNameOk()
	return ret
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateSpacePayload) GetNameOk() (ret CreateSpacePayloadGetNameRetType, ok bool) {
	return getCreateSpacePayloadGetNameAttributeTypeOk(o.Name)
}

// SetName sets field value
func (o *CreateSpacePayload) SetName(v CreateSpacePayloadGetNameRetType) {
	setCreateSpacePayloadGetNameAttributeType(&o.Name, v)
}

func (o CreateSpacePayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getCreateSpacePayloadGetNameAttributeTypeOk(o.Name); ok {
		toSerialize["Name"] = val
	}
	return toSerialize, nil
}

type NullableCreateSpacePayload struct {
	value *CreateSpacePayload
	isSet bool
}

func (v NullableCreateSpacePayload) Get() *CreateSpacePayload {
	return v.value
}

func (v *NullableCreateSpacePayload) Set(val *CreateSpacePayload) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateSpacePayload) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateSpacePayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateSpacePayload(val *CreateSpacePayload) *NullableCreateSpacePayload {
	return &NullableCreateSpacePayload{value: val, isSet: true}
}

func (v NullableCreateSpacePayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateSpacePayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
