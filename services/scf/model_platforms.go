/*
STACKIT Cloud Foundry API

API endpoints for managing STACKIT Cloud Foundry

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package scf

import (
	"encoding/json"
)

// checks if the Platforms type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Platforms{}

/*
	types and functions for apiUrl
*/

// isNotNullableString
type PlatformsGetApiUrlAttributeType = *string

func getPlatformsGetApiUrlAttributeTypeOk(arg PlatformsGetApiUrlAttributeType) (ret PlatformsGetApiUrlRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setPlatformsGetApiUrlAttributeType(arg *PlatformsGetApiUrlAttributeType, val PlatformsGetApiUrlRetType) {
	*arg = &val
}

type PlatformsGetApiUrlArgType = string
type PlatformsGetApiUrlRetType = string

/*
	types and functions for consoleUrl
*/

// isNotNullableString
type PlatformsGetConsoleUrlAttributeType = *string

func getPlatformsGetConsoleUrlAttributeTypeOk(arg PlatformsGetConsoleUrlAttributeType) (ret PlatformsGetConsoleUrlRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setPlatformsGetConsoleUrlAttributeType(arg *PlatformsGetConsoleUrlAttributeType, val PlatformsGetConsoleUrlRetType) {
	*arg = &val
}

type PlatformsGetConsoleUrlArgType = string
type PlatformsGetConsoleUrlRetType = string

/*
	types and functions for displayName
*/

// isNotNullableString
type PlatformsGetDisplayNameAttributeType = *string

func getPlatformsGetDisplayNameAttributeTypeOk(arg PlatformsGetDisplayNameAttributeType) (ret PlatformsGetDisplayNameRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setPlatformsGetDisplayNameAttributeType(arg *PlatformsGetDisplayNameAttributeType, val PlatformsGetDisplayNameRetType) {
	*arg = &val
}

type PlatformsGetDisplayNameArgType = string
type PlatformsGetDisplayNameRetType = string

/*
	types and functions for guid
*/

// isNotNullableString
type PlatformsGetGuidAttributeType = *string

func getPlatformsGetGuidAttributeTypeOk(arg PlatformsGetGuidAttributeType) (ret PlatformsGetGuidRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setPlatformsGetGuidAttributeType(arg *PlatformsGetGuidAttributeType, val PlatformsGetGuidRetType) {
	*arg = &val
}

type PlatformsGetGuidArgType = string
type PlatformsGetGuidRetType = string

/*
	types and functions for region
*/

// isNotNullableString
type PlatformsGetRegionAttributeType = *string

func getPlatformsGetRegionAttributeTypeOk(arg PlatformsGetRegionAttributeType) (ret PlatformsGetRegionRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setPlatformsGetRegionAttributeType(arg *PlatformsGetRegionAttributeType, val PlatformsGetRegionRetType) {
	*arg = &val
}

type PlatformsGetRegionArgType = string
type PlatformsGetRegionRetType = string

/*
	types and functions for systemId
*/

// isNotNullableString
type PlatformsGetSystemIdAttributeType = *string

func getPlatformsGetSystemIdAttributeTypeOk(arg PlatformsGetSystemIdAttributeType) (ret PlatformsGetSystemIdRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setPlatformsGetSystemIdAttributeType(arg *PlatformsGetSystemIdAttributeType, val PlatformsGetSystemIdRetType) {
	*arg = &val
}

type PlatformsGetSystemIdArgType = string
type PlatformsGetSystemIdRetType = string

// Platforms struct for Platforms
type Platforms struct {
	// REQUIRED
	ApiUrl     PlatformsGetApiUrlAttributeType     `json:"apiUrl" required:"true"`
	ConsoleUrl PlatformsGetConsoleUrlAttributeType `json:"consoleUrl,omitempty"`
	// REQUIRED
	DisplayName PlatformsGetDisplayNameAttributeType `json:"displayName" required:"true"`
	// REQUIRED
	Guid PlatformsGetGuidAttributeType `json:"guid" required:"true"`
	// REQUIRED
	Region PlatformsGetRegionAttributeType `json:"region" required:"true"`
	// REQUIRED
	SystemId PlatformsGetSystemIdAttributeType `json:"systemId" required:"true"`
}

type _Platforms Platforms

// NewPlatforms instantiates a new Platforms object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPlatforms(apiUrl PlatformsGetApiUrlArgType, displayName PlatformsGetDisplayNameArgType, guid PlatformsGetGuidArgType, region PlatformsGetRegionArgType, systemId PlatformsGetSystemIdArgType) *Platforms {
	this := Platforms{}
	setPlatformsGetApiUrlAttributeType(&this.ApiUrl, apiUrl)
	setPlatformsGetDisplayNameAttributeType(&this.DisplayName, displayName)
	setPlatformsGetGuidAttributeType(&this.Guid, guid)
	setPlatformsGetRegionAttributeType(&this.Region, region)
	setPlatformsGetSystemIdAttributeType(&this.SystemId, systemId)
	return &this
}

// NewPlatformsWithDefaults instantiates a new Platforms object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPlatformsWithDefaults() *Platforms {
	this := Platforms{}
	return &this
}

// GetApiUrl returns the ApiUrl field value
func (o *Platforms) GetApiUrl() (ret PlatformsGetApiUrlRetType) {
	ret, _ = o.GetApiUrlOk()
	return ret
}

// GetApiUrlOk returns a tuple with the ApiUrl field value
// and a boolean to check if the value has been set.
func (o *Platforms) GetApiUrlOk() (ret PlatformsGetApiUrlRetType, ok bool) {
	return getPlatformsGetApiUrlAttributeTypeOk(o.ApiUrl)
}

// SetApiUrl sets field value
func (o *Platforms) SetApiUrl(v PlatformsGetApiUrlRetType) {
	setPlatformsGetApiUrlAttributeType(&o.ApiUrl, v)
}

// GetConsoleUrl returns the ConsoleUrl field value if set, zero value otherwise.
func (o *Platforms) GetConsoleUrl() (res PlatformsGetConsoleUrlRetType) {
	res, _ = o.GetConsoleUrlOk()
	return
}

// GetConsoleUrlOk returns a tuple with the ConsoleUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Platforms) GetConsoleUrlOk() (ret PlatformsGetConsoleUrlRetType, ok bool) {
	return getPlatformsGetConsoleUrlAttributeTypeOk(o.ConsoleUrl)
}

// HasConsoleUrl returns a boolean if a field has been set.
func (o *Platforms) HasConsoleUrl() bool {
	_, ok := o.GetConsoleUrlOk()
	return ok
}

// SetConsoleUrl gets a reference to the given string and assigns it to the ConsoleUrl field.
func (o *Platforms) SetConsoleUrl(v PlatformsGetConsoleUrlRetType) {
	setPlatformsGetConsoleUrlAttributeType(&o.ConsoleUrl, v)
}

// GetDisplayName returns the DisplayName field value
func (o *Platforms) GetDisplayName() (ret PlatformsGetDisplayNameRetType) {
	ret, _ = o.GetDisplayNameOk()
	return ret
}

// GetDisplayNameOk returns a tuple with the DisplayName field value
// and a boolean to check if the value has been set.
func (o *Platforms) GetDisplayNameOk() (ret PlatformsGetDisplayNameRetType, ok bool) {
	return getPlatformsGetDisplayNameAttributeTypeOk(o.DisplayName)
}

// SetDisplayName sets field value
func (o *Platforms) SetDisplayName(v PlatformsGetDisplayNameRetType) {
	setPlatformsGetDisplayNameAttributeType(&o.DisplayName, v)
}

// GetGuid returns the Guid field value
func (o *Platforms) GetGuid() (ret PlatformsGetGuidRetType) {
	ret, _ = o.GetGuidOk()
	return ret
}

// GetGuidOk returns a tuple with the Guid field value
// and a boolean to check if the value has been set.
func (o *Platforms) GetGuidOk() (ret PlatformsGetGuidRetType, ok bool) {
	return getPlatformsGetGuidAttributeTypeOk(o.Guid)
}

// SetGuid sets field value
func (o *Platforms) SetGuid(v PlatformsGetGuidRetType) {
	setPlatformsGetGuidAttributeType(&o.Guid, v)
}

// GetRegion returns the Region field value
func (o *Platforms) GetRegion() (ret PlatformsGetRegionRetType) {
	ret, _ = o.GetRegionOk()
	return ret
}

// GetRegionOk returns a tuple with the Region field value
// and a boolean to check if the value has been set.
func (o *Platforms) GetRegionOk() (ret PlatformsGetRegionRetType, ok bool) {
	return getPlatformsGetRegionAttributeTypeOk(o.Region)
}

// SetRegion sets field value
func (o *Platforms) SetRegion(v PlatformsGetRegionRetType) {
	setPlatformsGetRegionAttributeType(&o.Region, v)
}

// GetSystemId returns the SystemId field value
func (o *Platforms) GetSystemId() (ret PlatformsGetSystemIdRetType) {
	ret, _ = o.GetSystemIdOk()
	return ret
}

// GetSystemIdOk returns a tuple with the SystemId field value
// and a boolean to check if the value has been set.
func (o *Platforms) GetSystemIdOk() (ret PlatformsGetSystemIdRetType, ok bool) {
	return getPlatformsGetSystemIdAttributeTypeOk(o.SystemId)
}

// SetSystemId sets field value
func (o *Platforms) SetSystemId(v PlatformsGetSystemIdRetType) {
	setPlatformsGetSystemIdAttributeType(&o.SystemId, v)
}

func (o Platforms) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getPlatformsGetApiUrlAttributeTypeOk(o.ApiUrl); ok {
		toSerialize["ApiUrl"] = val
	}
	if val, ok := getPlatformsGetConsoleUrlAttributeTypeOk(o.ConsoleUrl); ok {
		toSerialize["ConsoleUrl"] = val
	}
	if val, ok := getPlatformsGetDisplayNameAttributeTypeOk(o.DisplayName); ok {
		toSerialize["DisplayName"] = val
	}
	if val, ok := getPlatformsGetGuidAttributeTypeOk(o.Guid); ok {
		toSerialize["Guid"] = val
	}
	if val, ok := getPlatformsGetRegionAttributeTypeOk(o.Region); ok {
		toSerialize["Region"] = val
	}
	if val, ok := getPlatformsGetSystemIdAttributeTypeOk(o.SystemId); ok {
		toSerialize["SystemId"] = val
	}
	return toSerialize, nil
}

type NullablePlatforms struct {
	value *Platforms
	isSet bool
}

func (v NullablePlatforms) Get() *Platforms {
	return v.value
}

func (v *NullablePlatforms) Set(val *Platforms) {
	v.value = val
	v.isSet = true
}

func (v NullablePlatforms) IsSet() bool {
	return v.isSet
}

func (v *NullablePlatforms) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePlatforms(val *Platforms) *NullablePlatforms {
	return &NullablePlatforms{value: val, isSet: true}
}

func (v NullablePlatforms) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePlatforms) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
