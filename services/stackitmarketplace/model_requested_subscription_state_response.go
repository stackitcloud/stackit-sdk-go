/*
STACKIT Marketplace API

API to manage STACKIT Marketplace.

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stackitmarketplace

import (
	"encoding/json"
)

// checks if the RequestedSubscriptionStateResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RequestedSubscriptionStateResponse{}

/*
	types and functions for lifecycleState
*/

// isEnumRef
type RequestedSubscriptionStateResponseGetLifecycleStateAttributeType = *string
type RequestedSubscriptionStateResponseGetLifecycleStateArgType = string
type RequestedSubscriptionStateResponseGetLifecycleStateRetType = string

func getRequestedSubscriptionStateResponseGetLifecycleStateAttributeTypeOk(arg RequestedSubscriptionStateResponseGetLifecycleStateAttributeType) (ret RequestedSubscriptionStateResponseGetLifecycleStateRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setRequestedSubscriptionStateResponseGetLifecycleStateAttributeType(arg *RequestedSubscriptionStateResponseGetLifecycleStateAttributeType, val RequestedSubscriptionStateResponseGetLifecycleStateRetType) {
	*arg = &val
}

/*
	types and functions for subscriptionId
*/

// isNotNullableString
type RequestedSubscriptionStateResponseGetSubscriptionIdAttributeType = *string

func getRequestedSubscriptionStateResponseGetSubscriptionIdAttributeTypeOk(arg RequestedSubscriptionStateResponseGetSubscriptionIdAttributeType) (ret RequestedSubscriptionStateResponseGetSubscriptionIdRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setRequestedSubscriptionStateResponseGetSubscriptionIdAttributeType(arg *RequestedSubscriptionStateResponseGetSubscriptionIdAttributeType, val RequestedSubscriptionStateResponseGetSubscriptionIdRetType) {
	*arg = &val
}

type RequestedSubscriptionStateResponseGetSubscriptionIdArgType = string
type RequestedSubscriptionStateResponseGetSubscriptionIdRetType = string

// RequestedSubscriptionStateResponse struct for RequestedSubscriptionStateResponse
type RequestedSubscriptionStateResponse struct {
	// Lifecycle state of the subscription.
	// REQUIRED
	LifecycleState RequestedSubscriptionStateResponseGetLifecycleStateAttributeType `json:"lifecycleState"`
	// The subscription ID.
	// REQUIRED
	SubscriptionId RequestedSubscriptionStateResponseGetSubscriptionIdAttributeType `json:"subscriptionId"`
}

type _RequestedSubscriptionStateResponse RequestedSubscriptionStateResponse

// NewRequestedSubscriptionStateResponse instantiates a new RequestedSubscriptionStateResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRequestedSubscriptionStateResponse(lifecycleState RequestedSubscriptionStateResponseGetLifecycleStateArgType, subscriptionId RequestedSubscriptionStateResponseGetSubscriptionIdArgType) *RequestedSubscriptionStateResponse {
	this := RequestedSubscriptionStateResponse{}
	setRequestedSubscriptionStateResponseGetLifecycleStateAttributeType(&this.LifecycleState, lifecycleState)
	setRequestedSubscriptionStateResponseGetSubscriptionIdAttributeType(&this.SubscriptionId, subscriptionId)
	return &this
}

// NewRequestedSubscriptionStateResponseWithDefaults instantiates a new RequestedSubscriptionStateResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRequestedSubscriptionStateResponseWithDefaults() *RequestedSubscriptionStateResponse {
	this := RequestedSubscriptionStateResponse{}
	return &this
}

// GetLifecycleState returns the LifecycleState field value
func (o *RequestedSubscriptionStateResponse) GetLifecycleState() (ret RequestedSubscriptionStateResponseGetLifecycleStateRetType) {
	ret, _ = o.GetLifecycleStateOk()
	return ret
}

// GetLifecycleStateOk returns a tuple with the LifecycleState field value
// and a boolean to check if the value has been set.
func (o *RequestedSubscriptionStateResponse) GetLifecycleStateOk() (ret RequestedSubscriptionStateResponseGetLifecycleStateRetType, ok bool) {
	return getRequestedSubscriptionStateResponseGetLifecycleStateAttributeTypeOk(o.LifecycleState)
}

// SetLifecycleState sets field value
func (o *RequestedSubscriptionStateResponse) SetLifecycleState(v RequestedSubscriptionStateResponseGetLifecycleStateRetType) {
	setRequestedSubscriptionStateResponseGetLifecycleStateAttributeType(&o.LifecycleState, v)
}

// GetSubscriptionId returns the SubscriptionId field value
func (o *RequestedSubscriptionStateResponse) GetSubscriptionId() (ret RequestedSubscriptionStateResponseGetSubscriptionIdRetType) {
	ret, _ = o.GetSubscriptionIdOk()
	return ret
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value
// and a boolean to check if the value has been set.
func (o *RequestedSubscriptionStateResponse) GetSubscriptionIdOk() (ret RequestedSubscriptionStateResponseGetSubscriptionIdRetType, ok bool) {
	return getRequestedSubscriptionStateResponseGetSubscriptionIdAttributeTypeOk(o.SubscriptionId)
}

// SetSubscriptionId sets field value
func (o *RequestedSubscriptionStateResponse) SetSubscriptionId(v RequestedSubscriptionStateResponseGetSubscriptionIdRetType) {
	setRequestedSubscriptionStateResponseGetSubscriptionIdAttributeType(&o.SubscriptionId, v)
}

func (o RequestedSubscriptionStateResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getRequestedSubscriptionStateResponseGetLifecycleStateAttributeTypeOk(o.LifecycleState); ok {
		toSerialize["LifecycleState"] = val
	}
	if val, ok := getRequestedSubscriptionStateResponseGetSubscriptionIdAttributeTypeOk(o.SubscriptionId); ok {
		toSerialize["SubscriptionId"] = val
	}
	return toSerialize, nil
}

type NullableRequestedSubscriptionStateResponse struct {
	value *RequestedSubscriptionStateResponse
	isSet bool
}

func (v NullableRequestedSubscriptionStateResponse) Get() *RequestedSubscriptionStateResponse {
	return v.value
}

func (v *NullableRequestedSubscriptionStateResponse) Set(val *RequestedSubscriptionStateResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRequestedSubscriptionStateResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRequestedSubscriptionStateResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequestedSubscriptionStateResponse(val *RequestedSubscriptionStateResponse) *NullableRequestedSubscriptionStateResponse {
	return &NullableRequestedSubscriptionStateResponse{value: val, isSet: true}
}

func (v NullableRequestedSubscriptionStateResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequestedSubscriptionStateResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
