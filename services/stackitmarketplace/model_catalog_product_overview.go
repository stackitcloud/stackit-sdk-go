/*
STACKIT Marketplace API

API to manage STACKIT Marketplace.

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stackitmarketplace

import (
	"encoding/json"
)

// checks if the CatalogProductOverview type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogProductOverview{}

/*
	types and functions for deliveryMethod
*/

// isEnumRef
type CatalogProductOverviewGetDeliveryMethodAttributeType = *DeliveryMethod
type CatalogProductOverviewGetDeliveryMethodArgType = DeliveryMethod
type CatalogProductOverviewGetDeliveryMethodRetType = DeliveryMethod

func getCatalogProductOverviewGetDeliveryMethodAttributeTypeOk(arg CatalogProductOverviewGetDeliveryMethodAttributeType) (ret CatalogProductOverviewGetDeliveryMethodRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setCatalogProductOverviewGetDeliveryMethodAttributeType(arg *CatalogProductOverviewGetDeliveryMethodAttributeType, val CatalogProductOverviewGetDeliveryMethodRetType) {
	*arg = &val
}

/*
	types and functions for lifecycleState
*/

// isEnumRef
type CatalogProductOverviewGetLifecycleStateAttributeType = *ProductLifecycleState
type CatalogProductOverviewGetLifecycleStateArgType = ProductLifecycleState
type CatalogProductOverviewGetLifecycleStateRetType = ProductLifecycleState

func getCatalogProductOverviewGetLifecycleStateAttributeTypeOk(arg CatalogProductOverviewGetLifecycleStateAttributeType) (ret CatalogProductOverviewGetLifecycleStateRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setCatalogProductOverviewGetLifecycleStateAttributeType(arg *CatalogProductOverviewGetLifecycleStateAttributeType, val CatalogProductOverviewGetLifecycleStateRetType) {
	*arg = &val
}

/*
	types and functions for logo
*/

// isByteArray
type CatalogProductOverviewGetLogoAttributeType = *[]byte
type CatalogProductOverviewGetLogoArgType = []byte
type CatalogProductOverviewGetLogoRetType = []byte

func getCatalogProductOverviewGetLogoAttributeTypeOk(arg CatalogProductOverviewGetLogoAttributeType) (ret CatalogProductOverviewGetLogoRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setCatalogProductOverviewGetLogoAttributeType(arg *CatalogProductOverviewGetLogoAttributeType, val CatalogProductOverviewGetLogoRetType) {
	*arg = &val
}

/*
	types and functions for name
*/

// isNotNullableString
type CatalogProductOverviewGetNameAttributeType = *string

func getCatalogProductOverviewGetNameAttributeTypeOk(arg CatalogProductOverviewGetNameAttributeType) (ret CatalogProductOverviewGetNameRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setCatalogProductOverviewGetNameAttributeType(arg *CatalogProductOverviewGetNameAttributeType, val CatalogProductOverviewGetNameRetType) {
	*arg = &val
}

type CatalogProductOverviewGetNameArgType = string
type CatalogProductOverviewGetNameRetType = string

/*
	types and functions for productId
*/

// isNotNullableString
type CatalogProductOverviewGetProductIdAttributeType = *string

func getCatalogProductOverviewGetProductIdAttributeTypeOk(arg CatalogProductOverviewGetProductIdAttributeType) (ret CatalogProductOverviewGetProductIdRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setCatalogProductOverviewGetProductIdAttributeType(arg *CatalogProductOverviewGetProductIdAttributeType, val CatalogProductOverviewGetProductIdRetType) {
	*arg = &val
}

type CatalogProductOverviewGetProductIdArgType = string
type CatalogProductOverviewGetProductIdRetType = string

/*
	types and functions for summary
*/

// isNotNullableString
type CatalogProductOverviewGetSummaryAttributeType = *string

func getCatalogProductOverviewGetSummaryAttributeTypeOk(arg CatalogProductOverviewGetSummaryAttributeType) (ret CatalogProductOverviewGetSummaryRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setCatalogProductOverviewGetSummaryAttributeType(arg *CatalogProductOverviewGetSummaryAttributeType, val CatalogProductOverviewGetSummaryRetType) {
	*arg = &val
}

type CatalogProductOverviewGetSummaryArgType = string
type CatalogProductOverviewGetSummaryRetType = string

/*
	types and functions for vendor
*/

// isModel
type CatalogProductOverviewGetVendorAttributeType = *CatalogProductOverviewVendor
type CatalogProductOverviewGetVendorArgType = CatalogProductOverviewVendor
type CatalogProductOverviewGetVendorRetType = CatalogProductOverviewVendor

func getCatalogProductOverviewGetVendorAttributeTypeOk(arg CatalogProductOverviewGetVendorAttributeType) (ret CatalogProductOverviewGetVendorRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setCatalogProductOverviewGetVendorAttributeType(arg *CatalogProductOverviewGetVendorAttributeType, val CatalogProductOverviewGetVendorRetType) {
	*arg = &val
}

// CatalogProductOverview struct for CatalogProductOverview
type CatalogProductOverview struct {
	// REQUIRED
	DeliveryMethod CatalogProductOverviewGetDeliveryMethodAttributeType `json:"deliveryMethod" required:"true"`
	// REQUIRED
	LifecycleState CatalogProductOverviewGetLifecycleStateAttributeType `json:"lifecycleState" required:"true"`
	// The logo base64 encoded.
	Logo CatalogProductOverviewGetLogoAttributeType `json:"logo,omitempty"`
	// The name of the product.
	// REQUIRED
	Name CatalogProductOverviewGetNameAttributeType `json:"name" required:"true"`
	// The user-readable product ID.
	// REQUIRED
	ProductId CatalogProductOverviewGetProductIdAttributeType `json:"productId" required:"true"`
	// A custom message.
	// REQUIRED
	Summary CatalogProductOverviewGetSummaryAttributeType `json:"summary" required:"true"`
	// REQUIRED
	Vendor CatalogProductOverviewGetVendorAttributeType `json:"vendor" required:"true"`
}

type _CatalogProductOverview CatalogProductOverview

// NewCatalogProductOverview instantiates a new CatalogProductOverview object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogProductOverview(deliveryMethod CatalogProductOverviewGetDeliveryMethodArgType, lifecycleState CatalogProductOverviewGetLifecycleStateArgType, name CatalogProductOverviewGetNameArgType, productId CatalogProductOverviewGetProductIdArgType, summary CatalogProductOverviewGetSummaryArgType, vendor CatalogProductOverviewGetVendorArgType) *CatalogProductOverview {
	this := CatalogProductOverview{}
	setCatalogProductOverviewGetDeliveryMethodAttributeType(&this.DeliveryMethod, deliveryMethod)
	setCatalogProductOverviewGetLifecycleStateAttributeType(&this.LifecycleState, lifecycleState)
	setCatalogProductOverviewGetNameAttributeType(&this.Name, name)
	setCatalogProductOverviewGetProductIdAttributeType(&this.ProductId, productId)
	setCatalogProductOverviewGetSummaryAttributeType(&this.Summary, summary)
	setCatalogProductOverviewGetVendorAttributeType(&this.Vendor, vendor)
	return &this
}

// NewCatalogProductOverviewWithDefaults instantiates a new CatalogProductOverview object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogProductOverviewWithDefaults() *CatalogProductOverview {
	this := CatalogProductOverview{}
	return &this
}

// GetDeliveryMethod returns the DeliveryMethod field value
func (o *CatalogProductOverview) GetDeliveryMethod() (ret CatalogProductOverviewGetDeliveryMethodRetType) {
	ret, _ = o.GetDeliveryMethodOk()
	return ret
}

// GetDeliveryMethodOk returns a tuple with the DeliveryMethod field value
// and a boolean to check if the value has been set.
func (o *CatalogProductOverview) GetDeliveryMethodOk() (ret CatalogProductOverviewGetDeliveryMethodRetType, ok bool) {
	return getCatalogProductOverviewGetDeliveryMethodAttributeTypeOk(o.DeliveryMethod)
}

// SetDeliveryMethod sets field value
func (o *CatalogProductOverview) SetDeliveryMethod(v CatalogProductOverviewGetDeliveryMethodRetType) {
	setCatalogProductOverviewGetDeliveryMethodAttributeType(&o.DeliveryMethod, v)
}

// GetLifecycleState returns the LifecycleState field value
func (o *CatalogProductOverview) GetLifecycleState() (ret CatalogProductOverviewGetLifecycleStateRetType) {
	ret, _ = o.GetLifecycleStateOk()
	return ret
}

// GetLifecycleStateOk returns a tuple with the LifecycleState field value
// and a boolean to check if the value has been set.
func (o *CatalogProductOverview) GetLifecycleStateOk() (ret CatalogProductOverviewGetLifecycleStateRetType, ok bool) {
	return getCatalogProductOverviewGetLifecycleStateAttributeTypeOk(o.LifecycleState)
}

// SetLifecycleState sets field value
func (o *CatalogProductOverview) SetLifecycleState(v CatalogProductOverviewGetLifecycleStateRetType) {
	setCatalogProductOverviewGetLifecycleStateAttributeType(&o.LifecycleState, v)
}

// GetLogo returns the Logo field value if set, zero value otherwise.
func (o *CatalogProductOverview) GetLogo() (res CatalogProductOverviewGetLogoRetType) {
	res, _ = o.GetLogoOk()
	return
}

// GetLogoOk returns a tuple with the Logo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogProductOverview) GetLogoOk() (ret CatalogProductOverviewGetLogoRetType, ok bool) {
	return getCatalogProductOverviewGetLogoAttributeTypeOk(o.Logo)
}

// HasLogo returns a boolean if a field has been set.
func (o *CatalogProductOverview) HasLogo() bool {
	_, ok := o.GetLogoOk()
	return ok
}

// SetLogo gets a reference to the given string and assigns it to the Logo field.
func (o *CatalogProductOverview) SetLogo(v CatalogProductOverviewGetLogoRetType) {
	setCatalogProductOverviewGetLogoAttributeType(&o.Logo, v)
}

// GetName returns the Name field value
func (o *CatalogProductOverview) GetName() (ret CatalogProductOverviewGetNameRetType) {
	ret, _ = o.GetNameOk()
	return ret
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CatalogProductOverview) GetNameOk() (ret CatalogProductOverviewGetNameRetType, ok bool) {
	return getCatalogProductOverviewGetNameAttributeTypeOk(o.Name)
}

// SetName sets field value
func (o *CatalogProductOverview) SetName(v CatalogProductOverviewGetNameRetType) {
	setCatalogProductOverviewGetNameAttributeType(&o.Name, v)
}

// GetProductId returns the ProductId field value
func (o *CatalogProductOverview) GetProductId() (ret CatalogProductOverviewGetProductIdRetType) {
	ret, _ = o.GetProductIdOk()
	return ret
}

// GetProductIdOk returns a tuple with the ProductId field value
// and a boolean to check if the value has been set.
func (o *CatalogProductOverview) GetProductIdOk() (ret CatalogProductOverviewGetProductIdRetType, ok bool) {
	return getCatalogProductOverviewGetProductIdAttributeTypeOk(o.ProductId)
}

// SetProductId sets field value
func (o *CatalogProductOverview) SetProductId(v CatalogProductOverviewGetProductIdRetType) {
	setCatalogProductOverviewGetProductIdAttributeType(&o.ProductId, v)
}

// GetSummary returns the Summary field value
func (o *CatalogProductOverview) GetSummary() (ret CatalogProductOverviewGetSummaryRetType) {
	ret, _ = o.GetSummaryOk()
	return ret
}

// GetSummaryOk returns a tuple with the Summary field value
// and a boolean to check if the value has been set.
func (o *CatalogProductOverview) GetSummaryOk() (ret CatalogProductOverviewGetSummaryRetType, ok bool) {
	return getCatalogProductOverviewGetSummaryAttributeTypeOk(o.Summary)
}

// SetSummary sets field value
func (o *CatalogProductOverview) SetSummary(v CatalogProductOverviewGetSummaryRetType) {
	setCatalogProductOverviewGetSummaryAttributeType(&o.Summary, v)
}

// GetVendor returns the Vendor field value
func (o *CatalogProductOverview) GetVendor() (ret CatalogProductOverviewGetVendorRetType) {
	ret, _ = o.GetVendorOk()
	return ret
}

// GetVendorOk returns a tuple with the Vendor field value
// and a boolean to check if the value has been set.
func (o *CatalogProductOverview) GetVendorOk() (ret CatalogProductOverviewGetVendorRetType, ok bool) {
	return getCatalogProductOverviewGetVendorAttributeTypeOk(o.Vendor)
}

// SetVendor sets field value
func (o *CatalogProductOverview) SetVendor(v CatalogProductOverviewGetVendorRetType) {
	setCatalogProductOverviewGetVendorAttributeType(&o.Vendor, v)
}

func (o CatalogProductOverview) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getCatalogProductOverviewGetDeliveryMethodAttributeTypeOk(o.DeliveryMethod); ok {
		toSerialize["DeliveryMethod"] = val
	}
	if val, ok := getCatalogProductOverviewGetLifecycleStateAttributeTypeOk(o.LifecycleState); ok {
		toSerialize["LifecycleState"] = val
	}
	if val, ok := getCatalogProductOverviewGetLogoAttributeTypeOk(o.Logo); ok {
		toSerialize["Logo"] = val
	}
	if val, ok := getCatalogProductOverviewGetNameAttributeTypeOk(o.Name); ok {
		toSerialize["Name"] = val
	}
	if val, ok := getCatalogProductOverviewGetProductIdAttributeTypeOk(o.ProductId); ok {
		toSerialize["ProductId"] = val
	}
	if val, ok := getCatalogProductOverviewGetSummaryAttributeTypeOk(o.Summary); ok {
		toSerialize["Summary"] = val
	}
	if val, ok := getCatalogProductOverviewGetVendorAttributeTypeOk(o.Vendor); ok {
		toSerialize["Vendor"] = val
	}
	return toSerialize, nil
}

type NullableCatalogProductOverview struct {
	value *CatalogProductOverview
	isSet bool
}

func (v NullableCatalogProductOverview) Get() *CatalogProductOverview {
	return v.value
}

func (v *NullableCatalogProductOverview) Set(val *CatalogProductOverview) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogProductOverview) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogProductOverview) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogProductOverview(val *CatalogProductOverview) *NullableCatalogProductOverview {
	return &NullableCatalogProductOverview{value: val, isSet: true}
}

func (v NullableCatalogProductOverview) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogProductOverview) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
