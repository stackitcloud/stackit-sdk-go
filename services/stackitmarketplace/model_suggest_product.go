/*
STACKIT Marketplace API

API to manage STACKIT Marketplace.

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stackitmarketplace

import (
	"encoding/json"
)

// checks if the SuggestProduct type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SuggestProduct{}

/*
	types and functions for suggestProduct
*/

// isModel
type SuggestProductGetSuggestProductAttributeType = *InquirySuggestProduct
type SuggestProductGetSuggestProductArgType = InquirySuggestProduct
type SuggestProductGetSuggestProductRetType = InquirySuggestProduct

func getSuggestProductGetSuggestProductAttributeTypeOk(arg SuggestProductGetSuggestProductAttributeType) (ret SuggestProductGetSuggestProductRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setSuggestProductGetSuggestProductAttributeType(arg *SuggestProductGetSuggestProductAttributeType, val SuggestProductGetSuggestProductRetType) {
	*arg = &val
}

/*
	types and functions for type
*/

// isEnumRef
type SuggestProductGetTypeAttributeType = *InquiryFormType
type SuggestProductGetTypeArgType = InquiryFormType
type SuggestProductGetTypeRetType = InquiryFormType

func getSuggestProductGetTypeAttributeTypeOk(arg SuggestProductGetTypeAttributeType) (ret SuggestProductGetTypeRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setSuggestProductGetTypeAttributeType(arg *SuggestProductGetTypeAttributeType, val SuggestProductGetTypeRetType) {
	*arg = &val
}

// SuggestProduct Suggest a product.
type SuggestProduct struct {
	// REQUIRED
	SuggestProduct SuggestProductGetSuggestProductAttributeType `json:"suggestProduct"`
	// REQUIRED
	Type SuggestProductGetTypeAttributeType `json:"type"`
}

type _SuggestProduct SuggestProduct

// NewSuggestProduct instantiates a new SuggestProduct object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSuggestProduct(suggestProduct SuggestProductGetSuggestProductArgType, types SuggestProductGetTypeArgType) *SuggestProduct {
	this := SuggestProduct{}
	setSuggestProductGetSuggestProductAttributeType(&this.SuggestProduct, suggestProduct)
	setSuggestProductGetTypeAttributeType(&this.Type, types)
	return &this
}

// NewSuggestProductWithDefaults instantiates a new SuggestProduct object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSuggestProductWithDefaults() *SuggestProduct {
	this := SuggestProduct{}
	return &this
}

// GetSuggestProduct returns the SuggestProduct field value
func (o *SuggestProduct) GetSuggestProduct() (ret SuggestProductGetSuggestProductRetType) {
	ret, _ = o.GetSuggestProductOk()
	return ret
}

// GetSuggestProductOk returns a tuple with the SuggestProduct field value
// and a boolean to check if the value has been set.
func (o *SuggestProduct) GetSuggestProductOk() (ret SuggestProductGetSuggestProductRetType, ok bool) {
	return getSuggestProductGetSuggestProductAttributeTypeOk(o.SuggestProduct)
}

// SetSuggestProduct sets field value
func (o *SuggestProduct) SetSuggestProduct(v SuggestProductGetSuggestProductRetType) {
	setSuggestProductGetSuggestProductAttributeType(&o.SuggestProduct, v)
}

// GetType returns the Type field value
func (o *SuggestProduct) GetType() (ret SuggestProductGetTypeRetType) {
	ret, _ = o.GetTypeOk()
	return ret
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *SuggestProduct) GetTypeOk() (ret SuggestProductGetTypeRetType, ok bool) {
	return getSuggestProductGetTypeAttributeTypeOk(o.Type)
}

// SetType sets field value
func (o *SuggestProduct) SetType(v SuggestProductGetTypeRetType) {
	setSuggestProductGetTypeAttributeType(&o.Type, v)
}

func (o SuggestProduct) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getSuggestProductGetSuggestProductAttributeTypeOk(o.SuggestProduct); ok {
		toSerialize["SuggestProduct"] = val
	}
	if val, ok := getSuggestProductGetTypeAttributeTypeOk(o.Type); ok {
		toSerialize["Type"] = val
	}
	return toSerialize, nil
}

type NullableSuggestProduct struct {
	value *SuggestProduct
	isSet bool
}

func (v NullableSuggestProduct) Get() *SuggestProduct {
	return v.value
}

func (v *NullableSuggestProduct) Set(val *SuggestProduct) {
	v.value = val
	v.isSet = true
}

func (v NullableSuggestProduct) IsSet() bool {
	return v.isSet
}

func (v *NullableSuggestProduct) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSuggestProduct(val *SuggestProduct) *NullableSuggestProduct {
	return &NullableSuggestProduct{value: val, isSet: true}
}

func (v NullableSuggestProduct) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSuggestProduct) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
