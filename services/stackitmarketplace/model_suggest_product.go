/*
STACKIT Marketplace API

API to manage STACKIT Marketplace.

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stackitmarketplace

import (
	"encoding/json"
)

// checks if the SuggestProduct type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SuggestProduct{}

// SuggestProduct Suggest a product.
type SuggestProduct struct {
	// REQUIRED
	SuggestProduct *SuggestProductSuggestProduct `json:"suggestProduct"`
	// The form type.
	// REQUIRED
	Type *string `json:"type"`
}

type _SuggestProduct SuggestProduct

// NewSuggestProduct instantiates a new SuggestProduct object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSuggestProduct(suggestProduct *SuggestProductSuggestProduct, type_ *string) *SuggestProduct {
	this := SuggestProduct{}
	this.SuggestProduct = suggestProduct
	this.Type = type_
	return &this
}

// NewSuggestProductWithDefaults instantiates a new SuggestProduct object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSuggestProductWithDefaults() *SuggestProduct {
	this := SuggestProduct{}
	return &this
}

// GetSuggestProduct returns the SuggestProduct field value
func (o *SuggestProduct) GetSuggestProduct() *SuggestProductSuggestProduct {
	if o == nil || IsNil(o.SuggestProduct) {
		var ret *SuggestProductSuggestProduct
		return ret
	}

	return o.SuggestProduct
}

// GetSuggestProductOk returns a tuple with the SuggestProduct field value
// and a boolean to check if the value has been set.
func (o *SuggestProduct) GetSuggestProductOk() (*SuggestProductSuggestProduct, bool) {
	if o == nil {
		return nil, false
	}
	return o.SuggestProduct, true
}

// SetSuggestProduct sets field value
func (o *SuggestProduct) SetSuggestProduct(v *SuggestProductSuggestProduct) {
	o.SuggestProduct = v
}

// GetType returns the Type field value
func (o *SuggestProduct) GetType() *string {
	if o == nil || IsNil(o.Type) {
		var ret *string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *SuggestProduct) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Type, true
}

// SetType sets field value
func (o *SuggestProduct) SetType(v *string) {
	o.Type = v
}

func (o SuggestProduct) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["suggestProduct"] = o.SuggestProduct
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

type NullableSuggestProduct struct {
	value *SuggestProduct
	isSet bool
}

func (v NullableSuggestProduct) Get() *SuggestProduct {
	return v.value
}

func (v *NullableSuggestProduct) Set(val *SuggestProduct) {
	v.value = val
	v.isSet = true
}

func (v NullableSuggestProduct) IsSet() bool {
	return v.isSet
}

func (v *NullableSuggestProduct) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSuggestProduct(val *SuggestProduct) *NullableSuggestProduct {
	return &NullableSuggestProduct{value: val, isSet: true}
}

func (v NullableSuggestProduct) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSuggestProduct) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
