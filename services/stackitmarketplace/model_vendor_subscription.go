/*
STACKIT Marketplace API

API to manage STACKIT Marketplace.

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stackitmarketplace

import (
	"encoding/json"
)

// checks if the VendorSubscription type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VendorSubscription{}

/*
	types and functions for lifecycleState
*/

// isEnumRef
type VendorSubscriptionGetLifecycleStateAttributeType = *SubscriptionLifecycleState
type VendorSubscriptionGetLifecycleStateArgType = SubscriptionLifecycleState
type VendorSubscriptionGetLifecycleStateRetType = SubscriptionLifecycleState

func getVendorSubscriptionGetLifecycleStateAttributeTypeOk(arg VendorSubscriptionGetLifecycleStateAttributeType) (ret VendorSubscriptionGetLifecycleStateRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setVendorSubscriptionGetLifecycleStateAttributeType(arg *VendorSubscriptionGetLifecycleStateAttributeType, val VendorSubscriptionGetLifecycleStateRetType) {
	*arg = &val
}

/*
	types and functions for organizationId
*/

// isModel
type VendorSubscriptionGetOrganizationIdAttributeType = *OrganizationId
type VendorSubscriptionGetOrganizationIdArgType = OrganizationId
type VendorSubscriptionGetOrganizationIdRetType = OrganizationId

func getVendorSubscriptionGetOrganizationIdAttributeTypeOk(arg VendorSubscriptionGetOrganizationIdAttributeType) (ret VendorSubscriptionGetOrganizationIdRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setVendorSubscriptionGetOrganizationIdAttributeType(arg *VendorSubscriptionGetOrganizationIdAttributeType, val VendorSubscriptionGetOrganizationIdRetType) {
	*arg = &val
}

/*
	types and functions for product
*/

// isModel
type VendorSubscriptionGetProductAttributeType = *SubscriptionProduct
type VendorSubscriptionGetProductArgType = SubscriptionProduct
type VendorSubscriptionGetProductRetType = SubscriptionProduct

func getVendorSubscriptionGetProductAttributeTypeOk(arg VendorSubscriptionGetProductAttributeType) (ret VendorSubscriptionGetProductRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setVendorSubscriptionGetProductAttributeType(arg *VendorSubscriptionGetProductAttributeType, val VendorSubscriptionGetProductRetType) {
	*arg = &val
}

/*
	types and functions for projectId
*/

// isModel
type VendorSubscriptionGetProjectIdAttributeType = *ProjectId
type VendorSubscriptionGetProjectIdArgType = ProjectId
type VendorSubscriptionGetProjectIdRetType = ProjectId

func getVendorSubscriptionGetProjectIdAttributeTypeOk(arg VendorSubscriptionGetProjectIdAttributeType) (ret VendorSubscriptionGetProjectIdRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setVendorSubscriptionGetProjectIdAttributeType(arg *VendorSubscriptionGetProjectIdAttributeType, val VendorSubscriptionGetProjectIdRetType) {
	*arg = &val
}

/*
	types and functions for subscriptionId
*/

// isModel
type VendorSubscriptionGetSubscriptionIdAttributeType = *SubscriptionId
type VendorSubscriptionGetSubscriptionIdArgType = SubscriptionId
type VendorSubscriptionGetSubscriptionIdRetType = SubscriptionId

func getVendorSubscriptionGetSubscriptionIdAttributeTypeOk(arg VendorSubscriptionGetSubscriptionIdAttributeType) (ret VendorSubscriptionGetSubscriptionIdRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setVendorSubscriptionGetSubscriptionIdAttributeType(arg *VendorSubscriptionGetSubscriptionIdAttributeType, val VendorSubscriptionGetSubscriptionIdRetType) {
	*arg = &val
}

// VendorSubscription struct for VendorSubscription
type VendorSubscription struct {
	// REQUIRED
	LifecycleState VendorSubscriptionGetLifecycleStateAttributeType `json:"lifecycleState"`
	// REQUIRED
	OrganizationId VendorSubscriptionGetOrganizationIdAttributeType `json:"organizationId"`
	// REQUIRED
	Product VendorSubscriptionGetProductAttributeType `json:"product"`
	// REQUIRED
	ProjectId VendorSubscriptionGetProjectIdAttributeType `json:"projectId"`
	// REQUIRED
	SubscriptionId VendorSubscriptionGetSubscriptionIdAttributeType `json:"subscriptionId"`
}

type _VendorSubscription VendorSubscription

// NewVendorSubscription instantiates a new VendorSubscription object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVendorSubscription(lifecycleState VendorSubscriptionGetLifecycleStateArgType, organizationId VendorSubscriptionGetOrganizationIdArgType, product VendorSubscriptionGetProductArgType, projectId VendorSubscriptionGetProjectIdArgType, subscriptionId VendorSubscriptionGetSubscriptionIdArgType) *VendorSubscription {
	this := VendorSubscription{}
	setVendorSubscriptionGetLifecycleStateAttributeType(&this.LifecycleState, lifecycleState)
	setVendorSubscriptionGetOrganizationIdAttributeType(&this.OrganizationId, organizationId)
	setVendorSubscriptionGetProductAttributeType(&this.Product, product)
	setVendorSubscriptionGetProjectIdAttributeType(&this.ProjectId, projectId)
	setVendorSubscriptionGetSubscriptionIdAttributeType(&this.SubscriptionId, subscriptionId)
	return &this
}

// NewVendorSubscriptionWithDefaults instantiates a new VendorSubscription object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVendorSubscriptionWithDefaults() *VendorSubscription {
	this := VendorSubscription{}
	return &this
}

// GetLifecycleState returns the LifecycleState field value
func (o *VendorSubscription) GetLifecycleState() (ret VendorSubscriptionGetLifecycleStateRetType) {
	ret, _ = o.GetLifecycleStateOk()
	return ret
}

// GetLifecycleStateOk returns a tuple with the LifecycleState field value
// and a boolean to check if the value has been set.
func (o *VendorSubscription) GetLifecycleStateOk() (ret VendorSubscriptionGetLifecycleStateRetType, ok bool) {
	return getVendorSubscriptionGetLifecycleStateAttributeTypeOk(o.LifecycleState)
}

// SetLifecycleState sets field value
func (o *VendorSubscription) SetLifecycleState(v VendorSubscriptionGetLifecycleStateRetType) {
	setVendorSubscriptionGetLifecycleStateAttributeType(&o.LifecycleState, v)
}

// GetOrganizationId returns the OrganizationId field value
func (o *VendorSubscription) GetOrganizationId() (ret VendorSubscriptionGetOrganizationIdRetType) {
	ret, _ = o.GetOrganizationIdOk()
	return ret
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value
// and a boolean to check if the value has been set.
func (o *VendorSubscription) GetOrganizationIdOk() (ret VendorSubscriptionGetOrganizationIdRetType, ok bool) {
	return getVendorSubscriptionGetOrganizationIdAttributeTypeOk(o.OrganizationId)
}

// SetOrganizationId sets field value
func (o *VendorSubscription) SetOrganizationId(v VendorSubscriptionGetOrganizationIdRetType) {
	setVendorSubscriptionGetOrganizationIdAttributeType(&o.OrganizationId, v)
}

// GetProduct returns the Product field value
func (o *VendorSubscription) GetProduct() (ret VendorSubscriptionGetProductRetType) {
	ret, _ = o.GetProductOk()
	return ret
}

// GetProductOk returns a tuple with the Product field value
// and a boolean to check if the value has been set.
func (o *VendorSubscription) GetProductOk() (ret VendorSubscriptionGetProductRetType, ok bool) {
	return getVendorSubscriptionGetProductAttributeTypeOk(o.Product)
}

// SetProduct sets field value
func (o *VendorSubscription) SetProduct(v VendorSubscriptionGetProductRetType) {
	setVendorSubscriptionGetProductAttributeType(&o.Product, v)
}

// GetProjectId returns the ProjectId field value
func (o *VendorSubscription) GetProjectId() (ret VendorSubscriptionGetProjectIdRetType) {
	ret, _ = o.GetProjectIdOk()
	return ret
}

// GetProjectIdOk returns a tuple with the ProjectId field value
// and a boolean to check if the value has been set.
func (o *VendorSubscription) GetProjectIdOk() (ret VendorSubscriptionGetProjectIdRetType, ok bool) {
	return getVendorSubscriptionGetProjectIdAttributeTypeOk(o.ProjectId)
}

// SetProjectId sets field value
func (o *VendorSubscription) SetProjectId(v VendorSubscriptionGetProjectIdRetType) {
	setVendorSubscriptionGetProjectIdAttributeType(&o.ProjectId, v)
}

// GetSubscriptionId returns the SubscriptionId field value
func (o *VendorSubscription) GetSubscriptionId() (ret VendorSubscriptionGetSubscriptionIdRetType) {
	ret, _ = o.GetSubscriptionIdOk()
	return ret
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value
// and a boolean to check if the value has been set.
func (o *VendorSubscription) GetSubscriptionIdOk() (ret VendorSubscriptionGetSubscriptionIdRetType, ok bool) {
	return getVendorSubscriptionGetSubscriptionIdAttributeTypeOk(o.SubscriptionId)
}

// SetSubscriptionId sets field value
func (o *VendorSubscription) SetSubscriptionId(v VendorSubscriptionGetSubscriptionIdRetType) {
	setVendorSubscriptionGetSubscriptionIdAttributeType(&o.SubscriptionId, v)
}

func (o VendorSubscription) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getVendorSubscriptionGetLifecycleStateAttributeTypeOk(o.LifecycleState); ok {
		toSerialize["LifecycleState"] = val
	}
	if val, ok := getVendorSubscriptionGetOrganizationIdAttributeTypeOk(o.OrganizationId); ok {
		toSerialize["OrganizationId"] = val
	}
	if val, ok := getVendorSubscriptionGetProductAttributeTypeOk(o.Product); ok {
		toSerialize["Product"] = val
	}
	if val, ok := getVendorSubscriptionGetProjectIdAttributeTypeOk(o.ProjectId); ok {
		toSerialize["ProjectId"] = val
	}
	if val, ok := getVendorSubscriptionGetSubscriptionIdAttributeTypeOk(o.SubscriptionId); ok {
		toSerialize["SubscriptionId"] = val
	}
	return toSerialize, nil
}

type NullableVendorSubscription struct {
	value *VendorSubscription
	isSet bool
}

func (v NullableVendorSubscription) Get() *VendorSubscription {
	return v.value
}

func (v *NullableVendorSubscription) Set(val *VendorSubscription) {
	v.value = val
	v.isSet = true
}

func (v NullableVendorSubscription) IsSet() bool {
	return v.isSet
}

func (v *NullableVendorSubscription) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVendorSubscription(val *VendorSubscription) *NullableVendorSubscription {
	return &NullableVendorSubscription{value: val, isSet: true}
}

func (v NullableVendorSubscription) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVendorSubscription) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
