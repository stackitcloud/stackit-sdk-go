/*
STACKIT Marketplace API

API to manage STACKIT Marketplace.

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stackitmarketplace

import (
	"encoding/json"
)

// checks if the Assets type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Assets{}

/*
	types and functions for assetsEndUserLicenseAgreement
*/

// isModel
type AssetsGetAssetsEndUserLicenseAgreementAttributeType = *AssetsEndUserLicenseAgreement
type AssetsGetAssetsEndUserLicenseAgreementArgType = AssetsEndUserLicenseAgreement
type AssetsGetAssetsEndUserLicenseAgreementRetType = AssetsEndUserLicenseAgreement

func getAssetsGetAssetsEndUserLicenseAgreementAttributeTypeOk(arg AssetsGetAssetsEndUserLicenseAgreementAttributeType) (ret AssetsGetAssetsEndUserLicenseAgreementRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setAssetsGetAssetsEndUserLicenseAgreementAttributeType(arg *AssetsGetAssetsEndUserLicenseAgreementAttributeType, val AssetsGetAssetsEndUserLicenseAgreementRetType) {
	*arg = &val
}

/*
	types and functions for assetsProductDescription
*/

// isModel
type AssetsGetAssetsProductDescriptionAttributeType = *AssetsProductDescription
type AssetsGetAssetsProductDescriptionArgType = AssetsProductDescription
type AssetsGetAssetsProductDescriptionRetType = AssetsProductDescription

func getAssetsGetAssetsProductDescriptionAttributeTypeOk(arg AssetsGetAssetsProductDescriptionAttributeType) (ret AssetsGetAssetsProductDescriptionRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setAssetsGetAssetsProductDescriptionAttributeType(arg *AssetsGetAssetsProductDescriptionAttributeType, val AssetsGetAssetsProductDescriptionRetType) {
	*arg = &val
}

/*
	types and functions for assetsServiceCertificate
*/

// isModel
type AssetsGetAssetsServiceCertificateAttributeType = *AssetsServiceCertificate
type AssetsGetAssetsServiceCertificateArgType = AssetsServiceCertificate
type AssetsGetAssetsServiceCertificateRetType = AssetsServiceCertificate

func getAssetsGetAssetsServiceCertificateAttributeTypeOk(arg AssetsGetAssetsServiceCertificateAttributeType) (ret AssetsGetAssetsServiceCertificateRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setAssetsGetAssetsServiceCertificateAttributeType(arg *AssetsGetAssetsServiceCertificateAttributeType, val AssetsGetAssetsServiceCertificateRetType) {
	*arg = &val
}

/*
	types and functions for assetsServiceLevelAgreement
*/

// isModel
type AssetsGetAssetsServiceLevelAgreementAttributeType = *AssetsServiceLevelAgreement
type AssetsGetAssetsServiceLevelAgreementArgType = AssetsServiceLevelAgreement
type AssetsGetAssetsServiceLevelAgreementRetType = AssetsServiceLevelAgreement

func getAssetsGetAssetsServiceLevelAgreementAttributeTypeOk(arg AssetsGetAssetsServiceLevelAgreementAttributeType) (ret AssetsGetAssetsServiceLevelAgreementRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setAssetsGetAssetsServiceLevelAgreementAttributeType(arg *AssetsGetAssetsServiceLevelAgreementAttributeType, val AssetsGetAssetsServiceLevelAgreementRetType) {
	*arg = &val
}

// Assets The assets associated with the product.
type Assets struct {
	AssetsEndUserLicenseAgreement AssetsGetAssetsEndUserLicenseAgreementAttributeType `json:"assetsEndUserLicenseAgreement,omitempty"`
	AssetsProductDescription      AssetsGetAssetsProductDescriptionAttributeType      `json:"assetsProductDescription,omitempty"`
	AssetsServiceCertificate      AssetsGetAssetsServiceCertificateAttributeType      `json:"assetsServiceCertificate,omitempty"`
	AssetsServiceLevelAgreement   AssetsGetAssetsServiceLevelAgreementAttributeType   `json:"assetsServiceLevelAgreement,omitempty"`
}

// NewAssets instantiates a new Assets object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssets() *Assets {
	this := Assets{}
	return &this
}

// NewAssetsWithDefaults instantiates a new Assets object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssetsWithDefaults() *Assets {
	this := Assets{}
	return &this
}

// GetAssetsEndUserLicenseAgreement returns the AssetsEndUserLicenseAgreement field value if set, zero value otherwise.
func (o *Assets) GetAssetsEndUserLicenseAgreement() (res AssetsGetAssetsEndUserLicenseAgreementRetType) {
	res, _ = o.GetAssetsEndUserLicenseAgreementOk()
	return
}

// GetAssetsEndUserLicenseAgreementOk returns a tuple with the AssetsEndUserLicenseAgreement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Assets) GetAssetsEndUserLicenseAgreementOk() (ret AssetsGetAssetsEndUserLicenseAgreementRetType, ok bool) {
	return getAssetsGetAssetsEndUserLicenseAgreementAttributeTypeOk(o.AssetsEndUserLicenseAgreement)
}

// HasAssetsEndUserLicenseAgreement returns a boolean if a field has been set.
func (o *Assets) HasAssetsEndUserLicenseAgreement() bool {
	_, ok := o.GetAssetsEndUserLicenseAgreementOk()
	return ok
}

// SetAssetsEndUserLicenseAgreement gets a reference to the given AssetsEndUserLicenseAgreement and assigns it to the AssetsEndUserLicenseAgreement field.
func (o *Assets) SetAssetsEndUserLicenseAgreement(v AssetsGetAssetsEndUserLicenseAgreementRetType) {
	setAssetsGetAssetsEndUserLicenseAgreementAttributeType(&o.AssetsEndUserLicenseAgreement, v)
}

// GetAssetsProductDescription returns the AssetsProductDescription field value if set, zero value otherwise.
func (o *Assets) GetAssetsProductDescription() (res AssetsGetAssetsProductDescriptionRetType) {
	res, _ = o.GetAssetsProductDescriptionOk()
	return
}

// GetAssetsProductDescriptionOk returns a tuple with the AssetsProductDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Assets) GetAssetsProductDescriptionOk() (ret AssetsGetAssetsProductDescriptionRetType, ok bool) {
	return getAssetsGetAssetsProductDescriptionAttributeTypeOk(o.AssetsProductDescription)
}

// HasAssetsProductDescription returns a boolean if a field has been set.
func (o *Assets) HasAssetsProductDescription() bool {
	_, ok := o.GetAssetsProductDescriptionOk()
	return ok
}

// SetAssetsProductDescription gets a reference to the given AssetsProductDescription and assigns it to the AssetsProductDescription field.
func (o *Assets) SetAssetsProductDescription(v AssetsGetAssetsProductDescriptionRetType) {
	setAssetsGetAssetsProductDescriptionAttributeType(&o.AssetsProductDescription, v)
}

// GetAssetsServiceCertificate returns the AssetsServiceCertificate field value if set, zero value otherwise.
func (o *Assets) GetAssetsServiceCertificate() (res AssetsGetAssetsServiceCertificateRetType) {
	res, _ = o.GetAssetsServiceCertificateOk()
	return
}

// GetAssetsServiceCertificateOk returns a tuple with the AssetsServiceCertificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Assets) GetAssetsServiceCertificateOk() (ret AssetsGetAssetsServiceCertificateRetType, ok bool) {
	return getAssetsGetAssetsServiceCertificateAttributeTypeOk(o.AssetsServiceCertificate)
}

// HasAssetsServiceCertificate returns a boolean if a field has been set.
func (o *Assets) HasAssetsServiceCertificate() bool {
	_, ok := o.GetAssetsServiceCertificateOk()
	return ok
}

// SetAssetsServiceCertificate gets a reference to the given AssetsServiceCertificate and assigns it to the AssetsServiceCertificate field.
func (o *Assets) SetAssetsServiceCertificate(v AssetsGetAssetsServiceCertificateRetType) {
	setAssetsGetAssetsServiceCertificateAttributeType(&o.AssetsServiceCertificate, v)
}

// GetAssetsServiceLevelAgreement returns the AssetsServiceLevelAgreement field value if set, zero value otherwise.
func (o *Assets) GetAssetsServiceLevelAgreement() (res AssetsGetAssetsServiceLevelAgreementRetType) {
	res, _ = o.GetAssetsServiceLevelAgreementOk()
	return
}

// GetAssetsServiceLevelAgreementOk returns a tuple with the AssetsServiceLevelAgreement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Assets) GetAssetsServiceLevelAgreementOk() (ret AssetsGetAssetsServiceLevelAgreementRetType, ok bool) {
	return getAssetsGetAssetsServiceLevelAgreementAttributeTypeOk(o.AssetsServiceLevelAgreement)
}

// HasAssetsServiceLevelAgreement returns a boolean if a field has been set.
func (o *Assets) HasAssetsServiceLevelAgreement() bool {
	_, ok := o.GetAssetsServiceLevelAgreementOk()
	return ok
}

// SetAssetsServiceLevelAgreement gets a reference to the given AssetsServiceLevelAgreement and assigns it to the AssetsServiceLevelAgreement field.
func (o *Assets) SetAssetsServiceLevelAgreement(v AssetsGetAssetsServiceLevelAgreementRetType) {
	setAssetsGetAssetsServiceLevelAgreementAttributeType(&o.AssetsServiceLevelAgreement, v)
}

func (o Assets) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getAssetsGetAssetsEndUserLicenseAgreementAttributeTypeOk(o.AssetsEndUserLicenseAgreement); ok {
		toSerialize["AssetsEndUserLicenseAgreement"] = val
	}
	if val, ok := getAssetsGetAssetsProductDescriptionAttributeTypeOk(o.AssetsProductDescription); ok {
		toSerialize["AssetsProductDescription"] = val
	}
	if val, ok := getAssetsGetAssetsServiceCertificateAttributeTypeOk(o.AssetsServiceCertificate); ok {
		toSerialize["AssetsServiceCertificate"] = val
	}
	if val, ok := getAssetsGetAssetsServiceLevelAgreementAttributeTypeOk(o.AssetsServiceLevelAgreement); ok {
		toSerialize["AssetsServiceLevelAgreement"] = val
	}
	return toSerialize, nil
}

type NullableAssets struct {
	value *Assets
	isSet bool
}

func (v NullableAssets) Get() *Assets {
	return v.value
}

func (v *NullableAssets) Set(val *Assets) {
	v.value = val
	v.isSet = true
}

func (v NullableAssets) IsSet() bool {
	return v.isSet
}

func (v *NullableAssets) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssets(val *Assets) *NullableAssets {
	return &NullableAssets{value: val, isSet: true}
}

func (v NullableAssets) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssets) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
