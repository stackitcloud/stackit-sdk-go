/*
STACKIT Marketplace API

API to manage STACKIT Marketplace.

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stackitmarketplace

import (
	"encoding/json"
)

// checks if the InquiryBecomeVendor type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InquiryBecomeVendor{}

/*
	types and functions for contactEmail
*/

// isNotNullableString
type InquiryBecomeVendorGetContactEmailAttributeType = *string

func getInquiryBecomeVendorGetContactEmailAttributeTypeOk(arg InquiryBecomeVendorGetContactEmailAttributeType) (ret InquiryBecomeVendorGetContactEmailRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setInquiryBecomeVendorGetContactEmailAttributeType(arg *InquiryBecomeVendorGetContactEmailAttributeType, val InquiryBecomeVendorGetContactEmailRetType) {
	*arg = &val
}

type InquiryBecomeVendorGetContactEmailArgType = string
type InquiryBecomeVendorGetContactEmailRetType = string

/*
	types and functions for message
*/

// isNotNullableString
type InquiryBecomeVendorGetMessageAttributeType = *string

func getInquiryBecomeVendorGetMessageAttributeTypeOk(arg InquiryBecomeVendorGetMessageAttributeType) (ret InquiryBecomeVendorGetMessageRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setInquiryBecomeVendorGetMessageAttributeType(arg *InquiryBecomeVendorGetMessageAttributeType, val InquiryBecomeVendorGetMessageRetType) {
	*arg = &val
}

type InquiryBecomeVendorGetMessageArgType = string
type InquiryBecomeVendorGetMessageRetType = string

// InquiryBecomeVendor Become a vendor.
type InquiryBecomeVendor struct {
	// A e-mail address.
	// REQUIRED
	ContactEmail InquiryBecomeVendorGetContactEmailAttributeType `json:"contactEmail"`
	// A custom message.
	// REQUIRED
	Message InquiryBecomeVendorGetMessageAttributeType `json:"message"`
}

type _InquiryBecomeVendor InquiryBecomeVendor

// NewInquiryBecomeVendor instantiates a new InquiryBecomeVendor object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInquiryBecomeVendor(contactEmail InquiryBecomeVendorGetContactEmailArgType, message InquiryBecomeVendorGetMessageArgType) *InquiryBecomeVendor {
	this := InquiryBecomeVendor{}
	setInquiryBecomeVendorGetContactEmailAttributeType(&this.ContactEmail, contactEmail)
	setInquiryBecomeVendorGetMessageAttributeType(&this.Message, message)
	return &this
}

// NewInquiryBecomeVendorWithDefaults instantiates a new InquiryBecomeVendor object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInquiryBecomeVendorWithDefaults() *InquiryBecomeVendor {
	this := InquiryBecomeVendor{}
	return &this
}

// GetContactEmail returns the ContactEmail field value
func (o *InquiryBecomeVendor) GetContactEmail() (ret InquiryBecomeVendorGetContactEmailRetType) {
	ret, _ = o.GetContactEmailOk()
	return ret
}

// GetContactEmailOk returns a tuple with the ContactEmail field value
// and a boolean to check if the value has been set.
func (o *InquiryBecomeVendor) GetContactEmailOk() (ret InquiryBecomeVendorGetContactEmailRetType, ok bool) {
	return getInquiryBecomeVendorGetContactEmailAttributeTypeOk(o.ContactEmail)
}

// SetContactEmail sets field value
func (o *InquiryBecomeVendor) SetContactEmail(v InquiryBecomeVendorGetContactEmailRetType) {
	setInquiryBecomeVendorGetContactEmailAttributeType(&o.ContactEmail, v)
}

// GetMessage returns the Message field value
func (o *InquiryBecomeVendor) GetMessage() (ret InquiryBecomeVendorGetMessageRetType) {
	ret, _ = o.GetMessageOk()
	return ret
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *InquiryBecomeVendor) GetMessageOk() (ret InquiryBecomeVendorGetMessageRetType, ok bool) {
	return getInquiryBecomeVendorGetMessageAttributeTypeOk(o.Message)
}

// SetMessage sets field value
func (o *InquiryBecomeVendor) SetMessage(v InquiryBecomeVendorGetMessageRetType) {
	setInquiryBecomeVendorGetMessageAttributeType(&o.Message, v)
}

func (o InquiryBecomeVendor) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getInquiryBecomeVendorGetContactEmailAttributeTypeOk(o.ContactEmail); ok {
		toSerialize["ContactEmail"] = val
	}
	if val, ok := getInquiryBecomeVendorGetMessageAttributeTypeOk(o.Message); ok {
		toSerialize["Message"] = val
	}
	return toSerialize, nil
}

type NullableInquiryBecomeVendor struct {
	value *InquiryBecomeVendor
	isSet bool
}

func (v NullableInquiryBecomeVendor) Get() *InquiryBecomeVendor {
	return v.value
}

func (v *NullableInquiryBecomeVendor) Set(val *InquiryBecomeVendor) {
	v.value = val
	v.isSet = true
}

func (v NullableInquiryBecomeVendor) IsSet() bool {
	return v.isSet
}

func (v *NullableInquiryBecomeVendor) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInquiryBecomeVendor(val *InquiryBecomeVendor) *NullableInquiryBecomeVendor {
	return &NullableInquiryBecomeVendor{value: val, isSet: true}
}

func (v NullableInquiryBecomeVendor) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInquiryBecomeVendor) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
