/*
STACKIT Marketplace API

API to manage STACKIT Marketplace.

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stackitmarketplace

import (
	"encoding/json"
)

// checks if the BecomeVendor type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BecomeVendor{}

// BecomeVendor Become a vendor.
type BecomeVendor struct {
	// REQUIRED
	BecomeVendor *BecomeVendorBecomeVendor `json:"becomeVendor"`
	// The form type.
	// REQUIRED
	Type *string `json:"type"`
}

type _BecomeVendor BecomeVendor

// NewBecomeVendor instantiates a new BecomeVendor object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBecomeVendor(becomeVendor *BecomeVendorBecomeVendor, type_ *string) *BecomeVendor {
	this := BecomeVendor{}
	this.BecomeVendor = becomeVendor
	this.Type = type_
	return &this
}

// NewBecomeVendorWithDefaults instantiates a new BecomeVendor object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBecomeVendorWithDefaults() *BecomeVendor {
	this := BecomeVendor{}
	return &this
}

// GetBecomeVendor returns the BecomeVendor field value
func (o *BecomeVendor) GetBecomeVendor() *BecomeVendorBecomeVendor {
	if o == nil || IsNil(o.BecomeVendor) {
		var ret *BecomeVendorBecomeVendor
		return ret
	}

	return o.BecomeVendor
}

// GetBecomeVendorOk returns a tuple with the BecomeVendor field value
// and a boolean to check if the value has been set.
func (o *BecomeVendor) GetBecomeVendorOk() (*BecomeVendorBecomeVendor, bool) {
	if o == nil {
		return nil, false
	}
	return o.BecomeVendor, true
}

// SetBecomeVendor sets field value
func (o *BecomeVendor) SetBecomeVendor(v *BecomeVendorBecomeVendor) {
	o.BecomeVendor = v
}

// GetType returns the Type field value
func (o *BecomeVendor) GetType() *string {
	if o == nil || IsNil(o.Type) {
		var ret *string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *BecomeVendor) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Type, true
}

// SetType sets field value
func (o *BecomeVendor) SetType(v *string) {
	o.Type = v
}

func (o BecomeVendor) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["becomeVendor"] = o.BecomeVendor
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

type NullableBecomeVendor struct {
	value *BecomeVendor
	isSet bool
}

func (v NullableBecomeVendor) Get() *BecomeVendor {
	return v.value
}

func (v *NullableBecomeVendor) Set(val *BecomeVendor) {
	v.value = val
	v.isSet = true
}

func (v NullableBecomeVendor) IsSet() bool {
	return v.isSet
}

func (v *NullableBecomeVendor) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBecomeVendor(val *BecomeVendor) *NullableBecomeVendor {
	return &NullableBecomeVendor{value: val, isSet: true}
}

func (v NullableBecomeVendor) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBecomeVendor) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
