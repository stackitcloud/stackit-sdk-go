/*
STACKIT Marketplace API

API to manage STACKIT Marketplace.

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stackitmarketplace

import (
	"encoding/json"
)

// checks if the BecomeVendor type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BecomeVendor{}

/*
	types and functions for becomeVendor
*/

// isModel
type BecomeVendorGetBecomeVendorAttributeType = *InquiryBecomeVendor
type BecomeVendorGetBecomeVendorArgType = InquiryBecomeVendor
type BecomeVendorGetBecomeVendorRetType = InquiryBecomeVendor

func getBecomeVendorGetBecomeVendorAttributeTypeOk(arg BecomeVendorGetBecomeVendorAttributeType) (ret BecomeVendorGetBecomeVendorRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setBecomeVendorGetBecomeVendorAttributeType(arg *BecomeVendorGetBecomeVendorAttributeType, val BecomeVendorGetBecomeVendorRetType) {
	*arg = &val
}

/*
	types and functions for type
*/

// isEnumRef
type BecomeVendorGetTypeAttributeType = *InquiryFormType
type BecomeVendorGetTypeArgType = InquiryFormType
type BecomeVendorGetTypeRetType = InquiryFormType

func getBecomeVendorGetTypeAttributeTypeOk(arg BecomeVendorGetTypeAttributeType) (ret BecomeVendorGetTypeRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setBecomeVendorGetTypeAttributeType(arg *BecomeVendorGetTypeAttributeType, val BecomeVendorGetTypeRetType) {
	*arg = &val
}

// BecomeVendor Become a Vendor.
type BecomeVendor struct {
	// REQUIRED
	BecomeVendor BecomeVendorGetBecomeVendorAttributeType `json:"becomeVendor"`
	// REQUIRED
	Type BecomeVendorGetTypeAttributeType `json:"type"`
}

type _BecomeVendor BecomeVendor

// NewBecomeVendor instantiates a new BecomeVendor object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBecomeVendor(becomeVendor BecomeVendorGetBecomeVendorArgType, types BecomeVendorGetTypeArgType) *BecomeVendor {
	this := BecomeVendor{}
	setBecomeVendorGetBecomeVendorAttributeType(&this.BecomeVendor, becomeVendor)
	setBecomeVendorGetTypeAttributeType(&this.Type, types)
	return &this
}

// NewBecomeVendorWithDefaults instantiates a new BecomeVendor object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBecomeVendorWithDefaults() *BecomeVendor {
	this := BecomeVendor{}
	return &this
}

// GetBecomeVendor returns the BecomeVendor field value
func (o *BecomeVendor) GetBecomeVendor() (ret BecomeVendorGetBecomeVendorRetType) {
	ret, _ = o.GetBecomeVendorOk()
	return ret
}

// GetBecomeVendorOk returns a tuple with the BecomeVendor field value
// and a boolean to check if the value has been set.
func (o *BecomeVendor) GetBecomeVendorOk() (ret BecomeVendorGetBecomeVendorRetType, ok bool) {
	return getBecomeVendorGetBecomeVendorAttributeTypeOk(o.BecomeVendor)
}

// SetBecomeVendor sets field value
func (o *BecomeVendor) SetBecomeVendor(v BecomeVendorGetBecomeVendorRetType) {
	setBecomeVendorGetBecomeVendorAttributeType(&o.BecomeVendor, v)
}

// GetType returns the Type field value
func (o *BecomeVendor) GetType() (ret BecomeVendorGetTypeRetType) {
	ret, _ = o.GetTypeOk()
	return ret
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *BecomeVendor) GetTypeOk() (ret BecomeVendorGetTypeRetType, ok bool) {
	return getBecomeVendorGetTypeAttributeTypeOk(o.Type)
}

// SetType sets field value
func (o *BecomeVendor) SetType(v BecomeVendorGetTypeRetType) {
	setBecomeVendorGetTypeAttributeType(&o.Type, v)
}

func (o BecomeVendor) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getBecomeVendorGetBecomeVendorAttributeTypeOk(o.BecomeVendor); ok {
		toSerialize["BecomeVendor"] = val
	}
	if val, ok := getBecomeVendorGetTypeAttributeTypeOk(o.Type); ok {
		toSerialize["Type"] = val
	}
	return toSerialize, nil
}

type NullableBecomeVendor struct {
	value *BecomeVendor
	isSet bool
}

func (v NullableBecomeVendor) Get() *BecomeVendor {
	return v.value
}

func (v *NullableBecomeVendor) Set(val *BecomeVendor) {
	v.value = val
	v.isSet = true
}

func (v NullableBecomeVendor) IsSet() bool {
	return v.isSet
}

func (v *NullableBecomeVendor) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBecomeVendor(val *BecomeVendor) *NullableBecomeVendor {
	return &NullableBecomeVendor{value: val, isSet: true}
}

func (v NullableBecomeVendor) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBecomeVendor) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
