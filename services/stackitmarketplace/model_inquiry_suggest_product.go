/*
STACKIT Marketplace API

API to manage STACKIT Marketplace.

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stackitmarketplace

import (
	"encoding/json"
)

// checks if the InquirySuggestProduct type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InquirySuggestProduct{}

/*
	types and functions for companyName
*/

// isNotNullableString
type InquirySuggestProductGetCompanyNameAttributeType = *string

func getInquirySuggestProductGetCompanyNameAttributeTypeOk(arg InquirySuggestProductGetCompanyNameAttributeType) (ret InquirySuggestProductGetCompanyNameRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setInquirySuggestProductGetCompanyNameAttributeType(arg *InquirySuggestProductGetCompanyNameAttributeType, val InquirySuggestProductGetCompanyNameRetType) {
	*arg = &val
}

type InquirySuggestProductGetCompanyNameArgType = string
type InquirySuggestProductGetCompanyNameRetType = string

/*
	types and functions for message
*/

// isNotNullableString
type InquirySuggestProductGetMessageAttributeType = *string

func getInquirySuggestProductGetMessageAttributeTypeOk(arg InquirySuggestProductGetMessageAttributeType) (ret InquirySuggestProductGetMessageRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setInquirySuggestProductGetMessageAttributeType(arg *InquirySuggestProductGetMessageAttributeType, val InquirySuggestProductGetMessageRetType) {
	*arg = &val
}

type InquirySuggestProductGetMessageArgType = string
type InquirySuggestProductGetMessageRetType = string

/*
	types and functions for name
*/

// isNotNullableString
type InquirySuggestProductGetNameAttributeType = *string

func getInquirySuggestProductGetNameAttributeTypeOk(arg InquirySuggestProductGetNameAttributeType) (ret InquirySuggestProductGetNameRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setInquirySuggestProductGetNameAttributeType(arg *InquirySuggestProductGetNameAttributeType, val InquirySuggestProductGetNameRetType) {
	*arg = &val
}

type InquirySuggestProductGetNameArgType = string
type InquirySuggestProductGetNameRetType = string

/*
	types and functions for url
*/

// isNotNullableString
type InquirySuggestProductGetUrlAttributeType = *string

func getInquirySuggestProductGetUrlAttributeTypeOk(arg InquirySuggestProductGetUrlAttributeType) (ret InquirySuggestProductGetUrlRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setInquirySuggestProductGetUrlAttributeType(arg *InquirySuggestProductGetUrlAttributeType, val InquirySuggestProductGetUrlRetType) {
	*arg = &val
}

type InquirySuggestProductGetUrlArgType = string
type InquirySuggestProductGetUrlRetType = string

// InquirySuggestProduct Suggest a product.
type InquirySuggestProduct struct {
	// The product's vendor name.
	// REQUIRED
	CompanyName InquirySuggestProductGetCompanyNameAttributeType `json:"companyName" required:"true"`
	// A custom message.
	Message InquirySuggestProductGetMessageAttributeType `json:"message,omitempty"`
	// The name of the product.
	// REQUIRED
	Name InquirySuggestProductGetNameAttributeType `json:"name" required:"true"`
	// Uniform Resource Locator.
	// REQUIRED
	Url InquirySuggestProductGetUrlAttributeType `json:"url" required:"true"`
}

type _InquirySuggestProduct InquirySuggestProduct

// NewInquirySuggestProduct instantiates a new InquirySuggestProduct object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInquirySuggestProduct(companyName InquirySuggestProductGetCompanyNameArgType, name InquirySuggestProductGetNameArgType, url InquirySuggestProductGetUrlArgType) *InquirySuggestProduct {
	this := InquirySuggestProduct{}
	setInquirySuggestProductGetCompanyNameAttributeType(&this.CompanyName, companyName)
	setInquirySuggestProductGetNameAttributeType(&this.Name, name)
	setInquirySuggestProductGetUrlAttributeType(&this.Url, url)
	return &this
}

// NewInquirySuggestProductWithDefaults instantiates a new InquirySuggestProduct object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInquirySuggestProductWithDefaults() *InquirySuggestProduct {
	this := InquirySuggestProduct{}
	return &this
}

// GetCompanyName returns the CompanyName field value
func (o *InquirySuggestProduct) GetCompanyName() (ret InquirySuggestProductGetCompanyNameRetType) {
	ret, _ = o.GetCompanyNameOk()
	return ret
}

// GetCompanyNameOk returns a tuple with the CompanyName field value
// and a boolean to check if the value has been set.
func (o *InquirySuggestProduct) GetCompanyNameOk() (ret InquirySuggestProductGetCompanyNameRetType, ok bool) {
	return getInquirySuggestProductGetCompanyNameAttributeTypeOk(o.CompanyName)
}

// SetCompanyName sets field value
func (o *InquirySuggestProduct) SetCompanyName(v InquirySuggestProductGetCompanyNameRetType) {
	setInquirySuggestProductGetCompanyNameAttributeType(&o.CompanyName, v)
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *InquirySuggestProduct) GetMessage() (res InquirySuggestProductGetMessageRetType) {
	res, _ = o.GetMessageOk()
	return
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InquirySuggestProduct) GetMessageOk() (ret InquirySuggestProductGetMessageRetType, ok bool) {
	return getInquirySuggestProductGetMessageAttributeTypeOk(o.Message)
}

// HasMessage returns a boolean if a field has been set.
func (o *InquirySuggestProduct) HasMessage() bool {
	_, ok := o.GetMessageOk()
	return ok
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *InquirySuggestProduct) SetMessage(v InquirySuggestProductGetMessageRetType) {
	setInquirySuggestProductGetMessageAttributeType(&o.Message, v)
}

// GetName returns the Name field value
func (o *InquirySuggestProduct) GetName() (ret InquirySuggestProductGetNameRetType) {
	ret, _ = o.GetNameOk()
	return ret
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *InquirySuggestProduct) GetNameOk() (ret InquirySuggestProductGetNameRetType, ok bool) {
	return getInquirySuggestProductGetNameAttributeTypeOk(o.Name)
}

// SetName sets field value
func (o *InquirySuggestProduct) SetName(v InquirySuggestProductGetNameRetType) {
	setInquirySuggestProductGetNameAttributeType(&o.Name, v)
}

// GetUrl returns the Url field value
func (o *InquirySuggestProduct) GetUrl() (ret InquirySuggestProductGetUrlRetType) {
	ret, _ = o.GetUrlOk()
	return ret
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *InquirySuggestProduct) GetUrlOk() (ret InquirySuggestProductGetUrlRetType, ok bool) {
	return getInquirySuggestProductGetUrlAttributeTypeOk(o.Url)
}

// SetUrl sets field value
func (o *InquirySuggestProduct) SetUrl(v InquirySuggestProductGetUrlRetType) {
	setInquirySuggestProductGetUrlAttributeType(&o.Url, v)
}

func (o InquirySuggestProduct) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getInquirySuggestProductGetCompanyNameAttributeTypeOk(o.CompanyName); ok {
		toSerialize["CompanyName"] = val
	}
	if val, ok := getInquirySuggestProductGetMessageAttributeTypeOk(o.Message); ok {
		toSerialize["Message"] = val
	}
	if val, ok := getInquirySuggestProductGetNameAttributeTypeOk(o.Name); ok {
		toSerialize["Name"] = val
	}
	if val, ok := getInquirySuggestProductGetUrlAttributeTypeOk(o.Url); ok {
		toSerialize["Url"] = val
	}
	return toSerialize, nil
}

type NullableInquirySuggestProduct struct {
	value *InquirySuggestProduct
	isSet bool
}

func (v NullableInquirySuggestProduct) Get() *InquirySuggestProduct {
	return v.value
}

func (v *NullableInquirySuggestProduct) Set(val *InquirySuggestProduct) {
	v.value = val
	v.isSet = true
}

func (v NullableInquirySuggestProduct) IsSet() bool {
	return v.isSet
}

func (v *NullableInquirySuggestProduct) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInquirySuggestProduct(val *InquirySuggestProduct) *NullableInquirySuggestProduct {
	return &NullableInquirySuggestProduct{value: val, isSet: true}
}

func (v NullableInquirySuggestProduct) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInquirySuggestProduct) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
