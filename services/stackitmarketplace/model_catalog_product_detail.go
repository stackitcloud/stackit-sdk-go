/*
STACKIT Marketplace API

API to manage STACKIT Marketplace.

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stackitmarketplace

import (
	"encoding/json"
)

// checks if the CatalogProductDetail type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogProductDetail{}

// CatalogProductDetail struct for CatalogProductDetail
type CatalogProductDetail struct {
	// The list of categories associated to the product.
	Categories *[]string `json:"categories,omitempty"`
	// The product type. For reference: SAAS - Software as a Service, SAI - STACKIT Application Image
	// REQUIRED
	DeliveryMethod *string `json:"deliveryMethod"`
	// The product description.
	// REQUIRED
	Description *string `json:"description"`
	// The documentation URL.
	// REQUIRED
	DocumentationUrl *string `json:"documentationUrl"`
	// The list of highlights.
	// REQUIRED
	Highlights *[]CatalogProductHighlight `json:"highlights"`
	// If true, the product is not fully integrated but only listed. Product listings may not have prices and support information.
	// REQUIRED
	IsProductListing *bool `json:"isProductListing"`
	// The lifecycle state of the product.
	// REQUIRED
	LifecycleState *string `json:"lifecycleState"`
	// The logo base64 encoded.
	// REQUIRED
	Logo *string `json:"logo"`
	// The product name.
	// REQUIRED
	Name *string `json:"name"`
	// The list of pricing options.
	// REQUIRED
	PricingOptions *[]CatalogProductPricingOption `json:"pricingOptions"`
	// The product ID.
	// REQUIRED
	ProductId *string `json:"productId"`
	// The short summary of the product.
	// REQUIRED
	Summary *string `json:"summary"`
	// The e-mail address for support inquiries.
	SupportEmail *string `json:"supportEmail,omitempty"`
	// The support FAQ URL.
	SupportFaq *string `json:"supportFaq,omitempty"`
	// The phone number for support inquiries.
	SupportPhone *string `json:"supportPhone,omitempty"`
	// The list of support resources.
	SupportResources *[]CatalogProductSupportResource `json:"supportResources,omitempty"`
	// REQUIRED
	Vendor *CatalogProductDetailsVendor `json:"vendor"`
	// The list of terms of use.
	VendorTerms *[]CatalogProductVendorTerms `json:"vendorTerms,omitempty"`
	// The video URL.
	// REQUIRED
	VideoUrl *string `json:"videoUrl"`
}

type _CatalogProductDetail CatalogProductDetail

// NewCatalogProductDetail instantiates a new CatalogProductDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogProductDetail(deliveryMethod *string, description *string, documentationUrl *string, highlights *[]CatalogProductHighlight, isProductListing *bool, lifecycleState *string, logo *string, name *string, pricingOptions *[]CatalogProductPricingOption, productId *string, summary *string, vendor *CatalogProductDetailsVendor, videoUrl *string) *CatalogProductDetail {
	this := CatalogProductDetail{}
	this.DeliveryMethod = deliveryMethod
	this.Description = description
	this.DocumentationUrl = documentationUrl
	this.Highlights = highlights
	this.IsProductListing = isProductListing
	this.LifecycleState = lifecycleState
	this.Logo = logo
	this.Name = name
	this.PricingOptions = pricingOptions
	this.ProductId = productId
	this.Summary = summary
	this.Vendor = vendor
	this.VideoUrl = videoUrl
	return &this
}

// NewCatalogProductDetailWithDefaults instantiates a new CatalogProductDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogProductDetailWithDefaults() *CatalogProductDetail {
	this := CatalogProductDetail{}
	return &this
}

// GetCategories returns the Categories field value if set, zero value otherwise.
func (o *CatalogProductDetail) GetCategories() *[]string {
	if o == nil || IsNil(o.Categories) {
		var ret *[]string
		return ret
	}
	return o.Categories
}

// GetCategoriesOk returns a tuple with the Categories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogProductDetail) GetCategoriesOk() (*[]string, bool) {
	if o == nil || IsNil(o.Categories) {
		return nil, false
	}
	return o.Categories, true
}

// HasCategories returns a boolean if a field has been set.
func (o *CatalogProductDetail) HasCategories() bool {
	if o != nil && !IsNil(o.Categories) {
		return true
	}

	return false
}

// SetCategories gets a reference to the given []string and assigns it to the Categories field.
func (o *CatalogProductDetail) SetCategories(v *[]string) {
	o.Categories = v
}

// GetDeliveryMethod returns the DeliveryMethod field value
func (o *CatalogProductDetail) GetDeliveryMethod() *string {
	if o == nil || IsNil(o.DeliveryMethod) {
		var ret *string
		return ret
	}

	return o.DeliveryMethod
}

// GetDeliveryMethodOk returns a tuple with the DeliveryMethod field value
// and a boolean to check if the value has been set.
func (o *CatalogProductDetail) GetDeliveryMethodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeliveryMethod, true
}

// SetDeliveryMethod sets field value
func (o *CatalogProductDetail) SetDeliveryMethod(v *string) {
	o.DeliveryMethod = v
}

// GetDescription returns the Description field value
func (o *CatalogProductDetail) GetDescription() *string {
	if o == nil || IsNil(o.Description) {
		var ret *string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *CatalogProductDetail) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description, true
}

// SetDescription sets field value
func (o *CatalogProductDetail) SetDescription(v *string) {
	o.Description = v
}

// GetDocumentationUrl returns the DocumentationUrl field value
func (o *CatalogProductDetail) GetDocumentationUrl() *string {
	if o == nil || IsNil(o.DocumentationUrl) {
		var ret *string
		return ret
	}

	return o.DocumentationUrl
}

// GetDocumentationUrlOk returns a tuple with the DocumentationUrl field value
// and a boolean to check if the value has been set.
func (o *CatalogProductDetail) GetDocumentationUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DocumentationUrl, true
}

// SetDocumentationUrl sets field value
func (o *CatalogProductDetail) SetDocumentationUrl(v *string) {
	o.DocumentationUrl = v
}

// GetHighlights returns the Highlights field value
func (o *CatalogProductDetail) GetHighlights() *[]CatalogProductHighlight {
	if o == nil || IsNil(o.Highlights) {
		var ret *[]CatalogProductHighlight
		return ret
	}

	return o.Highlights
}

// GetHighlightsOk returns a tuple with the Highlights field value
// and a boolean to check if the value has been set.
func (o *CatalogProductDetail) GetHighlightsOk() (*[]CatalogProductHighlight, bool) {
	if o == nil {
		return nil, false
	}
	return o.Highlights, true
}

// SetHighlights sets field value
func (o *CatalogProductDetail) SetHighlights(v *[]CatalogProductHighlight) {
	o.Highlights = v
}

// GetIsProductListing returns the IsProductListing field value
func (o *CatalogProductDetail) GetIsProductListing() *bool {
	if o == nil || IsNil(o.IsProductListing) {
		var ret *bool
		return ret
	}

	return o.IsProductListing
}

// GetIsProductListingOk returns a tuple with the IsProductListing field value
// and a boolean to check if the value has been set.
func (o *CatalogProductDetail) GetIsProductListingOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsProductListing, true
}

// SetIsProductListing sets field value
func (o *CatalogProductDetail) SetIsProductListing(v *bool) {
	o.IsProductListing = v
}

// GetLifecycleState returns the LifecycleState field value
func (o *CatalogProductDetail) GetLifecycleState() *string {
	if o == nil || IsNil(o.LifecycleState) {
		var ret *string
		return ret
	}

	return o.LifecycleState
}

// GetLifecycleStateOk returns a tuple with the LifecycleState field value
// and a boolean to check if the value has been set.
func (o *CatalogProductDetail) GetLifecycleStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LifecycleState, true
}

// SetLifecycleState sets field value
func (o *CatalogProductDetail) SetLifecycleState(v *string) {
	o.LifecycleState = v
}

// GetLogo returns the Logo field value
func (o *CatalogProductDetail) GetLogo() *string {
	if o == nil || IsNil(o.Logo) {
		var ret *string
		return ret
	}

	return o.Logo
}

// GetLogoOk returns a tuple with the Logo field value
// and a boolean to check if the value has been set.
func (o *CatalogProductDetail) GetLogoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Logo, true
}

// SetLogo sets field value
func (o *CatalogProductDetail) SetLogo(v *string) {
	o.Logo = v
}

// GetName returns the Name field value
func (o *CatalogProductDetail) GetName() *string {
	if o == nil || IsNil(o.Name) {
		var ret *string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CatalogProductDetail) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name, true
}

// SetName sets field value
func (o *CatalogProductDetail) SetName(v *string) {
	o.Name = v
}

// GetPricingOptions returns the PricingOptions field value
func (o *CatalogProductDetail) GetPricingOptions() *[]CatalogProductPricingOption {
	if o == nil || IsNil(o.PricingOptions) {
		var ret *[]CatalogProductPricingOption
		return ret
	}

	return o.PricingOptions
}

// GetPricingOptionsOk returns a tuple with the PricingOptions field value
// and a boolean to check if the value has been set.
func (o *CatalogProductDetail) GetPricingOptionsOk() (*[]CatalogProductPricingOption, bool) {
	if o == nil {
		return nil, false
	}
	return o.PricingOptions, true
}

// SetPricingOptions sets field value
func (o *CatalogProductDetail) SetPricingOptions(v *[]CatalogProductPricingOption) {
	o.PricingOptions = v
}

// GetProductId returns the ProductId field value
func (o *CatalogProductDetail) GetProductId() *string {
	if o == nil || IsNil(o.ProductId) {
		var ret *string
		return ret
	}

	return o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value
// and a boolean to check if the value has been set.
func (o *CatalogProductDetail) GetProductIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProductId, true
}

// SetProductId sets field value
func (o *CatalogProductDetail) SetProductId(v *string) {
	o.ProductId = v
}

// GetSummary returns the Summary field value
func (o *CatalogProductDetail) GetSummary() *string {
	if o == nil || IsNil(o.Summary) {
		var ret *string
		return ret
	}

	return o.Summary
}

// GetSummaryOk returns a tuple with the Summary field value
// and a boolean to check if the value has been set.
func (o *CatalogProductDetail) GetSummaryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Summary, true
}

// SetSummary sets field value
func (o *CatalogProductDetail) SetSummary(v *string) {
	o.Summary = v
}

// GetSupportEmail returns the SupportEmail field value if set, zero value otherwise.
func (o *CatalogProductDetail) GetSupportEmail() *string {
	if o == nil || IsNil(o.SupportEmail) {
		var ret *string
		return ret
	}
	return o.SupportEmail
}

// GetSupportEmailOk returns a tuple with the SupportEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogProductDetail) GetSupportEmailOk() (*string, bool) {
	if o == nil || IsNil(o.SupportEmail) {
		return nil, false
	}
	return o.SupportEmail, true
}

// HasSupportEmail returns a boolean if a field has been set.
func (o *CatalogProductDetail) HasSupportEmail() bool {
	if o != nil && !IsNil(o.SupportEmail) {
		return true
	}

	return false
}

// SetSupportEmail gets a reference to the given string and assigns it to the SupportEmail field.
func (o *CatalogProductDetail) SetSupportEmail(v *string) {
	o.SupportEmail = v
}

// GetSupportFaq returns the SupportFaq field value if set, zero value otherwise.
func (o *CatalogProductDetail) GetSupportFaq() *string {
	if o == nil || IsNil(o.SupportFaq) {
		var ret *string
		return ret
	}
	return o.SupportFaq
}

// GetSupportFaqOk returns a tuple with the SupportFaq field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogProductDetail) GetSupportFaqOk() (*string, bool) {
	if o == nil || IsNil(o.SupportFaq) {
		return nil, false
	}
	return o.SupportFaq, true
}

// HasSupportFaq returns a boolean if a field has been set.
func (o *CatalogProductDetail) HasSupportFaq() bool {
	if o != nil && !IsNil(o.SupportFaq) {
		return true
	}

	return false
}

// SetSupportFaq gets a reference to the given string and assigns it to the SupportFaq field.
func (o *CatalogProductDetail) SetSupportFaq(v *string) {
	o.SupportFaq = v
}

// GetSupportPhone returns the SupportPhone field value if set, zero value otherwise.
func (o *CatalogProductDetail) GetSupportPhone() *string {
	if o == nil || IsNil(o.SupportPhone) {
		var ret *string
		return ret
	}
	return o.SupportPhone
}

// GetSupportPhoneOk returns a tuple with the SupportPhone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogProductDetail) GetSupportPhoneOk() (*string, bool) {
	if o == nil || IsNil(o.SupportPhone) {
		return nil, false
	}
	return o.SupportPhone, true
}

// HasSupportPhone returns a boolean if a field has been set.
func (o *CatalogProductDetail) HasSupportPhone() bool {
	if o != nil && !IsNil(o.SupportPhone) {
		return true
	}

	return false
}

// SetSupportPhone gets a reference to the given string and assigns it to the SupportPhone field.
func (o *CatalogProductDetail) SetSupportPhone(v *string) {
	o.SupportPhone = v
}

// GetSupportResources returns the SupportResources field value if set, zero value otherwise.
func (o *CatalogProductDetail) GetSupportResources() *[]CatalogProductSupportResource {
	if o == nil || IsNil(o.SupportResources) {
		var ret *[]CatalogProductSupportResource
		return ret
	}
	return o.SupportResources
}

// GetSupportResourcesOk returns a tuple with the SupportResources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogProductDetail) GetSupportResourcesOk() (*[]CatalogProductSupportResource, bool) {
	if o == nil || IsNil(o.SupportResources) {
		return nil, false
	}
	return o.SupportResources, true
}

// HasSupportResources returns a boolean if a field has been set.
func (o *CatalogProductDetail) HasSupportResources() bool {
	if o != nil && !IsNil(o.SupportResources) {
		return true
	}

	return false
}

// SetSupportResources gets a reference to the given []CatalogProductSupportResource and assigns it to the SupportResources field.
func (o *CatalogProductDetail) SetSupportResources(v *[]CatalogProductSupportResource) {
	o.SupportResources = v
}

// GetVendor returns the Vendor field value
func (o *CatalogProductDetail) GetVendor() *CatalogProductDetailsVendor {
	if o == nil || IsNil(o.Vendor) {
		var ret *CatalogProductDetailsVendor
		return ret
	}

	return o.Vendor
}

// GetVendorOk returns a tuple with the Vendor field value
// and a boolean to check if the value has been set.
func (o *CatalogProductDetail) GetVendorOk() (*CatalogProductDetailsVendor, bool) {
	if o == nil {
		return nil, false
	}
	return o.Vendor, true
}

// SetVendor sets field value
func (o *CatalogProductDetail) SetVendor(v *CatalogProductDetailsVendor) {
	o.Vendor = v
}

// GetVendorTerms returns the VendorTerms field value if set, zero value otherwise.
func (o *CatalogProductDetail) GetVendorTerms() *[]CatalogProductVendorTerms {
	if o == nil || IsNil(o.VendorTerms) {
		var ret *[]CatalogProductVendorTerms
		return ret
	}
	return o.VendorTerms
}

// GetVendorTermsOk returns a tuple with the VendorTerms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogProductDetail) GetVendorTermsOk() (*[]CatalogProductVendorTerms, bool) {
	if o == nil || IsNil(o.VendorTerms) {
		return nil, false
	}
	return o.VendorTerms, true
}

// HasVendorTerms returns a boolean if a field has been set.
func (o *CatalogProductDetail) HasVendorTerms() bool {
	if o != nil && !IsNil(o.VendorTerms) {
		return true
	}

	return false
}

// SetVendorTerms gets a reference to the given []CatalogProductVendorTerms and assigns it to the VendorTerms field.
func (o *CatalogProductDetail) SetVendorTerms(v *[]CatalogProductVendorTerms) {
	o.VendorTerms = v
}

// GetVideoUrl returns the VideoUrl field value
func (o *CatalogProductDetail) GetVideoUrl() *string {
	if o == nil || IsNil(o.VideoUrl) {
		var ret *string
		return ret
	}

	return o.VideoUrl
}

// GetVideoUrlOk returns a tuple with the VideoUrl field value
// and a boolean to check if the value has been set.
func (o *CatalogProductDetail) GetVideoUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VideoUrl, true
}

// SetVideoUrl sets field value
func (o *CatalogProductDetail) SetVideoUrl(v *string) {
	o.VideoUrl = v
}

func (o CatalogProductDetail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Categories) {
		toSerialize["categories"] = o.Categories
	}
	toSerialize["deliveryMethod"] = o.DeliveryMethod
	toSerialize["description"] = o.Description
	toSerialize["documentationUrl"] = o.DocumentationUrl
	toSerialize["highlights"] = o.Highlights
	toSerialize["isProductListing"] = o.IsProductListing
	toSerialize["lifecycleState"] = o.LifecycleState
	toSerialize["logo"] = o.Logo
	toSerialize["name"] = o.Name
	toSerialize["pricingOptions"] = o.PricingOptions
	toSerialize["productId"] = o.ProductId
	toSerialize["summary"] = o.Summary
	if !IsNil(o.SupportEmail) {
		toSerialize["supportEmail"] = o.SupportEmail
	}
	if !IsNil(o.SupportFaq) {
		toSerialize["supportFaq"] = o.SupportFaq
	}
	if !IsNil(o.SupportPhone) {
		toSerialize["supportPhone"] = o.SupportPhone
	}
	if !IsNil(o.SupportResources) {
		toSerialize["supportResources"] = o.SupportResources
	}
	toSerialize["vendor"] = o.Vendor
	if !IsNil(o.VendorTerms) {
		toSerialize["vendorTerms"] = o.VendorTerms
	}
	toSerialize["videoUrl"] = o.VideoUrl
	return toSerialize, nil
}

type NullableCatalogProductDetail struct {
	value *CatalogProductDetail
	isSet bool
}

func (v NullableCatalogProductDetail) Get() *CatalogProductDetail {
	return v.value
}

func (v *NullableCatalogProductDetail) Set(val *CatalogProductDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogProductDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogProductDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogProductDetail(val *CatalogProductDetail) *NullableCatalogProductDetail {
	return &NullableCatalogProductDetail{value: val, isSet: true}
}

func (v NullableCatalogProductDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogProductDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
