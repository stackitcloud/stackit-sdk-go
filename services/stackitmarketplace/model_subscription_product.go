/*
STACKIT Marketplace API

API to manage STACKIT Marketplace.

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stackitmarketplace

import (
	"encoding/json"
)

// checks if the SubscriptionProduct type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SubscriptionProduct{}

// SubscriptionProduct struct for SubscriptionProduct
type SubscriptionProduct struct {
	// The product's delivery method.
	// REQUIRED
	DeliveryMethod *string `json:"deliveryMethod"`
	// The lifecycle state of the product.
	// REQUIRED
	LifecycleState *string `json:"lifecycleState"`
	// The product's price type.
	// REQUIRED
	PriceType *string `json:"priceType"`
	// The product's pricing plan.
	// REQUIRED
	PricingPlan *string `json:"pricingPlan"`
	// The product ID.
	// REQUIRED
	ProductId *string `json:"productId"`
	// The name of the product.
	// REQUIRED
	ProductName *string `json:"productName"`
	// The product's vendor name.
	// REQUIRED
	VendorName *string `json:"vendorName"`
	// The vendor's website.
	// REQUIRED
	VendorWebsiteUrl *string `json:"vendorWebsiteUrl"`
}

type _SubscriptionProduct SubscriptionProduct

// NewSubscriptionProduct instantiates a new SubscriptionProduct object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubscriptionProduct(deliveryMethod *string, lifecycleState *string, priceType *string, pricingPlan *string, productId *string, productName *string, vendorName *string, vendorWebsiteUrl *string) *SubscriptionProduct {
	this := SubscriptionProduct{}
	this.DeliveryMethod = deliveryMethod
	this.LifecycleState = lifecycleState
	this.PriceType = priceType
	this.PricingPlan = pricingPlan
	this.ProductId = productId
	this.ProductName = productName
	this.VendorName = vendorName
	this.VendorWebsiteUrl = vendorWebsiteUrl
	return &this
}

// NewSubscriptionProductWithDefaults instantiates a new SubscriptionProduct object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubscriptionProductWithDefaults() *SubscriptionProduct {
	this := SubscriptionProduct{}
	return &this
}

// GetDeliveryMethod returns the DeliveryMethod field value
func (o *SubscriptionProduct) GetDeliveryMethod() *string {
	if o == nil || IsNil(o.DeliveryMethod) {
		var ret *string
		return ret
	}

	return o.DeliveryMethod
}

// GetDeliveryMethodOk returns a tuple with the DeliveryMethod field value
// and a boolean to check if the value has been set.
func (o *SubscriptionProduct) GetDeliveryMethodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeliveryMethod, true
}

// SetDeliveryMethod sets field value
func (o *SubscriptionProduct) SetDeliveryMethod(v *string) {
	o.DeliveryMethod = v
}

// GetLifecycleState returns the LifecycleState field value
func (o *SubscriptionProduct) GetLifecycleState() *string {
	if o == nil || IsNil(o.LifecycleState) {
		var ret *string
		return ret
	}

	return o.LifecycleState
}

// GetLifecycleStateOk returns a tuple with the LifecycleState field value
// and a boolean to check if the value has been set.
func (o *SubscriptionProduct) GetLifecycleStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LifecycleState, true
}

// SetLifecycleState sets field value
func (o *SubscriptionProduct) SetLifecycleState(v *string) {
	o.LifecycleState = v
}

// GetPriceType returns the PriceType field value
func (o *SubscriptionProduct) GetPriceType() *string {
	if o == nil || IsNil(o.PriceType) {
		var ret *string
		return ret
	}

	return o.PriceType
}

// GetPriceTypeOk returns a tuple with the PriceType field value
// and a boolean to check if the value has been set.
func (o *SubscriptionProduct) GetPriceTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PriceType, true
}

// SetPriceType sets field value
func (o *SubscriptionProduct) SetPriceType(v *string) {
	o.PriceType = v
}

// GetPricingPlan returns the PricingPlan field value
func (o *SubscriptionProduct) GetPricingPlan() *string {
	if o == nil || IsNil(o.PricingPlan) {
		var ret *string
		return ret
	}

	return o.PricingPlan
}

// GetPricingPlanOk returns a tuple with the PricingPlan field value
// and a boolean to check if the value has been set.
func (o *SubscriptionProduct) GetPricingPlanOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PricingPlan, true
}

// SetPricingPlan sets field value
func (o *SubscriptionProduct) SetPricingPlan(v *string) {
	o.PricingPlan = v
}

// GetProductId returns the ProductId field value
func (o *SubscriptionProduct) GetProductId() *string {
	if o == nil || IsNil(o.ProductId) {
		var ret *string
		return ret
	}

	return o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value
// and a boolean to check if the value has been set.
func (o *SubscriptionProduct) GetProductIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProductId, true
}

// SetProductId sets field value
func (o *SubscriptionProduct) SetProductId(v *string) {
	o.ProductId = v
}

// GetProductName returns the ProductName field value
func (o *SubscriptionProduct) GetProductName() *string {
	if o == nil || IsNil(o.ProductName) {
		var ret *string
		return ret
	}

	return o.ProductName
}

// GetProductNameOk returns a tuple with the ProductName field value
// and a boolean to check if the value has been set.
func (o *SubscriptionProduct) GetProductNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProductName, true
}

// SetProductName sets field value
func (o *SubscriptionProduct) SetProductName(v *string) {
	o.ProductName = v
}

// GetVendorName returns the VendorName field value
func (o *SubscriptionProduct) GetVendorName() *string {
	if o == nil || IsNil(o.VendorName) {
		var ret *string
		return ret
	}

	return o.VendorName
}

// GetVendorNameOk returns a tuple with the VendorName field value
// and a boolean to check if the value has been set.
func (o *SubscriptionProduct) GetVendorNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VendorName, true
}

// SetVendorName sets field value
func (o *SubscriptionProduct) SetVendorName(v *string) {
	o.VendorName = v
}

// GetVendorWebsiteUrl returns the VendorWebsiteUrl field value
func (o *SubscriptionProduct) GetVendorWebsiteUrl() *string {
	if o == nil || IsNil(o.VendorWebsiteUrl) {
		var ret *string
		return ret
	}

	return o.VendorWebsiteUrl
}

// GetVendorWebsiteUrlOk returns a tuple with the VendorWebsiteUrl field value
// and a boolean to check if the value has been set.
func (o *SubscriptionProduct) GetVendorWebsiteUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VendorWebsiteUrl, true
}

// SetVendorWebsiteUrl sets field value
func (o *SubscriptionProduct) SetVendorWebsiteUrl(v *string) {
	o.VendorWebsiteUrl = v
}

func (o SubscriptionProduct) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["deliveryMethod"] = o.DeliveryMethod
	toSerialize["lifecycleState"] = o.LifecycleState
	toSerialize["priceType"] = o.PriceType
	toSerialize["pricingPlan"] = o.PricingPlan
	toSerialize["productId"] = o.ProductId
	toSerialize["productName"] = o.ProductName
	toSerialize["vendorName"] = o.VendorName
	toSerialize["vendorWebsiteUrl"] = o.VendorWebsiteUrl
	return toSerialize, nil
}

type NullableSubscriptionProduct struct {
	value *SubscriptionProduct
	isSet bool
}

func (v NullableSubscriptionProduct) Get() *SubscriptionProduct {
	return v.value
}

func (v *NullableSubscriptionProduct) Set(val *SubscriptionProduct) {
	v.value = val
	v.isSet = true
}

func (v NullableSubscriptionProduct) IsSet() bool {
	return v.isSet
}

func (v *NullableSubscriptionProduct) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubscriptionProduct(val *SubscriptionProduct) *NullableSubscriptionProduct {
	return &NullableSubscriptionProduct{value: val, isSet: true}
}

func (v NullableSubscriptionProduct) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubscriptionProduct) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
