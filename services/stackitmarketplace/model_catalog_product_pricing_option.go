/*
STACKIT Marketplace API

API to manage STACKIT Marketplace.

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stackitmarketplace

import (
	"encoding/json"
)

// checks if the CatalogProductPricingOption type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogProductPricingOption{}

// CatalogProductPricingOption struct for CatalogProductPricingOption
type CatalogProductPricingOption struct {
	// The pricing option description.
	// REQUIRED
	Description *string `json:"description"`
	// The list of highlights.
	// REQUIRED
	Highlights *[]CatalogPricingOptionHighlight `json:"highlights"`
	// The pricing option name.
	// REQUIRED
	Name *string `json:"name"`
	// The price type / pricing model.
	PriceType *string `json:"priceType,omitempty"`
	// Additional price type information.
	PricingPlan *string `json:"pricingPlan,omitempty"`
	// The price of the product (per unit).
	Rate *string `json:"rate,omitempty"`
	// The concrete variant of the product.
	// REQUIRED
	Sku *string `json:"sku"`
	// Short description of this offering.
	// REQUIRED
	SkuInfo *string `json:"skuInfo"`
	// More details about what this offering entails.
	// REQUIRED
	SkuInfoDetails *string `json:"skuInfoDetails"`
	// The interval to which the rate applies.
	Unit *string `json:"unit,omitempty"`
}

type _CatalogProductPricingOption CatalogProductPricingOption

// NewCatalogProductPricingOption instantiates a new CatalogProductPricingOption object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogProductPricingOption(description *string, highlights *[]CatalogPricingOptionHighlight, name *string, sku *string, skuInfo *string, skuInfoDetails *string) *CatalogProductPricingOption {
	this := CatalogProductPricingOption{}
	this.Description = description
	this.Highlights = highlights
	this.Name = name
	this.Sku = sku
	this.SkuInfo = skuInfo
	this.SkuInfoDetails = skuInfoDetails
	return &this
}

// NewCatalogProductPricingOptionWithDefaults instantiates a new CatalogProductPricingOption object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogProductPricingOptionWithDefaults() *CatalogProductPricingOption {
	this := CatalogProductPricingOption{}
	return &this
}

// GetDescription returns the Description field value
func (o *CatalogProductPricingOption) GetDescription() *string {
	if o == nil || IsNil(o.Description) {
		var ret *string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *CatalogProductPricingOption) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description, true
}

// SetDescription sets field value
func (o *CatalogProductPricingOption) SetDescription(v *string) {
	o.Description = v
}

// GetHighlights returns the Highlights field value
func (o *CatalogProductPricingOption) GetHighlights() *[]CatalogPricingOptionHighlight {
	if o == nil || IsNil(o.Highlights) {
		var ret *[]CatalogPricingOptionHighlight
		return ret
	}

	return o.Highlights
}

// GetHighlightsOk returns a tuple with the Highlights field value
// and a boolean to check if the value has been set.
func (o *CatalogProductPricingOption) GetHighlightsOk() (*[]CatalogPricingOptionHighlight, bool) {
	if o == nil {
		return nil, false
	}
	return o.Highlights, true
}

// SetHighlights sets field value
func (o *CatalogProductPricingOption) SetHighlights(v *[]CatalogPricingOptionHighlight) {
	o.Highlights = v
}

// GetName returns the Name field value
func (o *CatalogProductPricingOption) GetName() *string {
	if o == nil || IsNil(o.Name) {
		var ret *string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CatalogProductPricingOption) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name, true
}

// SetName sets field value
func (o *CatalogProductPricingOption) SetName(v *string) {
	o.Name = v
}

// GetPriceType returns the PriceType field value if set, zero value otherwise.
func (o *CatalogProductPricingOption) GetPriceType() *string {
	if o == nil || IsNil(o.PriceType) {
		var ret *string
		return ret
	}
	return o.PriceType
}

// GetPriceTypeOk returns a tuple with the PriceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogProductPricingOption) GetPriceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.PriceType) {
		return nil, false
	}
	return o.PriceType, true
}

// HasPriceType returns a boolean if a field has been set.
func (o *CatalogProductPricingOption) HasPriceType() bool {
	if o != nil && !IsNil(o.PriceType) {
		return true
	}

	return false
}

// SetPriceType gets a reference to the given string and assigns it to the PriceType field.
func (o *CatalogProductPricingOption) SetPriceType(v *string) {
	o.PriceType = v
}

// GetPricingPlan returns the PricingPlan field value if set, zero value otherwise.
func (o *CatalogProductPricingOption) GetPricingPlan() *string {
	if o == nil || IsNil(o.PricingPlan) {
		var ret *string
		return ret
	}
	return o.PricingPlan
}

// GetPricingPlanOk returns a tuple with the PricingPlan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogProductPricingOption) GetPricingPlanOk() (*string, bool) {
	if o == nil || IsNil(o.PricingPlan) {
		return nil, false
	}
	return o.PricingPlan, true
}

// HasPricingPlan returns a boolean if a field has been set.
func (o *CatalogProductPricingOption) HasPricingPlan() bool {
	if o != nil && !IsNil(o.PricingPlan) {
		return true
	}

	return false
}

// SetPricingPlan gets a reference to the given string and assigns it to the PricingPlan field.
func (o *CatalogProductPricingOption) SetPricingPlan(v *string) {
	o.PricingPlan = v
}

// GetRate returns the Rate field value if set, zero value otherwise.
func (o *CatalogProductPricingOption) GetRate() *string {
	if o == nil || IsNil(o.Rate) {
		var ret *string
		return ret
	}
	return o.Rate
}

// GetRateOk returns a tuple with the Rate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogProductPricingOption) GetRateOk() (*string, bool) {
	if o == nil || IsNil(o.Rate) {
		return nil, false
	}
	return o.Rate, true
}

// HasRate returns a boolean if a field has been set.
func (o *CatalogProductPricingOption) HasRate() bool {
	if o != nil && !IsNil(o.Rate) {
		return true
	}

	return false
}

// SetRate gets a reference to the given string and assigns it to the Rate field.
func (o *CatalogProductPricingOption) SetRate(v *string) {
	o.Rate = v
}

// GetSku returns the Sku field value
func (o *CatalogProductPricingOption) GetSku() *string {
	if o == nil || IsNil(o.Sku) {
		var ret *string
		return ret
	}

	return o.Sku
}

// GetSkuOk returns a tuple with the Sku field value
// and a boolean to check if the value has been set.
func (o *CatalogProductPricingOption) GetSkuOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Sku, true
}

// SetSku sets field value
func (o *CatalogProductPricingOption) SetSku(v *string) {
	o.Sku = v
}

// GetSkuInfo returns the SkuInfo field value
func (o *CatalogProductPricingOption) GetSkuInfo() *string {
	if o == nil || IsNil(o.SkuInfo) {
		var ret *string
		return ret
	}

	return o.SkuInfo
}

// GetSkuInfoOk returns a tuple with the SkuInfo field value
// and a boolean to check if the value has been set.
func (o *CatalogProductPricingOption) GetSkuInfoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SkuInfo, true
}

// SetSkuInfo sets field value
func (o *CatalogProductPricingOption) SetSkuInfo(v *string) {
	o.SkuInfo = v
}

// GetSkuInfoDetails returns the SkuInfoDetails field value
func (o *CatalogProductPricingOption) GetSkuInfoDetails() *string {
	if o == nil || IsNil(o.SkuInfoDetails) {
		var ret *string
		return ret
	}

	return o.SkuInfoDetails
}

// GetSkuInfoDetailsOk returns a tuple with the SkuInfoDetails field value
// and a boolean to check if the value has been set.
func (o *CatalogProductPricingOption) GetSkuInfoDetailsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SkuInfoDetails, true
}

// SetSkuInfoDetails sets field value
func (o *CatalogProductPricingOption) SetSkuInfoDetails(v *string) {
	o.SkuInfoDetails = v
}

// GetUnit returns the Unit field value if set, zero value otherwise.
func (o *CatalogProductPricingOption) GetUnit() *string {
	if o == nil || IsNil(o.Unit) {
		var ret *string
		return ret
	}
	return o.Unit
}

// GetUnitOk returns a tuple with the Unit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogProductPricingOption) GetUnitOk() (*string, bool) {
	if o == nil || IsNil(o.Unit) {
		return nil, false
	}
	return o.Unit, true
}

// HasUnit returns a boolean if a field has been set.
func (o *CatalogProductPricingOption) HasUnit() bool {
	if o != nil && !IsNil(o.Unit) {
		return true
	}

	return false
}

// SetUnit gets a reference to the given string and assigns it to the Unit field.
func (o *CatalogProductPricingOption) SetUnit(v *string) {
	o.Unit = v
}

func (o CatalogProductPricingOption) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["description"] = o.Description
	toSerialize["highlights"] = o.Highlights
	toSerialize["name"] = o.Name
	if !IsNil(o.PriceType) {
		toSerialize["priceType"] = o.PriceType
	}
	if !IsNil(o.PricingPlan) {
		toSerialize["pricingPlan"] = o.PricingPlan
	}
	if !IsNil(o.Rate) {
		toSerialize["rate"] = o.Rate
	}
	toSerialize["sku"] = o.Sku
	toSerialize["skuInfo"] = o.SkuInfo
	toSerialize["skuInfoDetails"] = o.SkuInfoDetails
	if !IsNil(o.Unit) {
		toSerialize["unit"] = o.Unit
	}
	return toSerialize, nil
}

type NullableCatalogProductPricingOption struct {
	value *CatalogProductPricingOption
	isSet bool
}

func (v NullableCatalogProductPricingOption) Get() *CatalogProductPricingOption {
	return v.value
}

func (v *NullableCatalogProductPricingOption) Set(val *CatalogProductPricingOption) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogProductPricingOption) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogProductPricingOption) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogProductPricingOption(val *CatalogProductPricingOption) *NullableCatalogProductPricingOption {
	return &NullableCatalogProductPricingOption{value: val, isSet: true}
}

func (v NullableCatalogProductPricingOption) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogProductPricingOption) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
