/*
STACKIT Marketplace API

API to manage STACKIT Marketplace.

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stackitmarketplace

import (
	"encoding/json"
)

// checks if the ListVendorSubscriptionsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListVendorSubscriptionsResponse{}

// ListVendorSubscriptionsResponse struct for ListVendorSubscriptionsResponse
type ListVendorSubscriptionsResponse struct {
	// A pagination cursor that represents a position in the dataset. Use it in subsequent requests to continue retrieving data from this position. If `null`, there are no more results to retrieve.
	// REQUIRED
	Cursor *string `json:"cursor"`
	// List of subscriptions.
	// REQUIRED
	Items *[]VendorSubscription `json:"items"`
	// Number of subscriptions returned for a single request.
	// Can be cast to int32 without loss of precision.
	// REQUIRED
	Limit *int64 `json:"limit"`
}

type _ListVendorSubscriptionsResponse ListVendorSubscriptionsResponse

// NewListVendorSubscriptionsResponse instantiates a new ListVendorSubscriptionsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListVendorSubscriptionsResponse(cursor *string, items *[]VendorSubscription, limit *int64) *ListVendorSubscriptionsResponse {
	this := ListVendorSubscriptionsResponse{}
	this.Cursor = cursor
	this.Items = items
	this.Limit = limit
	return &this
}

// NewListVendorSubscriptionsResponseWithDefaults instantiates a new ListVendorSubscriptionsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListVendorSubscriptionsResponseWithDefaults() *ListVendorSubscriptionsResponse {
	this := ListVendorSubscriptionsResponse{}
	var limit int64 = 50
	this.Limit = &limit
	return &this
}

// GetCursor returns the Cursor field value
func (o *ListVendorSubscriptionsResponse) GetCursor() *string {
	if o == nil || IsNil(o.Cursor) {
		var ret *string
		return ret
	}

	return o.Cursor
}

// GetCursorOk returns a tuple with the Cursor field value
// and a boolean to check if the value has been set.
func (o *ListVendorSubscriptionsResponse) GetCursorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Cursor, true
}

// SetCursor sets field value
func (o *ListVendorSubscriptionsResponse) SetCursor(v *string) {
	o.Cursor = v
}

// GetItems returns the Items field value
func (o *ListVendorSubscriptionsResponse) GetItems() *[]VendorSubscription {
	if o == nil || IsNil(o.Items) {
		var ret *[]VendorSubscription
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *ListVendorSubscriptionsResponse) GetItemsOk() (*[]VendorSubscription, bool) {
	if o == nil {
		return nil, false
	}
	return o.Items, true
}

// SetItems sets field value
func (o *ListVendorSubscriptionsResponse) SetItems(v *[]VendorSubscription) {
	o.Items = v
}

// GetLimit returns the Limit field value
func (o *ListVendorSubscriptionsResponse) GetLimit() *int64 {
	if o == nil || IsNil(o.Limit) {
		var ret *int64
		return ret
	}

	return o.Limit
}

// GetLimitOk returns a tuple with the Limit field value
// and a boolean to check if the value has been set.
func (o *ListVendorSubscriptionsResponse) GetLimitOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Limit, true
}

// SetLimit sets field value
func (o *ListVendorSubscriptionsResponse) SetLimit(v *int64) {
	o.Limit = v
}

func (o ListVendorSubscriptionsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["cursor"] = o.Cursor
	toSerialize["items"] = o.Items
	toSerialize["limit"] = o.Limit
	return toSerialize, nil
}

type NullableListVendorSubscriptionsResponse struct {
	value *ListVendorSubscriptionsResponse
	isSet bool
}

func (v NullableListVendorSubscriptionsResponse) Get() *ListVendorSubscriptionsResponse {
	return v.value
}

func (v *NullableListVendorSubscriptionsResponse) Set(val *ListVendorSubscriptionsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListVendorSubscriptionsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListVendorSubscriptionsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListVendorSubscriptionsResponse(val *ListVendorSubscriptionsResponse) *NullableListVendorSubscriptionsResponse {
	return &NullableListVendorSubscriptionsResponse{value: val, isSet: true}
}

func (v NullableListVendorSubscriptionsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListVendorSubscriptionsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
