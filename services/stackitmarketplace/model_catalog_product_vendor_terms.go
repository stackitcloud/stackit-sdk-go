/*
STACKIT Marketplace API

API to manage STACKIT Marketplace.

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stackitmarketplace

import (
	"encoding/json"
)

// checks if the CatalogProductVendorTerms type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogProductVendorTerms{}

/*
	types and functions for description
*/

// isNotNullableString
type CatalogProductVendorTermsGetDescriptionAttributeType = *string

func getCatalogProductVendorTermsGetDescriptionAttributeTypeOk(arg CatalogProductVendorTermsGetDescriptionAttributeType) (ret CatalogProductVendorTermsGetDescriptionRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setCatalogProductVendorTermsGetDescriptionAttributeType(arg *CatalogProductVendorTermsGetDescriptionAttributeType, val CatalogProductVendorTermsGetDescriptionRetType) {
	*arg = &val
}

type CatalogProductVendorTermsGetDescriptionArgType = string
type CatalogProductVendorTermsGetDescriptionRetType = string

/*
	types and functions for title
*/

// isNotNullableString
type CatalogProductVendorTermsGetTitleAttributeType = *string

func getCatalogProductVendorTermsGetTitleAttributeTypeOk(arg CatalogProductVendorTermsGetTitleAttributeType) (ret CatalogProductVendorTermsGetTitleRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setCatalogProductVendorTermsGetTitleAttributeType(arg *CatalogProductVendorTermsGetTitleAttributeType, val CatalogProductVendorTermsGetTitleRetType) {
	*arg = &val
}

type CatalogProductVendorTermsGetTitleArgType = string
type CatalogProductVendorTermsGetTitleRetType = string

/*
	types and functions for url
*/

// isNotNullableString
type CatalogProductVendorTermsGetUrlAttributeType = *string

func getCatalogProductVendorTermsGetUrlAttributeTypeOk(arg CatalogProductVendorTermsGetUrlAttributeType) (ret CatalogProductVendorTermsGetUrlRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setCatalogProductVendorTermsGetUrlAttributeType(arg *CatalogProductVendorTermsGetUrlAttributeType, val CatalogProductVendorTermsGetUrlRetType) {
	*arg = &val
}

type CatalogProductVendorTermsGetUrlArgType = string
type CatalogProductVendorTermsGetUrlRetType = string

// CatalogProductVendorTerms struct for CatalogProductVendorTerms
type CatalogProductVendorTerms struct {
	// The terms of use description.
	// REQUIRED
	Description CatalogProductVendorTermsGetDescriptionAttributeType `json:"description"`
	// The terms of use title.
	// REQUIRED
	Title CatalogProductVendorTermsGetTitleAttributeType `json:"title"`
	// The terms of use url.
	// REQUIRED
	Url CatalogProductVendorTermsGetUrlAttributeType `json:"url"`
}

type _CatalogProductVendorTerms CatalogProductVendorTerms

// NewCatalogProductVendorTerms instantiates a new CatalogProductVendorTerms object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogProductVendorTerms(description CatalogProductVendorTermsGetDescriptionArgType, title CatalogProductVendorTermsGetTitleArgType, url CatalogProductVendorTermsGetUrlArgType) *CatalogProductVendorTerms {
	this := CatalogProductVendorTerms{}
	setCatalogProductVendorTermsGetDescriptionAttributeType(&this.Description, description)
	setCatalogProductVendorTermsGetTitleAttributeType(&this.Title, title)
	setCatalogProductVendorTermsGetUrlAttributeType(&this.Url, url)
	return &this
}

// NewCatalogProductVendorTermsWithDefaults instantiates a new CatalogProductVendorTerms object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogProductVendorTermsWithDefaults() *CatalogProductVendorTerms {
	this := CatalogProductVendorTerms{}
	return &this
}

// GetDescription returns the Description field value
func (o *CatalogProductVendorTerms) GetDescription() (ret CatalogProductVendorTermsGetDescriptionRetType) {
	ret, _ = o.GetDescriptionOk()
	return ret
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *CatalogProductVendorTerms) GetDescriptionOk() (ret CatalogProductVendorTermsGetDescriptionRetType, ok bool) {
	return getCatalogProductVendorTermsGetDescriptionAttributeTypeOk(o.Description)
}

// SetDescription sets field value
func (o *CatalogProductVendorTerms) SetDescription(v CatalogProductVendorTermsGetDescriptionRetType) {
	setCatalogProductVendorTermsGetDescriptionAttributeType(&o.Description, v)
}

// GetTitle returns the Title field value
func (o *CatalogProductVendorTerms) GetTitle() (ret CatalogProductVendorTermsGetTitleRetType) {
	ret, _ = o.GetTitleOk()
	return ret
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *CatalogProductVendorTerms) GetTitleOk() (ret CatalogProductVendorTermsGetTitleRetType, ok bool) {
	return getCatalogProductVendorTermsGetTitleAttributeTypeOk(o.Title)
}

// SetTitle sets field value
func (o *CatalogProductVendorTerms) SetTitle(v CatalogProductVendorTermsGetTitleRetType) {
	setCatalogProductVendorTermsGetTitleAttributeType(&o.Title, v)
}

// GetUrl returns the Url field value
func (o *CatalogProductVendorTerms) GetUrl() (ret CatalogProductVendorTermsGetUrlRetType) {
	ret, _ = o.GetUrlOk()
	return ret
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *CatalogProductVendorTerms) GetUrlOk() (ret CatalogProductVendorTermsGetUrlRetType, ok bool) {
	return getCatalogProductVendorTermsGetUrlAttributeTypeOk(o.Url)
}

// SetUrl sets field value
func (o *CatalogProductVendorTerms) SetUrl(v CatalogProductVendorTermsGetUrlRetType) {
	setCatalogProductVendorTermsGetUrlAttributeType(&o.Url, v)
}

func (o CatalogProductVendorTerms) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getCatalogProductVendorTermsGetDescriptionAttributeTypeOk(o.Description); ok {
		toSerialize["Description"] = val
	}
	if val, ok := getCatalogProductVendorTermsGetTitleAttributeTypeOk(o.Title); ok {
		toSerialize["Title"] = val
	}
	if val, ok := getCatalogProductVendorTermsGetUrlAttributeTypeOk(o.Url); ok {
		toSerialize["Url"] = val
	}
	return toSerialize, nil
}

type NullableCatalogProductVendorTerms struct {
	value *CatalogProductVendorTerms
	isSet bool
}

func (v NullableCatalogProductVendorTerms) Get() *CatalogProductVendorTerms {
	return v.value
}

func (v *NullableCatalogProductVendorTerms) Set(val *CatalogProductVendorTerms) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogProductVendorTerms) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogProductVendorTerms) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogProductVendorTerms(val *CatalogProductVendorTerms) *NullableCatalogProductVendorTerms {
	return &NullableCatalogProductVendorTerms{value: val, isSet: true}
}

func (v NullableCatalogProductVendorTerms) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogProductVendorTerms) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
