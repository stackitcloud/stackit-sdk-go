/*
STACKIT Marketplace API

API to manage STACKIT Marketplace.

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stackitmarketplace

import (
	"encoding/json"
)

// checks if the RegisterTestingRegisterTesting type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RegisterTestingRegisterTesting{}

// RegisterTestingRegisterTesting struct for RegisterTestingRegisterTesting
type RegisterTestingRegisterTesting struct {
	// The contact e-mail address.
	// REQUIRED
	ContactEmail *string `json:"contactEmail"`
	// The full name of the contact person.
	// REQUIRED
	FullName *string `json:"fullName"`
	// The message content.
	// REQUIRED
	Message *string `json:"message"`
}

type _RegisterTestingRegisterTesting RegisterTestingRegisterTesting

// NewRegisterTestingRegisterTesting instantiates a new RegisterTestingRegisterTesting object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRegisterTestingRegisterTesting(contactEmail *string, fullName *string, message *string) *RegisterTestingRegisterTesting {
	this := RegisterTestingRegisterTesting{}
	this.ContactEmail = contactEmail
	this.FullName = fullName
	this.Message = message
	return &this
}

// NewRegisterTestingRegisterTestingWithDefaults instantiates a new RegisterTestingRegisterTesting object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRegisterTestingRegisterTestingWithDefaults() *RegisterTestingRegisterTesting {
	this := RegisterTestingRegisterTesting{}
	return &this
}

// GetContactEmail returns the ContactEmail field value
func (o *RegisterTestingRegisterTesting) GetContactEmail() *string {
	if o == nil || IsNil(o.ContactEmail) {
		var ret *string
		return ret
	}

	return o.ContactEmail
}

// GetContactEmailOk returns a tuple with the ContactEmail field value
// and a boolean to check if the value has been set.
func (o *RegisterTestingRegisterTesting) GetContactEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ContactEmail, true
}

// SetContactEmail sets field value
func (o *RegisterTestingRegisterTesting) SetContactEmail(v *string) {
	o.ContactEmail = v
}

// GetFullName returns the FullName field value
func (o *RegisterTestingRegisterTesting) GetFullName() *string {
	if o == nil || IsNil(o.FullName) {
		var ret *string
		return ret
	}

	return o.FullName
}

// GetFullNameOk returns a tuple with the FullName field value
// and a boolean to check if the value has been set.
func (o *RegisterTestingRegisterTesting) GetFullNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FullName, true
}

// SetFullName sets field value
func (o *RegisterTestingRegisterTesting) SetFullName(v *string) {
	o.FullName = v
}

// GetMessage returns the Message field value
func (o *RegisterTestingRegisterTesting) GetMessage() *string {
	if o == nil || IsNil(o.Message) {
		var ret *string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *RegisterTestingRegisterTesting) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Message, true
}

// SetMessage sets field value
func (o *RegisterTestingRegisterTesting) SetMessage(v *string) {
	o.Message = v
}

func (o RegisterTestingRegisterTesting) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["contactEmail"] = o.ContactEmail
	toSerialize["fullName"] = o.FullName
	toSerialize["message"] = o.Message
	return toSerialize, nil
}

type NullableRegisterTestingRegisterTesting struct {
	value *RegisterTestingRegisterTesting
	isSet bool
}

func (v NullableRegisterTestingRegisterTesting) Get() *RegisterTestingRegisterTesting {
	return v.value
}

func (v *NullableRegisterTestingRegisterTesting) Set(val *RegisterTestingRegisterTesting) {
	v.value = val
	v.isSet = true
}

func (v NullableRegisterTestingRegisterTesting) IsSet() bool {
	return v.isSet
}

func (v *NullableRegisterTestingRegisterTesting) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRegisterTestingRegisterTesting(val *RegisterTestingRegisterTesting) *NullableRegisterTestingRegisterTesting {
	return &NullableRegisterTestingRegisterTesting{value: val, isSet: true}
}

func (v NullableRegisterTestingRegisterTesting) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRegisterTestingRegisterTesting) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
