/*
Audit Log API

API Endpoints to retrieve recorded actions and resulting changes in the system.  ### Documentation The user documentation with explanations how to use the api can be found  [here](https://docs.stackit.cloud/stackit/en/retrieve-audit-log-per-api-request-134415907.html).  ### Audit Logging Changes on organizations, folders and projects and respective cloud resources are logged and collected in the audit  log.  ### API Constraints The audit log API allows to download messages from the last 90 days. The maximum duration that can be queried at  once is 24 hours. Requests are rate limited - the current maximum is 60 requests per minute.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditlog

import (
	"encoding/json"
	"fmt"
	"time"
)

// checks if the AuditLogEntryResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuditLogEntryResponse{}

/*
	types and functions for context
*/

// isModel
type AuditLogEntryResponseGetContextAttributeType = *AuditLogEntryContextResponse
type AuditLogEntryResponseGetContextArgType = AuditLogEntryContextResponse
type AuditLogEntryResponseGetContextRetType = AuditLogEntryContextResponse

func getAuditLogEntryResponseGetContextAttributeTypeOk(arg AuditLogEntryResponseGetContextAttributeType) (ret AuditLogEntryResponseGetContextRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setAuditLogEntryResponseGetContextAttributeType(arg *AuditLogEntryResponseGetContextAttributeType, val AuditLogEntryResponseGetContextRetType) {
	*arg = &val
}

/*
	types and functions for correlationId
*/

// isNotNullableString
type AuditLogEntryResponseGetCorrelationIdAttributeType = *string

func getAuditLogEntryResponseGetCorrelationIdAttributeTypeOk(arg AuditLogEntryResponseGetCorrelationIdAttributeType) (ret AuditLogEntryResponseGetCorrelationIdRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setAuditLogEntryResponseGetCorrelationIdAttributeType(arg *AuditLogEntryResponseGetCorrelationIdAttributeType, val AuditLogEntryResponseGetCorrelationIdRetType) {
	*arg = &val
}

type AuditLogEntryResponseGetCorrelationIdArgType = string
type AuditLogEntryResponseGetCorrelationIdRetType = string

/*
	types and functions for details
*/

// isFreeform
type AuditLogEntryResponseGetDetailsAttributeType = *map[string]interface{}
type AuditLogEntryResponseGetDetailsArgType = map[string]interface{}
type AuditLogEntryResponseGetDetailsRetType = map[string]interface{}

func getAuditLogEntryResponseGetDetailsAttributeTypeOk(arg AuditLogEntryResponseGetDetailsAttributeType) (ret AuditLogEntryResponseGetDetailsRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setAuditLogEntryResponseGetDetailsAttributeType(arg *AuditLogEntryResponseGetDetailsAttributeType, val AuditLogEntryResponseGetDetailsRetType) {
	*arg = &val
}

/*
	types and functions for eventName
*/

// isNotNullableString
type AuditLogEntryResponseGetEventNameAttributeType = *string

func getAuditLogEntryResponseGetEventNameAttributeTypeOk(arg AuditLogEntryResponseGetEventNameAttributeType) (ret AuditLogEntryResponseGetEventNameRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setAuditLogEntryResponseGetEventNameAttributeType(arg *AuditLogEntryResponseGetEventNameAttributeType, val AuditLogEntryResponseGetEventNameRetType) {
	*arg = &val
}

type AuditLogEntryResponseGetEventNameArgType = string
type AuditLogEntryResponseGetEventNameRetType = string

/*
	types and functions for eventSource
*/

// isNotNullableString
type AuditLogEntryResponseGetEventSourceAttributeType = *string

func getAuditLogEntryResponseGetEventSourceAttributeTypeOk(arg AuditLogEntryResponseGetEventSourceAttributeType) (ret AuditLogEntryResponseGetEventSourceRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setAuditLogEntryResponseGetEventSourceAttributeType(arg *AuditLogEntryResponseGetEventSourceAttributeType, val AuditLogEntryResponseGetEventSourceRetType) {
	*arg = &val
}

type AuditLogEntryResponseGetEventSourceArgType = string
type AuditLogEntryResponseGetEventSourceRetType = string

/*
	types and functions for eventTimeStamp
*/

// isDateTime
type AuditLogEntryResponseGetEventTimeStampAttributeType = *time.Time
type AuditLogEntryResponseGetEventTimeStampArgType = time.Time
type AuditLogEntryResponseGetEventTimeStampRetType = time.Time

func getAuditLogEntryResponseGetEventTimeStampAttributeTypeOk(arg AuditLogEntryResponseGetEventTimeStampAttributeType) (ret AuditLogEntryResponseGetEventTimeStampRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setAuditLogEntryResponseGetEventTimeStampAttributeType(arg *AuditLogEntryResponseGetEventTimeStampAttributeType, val AuditLogEntryResponseGetEventTimeStampRetType) {
	*arg = &val
}

/*
	types and functions for eventType
*/

// isEnum

// AuditLogEntryResponseEventType Type that can be assigned to the event. For example, an event \"Organization created\" can be assigned to the type ADMIN_EVENT
// value type for enums
type AuditLogEntryResponseEventType string

// List of EventType
const (
	AUDITLOGENTRYRESPONSEEVENT_TYPE_ADMIN_ACTIVITY AuditLogEntryResponseEventType = "ADMIN_ACTIVITY"
	AUDITLOGENTRYRESPONSEEVENT_TYPE_SYSTEM_EVENT   AuditLogEntryResponseEventType = "SYSTEM_EVENT"
	AUDITLOGENTRYRESPONSEEVENT_TYPE_POLICY_DENIED  AuditLogEntryResponseEventType = "POLICY_DENIED"
)

// All allowed values of AuditLogEntryResponse enum
var AllowedAuditLogEntryResponseEventTypeEnumValues = []AuditLogEntryResponseEventType{
	"ADMIN_ACTIVITY",
	"SYSTEM_EVENT",
	"POLICY_DENIED",
}

func (v *AuditLogEntryResponseEventType) UnmarshalJSON(src []byte) error {
	// use a type alias to prevent infinite recursion during unmarshal,
	// see https://biscuit.ninja/posts/go-avoid-an-infitine-loop-with-custom-json-unmarshallers
	type TmpJson AuditLogEntryResponseEventType
	var value TmpJson
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	// Allow unmarshalling zero value for testing purposes
	var zeroValue TmpJson
	if value == zeroValue {
		return nil
	}
	enumTypeValue := AuditLogEntryResponseEventType(value)
	for _, existing := range AllowedAuditLogEntryResponseEventTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid AuditLogEntryResponse", value)
}

// NewAuditLogEntryResponseEventTypeFromValue returns a pointer to a valid AuditLogEntryResponseEventType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewAuditLogEntryResponseEventTypeFromValue(v AuditLogEntryResponseEventType) (*AuditLogEntryResponseEventType, error) {
	ev := AuditLogEntryResponseEventType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for AuditLogEntryResponseEventType: valid values are %v", v, AllowedAuditLogEntryResponseEventTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v AuditLogEntryResponseEventType) IsValid() bool {
	for _, existing := range AllowedAuditLogEntryResponseEventTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to EventTypeEventType value
func (v AuditLogEntryResponseEventType) Ptr() *AuditLogEntryResponseEventType {
	return &v
}

type NullableAuditLogEntryResponseEventType struct {
	value *AuditLogEntryResponseEventType
	isSet bool
}

func (v NullableAuditLogEntryResponseEventType) Get() *AuditLogEntryResponseEventType {
	return v.value
}

func (v *NullableAuditLogEntryResponseEventType) Set(val *AuditLogEntryResponseEventType) {
	v.value = val
	v.isSet = true
}

func (v NullableAuditLogEntryResponseEventType) IsSet() bool {
	return v.isSet
}

func (v *NullableAuditLogEntryResponseEventType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuditLogEntryResponseEventType(val *AuditLogEntryResponseEventType) *NullableAuditLogEntryResponseEventType {
	return &NullableAuditLogEntryResponseEventType{value: val, isSet: true}
}

func (v NullableAuditLogEntryResponseEventType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuditLogEntryResponseEventType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

type AuditLogEntryResponseGetEventTypeAttributeType = *AuditLogEntryResponseEventType
type AuditLogEntryResponseGetEventTypeArgType = AuditLogEntryResponseEventType
type AuditLogEntryResponseGetEventTypeRetType = AuditLogEntryResponseEventType

func getAuditLogEntryResponseGetEventTypeAttributeTypeOk(arg AuditLogEntryResponseGetEventTypeAttributeType) (ret AuditLogEntryResponseGetEventTypeRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setAuditLogEntryResponseGetEventTypeAttributeType(arg *AuditLogEntryResponseGetEventTypeAttributeType, val AuditLogEntryResponseGetEventTypeRetType) {
	*arg = &val
}

/*
	types and functions for eventVersion
*/

// isNotNullableString
type AuditLogEntryResponseGetEventVersionAttributeType = *string

func getAuditLogEntryResponseGetEventVersionAttributeTypeOk(arg AuditLogEntryResponseGetEventVersionAttributeType) (ret AuditLogEntryResponseGetEventVersionRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setAuditLogEntryResponseGetEventVersionAttributeType(arg *AuditLogEntryResponseGetEventVersionAttributeType, val AuditLogEntryResponseGetEventVersionRetType) {
	*arg = &val
}

type AuditLogEntryResponseGetEventVersionArgType = string
type AuditLogEntryResponseGetEventVersionRetType = string

/*
	types and functions for id
*/

// isNotNullableString
type AuditLogEntryResponseGetIdAttributeType = *string

func getAuditLogEntryResponseGetIdAttributeTypeOk(arg AuditLogEntryResponseGetIdAttributeType) (ret AuditLogEntryResponseGetIdRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setAuditLogEntryResponseGetIdAttributeType(arg *AuditLogEntryResponseGetIdAttributeType, val AuditLogEntryResponseGetIdRetType) {
	*arg = &val
}

type AuditLogEntryResponseGetIdArgType = string
type AuditLogEntryResponseGetIdRetType = string

/*
	types and functions for initiator
*/

// isModel
type AuditLogEntryResponseGetInitiatorAttributeType = *AuditLogEntryInitiatorResponse
type AuditLogEntryResponseGetInitiatorArgType = AuditLogEntryInitiatorResponse
type AuditLogEntryResponseGetInitiatorRetType = AuditLogEntryInitiatorResponse

func getAuditLogEntryResponseGetInitiatorAttributeTypeOk(arg AuditLogEntryResponseGetInitiatorAttributeType) (ret AuditLogEntryResponseGetInitiatorRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setAuditLogEntryResponseGetInitiatorAttributeType(arg *AuditLogEntryResponseGetInitiatorAttributeType, val AuditLogEntryResponseGetInitiatorRetType) {
	*arg = &val
}

/*
	types and functions for receivedTimeStamp
*/

// isDateTime
type AuditLogEntryResponseGetReceivedTimeStampAttributeType = *time.Time
type AuditLogEntryResponseGetReceivedTimeStampArgType = time.Time
type AuditLogEntryResponseGetReceivedTimeStampRetType = time.Time

func getAuditLogEntryResponseGetReceivedTimeStampAttributeTypeOk(arg AuditLogEntryResponseGetReceivedTimeStampAttributeType) (ret AuditLogEntryResponseGetReceivedTimeStampRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setAuditLogEntryResponseGetReceivedTimeStampAttributeType(arg *AuditLogEntryResponseGetReceivedTimeStampAttributeType, val AuditLogEntryResponseGetReceivedTimeStampRetType) {
	*arg = &val
}

/*
	types and functions for region
*/

// isNotNullableString
type AuditLogEntryResponseGetRegionAttributeType = *string

func getAuditLogEntryResponseGetRegionAttributeTypeOk(arg AuditLogEntryResponseGetRegionAttributeType) (ret AuditLogEntryResponseGetRegionRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setAuditLogEntryResponseGetRegionAttributeType(arg *AuditLogEntryResponseGetRegionAttributeType, val AuditLogEntryResponseGetRegionRetType) {
	*arg = &val
}

type AuditLogEntryResponseGetRegionArgType = string
type AuditLogEntryResponseGetRegionRetType = string

/*
	types and functions for request
*/

// isModel
type AuditLogEntryResponseGetRequestAttributeType = *AuditLogEntryRequestResponse
type AuditLogEntryResponseGetRequestArgType = AuditLogEntryRequestResponse
type AuditLogEntryResponseGetRequestRetType = AuditLogEntryRequestResponse

func getAuditLogEntryResponseGetRequestAttributeTypeOk(arg AuditLogEntryResponseGetRequestAttributeType) (ret AuditLogEntryResponseGetRequestRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setAuditLogEntryResponseGetRequestAttributeType(arg *AuditLogEntryResponseGetRequestAttributeType, val AuditLogEntryResponseGetRequestRetType) {
	*arg = &val
}

/*
	types and functions for resourceId
*/

// isNotNullableString
type AuditLogEntryResponseGetResourceIdAttributeType = *string

func getAuditLogEntryResponseGetResourceIdAttributeTypeOk(arg AuditLogEntryResponseGetResourceIdAttributeType) (ret AuditLogEntryResponseGetResourceIdRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setAuditLogEntryResponseGetResourceIdAttributeType(arg *AuditLogEntryResponseGetResourceIdAttributeType, val AuditLogEntryResponseGetResourceIdRetType) {
	*arg = &val
}

type AuditLogEntryResponseGetResourceIdArgType = string
type AuditLogEntryResponseGetResourceIdRetType = string

/*
	types and functions for resourceName
*/

// isNotNullableString
type AuditLogEntryResponseGetResourceNameAttributeType = *string

func getAuditLogEntryResponseGetResourceNameAttributeTypeOk(arg AuditLogEntryResponseGetResourceNameAttributeType) (ret AuditLogEntryResponseGetResourceNameRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setAuditLogEntryResponseGetResourceNameAttributeType(arg *AuditLogEntryResponseGetResourceNameAttributeType, val AuditLogEntryResponseGetResourceNameRetType) {
	*arg = &val
}

type AuditLogEntryResponseGetResourceNameArgType = string
type AuditLogEntryResponseGetResourceNameRetType = string

/*
	types and functions for result
*/

// isFreeform
type AuditLogEntryResponseGetResultAttributeType = *map[string]interface{}
type AuditLogEntryResponseGetResultArgType = map[string]interface{}
type AuditLogEntryResponseGetResultRetType = map[string]interface{}

func getAuditLogEntryResponseGetResultAttributeTypeOk(arg AuditLogEntryResponseGetResultAttributeType) (ret AuditLogEntryResponseGetResultRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setAuditLogEntryResponseGetResultAttributeType(arg *AuditLogEntryResponseGetResultAttributeType, val AuditLogEntryResponseGetResultRetType) {
	*arg = &val
}

/*
	types and functions for serviceAccountDelegationInfo
*/

// isModel
type AuditLogEntryResponseGetServiceAccountDelegationInfoAttributeType = *AuditLogEntryServiceAccountDelegationInfoResponse
type AuditLogEntryResponseGetServiceAccountDelegationInfoArgType = AuditLogEntryServiceAccountDelegationInfoResponse
type AuditLogEntryResponseGetServiceAccountDelegationInfoRetType = AuditLogEntryServiceAccountDelegationInfoResponse

func getAuditLogEntryResponseGetServiceAccountDelegationInfoAttributeTypeOk(arg AuditLogEntryResponseGetServiceAccountDelegationInfoAttributeType) (ret AuditLogEntryResponseGetServiceAccountDelegationInfoRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setAuditLogEntryResponseGetServiceAccountDelegationInfoAttributeType(arg *AuditLogEntryResponseGetServiceAccountDelegationInfoAttributeType, val AuditLogEntryResponseGetServiceAccountDelegationInfoRetType) {
	*arg = &val
}

/*
	types and functions for severity
*/

// isEnum

// AuditLogEntryResponseSeverity The severity of this request.
// value type for enums
type AuditLogEntryResponseSeverity string

// List of Severity
const (
	AUDITLOGENTRYRESPONSESEVERITY_INFO  AuditLogEntryResponseSeverity = "INFO"
	AUDITLOGENTRYRESPONSESEVERITY_ERROR AuditLogEntryResponseSeverity = "ERROR"
)

// All allowed values of AuditLogEntryResponse enum
var AllowedAuditLogEntryResponseSeverityEnumValues = []AuditLogEntryResponseSeverity{
	"INFO",
	"ERROR",
}

func (v *AuditLogEntryResponseSeverity) UnmarshalJSON(src []byte) error {
	// use a type alias to prevent infinite recursion during unmarshal,
	// see https://biscuit.ninja/posts/go-avoid-an-infitine-loop-with-custom-json-unmarshallers
	type TmpJson AuditLogEntryResponseSeverity
	var value TmpJson
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	// Allow unmarshalling zero value for testing purposes
	var zeroValue TmpJson
	if value == zeroValue {
		return nil
	}
	enumTypeValue := AuditLogEntryResponseSeverity(value)
	for _, existing := range AllowedAuditLogEntryResponseSeverityEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid AuditLogEntryResponse", value)
}

// NewAuditLogEntryResponseSeverityFromValue returns a pointer to a valid AuditLogEntryResponseSeverity
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewAuditLogEntryResponseSeverityFromValue(v AuditLogEntryResponseSeverity) (*AuditLogEntryResponseSeverity, error) {
	ev := AuditLogEntryResponseSeverity(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for AuditLogEntryResponseSeverity: valid values are %v", v, AllowedAuditLogEntryResponseSeverityEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v AuditLogEntryResponseSeverity) IsValid() bool {
	for _, existing := range AllowedAuditLogEntryResponseSeverityEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to SeveritySeverity value
func (v AuditLogEntryResponseSeverity) Ptr() *AuditLogEntryResponseSeverity {
	return &v
}

type NullableAuditLogEntryResponseSeverity struct {
	value *AuditLogEntryResponseSeverity
	isSet bool
}

func (v NullableAuditLogEntryResponseSeverity) Get() *AuditLogEntryResponseSeverity {
	return v.value
}

func (v *NullableAuditLogEntryResponseSeverity) Set(val *AuditLogEntryResponseSeverity) {
	v.value = val
	v.isSet = true
}

func (v NullableAuditLogEntryResponseSeverity) IsSet() bool {
	return v.isSet
}

func (v *NullableAuditLogEntryResponseSeverity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuditLogEntryResponseSeverity(val *AuditLogEntryResponseSeverity) *NullableAuditLogEntryResponseSeverity {
	return &NullableAuditLogEntryResponseSeverity{value: val, isSet: true}
}

func (v NullableAuditLogEntryResponseSeverity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuditLogEntryResponseSeverity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

type AuditLogEntryResponseGetSeverityAttributeType = *AuditLogEntryResponseSeverity
type AuditLogEntryResponseGetSeverityArgType = AuditLogEntryResponseSeverity
type AuditLogEntryResponseGetSeverityRetType = AuditLogEntryResponseSeverity

func getAuditLogEntryResponseGetSeverityAttributeTypeOk(arg AuditLogEntryResponseGetSeverityAttributeType) (ret AuditLogEntryResponseGetSeverityRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setAuditLogEntryResponseGetSeverityAttributeType(arg *AuditLogEntryResponseGetSeverityAttributeType, val AuditLogEntryResponseGetSeverityRetType) {
	*arg = &val
}

/*
	types and functions for sourceIpAddress
*/

// isNotNullableString
type AuditLogEntryResponseGetSourceIpAddressAttributeType = *string

func getAuditLogEntryResponseGetSourceIpAddressAttributeTypeOk(arg AuditLogEntryResponseGetSourceIpAddressAttributeType) (ret AuditLogEntryResponseGetSourceIpAddressRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setAuditLogEntryResponseGetSourceIpAddressAttributeType(arg *AuditLogEntryResponseGetSourceIpAddressAttributeType, val AuditLogEntryResponseGetSourceIpAddressRetType) {
	*arg = &val
}

type AuditLogEntryResponseGetSourceIpAddressArgType = string
type AuditLogEntryResponseGetSourceIpAddressRetType = string

/*
	types and functions for userAgent
*/

// isNotNullableString
type AuditLogEntryResponseGetUserAgentAttributeType = *string

func getAuditLogEntryResponseGetUserAgentAttributeTypeOk(arg AuditLogEntryResponseGetUserAgentAttributeType) (ret AuditLogEntryResponseGetUserAgentRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setAuditLogEntryResponseGetUserAgentAttributeType(arg *AuditLogEntryResponseGetUserAgentAttributeType, val AuditLogEntryResponseGetUserAgentRetType) {
	*arg = &val
}

type AuditLogEntryResponseGetUserAgentArgType = string
type AuditLogEntryResponseGetUserAgentRetType = string

/*
	types and functions for visibility
*/

// isEnum

// AuditLogEntryResponseVisibility PUBLIC for entries that are intended for end users, while PRIVATE entries can only be viewed with system privileges.
// value type for enums
type AuditLogEntryResponseVisibility string

// List of Visibility
const (
	AUDITLOGENTRYRESPONSEVISIBILITY_PUBLIC  AuditLogEntryResponseVisibility = "PUBLIC"
	AUDITLOGENTRYRESPONSEVISIBILITY_PRIVATE AuditLogEntryResponseVisibility = "PRIVATE"
)

// All allowed values of AuditLogEntryResponse enum
var AllowedAuditLogEntryResponseVisibilityEnumValues = []AuditLogEntryResponseVisibility{
	"PUBLIC",
	"PRIVATE",
}

func (v *AuditLogEntryResponseVisibility) UnmarshalJSON(src []byte) error {
	// use a type alias to prevent infinite recursion during unmarshal,
	// see https://biscuit.ninja/posts/go-avoid-an-infitine-loop-with-custom-json-unmarshallers
	type TmpJson AuditLogEntryResponseVisibility
	var value TmpJson
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	// Allow unmarshalling zero value for testing purposes
	var zeroValue TmpJson
	if value == zeroValue {
		return nil
	}
	enumTypeValue := AuditLogEntryResponseVisibility(value)
	for _, existing := range AllowedAuditLogEntryResponseVisibilityEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid AuditLogEntryResponse", value)
}

// NewAuditLogEntryResponseVisibilityFromValue returns a pointer to a valid AuditLogEntryResponseVisibility
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewAuditLogEntryResponseVisibilityFromValue(v AuditLogEntryResponseVisibility) (*AuditLogEntryResponseVisibility, error) {
	ev := AuditLogEntryResponseVisibility(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for AuditLogEntryResponseVisibility: valid values are %v", v, AllowedAuditLogEntryResponseVisibilityEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v AuditLogEntryResponseVisibility) IsValid() bool {
	for _, existing := range AllowedAuditLogEntryResponseVisibilityEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to VisibilityVisibility value
func (v AuditLogEntryResponseVisibility) Ptr() *AuditLogEntryResponseVisibility {
	return &v
}

type NullableAuditLogEntryResponseVisibility struct {
	value *AuditLogEntryResponseVisibility
	isSet bool
}

func (v NullableAuditLogEntryResponseVisibility) Get() *AuditLogEntryResponseVisibility {
	return v.value
}

func (v *NullableAuditLogEntryResponseVisibility) Set(val *AuditLogEntryResponseVisibility) {
	v.value = val
	v.isSet = true
}

func (v NullableAuditLogEntryResponseVisibility) IsSet() bool {
	return v.isSet
}

func (v *NullableAuditLogEntryResponseVisibility) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuditLogEntryResponseVisibility(val *AuditLogEntryResponseVisibility) *NullableAuditLogEntryResponseVisibility {
	return &NullableAuditLogEntryResponseVisibility{value: val, isSet: true}
}

func (v NullableAuditLogEntryResponseVisibility) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuditLogEntryResponseVisibility) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

type AuditLogEntryResponseGetVisibilityAttributeType = *AuditLogEntryResponseVisibility
type AuditLogEntryResponseGetVisibilityArgType = AuditLogEntryResponseVisibility
type AuditLogEntryResponseGetVisibilityRetType = AuditLogEntryResponseVisibility

func getAuditLogEntryResponseGetVisibilityAttributeTypeOk(arg AuditLogEntryResponseGetVisibilityAttributeType) (ret AuditLogEntryResponseGetVisibilityRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setAuditLogEntryResponseGetVisibilityAttributeType(arg *AuditLogEntryResponseGetVisibilityAttributeType, val AuditLogEntryResponseGetVisibilityRetType) {
	*arg = &val
}

// AuditLogEntryResponse struct for AuditLogEntryResponse
type AuditLogEntryResponse struct {
	Context AuditLogEntryResponseGetContextAttributeType `json:"context,omitempty"`
	// Unique ID which identifies the request from the sender point of view.
	CorrelationId AuditLogEntryResponseGetCorrelationIdAttributeType `json:"correlationId,omitempty"`
	// Additional information about the event that is not part of the request or response. May contain arbitrary data.
	Details AuditLogEntryResponseGetDetailsAttributeType `json:"details,omitempty"`
	// Name of the operation this event represents.
	// REQUIRED
	EventName AuditLogEntryResponseGetEventNameAttributeType `json:"eventName" required:"true"`
	// The service in which the causing event was handled.
	// REQUIRED
	EventSource AuditLogEntryResponseGetEventSourceAttributeType `json:"eventSource" required:"true"`
	// Timestamp at which the event was triggered.
	// REQUIRED
	EventTimeStamp AuditLogEntryResponseGetEventTimeStampAttributeType `json:"eventTimeStamp" required:"true"`
	// Type that can be assigned to the event. For example, an event \"Organization created\" can be assigned to the type ADMIN_EVENT
	// REQUIRED
	EventType AuditLogEntryResponseGetEventTypeAttributeType `json:"eventType" required:"true"`
	// Version of the log event format.
	// REQUIRED
	EventVersion AuditLogEntryResponseGetEventVersionAttributeType `json:"eventVersion" required:"true"`
	// Unique ID generated by the audit log.
	// REQUIRED
	Id AuditLogEntryResponseGetIdAttributeType `json:"id" required:"true"`
	// REQUIRED
	Initiator AuditLogEntryResponseGetInitiatorAttributeType `json:"initiator" required:"true"`
	// Timestamp at which the event was received by the audit log.
	// REQUIRED
	ReceivedTimeStamp AuditLogEntryResponseGetReceivedTimeStampAttributeType `json:"receivedTimeStamp" required:"true"`
	// Region from which the event has been emitted.
	// REQUIRED
	Region AuditLogEntryResponseGetRegionAttributeType `json:"region" required:"true"`
	// REQUIRED
	Request AuditLogEntryResponseGetRequestAttributeType `json:"request" required:"true"`
	// Unique id of the resource that is target of the operation
	ResourceId AuditLogEntryResponseGetResourceIdAttributeType `json:"resourceId,omitempty"`
	// Name of the resource that is target of the operation
	ResourceName AuditLogEntryResponseGetResourceNameAttributeType `json:"resourceName,omitempty"`
	// Object representing the change resulting from this event. May be omitted if no change has been applied. May contain arbitrary data.
	Result                       AuditLogEntryResponseGetResultAttributeType                       `json:"result,omitempty"`
	ServiceAccountDelegationInfo AuditLogEntryResponseGetServiceAccountDelegationInfoAttributeType `json:"serviceAccountDelegationInfo,omitempty"`
	// The severity of this request.
	// REQUIRED
	Severity AuditLogEntryResponseGetSeverityAttributeType `json:"severity" required:"true"`
	// IP address that the request was made from
	// REQUIRED
	SourceIpAddress AuditLogEntryResponseGetSourceIpAddressAttributeType `json:"sourceIpAddress" required:"true"`
	// Agent through which the request was made from (e.g. Portal, CLI, SDK, ...)
	// REQUIRED
	UserAgent AuditLogEntryResponseGetUserAgentAttributeType `json:"userAgent" required:"true"`
	// PUBLIC for entries that are intended for end users, while PRIVATE entries can only be viewed with system privileges.
	// REQUIRED
	Visibility AuditLogEntryResponseGetVisibilityAttributeType `json:"visibility" required:"true"`
}

type _AuditLogEntryResponse AuditLogEntryResponse

// NewAuditLogEntryResponse instantiates a new AuditLogEntryResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuditLogEntryResponse(eventName AuditLogEntryResponseGetEventNameArgType, eventSource AuditLogEntryResponseGetEventSourceArgType, eventTimeStamp AuditLogEntryResponseGetEventTimeStampArgType, eventType AuditLogEntryResponseGetEventTypeArgType, eventVersion AuditLogEntryResponseGetEventVersionArgType, id AuditLogEntryResponseGetIdArgType, initiator AuditLogEntryResponseGetInitiatorArgType, receivedTimeStamp AuditLogEntryResponseGetReceivedTimeStampArgType, region AuditLogEntryResponseGetRegionArgType, request AuditLogEntryResponseGetRequestArgType, severity AuditLogEntryResponseGetSeverityArgType, sourceIpAddress AuditLogEntryResponseGetSourceIpAddressArgType, userAgent AuditLogEntryResponseGetUserAgentArgType, visibility AuditLogEntryResponseGetVisibilityArgType) *AuditLogEntryResponse {
	this := AuditLogEntryResponse{}
	setAuditLogEntryResponseGetEventNameAttributeType(&this.EventName, eventName)
	setAuditLogEntryResponseGetEventSourceAttributeType(&this.EventSource, eventSource)
	setAuditLogEntryResponseGetEventTimeStampAttributeType(&this.EventTimeStamp, eventTimeStamp)
	setAuditLogEntryResponseGetEventTypeAttributeType(&this.EventType, eventType)
	setAuditLogEntryResponseGetEventVersionAttributeType(&this.EventVersion, eventVersion)
	setAuditLogEntryResponseGetIdAttributeType(&this.Id, id)
	setAuditLogEntryResponseGetInitiatorAttributeType(&this.Initiator, initiator)
	setAuditLogEntryResponseGetReceivedTimeStampAttributeType(&this.ReceivedTimeStamp, receivedTimeStamp)
	setAuditLogEntryResponseGetRegionAttributeType(&this.Region, region)
	setAuditLogEntryResponseGetRequestAttributeType(&this.Request, request)
	setAuditLogEntryResponseGetSeverityAttributeType(&this.Severity, severity)
	setAuditLogEntryResponseGetSourceIpAddressAttributeType(&this.SourceIpAddress, sourceIpAddress)
	setAuditLogEntryResponseGetUserAgentAttributeType(&this.UserAgent, userAgent)
	setAuditLogEntryResponseGetVisibilityAttributeType(&this.Visibility, visibility)
	return &this
}

// NewAuditLogEntryResponseWithDefaults instantiates a new AuditLogEntryResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuditLogEntryResponseWithDefaults() *AuditLogEntryResponse {
	this := AuditLogEntryResponse{}
	return &this
}

// GetContext returns the Context field value if set, zero value otherwise.
func (o *AuditLogEntryResponse) GetContext() (res AuditLogEntryResponseGetContextRetType) {
	res, _ = o.GetContextOk()
	return
}

// GetContextOk returns a tuple with the Context field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditLogEntryResponse) GetContextOk() (ret AuditLogEntryResponseGetContextRetType, ok bool) {
	return getAuditLogEntryResponseGetContextAttributeTypeOk(o.Context)
}

// HasContext returns a boolean if a field has been set.
func (o *AuditLogEntryResponse) HasContext() bool {
	_, ok := o.GetContextOk()
	return ok
}

// SetContext gets a reference to the given AuditLogEntryContextResponse and assigns it to the Context field.
func (o *AuditLogEntryResponse) SetContext(v AuditLogEntryResponseGetContextRetType) {
	setAuditLogEntryResponseGetContextAttributeType(&o.Context, v)
}

// GetCorrelationId returns the CorrelationId field value if set, zero value otherwise.
func (o *AuditLogEntryResponse) GetCorrelationId() (res AuditLogEntryResponseGetCorrelationIdRetType) {
	res, _ = o.GetCorrelationIdOk()
	return
}

// GetCorrelationIdOk returns a tuple with the CorrelationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditLogEntryResponse) GetCorrelationIdOk() (ret AuditLogEntryResponseGetCorrelationIdRetType, ok bool) {
	return getAuditLogEntryResponseGetCorrelationIdAttributeTypeOk(o.CorrelationId)
}

// HasCorrelationId returns a boolean if a field has been set.
func (o *AuditLogEntryResponse) HasCorrelationId() bool {
	_, ok := o.GetCorrelationIdOk()
	return ok
}

// SetCorrelationId gets a reference to the given string and assigns it to the CorrelationId field.
func (o *AuditLogEntryResponse) SetCorrelationId(v AuditLogEntryResponseGetCorrelationIdRetType) {
	setAuditLogEntryResponseGetCorrelationIdAttributeType(&o.CorrelationId, v)
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *AuditLogEntryResponse) GetDetails() (res AuditLogEntryResponseGetDetailsRetType) {
	res, _ = o.GetDetailsOk()
	return
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditLogEntryResponse) GetDetailsOk() (ret AuditLogEntryResponseGetDetailsRetType, ok bool) {
	return getAuditLogEntryResponseGetDetailsAttributeTypeOk(o.Details)
}

// HasDetails returns a boolean if a field has been set.
func (o *AuditLogEntryResponse) HasDetails() bool {
	_, ok := o.GetDetailsOk()
	return ok
}

// SetDetails gets a reference to the given map[string]interface{} and assigns it to the Details field.
func (o *AuditLogEntryResponse) SetDetails(v AuditLogEntryResponseGetDetailsRetType) {
	setAuditLogEntryResponseGetDetailsAttributeType(&o.Details, v)
}

// GetEventName returns the EventName field value
func (o *AuditLogEntryResponse) GetEventName() (ret AuditLogEntryResponseGetEventNameRetType) {
	ret, _ = o.GetEventNameOk()
	return ret
}

// GetEventNameOk returns a tuple with the EventName field value
// and a boolean to check if the value has been set.
func (o *AuditLogEntryResponse) GetEventNameOk() (ret AuditLogEntryResponseGetEventNameRetType, ok bool) {
	return getAuditLogEntryResponseGetEventNameAttributeTypeOk(o.EventName)
}

// SetEventName sets field value
func (o *AuditLogEntryResponse) SetEventName(v AuditLogEntryResponseGetEventNameRetType) {
	setAuditLogEntryResponseGetEventNameAttributeType(&o.EventName, v)
}

// GetEventSource returns the EventSource field value
func (o *AuditLogEntryResponse) GetEventSource() (ret AuditLogEntryResponseGetEventSourceRetType) {
	ret, _ = o.GetEventSourceOk()
	return ret
}

// GetEventSourceOk returns a tuple with the EventSource field value
// and a boolean to check if the value has been set.
func (o *AuditLogEntryResponse) GetEventSourceOk() (ret AuditLogEntryResponseGetEventSourceRetType, ok bool) {
	return getAuditLogEntryResponseGetEventSourceAttributeTypeOk(o.EventSource)
}

// SetEventSource sets field value
func (o *AuditLogEntryResponse) SetEventSource(v AuditLogEntryResponseGetEventSourceRetType) {
	setAuditLogEntryResponseGetEventSourceAttributeType(&o.EventSource, v)
}

// GetEventTimeStamp returns the EventTimeStamp field value
func (o *AuditLogEntryResponse) GetEventTimeStamp() (ret AuditLogEntryResponseGetEventTimeStampRetType) {
	ret, _ = o.GetEventTimeStampOk()
	return ret
}

// GetEventTimeStampOk returns a tuple with the EventTimeStamp field value
// and a boolean to check if the value has been set.
func (o *AuditLogEntryResponse) GetEventTimeStampOk() (ret AuditLogEntryResponseGetEventTimeStampRetType, ok bool) {
	return getAuditLogEntryResponseGetEventTimeStampAttributeTypeOk(o.EventTimeStamp)
}

// SetEventTimeStamp sets field value
func (o *AuditLogEntryResponse) SetEventTimeStamp(v AuditLogEntryResponseGetEventTimeStampRetType) {
	setAuditLogEntryResponseGetEventTimeStampAttributeType(&o.EventTimeStamp, v)
}

// GetEventType returns the EventType field value
func (o *AuditLogEntryResponse) GetEventType() (ret AuditLogEntryResponseGetEventTypeRetType) {
	ret, _ = o.GetEventTypeOk()
	return ret
}

// GetEventTypeOk returns a tuple with the EventType field value
// and a boolean to check if the value has been set.
func (o *AuditLogEntryResponse) GetEventTypeOk() (ret AuditLogEntryResponseGetEventTypeRetType, ok bool) {
	return getAuditLogEntryResponseGetEventTypeAttributeTypeOk(o.EventType)
}

// SetEventType sets field value
func (o *AuditLogEntryResponse) SetEventType(v AuditLogEntryResponseGetEventTypeRetType) {
	setAuditLogEntryResponseGetEventTypeAttributeType(&o.EventType, v)
}

// GetEventVersion returns the EventVersion field value
func (o *AuditLogEntryResponse) GetEventVersion() (ret AuditLogEntryResponseGetEventVersionRetType) {
	ret, _ = o.GetEventVersionOk()
	return ret
}

// GetEventVersionOk returns a tuple with the EventVersion field value
// and a boolean to check if the value has been set.
func (o *AuditLogEntryResponse) GetEventVersionOk() (ret AuditLogEntryResponseGetEventVersionRetType, ok bool) {
	return getAuditLogEntryResponseGetEventVersionAttributeTypeOk(o.EventVersion)
}

// SetEventVersion sets field value
func (o *AuditLogEntryResponse) SetEventVersion(v AuditLogEntryResponseGetEventVersionRetType) {
	setAuditLogEntryResponseGetEventVersionAttributeType(&o.EventVersion, v)
}

// GetId returns the Id field value
func (o *AuditLogEntryResponse) GetId() (ret AuditLogEntryResponseGetIdRetType) {
	ret, _ = o.GetIdOk()
	return ret
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AuditLogEntryResponse) GetIdOk() (ret AuditLogEntryResponseGetIdRetType, ok bool) {
	return getAuditLogEntryResponseGetIdAttributeTypeOk(o.Id)
}

// SetId sets field value
func (o *AuditLogEntryResponse) SetId(v AuditLogEntryResponseGetIdRetType) {
	setAuditLogEntryResponseGetIdAttributeType(&o.Id, v)
}

// GetInitiator returns the Initiator field value
func (o *AuditLogEntryResponse) GetInitiator() (ret AuditLogEntryResponseGetInitiatorRetType) {
	ret, _ = o.GetInitiatorOk()
	return ret
}

// GetInitiatorOk returns a tuple with the Initiator field value
// and a boolean to check if the value has been set.
func (o *AuditLogEntryResponse) GetInitiatorOk() (ret AuditLogEntryResponseGetInitiatorRetType, ok bool) {
	return getAuditLogEntryResponseGetInitiatorAttributeTypeOk(o.Initiator)
}

// SetInitiator sets field value
func (o *AuditLogEntryResponse) SetInitiator(v AuditLogEntryResponseGetInitiatorRetType) {
	setAuditLogEntryResponseGetInitiatorAttributeType(&o.Initiator, v)
}

// GetReceivedTimeStamp returns the ReceivedTimeStamp field value
func (o *AuditLogEntryResponse) GetReceivedTimeStamp() (ret AuditLogEntryResponseGetReceivedTimeStampRetType) {
	ret, _ = o.GetReceivedTimeStampOk()
	return ret
}

// GetReceivedTimeStampOk returns a tuple with the ReceivedTimeStamp field value
// and a boolean to check if the value has been set.
func (o *AuditLogEntryResponse) GetReceivedTimeStampOk() (ret AuditLogEntryResponseGetReceivedTimeStampRetType, ok bool) {
	return getAuditLogEntryResponseGetReceivedTimeStampAttributeTypeOk(o.ReceivedTimeStamp)
}

// SetReceivedTimeStamp sets field value
func (o *AuditLogEntryResponse) SetReceivedTimeStamp(v AuditLogEntryResponseGetReceivedTimeStampRetType) {
	setAuditLogEntryResponseGetReceivedTimeStampAttributeType(&o.ReceivedTimeStamp, v)
}

// GetRegion returns the Region field value
func (o *AuditLogEntryResponse) GetRegion() (ret AuditLogEntryResponseGetRegionRetType) {
	ret, _ = o.GetRegionOk()
	return ret
}

// GetRegionOk returns a tuple with the Region field value
// and a boolean to check if the value has been set.
func (o *AuditLogEntryResponse) GetRegionOk() (ret AuditLogEntryResponseGetRegionRetType, ok bool) {
	return getAuditLogEntryResponseGetRegionAttributeTypeOk(o.Region)
}

// SetRegion sets field value
func (o *AuditLogEntryResponse) SetRegion(v AuditLogEntryResponseGetRegionRetType) {
	setAuditLogEntryResponseGetRegionAttributeType(&o.Region, v)
}

// GetRequest returns the Request field value
func (o *AuditLogEntryResponse) GetRequest() (ret AuditLogEntryResponseGetRequestRetType) {
	ret, _ = o.GetRequestOk()
	return ret
}

// GetRequestOk returns a tuple with the Request field value
// and a boolean to check if the value has been set.
func (o *AuditLogEntryResponse) GetRequestOk() (ret AuditLogEntryResponseGetRequestRetType, ok bool) {
	return getAuditLogEntryResponseGetRequestAttributeTypeOk(o.Request)
}

// SetRequest sets field value
func (o *AuditLogEntryResponse) SetRequest(v AuditLogEntryResponseGetRequestRetType) {
	setAuditLogEntryResponseGetRequestAttributeType(&o.Request, v)
}

// GetResourceId returns the ResourceId field value if set, zero value otherwise.
func (o *AuditLogEntryResponse) GetResourceId() (res AuditLogEntryResponseGetResourceIdRetType) {
	res, _ = o.GetResourceIdOk()
	return
}

// GetResourceIdOk returns a tuple with the ResourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditLogEntryResponse) GetResourceIdOk() (ret AuditLogEntryResponseGetResourceIdRetType, ok bool) {
	return getAuditLogEntryResponseGetResourceIdAttributeTypeOk(o.ResourceId)
}

// HasResourceId returns a boolean if a field has been set.
func (o *AuditLogEntryResponse) HasResourceId() bool {
	_, ok := o.GetResourceIdOk()
	return ok
}

// SetResourceId gets a reference to the given string and assigns it to the ResourceId field.
func (o *AuditLogEntryResponse) SetResourceId(v AuditLogEntryResponseGetResourceIdRetType) {
	setAuditLogEntryResponseGetResourceIdAttributeType(&o.ResourceId, v)
}

// GetResourceName returns the ResourceName field value if set, zero value otherwise.
func (o *AuditLogEntryResponse) GetResourceName() (res AuditLogEntryResponseGetResourceNameRetType) {
	res, _ = o.GetResourceNameOk()
	return
}

// GetResourceNameOk returns a tuple with the ResourceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditLogEntryResponse) GetResourceNameOk() (ret AuditLogEntryResponseGetResourceNameRetType, ok bool) {
	return getAuditLogEntryResponseGetResourceNameAttributeTypeOk(o.ResourceName)
}

// HasResourceName returns a boolean if a field has been set.
func (o *AuditLogEntryResponse) HasResourceName() bool {
	_, ok := o.GetResourceNameOk()
	return ok
}

// SetResourceName gets a reference to the given string and assigns it to the ResourceName field.
func (o *AuditLogEntryResponse) SetResourceName(v AuditLogEntryResponseGetResourceNameRetType) {
	setAuditLogEntryResponseGetResourceNameAttributeType(&o.ResourceName, v)
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *AuditLogEntryResponse) GetResult() (res AuditLogEntryResponseGetResultRetType) {
	res, _ = o.GetResultOk()
	return
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditLogEntryResponse) GetResultOk() (ret AuditLogEntryResponseGetResultRetType, ok bool) {
	return getAuditLogEntryResponseGetResultAttributeTypeOk(o.Result)
}

// HasResult returns a boolean if a field has been set.
func (o *AuditLogEntryResponse) HasResult() bool {
	_, ok := o.GetResultOk()
	return ok
}

// SetResult gets a reference to the given map[string]interface{} and assigns it to the Result field.
func (o *AuditLogEntryResponse) SetResult(v AuditLogEntryResponseGetResultRetType) {
	setAuditLogEntryResponseGetResultAttributeType(&o.Result, v)
}

// GetServiceAccountDelegationInfo returns the ServiceAccountDelegationInfo field value if set, zero value otherwise.
func (o *AuditLogEntryResponse) GetServiceAccountDelegationInfo() (res AuditLogEntryResponseGetServiceAccountDelegationInfoRetType) {
	res, _ = o.GetServiceAccountDelegationInfoOk()
	return
}

// GetServiceAccountDelegationInfoOk returns a tuple with the ServiceAccountDelegationInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditLogEntryResponse) GetServiceAccountDelegationInfoOk() (ret AuditLogEntryResponseGetServiceAccountDelegationInfoRetType, ok bool) {
	return getAuditLogEntryResponseGetServiceAccountDelegationInfoAttributeTypeOk(o.ServiceAccountDelegationInfo)
}

// HasServiceAccountDelegationInfo returns a boolean if a field has been set.
func (o *AuditLogEntryResponse) HasServiceAccountDelegationInfo() bool {
	_, ok := o.GetServiceAccountDelegationInfoOk()
	return ok
}

// SetServiceAccountDelegationInfo gets a reference to the given AuditLogEntryServiceAccountDelegationInfoResponse and assigns it to the ServiceAccountDelegationInfo field.
func (o *AuditLogEntryResponse) SetServiceAccountDelegationInfo(v AuditLogEntryResponseGetServiceAccountDelegationInfoRetType) {
	setAuditLogEntryResponseGetServiceAccountDelegationInfoAttributeType(&o.ServiceAccountDelegationInfo, v)
}

// GetSeverity returns the Severity field value
func (o *AuditLogEntryResponse) GetSeverity() (ret AuditLogEntryResponseGetSeverityRetType) {
	ret, _ = o.GetSeverityOk()
	return ret
}

// GetSeverityOk returns a tuple with the Severity field value
// and a boolean to check if the value has been set.
func (o *AuditLogEntryResponse) GetSeverityOk() (ret AuditLogEntryResponseGetSeverityRetType, ok bool) {
	return getAuditLogEntryResponseGetSeverityAttributeTypeOk(o.Severity)
}

// SetSeverity sets field value
func (o *AuditLogEntryResponse) SetSeverity(v AuditLogEntryResponseGetSeverityRetType) {
	setAuditLogEntryResponseGetSeverityAttributeType(&o.Severity, v)
}

// GetSourceIpAddress returns the SourceIpAddress field value
func (o *AuditLogEntryResponse) GetSourceIpAddress() (ret AuditLogEntryResponseGetSourceIpAddressRetType) {
	ret, _ = o.GetSourceIpAddressOk()
	return ret
}

// GetSourceIpAddressOk returns a tuple with the SourceIpAddress field value
// and a boolean to check if the value has been set.
func (o *AuditLogEntryResponse) GetSourceIpAddressOk() (ret AuditLogEntryResponseGetSourceIpAddressRetType, ok bool) {
	return getAuditLogEntryResponseGetSourceIpAddressAttributeTypeOk(o.SourceIpAddress)
}

// SetSourceIpAddress sets field value
func (o *AuditLogEntryResponse) SetSourceIpAddress(v AuditLogEntryResponseGetSourceIpAddressRetType) {
	setAuditLogEntryResponseGetSourceIpAddressAttributeType(&o.SourceIpAddress, v)
}

// GetUserAgent returns the UserAgent field value
func (o *AuditLogEntryResponse) GetUserAgent() (ret AuditLogEntryResponseGetUserAgentRetType) {
	ret, _ = o.GetUserAgentOk()
	return ret
}

// GetUserAgentOk returns a tuple with the UserAgent field value
// and a boolean to check if the value has been set.
func (o *AuditLogEntryResponse) GetUserAgentOk() (ret AuditLogEntryResponseGetUserAgentRetType, ok bool) {
	return getAuditLogEntryResponseGetUserAgentAttributeTypeOk(o.UserAgent)
}

// SetUserAgent sets field value
func (o *AuditLogEntryResponse) SetUserAgent(v AuditLogEntryResponseGetUserAgentRetType) {
	setAuditLogEntryResponseGetUserAgentAttributeType(&o.UserAgent, v)
}

// GetVisibility returns the Visibility field value
func (o *AuditLogEntryResponse) GetVisibility() (ret AuditLogEntryResponseGetVisibilityRetType) {
	ret, _ = o.GetVisibilityOk()
	return ret
}

// GetVisibilityOk returns a tuple with the Visibility field value
// and a boolean to check if the value has been set.
func (o *AuditLogEntryResponse) GetVisibilityOk() (ret AuditLogEntryResponseGetVisibilityRetType, ok bool) {
	return getAuditLogEntryResponseGetVisibilityAttributeTypeOk(o.Visibility)
}

// SetVisibility sets field value
func (o *AuditLogEntryResponse) SetVisibility(v AuditLogEntryResponseGetVisibilityRetType) {
	setAuditLogEntryResponseGetVisibilityAttributeType(&o.Visibility, v)
}

func (o AuditLogEntryResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getAuditLogEntryResponseGetContextAttributeTypeOk(o.Context); ok {
		toSerialize["Context"] = val
	}
	if val, ok := getAuditLogEntryResponseGetCorrelationIdAttributeTypeOk(o.CorrelationId); ok {
		toSerialize["CorrelationId"] = val
	}
	if val, ok := getAuditLogEntryResponseGetDetailsAttributeTypeOk(o.Details); ok {
		toSerialize["Details"] = val
	}
	if val, ok := getAuditLogEntryResponseGetEventNameAttributeTypeOk(o.EventName); ok {
		toSerialize["EventName"] = val
	}
	if val, ok := getAuditLogEntryResponseGetEventSourceAttributeTypeOk(o.EventSource); ok {
		toSerialize["EventSource"] = val
	}
	if val, ok := getAuditLogEntryResponseGetEventTimeStampAttributeTypeOk(o.EventTimeStamp); ok {
		toSerialize["EventTimeStamp"] = val
	}
	if val, ok := getAuditLogEntryResponseGetEventTypeAttributeTypeOk(o.EventType); ok {
		toSerialize["EventType"] = val
	}
	if val, ok := getAuditLogEntryResponseGetEventVersionAttributeTypeOk(o.EventVersion); ok {
		toSerialize["EventVersion"] = val
	}
	if val, ok := getAuditLogEntryResponseGetIdAttributeTypeOk(o.Id); ok {
		toSerialize["Id"] = val
	}
	if val, ok := getAuditLogEntryResponseGetInitiatorAttributeTypeOk(o.Initiator); ok {
		toSerialize["Initiator"] = val
	}
	if val, ok := getAuditLogEntryResponseGetReceivedTimeStampAttributeTypeOk(o.ReceivedTimeStamp); ok {
		toSerialize["ReceivedTimeStamp"] = val
	}
	if val, ok := getAuditLogEntryResponseGetRegionAttributeTypeOk(o.Region); ok {
		toSerialize["Region"] = val
	}
	if val, ok := getAuditLogEntryResponseGetRequestAttributeTypeOk(o.Request); ok {
		toSerialize["Request"] = val
	}
	if val, ok := getAuditLogEntryResponseGetResourceIdAttributeTypeOk(o.ResourceId); ok {
		toSerialize["ResourceId"] = val
	}
	if val, ok := getAuditLogEntryResponseGetResourceNameAttributeTypeOk(o.ResourceName); ok {
		toSerialize["ResourceName"] = val
	}
	if val, ok := getAuditLogEntryResponseGetResultAttributeTypeOk(o.Result); ok {
		toSerialize["Result"] = val
	}
	if val, ok := getAuditLogEntryResponseGetServiceAccountDelegationInfoAttributeTypeOk(o.ServiceAccountDelegationInfo); ok {
		toSerialize["ServiceAccountDelegationInfo"] = val
	}
	if val, ok := getAuditLogEntryResponseGetSeverityAttributeTypeOk(o.Severity); ok {
		toSerialize["Severity"] = val
	}
	if val, ok := getAuditLogEntryResponseGetSourceIpAddressAttributeTypeOk(o.SourceIpAddress); ok {
		toSerialize["SourceIpAddress"] = val
	}
	if val, ok := getAuditLogEntryResponseGetUserAgentAttributeTypeOk(o.UserAgent); ok {
		toSerialize["UserAgent"] = val
	}
	if val, ok := getAuditLogEntryResponseGetVisibilityAttributeTypeOk(o.Visibility); ok {
		toSerialize["Visibility"] = val
	}
	return toSerialize, nil
}

type NullableAuditLogEntryResponse struct {
	value *AuditLogEntryResponse
	isSet bool
}

func (v NullableAuditLogEntryResponse) Get() *AuditLogEntryResponse {
	return v.value
}

func (v *NullableAuditLogEntryResponse) Set(val *AuditLogEntryResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAuditLogEntryResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAuditLogEntryResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuditLogEntryResponse(val *AuditLogEntryResponse) *NullableAuditLogEntryResponse {
	return &NullableAuditLogEntryResponse{value: val, isSet: true}
}

func (v NullableAuditLogEntryResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuditLogEntryResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
