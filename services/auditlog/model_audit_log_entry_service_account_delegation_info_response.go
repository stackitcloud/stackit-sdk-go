/*
Audit Log API

API Endpoints to retrieve recorded actions and resulting changes in the system.  ### Documentation The user documentation with explanations how to use the api can be found  [here](https://docs.stackit.cloud/stackit/en/retrieve-audit-log-per-api-request-134415907.html).  ### Audit Logging Changes on organizations, folders and projects and respective cloud resources are logged and collected in the audit  log.  ### API Constraints The audit log API allows to download messages from the last 90 days. The maximum duration that can be queried at  once is 24 hours. Requests are rate limited - the current maximum is 60 requests per minute.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditlog

import (
	"encoding/json"
)

// checks if the AuditLogEntryServiceAccountDelegationInfoResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuditLogEntryServiceAccountDelegationInfoResponse{}

/*
	types and functions for principals
*/

// isArray
type AuditLogEntryServiceAccountDelegationInfoResponseGetPrincipalsAttributeType = *[]ServiceAccountDelegationInfoPrincipalResponse
type AuditLogEntryServiceAccountDelegationInfoResponseGetPrincipalsArgType = []ServiceAccountDelegationInfoPrincipalResponse
type AuditLogEntryServiceAccountDelegationInfoResponseGetPrincipalsRetType = []ServiceAccountDelegationInfoPrincipalResponse

func getAuditLogEntryServiceAccountDelegationInfoResponseGetPrincipalsAttributeTypeOk(arg AuditLogEntryServiceAccountDelegationInfoResponseGetPrincipalsAttributeType) (ret AuditLogEntryServiceAccountDelegationInfoResponseGetPrincipalsRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setAuditLogEntryServiceAccountDelegationInfoResponseGetPrincipalsAttributeType(arg *AuditLogEntryServiceAccountDelegationInfoResponseGetPrincipalsAttributeType, val AuditLogEntryServiceAccountDelegationInfoResponseGetPrincipalsRetType) {
	*arg = &val
}

// AuditLogEntryServiceAccountDelegationInfoResponse Information about service account delegation
type AuditLogEntryServiceAccountDelegationInfoResponse struct {
	// Delegation chain for the service account
	// REQUIRED
	Principals AuditLogEntryServiceAccountDelegationInfoResponseGetPrincipalsAttributeType `json:"principals" required:"true"`
}

type _AuditLogEntryServiceAccountDelegationInfoResponse AuditLogEntryServiceAccountDelegationInfoResponse

// NewAuditLogEntryServiceAccountDelegationInfoResponse instantiates a new AuditLogEntryServiceAccountDelegationInfoResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuditLogEntryServiceAccountDelegationInfoResponse(principals AuditLogEntryServiceAccountDelegationInfoResponseGetPrincipalsArgType) *AuditLogEntryServiceAccountDelegationInfoResponse {
	this := AuditLogEntryServiceAccountDelegationInfoResponse{}
	setAuditLogEntryServiceAccountDelegationInfoResponseGetPrincipalsAttributeType(&this.Principals, principals)
	return &this
}

// NewAuditLogEntryServiceAccountDelegationInfoResponseWithDefaults instantiates a new AuditLogEntryServiceAccountDelegationInfoResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuditLogEntryServiceAccountDelegationInfoResponseWithDefaults() *AuditLogEntryServiceAccountDelegationInfoResponse {
	this := AuditLogEntryServiceAccountDelegationInfoResponse{}
	return &this
}

// GetPrincipals returns the Principals field value
func (o *AuditLogEntryServiceAccountDelegationInfoResponse) GetPrincipals() (ret AuditLogEntryServiceAccountDelegationInfoResponseGetPrincipalsRetType) {
	ret, _ = o.GetPrincipalsOk()
	return ret
}

// GetPrincipalsOk returns a tuple with the Principals field value
// and a boolean to check if the value has been set.
func (o *AuditLogEntryServiceAccountDelegationInfoResponse) GetPrincipalsOk() (ret AuditLogEntryServiceAccountDelegationInfoResponseGetPrincipalsRetType, ok bool) {
	return getAuditLogEntryServiceAccountDelegationInfoResponseGetPrincipalsAttributeTypeOk(o.Principals)
}

// SetPrincipals sets field value
func (o *AuditLogEntryServiceAccountDelegationInfoResponse) SetPrincipals(v AuditLogEntryServiceAccountDelegationInfoResponseGetPrincipalsRetType) {
	setAuditLogEntryServiceAccountDelegationInfoResponseGetPrincipalsAttributeType(&o.Principals, v)
}

func (o AuditLogEntryServiceAccountDelegationInfoResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getAuditLogEntryServiceAccountDelegationInfoResponseGetPrincipalsAttributeTypeOk(o.Principals); ok {
		toSerialize["Principals"] = val
	}
	return toSerialize, nil
}

type NullableAuditLogEntryServiceAccountDelegationInfoResponse struct {
	value *AuditLogEntryServiceAccountDelegationInfoResponse
	isSet bool
}

func (v NullableAuditLogEntryServiceAccountDelegationInfoResponse) Get() *AuditLogEntryServiceAccountDelegationInfoResponse {
	return v.value
}

func (v *NullableAuditLogEntryServiceAccountDelegationInfoResponse) Set(val *AuditLogEntryServiceAccountDelegationInfoResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAuditLogEntryServiceAccountDelegationInfoResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAuditLogEntryServiceAccountDelegationInfoResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuditLogEntryServiceAccountDelegationInfoResponse(val *AuditLogEntryServiceAccountDelegationInfoResponse) *NullableAuditLogEntryServiceAccountDelegationInfoResponse {
	return &NullableAuditLogEntryServiceAccountDelegationInfoResponse{value: val, isSet: true}
}

func (v NullableAuditLogEntryServiceAccountDelegationInfoResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuditLogEntryServiceAccountDelegationInfoResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
