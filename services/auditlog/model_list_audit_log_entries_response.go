/*
Audit Log API

API Endpoints to retrieve recorded actions and resulting changes in the system.  ### Documentation The user documentation with explanations how to use the api can be found  [here](https://docs.stackit.cloud/stackit/en/retrieve-audit-log-per-api-request-134415907.html).  ### Audit Logging Changes on organizations, folders and projects and respective cloud resources are logged and collected in the audit  log.  ### API Constraints The audit log API allows to download messages from the last 90 days. The maximum duration that can be queried at  once is 24 hours. Requests are rate limited - the current maximum is 60 requests per minute.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditlog

import (
	"encoding/json"
)

// checks if the ListAuditLogEntriesResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListAuditLogEntriesResponse{}

/*
	types and functions for cursor
*/

// isNotNullableString
type ListAuditLogEntriesResponseGetCursorAttributeType = *string

func getListAuditLogEntriesResponseGetCursorAttributeTypeOk(arg ListAuditLogEntriesResponseGetCursorAttributeType) (ret ListAuditLogEntriesResponseGetCursorRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setListAuditLogEntriesResponseGetCursorAttributeType(arg *ListAuditLogEntriesResponseGetCursorAttributeType, val ListAuditLogEntriesResponseGetCursorRetType) {
	*arg = &val
}

type ListAuditLogEntriesResponseGetCursorArgType = string
type ListAuditLogEntriesResponseGetCursorRetType = string

/*
	types and functions for items
*/

// isArray
type ListAuditLogEntriesResponseGetItemsAttributeType = *[]AuditLogEntryResponse
type ListAuditLogEntriesResponseGetItemsArgType = []AuditLogEntryResponse
type ListAuditLogEntriesResponseGetItemsRetType = []AuditLogEntryResponse

func getListAuditLogEntriesResponseGetItemsAttributeTypeOk(arg ListAuditLogEntriesResponseGetItemsAttributeType) (ret ListAuditLogEntriesResponseGetItemsRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setListAuditLogEntriesResponseGetItemsAttributeType(arg *ListAuditLogEntriesResponseGetItemsAttributeType, val ListAuditLogEntriesResponseGetItemsRetType) {
	*arg = &val
}

/*
	types and functions for limit
*/

// isNumber
type ListAuditLogEntriesResponseGetLimitAttributeType = *float64
type ListAuditLogEntriesResponseGetLimitArgType = float64
type ListAuditLogEntriesResponseGetLimitRetType = float64

func getListAuditLogEntriesResponseGetLimitAttributeTypeOk(arg ListAuditLogEntriesResponseGetLimitAttributeType) (ret ListAuditLogEntriesResponseGetLimitRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setListAuditLogEntriesResponseGetLimitAttributeType(arg *ListAuditLogEntriesResponseGetLimitAttributeType, val ListAuditLogEntriesResponseGetLimitRetType) {
	*arg = &val
}

// ListAuditLogEntriesResponse struct for ListAuditLogEntriesResponse
type ListAuditLogEntriesResponse struct {
	// Optional cursor if more entries are available
	Cursor ListAuditLogEntriesResponseGetCursorAttributeType `json:"cursor,omitempty"`
	Items  ListAuditLogEntriesResponseGetItemsAttributeType  `json:"items,omitempty"`
	// Maximum amount of entries requested.
	Limit ListAuditLogEntriesResponseGetLimitAttributeType `json:"limit,omitempty"`
}

// NewListAuditLogEntriesResponse instantiates a new ListAuditLogEntriesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListAuditLogEntriesResponse() *ListAuditLogEntriesResponse {
	this := ListAuditLogEntriesResponse{}
	return &this
}

// NewListAuditLogEntriesResponseWithDefaults instantiates a new ListAuditLogEntriesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListAuditLogEntriesResponseWithDefaults() *ListAuditLogEntriesResponse {
	this := ListAuditLogEntriesResponse{}
	var limit float64 = 50
	this.Limit = &limit
	return &this
}

// GetCursor returns the Cursor field value if set, zero value otherwise.
func (o *ListAuditLogEntriesResponse) GetCursor() (res ListAuditLogEntriesResponseGetCursorRetType) {
	res, _ = o.GetCursorOk()
	return
}

// GetCursorOk returns a tuple with the Cursor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListAuditLogEntriesResponse) GetCursorOk() (ret ListAuditLogEntriesResponseGetCursorRetType, ok bool) {
	return getListAuditLogEntriesResponseGetCursorAttributeTypeOk(o.Cursor)
}

// HasCursor returns a boolean if a field has been set.
func (o *ListAuditLogEntriesResponse) HasCursor() bool {
	_, ok := o.GetCursorOk()
	return ok
}

// SetCursor gets a reference to the given string and assigns it to the Cursor field.
func (o *ListAuditLogEntriesResponse) SetCursor(v ListAuditLogEntriesResponseGetCursorRetType) {
	setListAuditLogEntriesResponseGetCursorAttributeType(&o.Cursor, v)
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *ListAuditLogEntriesResponse) GetItems() (res ListAuditLogEntriesResponseGetItemsRetType) {
	res, _ = o.GetItemsOk()
	return
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListAuditLogEntriesResponse) GetItemsOk() (ret ListAuditLogEntriesResponseGetItemsRetType, ok bool) {
	return getListAuditLogEntriesResponseGetItemsAttributeTypeOk(o.Items)
}

// HasItems returns a boolean if a field has been set.
func (o *ListAuditLogEntriesResponse) HasItems() bool {
	_, ok := o.GetItemsOk()
	return ok
}

// SetItems gets a reference to the given []AuditLogEntryResponse and assigns it to the Items field.
func (o *ListAuditLogEntriesResponse) SetItems(v ListAuditLogEntriesResponseGetItemsRetType) {
	setListAuditLogEntriesResponseGetItemsAttributeType(&o.Items, v)
}

// GetLimit returns the Limit field value if set, zero value otherwise.
func (o *ListAuditLogEntriesResponse) GetLimit() (res ListAuditLogEntriesResponseGetLimitRetType) {
	res, _ = o.GetLimitOk()
	return
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListAuditLogEntriesResponse) GetLimitOk() (ret ListAuditLogEntriesResponseGetLimitRetType, ok bool) {
	return getListAuditLogEntriesResponseGetLimitAttributeTypeOk(o.Limit)
}

// HasLimit returns a boolean if a field has been set.
func (o *ListAuditLogEntriesResponse) HasLimit() bool {
	_, ok := o.GetLimitOk()
	return ok
}

// SetLimit gets a reference to the given float64 and assigns it to the Limit field.
func (o *ListAuditLogEntriesResponse) SetLimit(v ListAuditLogEntriesResponseGetLimitRetType) {
	setListAuditLogEntriesResponseGetLimitAttributeType(&o.Limit, v)
}

func (o ListAuditLogEntriesResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getListAuditLogEntriesResponseGetCursorAttributeTypeOk(o.Cursor); ok {
		toSerialize["Cursor"] = val
	}
	if val, ok := getListAuditLogEntriesResponseGetItemsAttributeTypeOk(o.Items); ok {
		toSerialize["Items"] = val
	}
	if val, ok := getListAuditLogEntriesResponseGetLimitAttributeTypeOk(o.Limit); ok {
		toSerialize["Limit"] = val
	}
	return toSerialize, nil
}

type NullableListAuditLogEntriesResponse struct {
	value *ListAuditLogEntriesResponse
	isSet bool
}

func (v NullableListAuditLogEntriesResponse) Get() *ListAuditLogEntriesResponse {
	return v.value
}

func (v *NullableListAuditLogEntriesResponse) Set(val *ListAuditLogEntriesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListAuditLogEntriesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListAuditLogEntriesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListAuditLogEntriesResponse(val *ListAuditLogEntriesResponse) *NullableListAuditLogEntriesResponse {
	return &NullableListAuditLogEntriesResponse{value: val, isSet: true}
}

func (v NullableListAuditLogEntriesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListAuditLogEntriesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
