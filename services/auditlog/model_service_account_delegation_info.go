/*
Audit Log API

API Endpoints to retrieve recorded actions and resulting changes in the system.  ### Audit Logging Changes on organizations, folders and projects and respective cloud resources are logged and collected in the audit  log.  ### API Constraints The audit log API allows to download messages from the last 90 days. The maximum duration that can be queried at  once is 24 hours. Requests are rate limited - the current maximum is 1 request per second.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditlog

import (
	"encoding/json"
)

// checks if the ServiceAccountDelegationInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceAccountDelegationInfo{}

/*
	types and functions for principals
*/

// isArray
type ServiceAccountDelegationInfoGetPrincipalsAttributeType = *[]DelegationPrincipal
type ServiceAccountDelegationInfoGetPrincipalsArgType = []DelegationPrincipal
type ServiceAccountDelegationInfoGetPrincipalsRetType = []DelegationPrincipal

func getServiceAccountDelegationInfoGetPrincipalsAttributeTypeOk(arg ServiceAccountDelegationInfoGetPrincipalsAttributeType) (ret ServiceAccountDelegationInfoGetPrincipalsRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setServiceAccountDelegationInfoGetPrincipalsAttributeType(arg *ServiceAccountDelegationInfoGetPrincipalsAttributeType, val ServiceAccountDelegationInfoGetPrincipalsRetType) {
	*arg = &val
}

// ServiceAccountDelegationInfo Information about service account delegation
type ServiceAccountDelegationInfo struct {
	// Delegation chain for the service account
	// REQUIRED
	Principals ServiceAccountDelegationInfoGetPrincipalsAttributeType `json:"principals"`
}

type _ServiceAccountDelegationInfo ServiceAccountDelegationInfo

// NewServiceAccountDelegationInfo instantiates a new ServiceAccountDelegationInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceAccountDelegationInfo(principals ServiceAccountDelegationInfoGetPrincipalsArgType) *ServiceAccountDelegationInfo {
	this := ServiceAccountDelegationInfo{}
	setServiceAccountDelegationInfoGetPrincipalsAttributeType(&this.Principals, principals)
	return &this
}

// NewServiceAccountDelegationInfoWithDefaults instantiates a new ServiceAccountDelegationInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceAccountDelegationInfoWithDefaults() *ServiceAccountDelegationInfo {
	this := ServiceAccountDelegationInfo{}
	return &this
}

// GetPrincipals returns the Principals field value
func (o *ServiceAccountDelegationInfo) GetPrincipals() (ret ServiceAccountDelegationInfoGetPrincipalsRetType) {
	ret, _ = o.GetPrincipalsOk()
	return ret
}

// GetPrincipalsOk returns a tuple with the Principals field value
// and a boolean to check if the value has been set.
func (o *ServiceAccountDelegationInfo) GetPrincipalsOk() (ret ServiceAccountDelegationInfoGetPrincipalsRetType, ok bool) {
	return getServiceAccountDelegationInfoGetPrincipalsAttributeTypeOk(o.Principals)
}

// SetPrincipals sets field value
func (o *ServiceAccountDelegationInfo) SetPrincipals(v ServiceAccountDelegationInfoGetPrincipalsRetType) {
	setServiceAccountDelegationInfoGetPrincipalsAttributeType(&o.Principals, v)
}

func (o ServiceAccountDelegationInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getServiceAccountDelegationInfoGetPrincipalsAttributeTypeOk(o.Principals); ok {
		toSerialize["Principals"] = val
	}
	return toSerialize, nil
}

type NullableServiceAccountDelegationInfo struct {
	value *ServiceAccountDelegationInfo
	isSet bool
}

func (v NullableServiceAccountDelegationInfo) Get() *ServiceAccountDelegationInfo {
	return v.value
}

func (v *NullableServiceAccountDelegationInfo) Set(val *ServiceAccountDelegationInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceAccountDelegationInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceAccountDelegationInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceAccountDelegationInfo(val *ServiceAccountDelegationInfo) *NullableServiceAccountDelegationInfo {
	return &NullableServiceAccountDelegationInfo{value: val, isSet: true}
}

func (v NullableServiceAccountDelegationInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceAccountDelegationInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
