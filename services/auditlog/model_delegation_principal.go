/*
Audit Log API

API Endpoints to retrieve recorded actions and resulting changes in the system.  ### Documentation The user documentation with explanations how to use the api can be found  [here](https://docs.stackit.cloud/stackit/en/retrieve-audit-log-per-api-request-134415907.html).  ### Audit Logging Changes on organizations, folders and projects and respective cloud resources are logged and collected in the audit  log.  ### API Constraints The audit log API allows to download messages from the last 90 days. The maximum duration that can be queried at  once is 24 hours. Requests are rate limited - the current maximum is 60 requests per minute.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditlog

import (
	"encoding/json"
)

// checks if the DelegationPrincipal type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DelegationPrincipal{}

/*
	types and functions for email
*/

// isNotNullableString
type DelegationPrincipalGetEmailAttributeType = *string

func getDelegationPrincipalGetEmailAttributeTypeOk(arg DelegationPrincipalGetEmailAttributeType) (ret DelegationPrincipalGetEmailRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setDelegationPrincipalGetEmailAttributeType(arg *DelegationPrincipalGetEmailAttributeType, val DelegationPrincipalGetEmailRetType) {
	*arg = &val
}

type DelegationPrincipalGetEmailArgType = string
type DelegationPrincipalGetEmailRetType = string

/*
	types and functions for id
*/

// isNotNullableString
type DelegationPrincipalGetIdAttributeType = *string

func getDelegationPrincipalGetIdAttributeTypeOk(arg DelegationPrincipalGetIdAttributeType) (ret DelegationPrincipalGetIdRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setDelegationPrincipalGetIdAttributeType(arg *DelegationPrincipalGetIdAttributeType, val DelegationPrincipalGetIdRetType) {
	*arg = &val
}

type DelegationPrincipalGetIdArgType = string
type DelegationPrincipalGetIdRetType = string

// DelegationPrincipal Principal in delegation chain of a service account
type DelegationPrincipal struct {
	// E-Mail of the subject
	Email DelegationPrincipalGetEmailAttributeType `json:"email,omitempty"`
	// Unique identifier of the subject
	// REQUIRED
	Id DelegationPrincipalGetIdAttributeType `json:"id" required:"true"`
}

type _DelegationPrincipal DelegationPrincipal

// NewDelegationPrincipal instantiates a new DelegationPrincipal object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDelegationPrincipal(id DelegationPrincipalGetIdArgType) *DelegationPrincipal {
	this := DelegationPrincipal{}
	setDelegationPrincipalGetIdAttributeType(&this.Id, id)
	return &this
}

// NewDelegationPrincipalWithDefaults instantiates a new DelegationPrincipal object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDelegationPrincipalWithDefaults() *DelegationPrincipal {
	this := DelegationPrincipal{}
	return &this
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *DelegationPrincipal) GetEmail() (res DelegationPrincipalGetEmailRetType) {
	res, _ = o.GetEmailOk()
	return
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DelegationPrincipal) GetEmailOk() (ret DelegationPrincipalGetEmailRetType, ok bool) {
	return getDelegationPrincipalGetEmailAttributeTypeOk(o.Email)
}

// HasEmail returns a boolean if a field has been set.
func (o *DelegationPrincipal) HasEmail() bool {
	_, ok := o.GetEmailOk()
	return ok
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *DelegationPrincipal) SetEmail(v DelegationPrincipalGetEmailRetType) {
	setDelegationPrincipalGetEmailAttributeType(&o.Email, v)
}

// GetId returns the Id field value
func (o *DelegationPrincipal) GetId() (ret DelegationPrincipalGetIdRetType) {
	ret, _ = o.GetIdOk()
	return ret
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *DelegationPrincipal) GetIdOk() (ret DelegationPrincipalGetIdRetType, ok bool) {
	return getDelegationPrincipalGetIdAttributeTypeOk(o.Id)
}

// SetId sets field value
func (o *DelegationPrincipal) SetId(v DelegationPrincipalGetIdRetType) {
	setDelegationPrincipalGetIdAttributeType(&o.Id, v)
}

func (o DelegationPrincipal) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getDelegationPrincipalGetEmailAttributeTypeOk(o.Email); ok {
		toSerialize["Email"] = val
	}
	if val, ok := getDelegationPrincipalGetIdAttributeTypeOk(o.Id); ok {
		toSerialize["Id"] = val
	}
	return toSerialize, nil
}

type NullableDelegationPrincipal struct {
	value *DelegationPrincipal
	isSet bool
}

func (v NullableDelegationPrincipal) Get() *DelegationPrincipal {
	return v.value
}

func (v *NullableDelegationPrincipal) Set(val *DelegationPrincipal) {
	v.value = val
	v.isSet = true
}

func (v NullableDelegationPrincipal) IsSet() bool {
	return v.isSet
}

func (v *NullableDelegationPrincipal) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDelegationPrincipal(val *DelegationPrincipal) *NullableDelegationPrincipal {
	return &NullableDelegationPrincipal{value: val, isSet: true}
}

func (v NullableDelegationPrincipal) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDelegationPrincipal) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
