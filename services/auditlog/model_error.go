/*
Audit Log API

API Endpoints to retrieve recorded actions and resulting changes in the system.  ### Audit Logging Changes on organizations, folders and projects and respective cloud resources are logged and collected in the audit  log.  ### API Constraints The audit log API allows to download messages from the last 90 days. The maximum duration that can be queried at  once is 24 hours. Requests are rate limited - the current maximum is 1 request per second.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditlog

import (
	"encoding/json"
	"time"
)

// checks if the ModelError type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelError{}

/*
	types and functions for message
*/

// isNotNullableString
type ModelErrorGetMessageAttributeType = *string

func getModelErrorGetMessageAttributeTypeOk(arg ModelErrorGetMessageAttributeType) (ret ModelErrorGetMessageRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setModelErrorGetMessageAttributeType(arg *ModelErrorGetMessageAttributeType, val ModelErrorGetMessageRetType) {
	*arg = &val
}

type ModelErrorGetMessageArgType = string
type ModelErrorGetMessageRetType = string

/*
	types and functions for path
*/

// isNotNullableString
type ModelErrorGetPathAttributeType = *string

func getModelErrorGetPathAttributeTypeOk(arg ModelErrorGetPathAttributeType) (ret ModelErrorGetPathRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setModelErrorGetPathAttributeType(arg *ModelErrorGetPathAttributeType, val ModelErrorGetPathRetType) {
	*arg = &val
}

type ModelErrorGetPathArgType = string
type ModelErrorGetPathRetType = string

/*
	types and functions for status
*/

// isNotNullableString
type ModelErrorGetStatusAttributeType = *string

func getModelErrorGetStatusAttributeTypeOk(arg ModelErrorGetStatusAttributeType) (ret ModelErrorGetStatusRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setModelErrorGetStatusAttributeType(arg *ModelErrorGetStatusAttributeType, val ModelErrorGetStatusRetType) {
	*arg = &val
}

type ModelErrorGetStatusArgType = string
type ModelErrorGetStatusRetType = string

/*
	types and functions for timestamp
*/

// isDateTime
type ModelErrorGetTimestampAttributeType = *time.Time
type ModelErrorGetTimestampArgType = time.Time
type ModelErrorGetTimestampRetType = time.Time

func getModelErrorGetTimestampAttributeTypeOk(arg ModelErrorGetTimestampAttributeType) (ret ModelErrorGetTimestampRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setModelErrorGetTimestampAttributeType(arg *ModelErrorGetTimestampAttributeType, val ModelErrorGetTimestampRetType) {
	*arg = &val
}

// ModelError struct for ModelError
type ModelError struct {
	// Message describing the error that occured
	Message ModelErrorGetMessageAttributeType `json:"message,omitempty"`
	// Path that was called and where the error occurred
	Path ModelErrorGetPathAttributeType `json:"path,omitempty"`
	// Status Code in which the call resulted
	Status ModelErrorGetStatusAttributeType `json:"status,omitempty"`
	// Timestamp at which the error occurred
	Timestamp ModelErrorGetTimestampAttributeType `json:"timestamp,omitempty"`
}

// NewModelError instantiates a new ModelError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelError() *ModelError {
	this := ModelError{}
	return &this
}

// NewModelErrorWithDefaults instantiates a new ModelError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelErrorWithDefaults() *ModelError {
	this := ModelError{}
	return &this
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *ModelError) GetMessage() (res ModelErrorGetMessageRetType) {
	res, _ = o.GetMessageOk()
	return
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelError) GetMessageOk() (ret ModelErrorGetMessageRetType, ok bool) {
	return getModelErrorGetMessageAttributeTypeOk(o.Message)
}

// HasMessage returns a boolean if a field has been set.
func (o *ModelError) HasMessage() bool {
	_, ok := o.GetMessageOk()
	return ok
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *ModelError) SetMessage(v ModelErrorGetMessageRetType) {
	setModelErrorGetMessageAttributeType(&o.Message, v)
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *ModelError) GetPath() (res ModelErrorGetPathRetType) {
	res, _ = o.GetPathOk()
	return
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelError) GetPathOk() (ret ModelErrorGetPathRetType, ok bool) {
	return getModelErrorGetPathAttributeTypeOk(o.Path)
}

// HasPath returns a boolean if a field has been set.
func (o *ModelError) HasPath() bool {
	_, ok := o.GetPathOk()
	return ok
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *ModelError) SetPath(v ModelErrorGetPathRetType) {
	setModelErrorGetPathAttributeType(&o.Path, v)
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ModelError) GetStatus() (res ModelErrorGetStatusRetType) {
	res, _ = o.GetStatusOk()
	return
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelError) GetStatusOk() (ret ModelErrorGetStatusRetType, ok bool) {
	return getModelErrorGetStatusAttributeTypeOk(o.Status)
}

// HasStatus returns a boolean if a field has been set.
func (o *ModelError) HasStatus() bool {
	_, ok := o.GetStatusOk()
	return ok
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ModelError) SetStatus(v ModelErrorGetStatusRetType) {
	setModelErrorGetStatusAttributeType(&o.Status, v)
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *ModelError) GetTimestamp() (res ModelErrorGetTimestampRetType) {
	res, _ = o.GetTimestampOk()
	return
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelError) GetTimestampOk() (ret ModelErrorGetTimestampRetType, ok bool) {
	return getModelErrorGetTimestampAttributeTypeOk(o.Timestamp)
}

// HasTimestamp returns a boolean if a field has been set.
func (o *ModelError) HasTimestamp() bool {
	_, ok := o.GetTimestampOk()
	return ok
}

// SetTimestamp gets a reference to the given time.Time and assigns it to the Timestamp field.
func (o *ModelError) SetTimestamp(v ModelErrorGetTimestampRetType) {
	setModelErrorGetTimestampAttributeType(&o.Timestamp, v)
}

func (o ModelError) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getModelErrorGetMessageAttributeTypeOk(o.Message); ok {
		toSerialize["Message"] = val
	}
	if val, ok := getModelErrorGetPathAttributeTypeOk(o.Path); ok {
		toSerialize["Path"] = val
	}
	if val, ok := getModelErrorGetStatusAttributeTypeOk(o.Status); ok {
		toSerialize["Status"] = val
	}
	if val, ok := getModelErrorGetTimestampAttributeTypeOk(o.Timestamp); ok {
		toSerialize["Timestamp"] = val
	}
	return toSerialize, nil
}

type NullableModelError struct {
	value *ModelError
	isSet bool
}

func (v NullableModelError) Get() *ModelError {
	return v.value
}

func (v *NullableModelError) Set(val *ModelError) {
	v.value = val
	v.isSet = true
}

func (v NullableModelError) IsSet() bool {
	return v.isSet
}

func (v *NullableModelError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelError(val *ModelError) *NullableModelError {
	return &NullableModelError{value: val, isSet: true}
}

func (v NullableModelError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
