/*
Audit Log API

API Endpoints to retrieve recorded actions and resulting changes in the system.  ### Documentation The user documentation with explanations how to use the api can be found  [here](https://docs.stackit.cloud/stackit/en/retrieve-audit-log-per-api-request-134415907.html).  ### Audit Logging Changes on organizations, folders and projects and respective cloud resources are logged and collected in the audit  log.  ### API Constraints The audit log API allows to download messages from the last 90 days. The maximum duration that can be queried at  once is 24 hours. Requests are rate limited - the current maximum is 60 requests per minute.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditlog

import (
	"encoding/json"
)

// checks if the AuditLogEntryContextResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuditLogEntryContextResponse{}

/*
	types and functions for folderId
*/

// isNotNullableString
type AuditLogEntryContextResponseGetFolderIdAttributeType = *string

func getAuditLogEntryContextResponseGetFolderIdAttributeTypeOk(arg AuditLogEntryContextResponseGetFolderIdAttributeType) (ret AuditLogEntryContextResponseGetFolderIdRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setAuditLogEntryContextResponseGetFolderIdAttributeType(arg *AuditLogEntryContextResponseGetFolderIdAttributeType, val AuditLogEntryContextResponseGetFolderIdRetType) {
	*arg = &val
}

type AuditLogEntryContextResponseGetFolderIdArgType = string
type AuditLogEntryContextResponseGetFolderIdRetType = string

/*
	types and functions for organizationId
*/

// isNotNullableString
type AuditLogEntryContextResponseGetOrganizationIdAttributeType = *string

func getAuditLogEntryContextResponseGetOrganizationIdAttributeTypeOk(arg AuditLogEntryContextResponseGetOrganizationIdAttributeType) (ret AuditLogEntryContextResponseGetOrganizationIdRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setAuditLogEntryContextResponseGetOrganizationIdAttributeType(arg *AuditLogEntryContextResponseGetOrganizationIdAttributeType, val AuditLogEntryContextResponseGetOrganizationIdRetType) {
	*arg = &val
}

type AuditLogEntryContextResponseGetOrganizationIdArgType = string
type AuditLogEntryContextResponseGetOrganizationIdRetType = string

/*
	types and functions for projectId
*/

// isNotNullableString
type AuditLogEntryContextResponseGetProjectIdAttributeType = *string

func getAuditLogEntryContextResponseGetProjectIdAttributeTypeOk(arg AuditLogEntryContextResponseGetProjectIdAttributeType) (ret AuditLogEntryContextResponseGetProjectIdRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setAuditLogEntryContextResponseGetProjectIdAttributeType(arg *AuditLogEntryContextResponseGetProjectIdAttributeType, val AuditLogEntryContextResponseGetProjectIdRetType) {
	*arg = &val
}

type AuditLogEntryContextResponseGetProjectIdArgType = string
type AuditLogEntryContextResponseGetProjectIdRetType = string

// AuditLogEntryContextResponse Request context
type AuditLogEntryContextResponse struct {
	// Folder id
	FolderId AuditLogEntryContextResponseGetFolderIdAttributeType `json:"folderId,omitempty"`
	// Organization id
	OrganizationId AuditLogEntryContextResponseGetOrganizationIdAttributeType `json:"organizationId,omitempty"`
	// Project id
	ProjectId AuditLogEntryContextResponseGetProjectIdAttributeType `json:"projectId,omitempty"`
}

// NewAuditLogEntryContextResponse instantiates a new AuditLogEntryContextResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuditLogEntryContextResponse() *AuditLogEntryContextResponse {
	this := AuditLogEntryContextResponse{}
	return &this
}

// NewAuditLogEntryContextResponseWithDefaults instantiates a new AuditLogEntryContextResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuditLogEntryContextResponseWithDefaults() *AuditLogEntryContextResponse {
	this := AuditLogEntryContextResponse{}
	return &this
}

// GetFolderId returns the FolderId field value if set, zero value otherwise.
func (o *AuditLogEntryContextResponse) GetFolderId() (res AuditLogEntryContextResponseGetFolderIdRetType) {
	res, _ = o.GetFolderIdOk()
	return
}

// GetFolderIdOk returns a tuple with the FolderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditLogEntryContextResponse) GetFolderIdOk() (ret AuditLogEntryContextResponseGetFolderIdRetType, ok bool) {
	return getAuditLogEntryContextResponseGetFolderIdAttributeTypeOk(o.FolderId)
}

// HasFolderId returns a boolean if a field has been set.
func (o *AuditLogEntryContextResponse) HasFolderId() bool {
	_, ok := o.GetFolderIdOk()
	return ok
}

// SetFolderId gets a reference to the given string and assigns it to the FolderId field.
func (o *AuditLogEntryContextResponse) SetFolderId(v AuditLogEntryContextResponseGetFolderIdRetType) {
	setAuditLogEntryContextResponseGetFolderIdAttributeType(&o.FolderId, v)
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *AuditLogEntryContextResponse) GetOrganizationId() (res AuditLogEntryContextResponseGetOrganizationIdRetType) {
	res, _ = o.GetOrganizationIdOk()
	return
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditLogEntryContextResponse) GetOrganizationIdOk() (ret AuditLogEntryContextResponseGetOrganizationIdRetType, ok bool) {
	return getAuditLogEntryContextResponseGetOrganizationIdAttributeTypeOk(o.OrganizationId)
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *AuditLogEntryContextResponse) HasOrganizationId() bool {
	_, ok := o.GetOrganizationIdOk()
	return ok
}

// SetOrganizationId gets a reference to the given string and assigns it to the OrganizationId field.
func (o *AuditLogEntryContextResponse) SetOrganizationId(v AuditLogEntryContextResponseGetOrganizationIdRetType) {
	setAuditLogEntryContextResponseGetOrganizationIdAttributeType(&o.OrganizationId, v)
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *AuditLogEntryContextResponse) GetProjectId() (res AuditLogEntryContextResponseGetProjectIdRetType) {
	res, _ = o.GetProjectIdOk()
	return
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditLogEntryContextResponse) GetProjectIdOk() (ret AuditLogEntryContextResponseGetProjectIdRetType, ok bool) {
	return getAuditLogEntryContextResponseGetProjectIdAttributeTypeOk(o.ProjectId)
}

// HasProjectId returns a boolean if a field has been set.
func (o *AuditLogEntryContextResponse) HasProjectId() bool {
	_, ok := o.GetProjectIdOk()
	return ok
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *AuditLogEntryContextResponse) SetProjectId(v AuditLogEntryContextResponseGetProjectIdRetType) {
	setAuditLogEntryContextResponseGetProjectIdAttributeType(&o.ProjectId, v)
}

func (o AuditLogEntryContextResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getAuditLogEntryContextResponseGetFolderIdAttributeTypeOk(o.FolderId); ok {
		toSerialize["FolderId"] = val
	}
	if val, ok := getAuditLogEntryContextResponseGetOrganizationIdAttributeTypeOk(o.OrganizationId); ok {
		toSerialize["OrganizationId"] = val
	}
	if val, ok := getAuditLogEntryContextResponseGetProjectIdAttributeTypeOk(o.ProjectId); ok {
		toSerialize["ProjectId"] = val
	}
	return toSerialize, nil
}

type NullableAuditLogEntryContextResponse struct {
	value *AuditLogEntryContextResponse
	isSet bool
}

func (v NullableAuditLogEntryContextResponse) Get() *AuditLogEntryContextResponse {
	return v.value
}

func (v *NullableAuditLogEntryContextResponse) Set(val *AuditLogEntryContextResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAuditLogEntryContextResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAuditLogEntryContextResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuditLogEntryContextResponse(val *AuditLogEntryContextResponse) *NullableAuditLogEntryContextResponse {
	return &NullableAuditLogEntryContextResponse{value: val, isSet: true}
}

func (v NullableAuditLogEntryContextResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuditLogEntryContextResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
