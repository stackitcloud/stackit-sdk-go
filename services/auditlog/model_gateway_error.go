/*
Audit Log API

API Endpoints to retrieve recorded actions and resulting changes in the system.  ### Documentation The user documentation with explanations how to use the api can be found  [here](https://docs.stackit.cloud/stackit/en/retrieve-audit-log-per-api-request-134415907.html).  ### Audit Logging Changes on organizations, folders and projects and respective cloud resources are logged and collected in the audit  log.  ### API Constraints The audit log API allows to download messages from the last 90 days. The maximum duration that can be queried at  once is 24 hours. Requests are rate limited - the current maximum is 60 requests per minute.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditlog

import (
	"encoding/json"
)

// checks if the GatewayError type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GatewayError{}

/*
	types and functions for message
*/

// isNotNullableString
type GatewayErrorGetMessageAttributeType = *string

func getGatewayErrorGetMessageAttributeTypeOk(arg GatewayErrorGetMessageAttributeType) (ret GatewayErrorGetMessageRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setGatewayErrorGetMessageAttributeType(arg *GatewayErrorGetMessageAttributeType, val GatewayErrorGetMessageRetType) {
	*arg = &val
}

type GatewayErrorGetMessageArgType = string
type GatewayErrorGetMessageRetType = string

/*
	types and functions for status
*/

// isNumber
type GatewayErrorGetStatusAttributeType = *float64
type GatewayErrorGetStatusArgType = float64
type GatewayErrorGetStatusRetType = float64

func getGatewayErrorGetStatusAttributeTypeOk(arg GatewayErrorGetStatusAttributeType) (ret GatewayErrorGetStatusRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setGatewayErrorGetStatusAttributeType(arg *GatewayErrorGetStatusAttributeType, val GatewayErrorGetStatusRetType) {
	*arg = &val
}

// GatewayError struct for GatewayError
type GatewayError struct {
	// Description of the error.
	Message GatewayErrorGetMessageAttributeType `json:"message,omitempty"`
	// Http status code.
	Status GatewayErrorGetStatusAttributeType `json:"status,omitempty"`
}

// NewGatewayError instantiates a new GatewayError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGatewayError() *GatewayError {
	this := GatewayError{}
	return &this
}

// NewGatewayErrorWithDefaults instantiates a new GatewayError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGatewayErrorWithDefaults() *GatewayError {
	this := GatewayError{}
	return &this
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *GatewayError) GetMessage() (res GatewayErrorGetMessageRetType) {
	res, _ = o.GetMessageOk()
	return
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayError) GetMessageOk() (ret GatewayErrorGetMessageRetType, ok bool) {
	return getGatewayErrorGetMessageAttributeTypeOk(o.Message)
}

// HasMessage returns a boolean if a field has been set.
func (o *GatewayError) HasMessage() bool {
	_, ok := o.GetMessageOk()
	return ok
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *GatewayError) SetMessage(v GatewayErrorGetMessageRetType) {
	setGatewayErrorGetMessageAttributeType(&o.Message, v)
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *GatewayError) GetStatus() (res GatewayErrorGetStatusRetType) {
	res, _ = o.GetStatusOk()
	return
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayError) GetStatusOk() (ret GatewayErrorGetStatusRetType, ok bool) {
	return getGatewayErrorGetStatusAttributeTypeOk(o.Status)
}

// HasStatus returns a boolean if a field has been set.
func (o *GatewayError) HasStatus() bool {
	_, ok := o.GetStatusOk()
	return ok
}

// SetStatus gets a reference to the given float64 and assigns it to the Status field.
func (o *GatewayError) SetStatus(v GatewayErrorGetStatusRetType) {
	setGatewayErrorGetStatusAttributeType(&o.Status, v)
}

func (o GatewayError) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getGatewayErrorGetMessageAttributeTypeOk(o.Message); ok {
		toSerialize["Message"] = val
	}
	if val, ok := getGatewayErrorGetStatusAttributeTypeOk(o.Status); ok {
		toSerialize["Status"] = val
	}
	return toSerialize, nil
}

type NullableGatewayError struct {
	value *GatewayError
	isSet bool
}

func (v NullableGatewayError) Get() *GatewayError {
	return v.value
}

func (v *NullableGatewayError) Set(val *GatewayError) {
	v.value = val
	v.isSet = true
}

func (v NullableGatewayError) IsSet() bool {
	return v.isSet
}

func (v *NullableGatewayError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGatewayError(val *GatewayError) *NullableGatewayError {
	return &NullableGatewayError{value: val, isSet: true}
}

func (v NullableGatewayError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGatewayError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
