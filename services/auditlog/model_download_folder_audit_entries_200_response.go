/*
Audit Log API

API Endpoints to retrieve recorded actions and resulting changes in the system.  ### Documentation The user documentation with explanations how to use the api can be found  [here](https://docs.stackit.cloud/stackit/en/retrieve-audit-log-per-api-request-134415907.html).  ### Audit Logging Changes on organizations, folders and projects and respective cloud resources are logged and collected in the audit  log.  ### API Constraints The audit log API allows to download messages from the last 90 days. The maximum duration that can be queried at  once is 24 hours. Requests are rate limited - the current maximum is 60 requests per minute.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditlog

import (
	"encoding/json"
)

// checks if the DownloadFolderAuditEntries200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DownloadFolderAuditEntries200Response{}

/*
	types and functions for cursor
*/

// isNotNullableString
type DownloadFolderAuditEntries200ResponseGetCursorAttributeType = *string

func getDownloadFolderAuditEntries200ResponseGetCursorAttributeTypeOk(arg DownloadFolderAuditEntries200ResponseGetCursorAttributeType) (ret DownloadFolderAuditEntries200ResponseGetCursorRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setDownloadFolderAuditEntries200ResponseGetCursorAttributeType(arg *DownloadFolderAuditEntries200ResponseGetCursorAttributeType, val DownloadFolderAuditEntries200ResponseGetCursorRetType) {
	*arg = &val
}

type DownloadFolderAuditEntries200ResponseGetCursorArgType = string
type DownloadFolderAuditEntries200ResponseGetCursorRetType = string

/*
	types and functions for items
*/

// isArray
type DownloadFolderAuditEntries200ResponseGetItemsAttributeType = *[]AuditLogEntry
type DownloadFolderAuditEntries200ResponseGetItemsArgType = []AuditLogEntry
type DownloadFolderAuditEntries200ResponseGetItemsRetType = []AuditLogEntry

func getDownloadFolderAuditEntries200ResponseGetItemsAttributeTypeOk(arg DownloadFolderAuditEntries200ResponseGetItemsAttributeType) (ret DownloadFolderAuditEntries200ResponseGetItemsRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setDownloadFolderAuditEntries200ResponseGetItemsAttributeType(arg *DownloadFolderAuditEntries200ResponseGetItemsAttributeType, val DownloadFolderAuditEntries200ResponseGetItemsRetType) {
	*arg = &val
}

/*
	types and functions for limit
*/

// isNumber
type DownloadFolderAuditEntries200ResponseGetLimitAttributeType = *float64
type DownloadFolderAuditEntries200ResponseGetLimitArgType = float64
type DownloadFolderAuditEntries200ResponseGetLimitRetType = float64

func getDownloadFolderAuditEntries200ResponseGetLimitAttributeTypeOk(arg DownloadFolderAuditEntries200ResponseGetLimitAttributeType) (ret DownloadFolderAuditEntries200ResponseGetLimitRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setDownloadFolderAuditEntries200ResponseGetLimitAttributeType(arg *DownloadFolderAuditEntries200ResponseGetLimitAttributeType, val DownloadFolderAuditEntries200ResponseGetLimitRetType) {
	*arg = &val
}

// DownloadFolderAuditEntries200Response struct for DownloadFolderAuditEntries200Response
type DownloadFolderAuditEntries200Response struct {
	// Optional cursor if more entries are available
	Cursor DownloadFolderAuditEntries200ResponseGetCursorAttributeType `json:"cursor,omitempty"`
	Items  DownloadFolderAuditEntries200ResponseGetItemsAttributeType  `json:"items,omitempty"`
	// Maximum amount of entries requested.
	Limit DownloadFolderAuditEntries200ResponseGetLimitAttributeType `json:"limit,omitempty"`
}

// NewDownloadFolderAuditEntries200Response instantiates a new DownloadFolderAuditEntries200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDownloadFolderAuditEntries200Response() *DownloadFolderAuditEntries200Response {
	this := DownloadFolderAuditEntries200Response{}
	return &this
}

// NewDownloadFolderAuditEntries200ResponseWithDefaults instantiates a new DownloadFolderAuditEntries200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDownloadFolderAuditEntries200ResponseWithDefaults() *DownloadFolderAuditEntries200Response {
	this := DownloadFolderAuditEntries200Response{}
	var limit float64 = 50
	this.Limit = &limit
	return &this
}

// GetCursor returns the Cursor field value if set, zero value otherwise.
func (o *DownloadFolderAuditEntries200Response) GetCursor() (res DownloadFolderAuditEntries200ResponseGetCursorRetType) {
	res, _ = o.GetCursorOk()
	return
}

// GetCursorOk returns a tuple with the Cursor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DownloadFolderAuditEntries200Response) GetCursorOk() (ret DownloadFolderAuditEntries200ResponseGetCursorRetType, ok bool) {
	return getDownloadFolderAuditEntries200ResponseGetCursorAttributeTypeOk(o.Cursor)
}

// HasCursor returns a boolean if a field has been set.
func (o *DownloadFolderAuditEntries200Response) HasCursor() bool {
	_, ok := o.GetCursorOk()
	return ok
}

// SetCursor gets a reference to the given string and assigns it to the Cursor field.
func (o *DownloadFolderAuditEntries200Response) SetCursor(v DownloadFolderAuditEntries200ResponseGetCursorRetType) {
	setDownloadFolderAuditEntries200ResponseGetCursorAttributeType(&o.Cursor, v)
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *DownloadFolderAuditEntries200Response) GetItems() (res DownloadFolderAuditEntries200ResponseGetItemsRetType) {
	res, _ = o.GetItemsOk()
	return
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DownloadFolderAuditEntries200Response) GetItemsOk() (ret DownloadFolderAuditEntries200ResponseGetItemsRetType, ok bool) {
	return getDownloadFolderAuditEntries200ResponseGetItemsAttributeTypeOk(o.Items)
}

// HasItems returns a boolean if a field has been set.
func (o *DownloadFolderAuditEntries200Response) HasItems() bool {
	_, ok := o.GetItemsOk()
	return ok
}

// SetItems gets a reference to the given []AuditLogEntry and assigns it to the Items field.
func (o *DownloadFolderAuditEntries200Response) SetItems(v DownloadFolderAuditEntries200ResponseGetItemsRetType) {
	setDownloadFolderAuditEntries200ResponseGetItemsAttributeType(&o.Items, v)
}

// GetLimit returns the Limit field value if set, zero value otherwise.
func (o *DownloadFolderAuditEntries200Response) GetLimit() (res DownloadFolderAuditEntries200ResponseGetLimitRetType) {
	res, _ = o.GetLimitOk()
	return
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DownloadFolderAuditEntries200Response) GetLimitOk() (ret DownloadFolderAuditEntries200ResponseGetLimitRetType, ok bool) {
	return getDownloadFolderAuditEntries200ResponseGetLimitAttributeTypeOk(o.Limit)
}

// HasLimit returns a boolean if a field has been set.
func (o *DownloadFolderAuditEntries200Response) HasLimit() bool {
	_, ok := o.GetLimitOk()
	return ok
}

// SetLimit gets a reference to the given float64 and assigns it to the Limit field.
func (o *DownloadFolderAuditEntries200Response) SetLimit(v DownloadFolderAuditEntries200ResponseGetLimitRetType) {
	setDownloadFolderAuditEntries200ResponseGetLimitAttributeType(&o.Limit, v)
}

func (o DownloadFolderAuditEntries200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getDownloadFolderAuditEntries200ResponseGetCursorAttributeTypeOk(o.Cursor); ok {
		toSerialize["Cursor"] = val
	}
	if val, ok := getDownloadFolderAuditEntries200ResponseGetItemsAttributeTypeOk(o.Items); ok {
		toSerialize["Items"] = val
	}
	if val, ok := getDownloadFolderAuditEntries200ResponseGetLimitAttributeTypeOk(o.Limit); ok {
		toSerialize["Limit"] = val
	}
	return toSerialize, nil
}

type NullableDownloadFolderAuditEntries200Response struct {
	value *DownloadFolderAuditEntries200Response
	isSet bool
}

func (v NullableDownloadFolderAuditEntries200Response) Get() *DownloadFolderAuditEntries200Response {
	return v.value
}

func (v *NullableDownloadFolderAuditEntries200Response) Set(val *DownloadFolderAuditEntries200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableDownloadFolderAuditEntries200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableDownloadFolderAuditEntries200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDownloadFolderAuditEntries200Response(val *DownloadFolderAuditEntries200Response) *NullableDownloadFolderAuditEntries200Response {
	return &NullableDownloadFolderAuditEntries200Response{value: val, isSet: true}
}

func (v NullableDownloadFolderAuditEntries200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDownloadFolderAuditEntries200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
