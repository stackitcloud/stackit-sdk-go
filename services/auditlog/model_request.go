/*
Audit Log API

API Endpoints to retrieve recorded actions and resulting changes in the system.  ### Documentation The user documentation with explanations how to use the api can be found  [here](https://docs.stackit.cloud/stackit/en/retrieve-audit-log-per-api-request-134415907.html).  ### Audit Logging Changes on organizations, folders and projects and respective cloud resources are logged and collected in the audit  log.  ### API Constraints The audit log API allows to download messages from the last 90 days. The maximum duration that can be queried at  once is 24 hours. Requests are rate limited - the current maximum is 1 request per second.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditlog

import (
	"encoding/json"
)

// checks if the Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Request{}

/*
	types and functions for body
*/

// isFreeform
type RequestGetBodyAttributeType = *map[string]interface{}
type RequestGetBodyArgType = map[string]interface{}
type RequestGetBodyRetType = map[string]interface{}

func getRequestGetBodyAttributeTypeOk(arg RequestGetBodyAttributeType) (ret RequestGetBodyRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setRequestGetBodyAttributeType(arg *RequestGetBodyAttributeType, val RequestGetBodyRetType) {
	*arg = &val
}

/*
	types and functions for endpoint
*/

// isNotNullableString
type RequestGetEndpointAttributeType = *string

func getRequestGetEndpointAttributeTypeOk(arg RequestGetEndpointAttributeType) (ret RequestGetEndpointRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setRequestGetEndpointAttributeType(arg *RequestGetEndpointAttributeType, val RequestGetEndpointRetType) {
	*arg = &val
}

type RequestGetEndpointArgType = string
type RequestGetEndpointRetType = string

/*
	types and functions for headers
*/

// isFreeform
type RequestGetHeadersAttributeType = *map[string]interface{}
type RequestGetHeadersArgType = map[string]interface{}
type RequestGetHeadersRetType = map[string]interface{}

func getRequestGetHeadersAttributeTypeOk(arg RequestGetHeadersAttributeType) (ret RequestGetHeadersRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setRequestGetHeadersAttributeType(arg *RequestGetHeadersAttributeType, val RequestGetHeadersRetType) {
	*arg = &val
}

/*
	types and functions for parameters
*/

// isFreeform
type RequestGetParametersAttributeType = *map[string]interface{}
type RequestGetParametersArgType = map[string]interface{}
type RequestGetParametersRetType = map[string]interface{}

func getRequestGetParametersAttributeTypeOk(arg RequestGetParametersAttributeType) (ret RequestGetParametersRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setRequestGetParametersAttributeType(arg *RequestGetParametersAttributeType, val RequestGetParametersRetType) {
	*arg = &val
}

// Request Request, which mirrors the action of the user and the resulting changes within the system
type Request struct {
	// Body used to make the request.
	Body RequestGetBodyAttributeType `json:"body,omitempty"`
	// Endpoint which received the request.
	// REQUIRED
	Endpoint RequestGetEndpointAttributeType `json:"endpoint" required:"true"`
	// Headers used to make the request. May only contain (string -> string) key-value pairs.
	Headers RequestGetHeadersAttributeType `json:"headers,omitempty"`
	// Parameters used to make the request.
	Parameters RequestGetParametersAttributeType `json:"parameters,omitempty"`
}

type _Request Request

// NewRequest instantiates a new Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRequest(endpoint RequestGetEndpointArgType) *Request {
	this := Request{}
	setRequestGetEndpointAttributeType(&this.Endpoint, endpoint)
	return &this
}

// NewRequestWithDefaults instantiates a new Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRequestWithDefaults() *Request {
	this := Request{}
	return &this
}

// GetBody returns the Body field value if set, zero value otherwise.
func (o *Request) GetBody() (res RequestGetBodyRetType) {
	res, _ = o.GetBodyOk()
	return
}

// GetBodyOk returns a tuple with the Body field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Request) GetBodyOk() (ret RequestGetBodyRetType, ok bool) {
	return getRequestGetBodyAttributeTypeOk(o.Body)
}

// HasBody returns a boolean if a field has been set.
func (o *Request) HasBody() bool {
	_, ok := o.GetBodyOk()
	return ok
}

// SetBody gets a reference to the given map[string]interface{} and assigns it to the Body field.
func (o *Request) SetBody(v RequestGetBodyRetType) {
	setRequestGetBodyAttributeType(&o.Body, v)
}

// GetEndpoint returns the Endpoint field value
func (o *Request) GetEndpoint() (ret RequestGetEndpointRetType) {
	ret, _ = o.GetEndpointOk()
	return ret
}

// GetEndpointOk returns a tuple with the Endpoint field value
// and a boolean to check if the value has been set.
func (o *Request) GetEndpointOk() (ret RequestGetEndpointRetType, ok bool) {
	return getRequestGetEndpointAttributeTypeOk(o.Endpoint)
}

// SetEndpoint sets field value
func (o *Request) SetEndpoint(v RequestGetEndpointRetType) {
	setRequestGetEndpointAttributeType(&o.Endpoint, v)
}

// GetHeaders returns the Headers field value if set, zero value otherwise.
func (o *Request) GetHeaders() (res RequestGetHeadersRetType) {
	res, _ = o.GetHeadersOk()
	return
}

// GetHeadersOk returns a tuple with the Headers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Request) GetHeadersOk() (ret RequestGetHeadersRetType, ok bool) {
	return getRequestGetHeadersAttributeTypeOk(o.Headers)
}

// HasHeaders returns a boolean if a field has been set.
func (o *Request) HasHeaders() bool {
	_, ok := o.GetHeadersOk()
	return ok
}

// SetHeaders gets a reference to the given map[string]interface{} and assigns it to the Headers field.
func (o *Request) SetHeaders(v RequestGetHeadersRetType) {
	setRequestGetHeadersAttributeType(&o.Headers, v)
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *Request) GetParameters() (res RequestGetParametersRetType) {
	res, _ = o.GetParametersOk()
	return
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Request) GetParametersOk() (ret RequestGetParametersRetType, ok bool) {
	return getRequestGetParametersAttributeTypeOk(o.Parameters)
}

// HasParameters returns a boolean if a field has been set.
func (o *Request) HasParameters() bool {
	_, ok := o.GetParametersOk()
	return ok
}

// SetParameters gets a reference to the given map[string]interface{} and assigns it to the Parameters field.
func (o *Request) SetParameters(v RequestGetParametersRetType) {
	setRequestGetParametersAttributeType(&o.Parameters, v)
}

func (o Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getRequestGetBodyAttributeTypeOk(o.Body); ok {
		toSerialize["Body"] = val
	}
	if val, ok := getRequestGetEndpointAttributeTypeOk(o.Endpoint); ok {
		toSerialize["Endpoint"] = val
	}
	if val, ok := getRequestGetHeadersAttributeTypeOk(o.Headers); ok {
		toSerialize["Headers"] = val
	}
	if val, ok := getRequestGetParametersAttributeTypeOk(o.Parameters); ok {
		toSerialize["Parameters"] = val
	}
	return toSerialize, nil
}

type NullableRequest struct {
	value *Request
	isSet bool
}

func (v NullableRequest) Get() *Request {
	return v.value
}

func (v *NullableRequest) Set(val *Request) {
	v.value = val
	v.isSet = true
}

func (v NullableRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequest(val *Request) *NullableRequest {
	return &NullableRequest{value: val, isSet: true}
}

func (v NullableRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
