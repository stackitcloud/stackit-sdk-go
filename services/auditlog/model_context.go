/*
Audit Log API

API Endpoints to retrieve recorded actions and resulting changes in the system.  ### Documentation The user documentation with explanations how to use the api can be found  [here](https://docs.stackit.cloud/stackit/en/retrieve-audit-log-per-api-request-134415907.html).  ### Audit Logging Changes on organizations, folders and projects and respective cloud resources are logged and collected in the audit  log.  ### API Constraints The audit log API allows to download messages from the last 90 days. The maximum duration that can be queried at  once is 24 hours. Requests are rate limited - the current maximum is 60 requests per minute.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditlog

import (
	"encoding/json"
)

// checks if the Context type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Context{}

/*
	types and functions for folderId
*/

// isNotNullableString
type ContextGetFolderIdAttributeType = *string

func getContextGetFolderIdAttributeTypeOk(arg ContextGetFolderIdAttributeType) (ret ContextGetFolderIdRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setContextGetFolderIdAttributeType(arg *ContextGetFolderIdAttributeType, val ContextGetFolderIdRetType) {
	*arg = &val
}

type ContextGetFolderIdArgType = string
type ContextGetFolderIdRetType = string

/*
	types and functions for organizationId
*/

// isNotNullableString
type ContextGetOrganizationIdAttributeType = *string

func getContextGetOrganizationIdAttributeTypeOk(arg ContextGetOrganizationIdAttributeType) (ret ContextGetOrganizationIdRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setContextGetOrganizationIdAttributeType(arg *ContextGetOrganizationIdAttributeType, val ContextGetOrganizationIdRetType) {
	*arg = &val
}

type ContextGetOrganizationIdArgType = string
type ContextGetOrganizationIdRetType = string

/*
	types and functions for projectId
*/

// isNotNullableString
type ContextGetProjectIdAttributeType = *string

func getContextGetProjectIdAttributeTypeOk(arg ContextGetProjectIdAttributeType) (ret ContextGetProjectIdRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setContextGetProjectIdAttributeType(arg *ContextGetProjectIdAttributeType, val ContextGetProjectIdRetType) {
	*arg = &val
}

type ContextGetProjectIdArgType = string
type ContextGetProjectIdRetType = string

// Context Request context
type Context struct {
	// Folder id
	FolderId ContextGetFolderIdAttributeType `json:"folderId,omitempty"`
	// Organization id
	OrganizationId ContextGetOrganizationIdAttributeType `json:"organizationId,omitempty"`
	// Project id
	ProjectId ContextGetProjectIdAttributeType `json:"projectId,omitempty"`
}

// NewContext instantiates a new Context object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContext() *Context {
	this := Context{}
	return &this
}

// NewContextWithDefaults instantiates a new Context object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContextWithDefaults() *Context {
	this := Context{}
	return &this
}

// GetFolderId returns the FolderId field value if set, zero value otherwise.
func (o *Context) GetFolderId() (res ContextGetFolderIdRetType) {
	res, _ = o.GetFolderIdOk()
	return
}

// GetFolderIdOk returns a tuple with the FolderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Context) GetFolderIdOk() (ret ContextGetFolderIdRetType, ok bool) {
	return getContextGetFolderIdAttributeTypeOk(o.FolderId)
}

// HasFolderId returns a boolean if a field has been set.
func (o *Context) HasFolderId() bool {
	_, ok := o.GetFolderIdOk()
	return ok
}

// SetFolderId gets a reference to the given string and assigns it to the FolderId field.
func (o *Context) SetFolderId(v ContextGetFolderIdRetType) {
	setContextGetFolderIdAttributeType(&o.FolderId, v)
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *Context) GetOrganizationId() (res ContextGetOrganizationIdRetType) {
	res, _ = o.GetOrganizationIdOk()
	return
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Context) GetOrganizationIdOk() (ret ContextGetOrganizationIdRetType, ok bool) {
	return getContextGetOrganizationIdAttributeTypeOk(o.OrganizationId)
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *Context) HasOrganizationId() bool {
	_, ok := o.GetOrganizationIdOk()
	return ok
}

// SetOrganizationId gets a reference to the given string and assigns it to the OrganizationId field.
func (o *Context) SetOrganizationId(v ContextGetOrganizationIdRetType) {
	setContextGetOrganizationIdAttributeType(&o.OrganizationId, v)
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *Context) GetProjectId() (res ContextGetProjectIdRetType) {
	res, _ = o.GetProjectIdOk()
	return
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Context) GetProjectIdOk() (ret ContextGetProjectIdRetType, ok bool) {
	return getContextGetProjectIdAttributeTypeOk(o.ProjectId)
}

// HasProjectId returns a boolean if a field has been set.
func (o *Context) HasProjectId() bool {
	_, ok := o.GetProjectIdOk()
	return ok
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *Context) SetProjectId(v ContextGetProjectIdRetType) {
	setContextGetProjectIdAttributeType(&o.ProjectId, v)
}

func (o Context) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getContextGetFolderIdAttributeTypeOk(o.FolderId); ok {
		toSerialize["FolderId"] = val
	}
	if val, ok := getContextGetOrganizationIdAttributeTypeOk(o.OrganizationId); ok {
		toSerialize["OrganizationId"] = val
	}
	if val, ok := getContextGetProjectIdAttributeTypeOk(o.ProjectId); ok {
		toSerialize["ProjectId"] = val
	}
	return toSerialize, nil
}

type NullableContext struct {
	value *Context
	isSet bool
}

func (v NullableContext) Get() *Context {
	return v.value
}

func (v *NullableContext) Set(val *Context) {
	v.value = val
	v.isSet = true
}

func (v NullableContext) IsSet() bool {
	return v.isSet
}

func (v *NullableContext) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContext(val *Context) *NullableContext {
	return &NullableContext{value: val, isSet: true}
}

func (v NullableContext) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContext) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
