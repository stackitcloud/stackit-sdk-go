/*
STACKIT Opensearch API

The STACKIT Opensearch API provides endpoints to list service offerings, manage service instances and service credentials within STACKIT portal projects.

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package opensearch

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the ListRestoresResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListRestoresResponse{}

/*
	types and functions for instanceRestores
*/

// isArray
type ListRestoresResponseGetInstanceRestoresAttributeType = *[]Restore
type ListRestoresResponseGetInstanceRestoresArgType = []Restore
type ListRestoresResponseGetInstanceRestoresRetType = []Restore

func getListRestoresResponseGetInstanceRestoresAttributeTypeOk(arg ListRestoresResponseGetInstanceRestoresAttributeType) (ret ListRestoresResponseGetInstanceRestoresRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setListRestoresResponseGetInstanceRestoresAttributeType(arg *ListRestoresResponseGetInstanceRestoresAttributeType, val ListRestoresResponseGetInstanceRestoresRetType) {
	*arg = &val
}

// ListRestoresResponse struct for ListRestoresResponse
type ListRestoresResponse struct {
	// REQUIRED
	InstanceRestores ListRestoresResponseGetInstanceRestoresAttributeType `json:"instanceRestores"`
}

type _ListRestoresResponse ListRestoresResponse

// NewListRestoresResponse instantiates a new ListRestoresResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListRestoresResponse(instanceRestores ListRestoresResponseGetInstanceRestoresArgType) *ListRestoresResponse {
	this := ListRestoresResponse{}
	setListRestoresResponseGetInstanceRestoresAttributeType(&this.InstanceRestores, instanceRestores)
	return &this
}

// NewListRestoresResponseWithDefaults instantiates a new ListRestoresResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListRestoresResponseWithDefaults() *ListRestoresResponse {
	this := ListRestoresResponse{}
	return &this
}

// GetInstanceRestores returns the InstanceRestores field value
func (o *ListRestoresResponse) GetInstanceRestores() (ret ListRestoresResponseGetInstanceRestoresRetType) {
	ret, _ = o.GetInstanceRestoresOk()
	return ret
}

// GetInstanceRestoresOk returns a tuple with the InstanceRestores field value
// and a boolean to check if the value has been set.
func (o *ListRestoresResponse) GetInstanceRestoresOk() (ret ListRestoresResponseGetInstanceRestoresRetType, ok bool) {
	return getListRestoresResponseGetInstanceRestoresAttributeTypeOk(o.InstanceRestores)
}

// SetInstanceRestores sets field value
func (o *ListRestoresResponse) SetInstanceRestores(v ListRestoresResponseGetInstanceRestoresRetType) {
	setListRestoresResponseGetInstanceRestoresAttributeType(&o.InstanceRestores, v)
}

func (o ListRestoresResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListRestoresResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getListRestoresResponseGetInstanceRestoresAttributeTypeOk(o.InstanceRestores); ok {
		toSerialize["InstanceRestores"] = val
	}
	return toSerialize, nil
}

func (o *ListRestoresResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"instanceRestores",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varListRestoresResponse := _ListRestoresResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varListRestoresResponse)

	if err != nil {
		return err
	}

	*o = ListRestoresResponse(varListRestoresResponse)

	return err
}

type NullableListRestoresResponse struct {
	value *ListRestoresResponse
	isSet bool
}

func (v NullableListRestoresResponse) Get() *ListRestoresResponse {
	return v.value
}

func (v *NullableListRestoresResponse) Set(val *ListRestoresResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListRestoresResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListRestoresResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListRestoresResponse(val *ListRestoresResponse) *NullableListRestoresResponse {
	return &NullableListRestoresResponse{value: val, isSet: true}
}

func (v NullableListRestoresResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListRestoresResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
