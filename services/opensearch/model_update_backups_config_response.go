/*
STACKIT Opensearch API

The STACKIT Opensearch API provides endpoints to list service offerings, manage service instances and service credentials within STACKIT portal projects.

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package opensearch

import (
	"encoding/json"
)

// checks if the UpdateBackupsConfigResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateBackupsConfigResponse{}

// UpdateBackupsConfigResponse struct for UpdateBackupsConfigResponse
type UpdateBackupsConfigResponse struct {
	// REQUIRED
	Message *string `json:"message"`
}

type _UpdateBackupsConfigResponse UpdateBackupsConfigResponse

// NewUpdateBackupsConfigResponse instantiates a new UpdateBackupsConfigResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateBackupsConfigResponse(message *string) *UpdateBackupsConfigResponse {
	this := UpdateBackupsConfigResponse{}
	this.Message = message
	return &this
}

// NewUpdateBackupsConfigResponseWithDefaults instantiates a new UpdateBackupsConfigResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateBackupsConfigResponseWithDefaults() *UpdateBackupsConfigResponse {
	this := UpdateBackupsConfigResponse{}
	return &this
}

// GetMessage returns the Message field value
func (o *UpdateBackupsConfigResponse) GetMessage() *string {
	if o == nil {
		var ret *string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *UpdateBackupsConfigResponse) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Message, true
}

// SetMessage sets field value
func (o *UpdateBackupsConfigResponse) SetMessage(v *string) {
	o.Message = v
}

func (o UpdateBackupsConfigResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["message"] = o.Message
	return toSerialize, nil
}

type NullableUpdateBackupsConfigResponse struct {
	value *UpdateBackupsConfigResponse
	isSet bool
}

func (v NullableUpdateBackupsConfigResponse) Get() *UpdateBackupsConfigResponse {
	return v.value
}

func (v *NullableUpdateBackupsConfigResponse) Set(val *UpdateBackupsConfigResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateBackupsConfigResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateBackupsConfigResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateBackupsConfigResponse(val *UpdateBackupsConfigResponse) *NullableUpdateBackupsConfigResponse {
	return &NullableUpdateBackupsConfigResponse{value: val, isSet: true}
}

func (v NullableUpdateBackupsConfigResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateBackupsConfigResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
