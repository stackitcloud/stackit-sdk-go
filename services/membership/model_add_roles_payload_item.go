/*
STACKIT Membership API

The Membership API is used to manage memberships, roles and permissions of STACKIT resources, like projects, folders, organizations and other resources.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package membership

import (
	"encoding/json"
)

// checks if the AddRolesPayloadItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddRolesPayloadItem{}

// AddRolesPayloadItem struct for AddRolesPayloadItem
type AddRolesPayloadItem struct {
	// REQUIRED
	Description *string `json:"description"`
	// REQUIRED
	Name *string `json:"name"`
	// REQUIRED
	Permissions *[]PermissionRequest `json:"permissions"`
}

type _AddRolesPayloadItem AddRolesPayloadItem

// NewAddRolesPayloadItem instantiates a new AddRolesPayloadItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddRolesPayloadItem(description *string, name *string, permissions *[]PermissionRequest) *AddRolesPayloadItem {
	this := AddRolesPayloadItem{}
	this.Description = description
	this.Name = name
	this.Permissions = permissions
	return &this
}

// NewAddRolesPayloadItemWithDefaults instantiates a new AddRolesPayloadItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddRolesPayloadItemWithDefaults() *AddRolesPayloadItem {
	this := AddRolesPayloadItem{}
	return &this
}

// GetDescription returns the Description field value
func (o *AddRolesPayloadItem) GetDescription() *string {
	if o == nil {
		var ret *string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *AddRolesPayloadItem) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description, true
}

// SetDescription sets field value
func (o *AddRolesPayloadItem) SetDescription(v *string) {
	o.Description = v
}

// GetName returns the Name field value
func (o *AddRolesPayloadItem) GetName() *string {
	if o == nil {
		var ret *string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AddRolesPayloadItem) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name, true
}

// SetName sets field value
func (o *AddRolesPayloadItem) SetName(v *string) {
	o.Name = v
}

// GetPermissions returns the Permissions field value
func (o *AddRolesPayloadItem) GetPermissions() *[]PermissionRequest {
	if o == nil {
		var ret *[]PermissionRequest
		return ret
	}

	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value
// and a boolean to check if the value has been set.
func (o *AddRolesPayloadItem) GetPermissionsOk() (*[]PermissionRequest, bool) {
	if o == nil {
		return nil, false
	}
	return o.Permissions, true
}

// SetPermissions sets field value
func (o *AddRolesPayloadItem) SetPermissions(v *[]PermissionRequest) {
	o.Permissions = v
}

func (o AddRolesPayloadItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["description"] = o.Description
	toSerialize["name"] = o.Name
	toSerialize["permissions"] = o.Permissions
	return toSerialize, nil
}

type NullableAddRolesPayloadItem struct {
	value *AddRolesPayloadItem
	isSet bool
}

func (v NullableAddRolesPayloadItem) Get() *AddRolesPayloadItem {
	return v.value
}

func (v *NullableAddRolesPayloadItem) Set(val *AddRolesPayloadItem) {
	v.value = val
	v.isSet = true
}

func (v NullableAddRolesPayloadItem) IsSet() bool {
	return v.isSet
}

func (v *NullableAddRolesPayloadItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddRolesPayloadItem(val *AddRolesPayloadItem) *NullableAddRolesPayloadItem {
	return &NullableAddRolesPayloadItem{value: val, isSet: true}
}

func (v NullableAddRolesPayloadItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddRolesPayloadItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
