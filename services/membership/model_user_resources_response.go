/*
STACKIT Membership API

The Membership API is used to manage memberships, roles and permissions of STACKIT resources, like projects, folders, organizations and other resources.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package membership

import (
	"encoding/json"
)

// checks if the UserResourcesResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserResourcesResponse{}

// UserResourcesResponse struct for UserResourcesResponse
type UserResourcesResponse struct {
	// REQUIRED
	Cursor *string `json:"cursor"`
	// REQUIRED
	Items *[]Resource `json:"items"`
	// Can be cast to int32 without loss of precision.
	// REQUIRED
	Limit *int64 `json:"limit"`
}

type _UserResourcesResponse UserResourcesResponse

// NewUserResourcesResponse instantiates a new UserResourcesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserResourcesResponse(cursor *string, items *[]Resource, limit *int64) *UserResourcesResponse {
	this := UserResourcesResponse{}
	this.Cursor = cursor
	this.Items = items
	this.Limit = limit
	return &this
}

// NewUserResourcesResponseWithDefaults instantiates a new UserResourcesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserResourcesResponseWithDefaults() *UserResourcesResponse {
	this := UserResourcesResponse{}
	var limit int64 = 50
	this.Limit = &limit
	return &this
}

// GetCursor returns the Cursor field value
func (o *UserResourcesResponse) GetCursor() *string {
	if o == nil {
		var ret *string
		return ret
	}

	return o.Cursor
}

// GetCursorOk returns a tuple with the Cursor field value
// and a boolean to check if the value has been set.
func (o *UserResourcesResponse) GetCursorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Cursor, true
}

// SetCursor sets field value
func (o *UserResourcesResponse) SetCursor(v *string) {
	o.Cursor = v
}

// GetItems returns the Items field value
func (o *UserResourcesResponse) GetItems() *[]Resource {
	if o == nil {
		var ret *[]Resource
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *UserResourcesResponse) GetItemsOk() (*[]Resource, bool) {
	if o == nil {
		return nil, false
	}
	return o.Items, true
}

// SetItems sets field value
func (o *UserResourcesResponse) SetItems(v *[]Resource) {
	o.Items = v
}

// GetLimit returns the Limit field value
func (o *UserResourcesResponse) GetLimit() *int64 {
	if o == nil {
		var ret *int64
		return ret
	}

	return o.Limit
}

// GetLimitOk returns a tuple with the Limit field value
// and a boolean to check if the value has been set.
func (o *UserResourcesResponse) GetLimitOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Limit, true
}

// SetLimit sets field value
func (o *UserResourcesResponse) SetLimit(v *int64) {
	o.Limit = v
}

func (o UserResourcesResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["cursor"] = o.Cursor
	toSerialize["items"] = o.Items
	toSerialize["limit"] = o.Limit
	return toSerialize, nil
}

type NullableUserResourcesResponse struct {
	value *UserResourcesResponse
	isSet bool
}

func (v NullableUserResourcesResponse) Get() *UserResourcesResponse {
	return v.value
}

func (v *NullableUserResourcesResponse) Set(val *UserResourcesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUserResourcesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUserResourcesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserResourcesResponse(val *UserResourcesResponse) *NullableUserResourcesResponse {
	return &NullableUserResourcesResponse{value: val, isSet: true}
}

func (v NullableUserResourcesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserResourcesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
