/*
Load Balancer API

This API offers an interface to provision and manage load balancing servers in your STACKIT project. It also has the possibility of pooling target servers for load balancing purposes.  For each load balancer provided, two VMs are deployed in your OpenStack project subject to a fee.

API version: 1.7.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loadbalancer

import (
	"encoding/json"
)

// checks if the UpdateCredentialsPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateCredentialsPayload{}

// UpdateCredentialsPayload struct for UpdateCredentialsPayload
type UpdateCredentialsPayload struct {
	// Credential name
	DisplayName *string `json:"displayName,omitempty"`
	// A valid password used for an existing ARGUS instance, which is used during basic auth.
	Password *string `json:"password,omitempty"`
	// A valid username used for an existing ARGUS instance, which is used during basic auth.
	Username *string `json:"username,omitempty"`
}

// NewUpdateCredentialsPayload instantiates a new UpdateCredentialsPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateCredentialsPayload() *UpdateCredentialsPayload {
	this := UpdateCredentialsPayload{}
	return &this
}

// NewUpdateCredentialsPayloadWithDefaults instantiates a new UpdateCredentialsPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateCredentialsPayloadWithDefaults() *UpdateCredentialsPayload {
	this := UpdateCredentialsPayload{}
	return &this
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *UpdateCredentialsPayload) GetDisplayName() *string {
	if o == nil || IsNil(o.DisplayName) {
		var ret *string
		return ret
	}
	return o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCredentialsPayload) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *UpdateCredentialsPayload) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *UpdateCredentialsPayload) SetDisplayName(v *string) {
	o.DisplayName = v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *UpdateCredentialsPayload) GetPassword() *string {
	if o == nil || IsNil(o.Password) {
		var ret *string
		return ret
	}
	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCredentialsPayload) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *UpdateCredentialsPayload) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *UpdateCredentialsPayload) SetPassword(v *string) {
	o.Password = v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *UpdateCredentialsPayload) GetUsername() *string {
	if o == nil || IsNil(o.Username) {
		var ret *string
		return ret
	}
	return o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCredentialsPayload) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *UpdateCredentialsPayload) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *UpdateCredentialsPayload) SetUsername(v *string) {
	o.Username = v
}

func (o UpdateCredentialsPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	return toSerialize, nil
}

type NullableUpdateCredentialsPayload struct {
	value *UpdateCredentialsPayload
	isSet bool
}

func (v NullableUpdateCredentialsPayload) Get() *UpdateCredentialsPayload {
	return v.value
}

func (v *NullableUpdateCredentialsPayload) Set(val *UpdateCredentialsPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateCredentialsPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateCredentialsPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateCredentialsPayload(val *UpdateCredentialsPayload) *NullableUpdateCredentialsPayload {
	return &NullableUpdateCredentialsPayload{value: val, isSet: true}
}

func (v NullableUpdateCredentialsPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateCredentialsPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
