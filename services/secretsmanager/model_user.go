/*
STACKIT Secrets Manager API

This API provides endpoints for managing the Secrets-Manager.

API version: 1.4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package secretsmanager

import (
	"encoding/json"
)

// checks if the User type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &User{}

// User struct for User
type User struct {
	// A user chosen description to differentiate between multiple users.
	// REQUIRED
	Description *string `json:"description"`
	// A auto generated unique id which identifies the users.
	// REQUIRED
	Id *string `json:"id"`
	// A auto generated password for logging in with the user.
	// REQUIRED
	Password *string `json:"password"`
	// A auto generated username for logging in with the user.
	// REQUIRED
	Username *string `json:"username"`
	// Is true if the user has write access to the secrets engine. Is false for a read-only user.
	// REQUIRED
	Write *bool `json:"write"`
}

type _User User

// NewUser instantiates a new User object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUser(description *string, id *string, password *string, username *string, write *bool) *User {
	this := User{}
	this.Description = description
	this.Id = id
	this.Password = password
	this.Username = username
	this.Write = write
	return &this
}

// NewUserWithDefaults instantiates a new User object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserWithDefaults() *User {
	this := User{}
	return &this
}

// GetDescription returns the Description field value
func (o *User) GetDescription() *string {
	if o == nil || IsNil(o.Description) {
		var ret *string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *User) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description, true
}

// SetDescription sets field value
func (o *User) SetDescription(v *string) {
	o.Description = v
}

// GetId returns the Id field value
func (o *User) GetId() *string {
	if o == nil || IsNil(o.Id) {
		var ret *string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *User) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id, true
}

// SetId sets field value
func (o *User) SetId(v *string) {
	o.Id = v
}

// GetPassword returns the Password field value
func (o *User) GetPassword() *string {
	if o == nil || IsNil(o.Password) {
		var ret *string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *User) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Password, true
}

// SetPassword sets field value
func (o *User) SetPassword(v *string) {
	o.Password = v
}

// GetUsername returns the Username field value
func (o *User) GetUsername() *string {
	if o == nil || IsNil(o.Username) {
		var ret *string
		return ret
	}

	return o.Username
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
func (o *User) GetUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Username, true
}

// SetUsername sets field value
func (o *User) SetUsername(v *string) {
	o.Username = v
}

// GetWrite returns the Write field value
func (o *User) GetWrite() *bool {
	if o == nil || IsNil(o.Write) {
		var ret *bool
		return ret
	}

	return o.Write
}

// GetWriteOk returns a tuple with the Write field value
// and a boolean to check if the value has been set.
func (o *User) GetWriteOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Write, true
}

// SetWrite sets field value
func (o *User) SetWrite(v *bool) {
	o.Write = v
}

func (o User) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["description"] = o.Description
	toSerialize["id"] = o.Id
	toSerialize["password"] = o.Password
	toSerialize["username"] = o.Username
	toSerialize["write"] = o.Write
	return toSerialize, nil
}

type NullableUser struct {
	value *User
	isSet bool
}

func (v NullableUser) Get() *User {
	return v.value
}

func (v *NullableUser) Set(val *User) {
	v.value = val
	v.isSet = true
}

func (v NullableUser) IsSet() bool {
	return v.isSet
}

func (v *NullableUser) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUser(val *User) *NullableUser {
	return &NullableUser{value: val, isSet: true}
}

func (v NullableUser) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUser) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
