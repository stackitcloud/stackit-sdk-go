/*
STACKIT Secrets Manager API

This API provides endpoints for managing the Secrets-Manager.

API version: 1.4.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package secretsmanager

import (
	"encoding/json"
)

// checks if the ACL type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ACL{}

/*
	types and functions for cidr
*/

// isNotNullableString
type ACLGetCidrAttributeType = *string

func getACLGetCidrAttributeTypeOk(arg ACLGetCidrAttributeType) (ret ACLGetCidrRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setACLGetCidrAttributeType(arg *ACLGetCidrAttributeType, val ACLGetCidrRetType) {
	*arg = &val
}

type ACLGetCidrArgType = string
type ACLGetCidrRetType = string

/*
	types and functions for id
*/

// isNotNullableString
type ACLGetIdAttributeType = *string

func getACLGetIdAttributeTypeOk(arg ACLGetIdAttributeType) (ret ACLGetIdRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setACLGetIdAttributeType(arg *ACLGetIdAttributeType, val ACLGetIdRetType) {
	*arg = &val
}

type ACLGetIdArgType = string
type ACLGetIdRetType = string

// ACL struct for ACL
type ACL struct {
	// The given IP/IP Range that is permitted to access.
	// REQUIRED
	Cidr ACLGetCidrAttributeType `json:"cidr" required:"true"`
	// A auto generated unique id which identifies the acl.
	// REQUIRED
	Id ACLGetIdAttributeType `json:"id" required:"true"`
}

type _ACL ACL

// NewACL instantiates a new ACL object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewACL(cidr ACLGetCidrArgType, id ACLGetIdArgType) *ACL {
	this := ACL{}
	setACLGetCidrAttributeType(&this.Cidr, cidr)
	setACLGetIdAttributeType(&this.Id, id)
	return &this
}

// NewACLWithDefaults instantiates a new ACL object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewACLWithDefaults() *ACL {
	this := ACL{}
	return &this
}

// GetCidr returns the Cidr field value
func (o *ACL) GetCidr() (ret ACLGetCidrRetType) {
	ret, _ = o.GetCidrOk()
	return ret
}

// GetCidrOk returns a tuple with the Cidr field value
// and a boolean to check if the value has been set.
func (o *ACL) GetCidrOk() (ret ACLGetCidrRetType, ok bool) {
	return getACLGetCidrAttributeTypeOk(o.Cidr)
}

// SetCidr sets field value
func (o *ACL) SetCidr(v ACLGetCidrRetType) {
	setACLGetCidrAttributeType(&o.Cidr, v)
}

// GetId returns the Id field value
func (o *ACL) GetId() (ret ACLGetIdRetType) {
	ret, _ = o.GetIdOk()
	return ret
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ACL) GetIdOk() (ret ACLGetIdRetType, ok bool) {
	return getACLGetIdAttributeTypeOk(o.Id)
}

// SetId sets field value
func (o *ACL) SetId(v ACLGetIdRetType) {
	setACLGetIdAttributeType(&o.Id, v)
}

func (o ACL) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getACLGetCidrAttributeTypeOk(o.Cidr); ok {
		toSerialize["Cidr"] = val
	}
	if val, ok := getACLGetIdAttributeTypeOk(o.Id); ok {
		toSerialize["Id"] = val
	}
	return toSerialize, nil
}

type NullableACL struct {
	value *ACL
	isSet bool
}

func (v NullableACL) Get() *ACL {
	return v.value
}

func (v *NullableACL) Set(val *ACL) {
	v.value = val
	v.isSet = true
}

func (v NullableACL) IsSet() bool {
	return v.isSet
}

func (v *NullableACL) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableACL(val *ACL) *NullableACL {
	return &NullableACL{value: val, isSet: true}
}

func (v NullableACL) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableACL) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
