/*
STACKIT Git API

STACKIT Git management API.

API version: 1beta.0.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package git

import (
	"encoding/json"
)

// checks if the CreateInstancePayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateInstancePayload{}

/*
	types and functions for acl
*/

// isArray
type CreateInstancePayloadGetAclAttributeType = *[]string
type CreateInstancePayloadGetAclArgType = []string
type CreateInstancePayloadGetAclRetType = []string

func getCreateInstancePayloadGetAclAttributeTypeOk(arg CreateInstancePayloadGetAclAttributeType) (ret CreateInstancePayloadGetAclRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setCreateInstancePayloadGetAclAttributeType(arg *CreateInstancePayloadGetAclAttributeType, val CreateInstancePayloadGetAclRetType) {
	*arg = &val
}

/*
	types and functions for flavor
*/

// isNotNullableString
type CreateInstancePayloadGetFlavorAttributeType = *string

func getCreateInstancePayloadGetFlavorAttributeTypeOk(arg CreateInstancePayloadGetFlavorAttributeType) (ret CreateInstancePayloadGetFlavorRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setCreateInstancePayloadGetFlavorAttributeType(arg *CreateInstancePayloadGetFlavorAttributeType, val CreateInstancePayloadGetFlavorRetType) {
	*arg = &val
}

type CreateInstancePayloadGetFlavorArgType = string
type CreateInstancePayloadGetFlavorRetType = string

/*
	types and functions for name
*/

// isNotNullableString
type CreateInstancePayloadGetNameAttributeType = *string

func getCreateInstancePayloadGetNameAttributeTypeOk(arg CreateInstancePayloadGetNameAttributeType) (ret CreateInstancePayloadGetNameRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setCreateInstancePayloadGetNameAttributeType(arg *CreateInstancePayloadGetNameAttributeType, val CreateInstancePayloadGetNameRetType) {
	*arg = &val
}

type CreateInstancePayloadGetNameArgType = string
type CreateInstancePayloadGetNameRetType = string

// CreateInstancePayload Instance creation configuration options.
type CreateInstancePayload struct {
	// Restricted ACL for instance access.
	Acl CreateInstancePayloadGetAclAttributeType `json:"acl,omitempty"`
	// Instance flavor. Defaults to git-100 if not specified.
	Flavor CreateInstancePayloadGetFlavorAttributeType `json:"flavor,omitempty"`
	// A user chosen name to distinguish multiple STACKIT Git instances.
	// REQUIRED
	Name CreateInstancePayloadGetNameAttributeType `json:"name" required:"true"`
}

type _CreateInstancePayload CreateInstancePayload

// NewCreateInstancePayload instantiates a new CreateInstancePayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateInstancePayload(name CreateInstancePayloadGetNameArgType) *CreateInstancePayload {
	this := CreateInstancePayload{}
	setCreateInstancePayloadGetNameAttributeType(&this.Name, name)
	return &this
}

// NewCreateInstancePayloadWithDefaults instantiates a new CreateInstancePayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateInstancePayloadWithDefaults() *CreateInstancePayload {
	this := CreateInstancePayload{}
	var flavor string = "git-100"
	this.Flavor = &flavor
	return &this
}

// GetAcl returns the Acl field value if set, zero value otherwise.
func (o *CreateInstancePayload) GetAcl() (res CreateInstancePayloadGetAclRetType) {
	res, _ = o.GetAclOk()
	return
}

// GetAclOk returns a tuple with the Acl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateInstancePayload) GetAclOk() (ret CreateInstancePayloadGetAclRetType, ok bool) {
	return getCreateInstancePayloadGetAclAttributeTypeOk(o.Acl)
}

// HasAcl returns a boolean if a field has been set.
func (o *CreateInstancePayload) HasAcl() bool {
	_, ok := o.GetAclOk()
	return ok
}

// SetAcl gets a reference to the given []string and assigns it to the Acl field.
func (o *CreateInstancePayload) SetAcl(v CreateInstancePayloadGetAclRetType) {
	setCreateInstancePayloadGetAclAttributeType(&o.Acl, v)
}

// GetFlavor returns the Flavor field value if set, zero value otherwise.
func (o *CreateInstancePayload) GetFlavor() (res CreateInstancePayloadGetFlavorRetType) {
	res, _ = o.GetFlavorOk()
	return
}

// GetFlavorOk returns a tuple with the Flavor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateInstancePayload) GetFlavorOk() (ret CreateInstancePayloadGetFlavorRetType, ok bool) {
	return getCreateInstancePayloadGetFlavorAttributeTypeOk(o.Flavor)
}

// HasFlavor returns a boolean if a field has been set.
func (o *CreateInstancePayload) HasFlavor() bool {
	_, ok := o.GetFlavorOk()
	return ok
}

// SetFlavor gets a reference to the given string and assigns it to the Flavor field.
func (o *CreateInstancePayload) SetFlavor(v CreateInstancePayloadGetFlavorRetType) {
	setCreateInstancePayloadGetFlavorAttributeType(&o.Flavor, v)
}

// GetName returns the Name field value
func (o *CreateInstancePayload) GetName() (ret CreateInstancePayloadGetNameRetType) {
	ret, _ = o.GetNameOk()
	return ret
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateInstancePayload) GetNameOk() (ret CreateInstancePayloadGetNameRetType, ok bool) {
	return getCreateInstancePayloadGetNameAttributeTypeOk(o.Name)
}

// SetName sets field value
func (o *CreateInstancePayload) SetName(v CreateInstancePayloadGetNameRetType) {
	setCreateInstancePayloadGetNameAttributeType(&o.Name, v)
}

func (o CreateInstancePayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getCreateInstancePayloadGetAclAttributeTypeOk(o.Acl); ok {
		toSerialize["Acl"] = val
	}
	if val, ok := getCreateInstancePayloadGetFlavorAttributeTypeOk(o.Flavor); ok {
		toSerialize["Flavor"] = val
	}
	if val, ok := getCreateInstancePayloadGetNameAttributeTypeOk(o.Name); ok {
		toSerialize["Name"] = val
	}
	return toSerialize, nil
}

type NullableCreateInstancePayload struct {
	value *CreateInstancePayload
	isSet bool
}

func (v NullableCreateInstancePayload) Get() *CreateInstancePayload {
	return v.value
}

func (v *NullableCreateInstancePayload) Set(val *CreateInstancePayload) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateInstancePayload) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateInstancePayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateInstancePayload(val *CreateInstancePayload) *NullableCreateInstancePayload {
	return &NullableCreateInstancePayload{value: val, isSet: true}
}

func (v NullableCreateInstancePayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateInstancePayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
