/*
STACKIT Git API

Manage STACKIT Git instances.

API version: 1beta.0.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package git

import (
	"encoding/json"
)

// checks if the UnauthorizedResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnauthorizedResponse{}

/*
	types and functions for error
*/

// isNotNullableString
type UnauthorizedResponseGetErrorAttributeType = *string

func getUnauthorizedResponseGetErrorAttributeTypeOk(arg UnauthorizedResponseGetErrorAttributeType) (ret UnauthorizedResponseGetErrorRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setUnauthorizedResponseGetErrorAttributeType(arg *UnauthorizedResponseGetErrorAttributeType, val UnauthorizedResponseGetErrorRetType) {
	*arg = &val
}

type UnauthorizedResponseGetErrorArgType = string
type UnauthorizedResponseGetErrorRetType = string

// UnauthorizedResponse The request could not be authorized.
type UnauthorizedResponse struct {
	Error UnauthorizedResponseGetErrorAttributeType `json:"error,omitempty"`
}

// NewUnauthorizedResponse instantiates a new UnauthorizedResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnauthorizedResponse() *UnauthorizedResponse {
	this := UnauthorizedResponse{}
	return &this
}

// NewUnauthorizedResponseWithDefaults instantiates a new UnauthorizedResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnauthorizedResponseWithDefaults() *UnauthorizedResponse {
	this := UnauthorizedResponse{}
	return &this
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *UnauthorizedResponse) GetError() (res UnauthorizedResponseGetErrorRetType) {
	res, _ = o.GetErrorOk()
	return
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnauthorizedResponse) GetErrorOk() (ret UnauthorizedResponseGetErrorRetType, ok bool) {
	return getUnauthorizedResponseGetErrorAttributeTypeOk(o.Error)
}

// HasError returns a boolean if a field has been set.
func (o *UnauthorizedResponse) HasError() bool {
	_, ok := o.GetErrorOk()
	return ok
}

// SetError gets a reference to the given string and assigns it to the Error field.
func (o *UnauthorizedResponse) SetError(v UnauthorizedResponseGetErrorRetType) {
	setUnauthorizedResponseGetErrorAttributeType(&o.Error, v)
}

func (o UnauthorizedResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getUnauthorizedResponseGetErrorAttributeTypeOk(o.Error); ok {
		toSerialize["Error"] = val
	}
	return toSerialize, nil
}

type NullableUnauthorizedResponse struct {
	value *UnauthorizedResponse
	isSet bool
}

func (v NullableUnauthorizedResponse) Get() *UnauthorizedResponse {
	return v.value
}

func (v *NullableUnauthorizedResponse) Set(val *UnauthorizedResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUnauthorizedResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUnauthorizedResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnauthorizedResponse(val *UnauthorizedResponse) *NullableUnauthorizedResponse {
	return &NullableUnauthorizedResponse{value: val, isSet: true}
}

func (v NullableUnauthorizedResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnauthorizedResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
