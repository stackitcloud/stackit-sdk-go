/*
STACKIT DNS API

This api provides dns

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dns

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the CloneZonePayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CloneZonePayload{}

/*
	types and functions for adjustRecords
*/

// isBoolean
type CloneZonePayloadgetAdjustRecordsAttributeType = *bool
type CloneZonePayloadgetAdjustRecordsArgType = bool
type CloneZonePayloadgetAdjustRecordsRetType = bool

func getCloneZonePayloadgetAdjustRecordsAttributeTypeOk(arg CloneZonePayloadgetAdjustRecordsAttributeType) (ret CloneZonePayloadgetAdjustRecordsRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setCloneZonePayloadgetAdjustRecordsAttributeType(arg *CloneZonePayloadgetAdjustRecordsAttributeType, val CloneZonePayloadgetAdjustRecordsRetType) {
	*arg = &val
}

/*
	types and functions for description
*/

// isNotNullableString
type CloneZonePayloadGetDescriptionAttributeType = *string

func getCloneZonePayloadGetDescriptionAttributeTypeOk(arg CloneZonePayloadGetDescriptionAttributeType) (ret CloneZonePayloadGetDescriptionRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setCloneZonePayloadGetDescriptionAttributeType(arg *CloneZonePayloadGetDescriptionAttributeType, val CloneZonePayloadGetDescriptionRetType) {
	*arg = &val
}

type CloneZonePayloadGetDescriptionArgType = string
type CloneZonePayloadGetDescriptionRetType = string

/*
	types and functions for dnsName
*/

// isNotNullableString
type CloneZonePayloadGetDnsNameAttributeType = *string

func getCloneZonePayloadGetDnsNameAttributeTypeOk(arg CloneZonePayloadGetDnsNameAttributeType) (ret CloneZonePayloadGetDnsNameRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setCloneZonePayloadGetDnsNameAttributeType(arg *CloneZonePayloadGetDnsNameAttributeType, val CloneZonePayloadGetDnsNameRetType) {
	*arg = &val
}

type CloneZonePayloadGetDnsNameArgType = string
type CloneZonePayloadGetDnsNameRetType = string

/*
	types and functions for name
*/

// isNotNullableString
type CloneZonePayloadGetNameAttributeType = *string

func getCloneZonePayloadGetNameAttributeTypeOk(arg CloneZonePayloadGetNameAttributeType) (ret CloneZonePayloadGetNameRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setCloneZonePayloadGetNameAttributeType(arg *CloneZonePayloadGetNameAttributeType, val CloneZonePayloadGetNameRetType) {
	*arg = &val
}

type CloneZonePayloadGetNameArgType = string
type CloneZonePayloadGetNameRetType = string

// CloneZonePayload metadata to clone a zone.
type CloneZonePayload struct {
	// Adjust record set content and replace the dns name of the original zone with the new dns name of the cloned zone
	AdjustRecords CloneZonePayloadgetAdjustRecordsAttributeType `json:"adjustRecords,omitempty"`
	// New Description for the cloned zone. Leave empty to use the same description as the original zone
	Description CloneZonePayloadGetDescriptionAttributeType `json:"description,omitempty"`
	// DnsName is the dns name of the zone to clone
	// REQUIRED
	DnsName CloneZonePayloadGetDnsNameAttributeType `json:"dnsName"`
	// New Name for the cloned zone. Leave empty to use the same name as the original zone
	Name CloneZonePayloadGetNameAttributeType `json:"name,omitempty"`
}

type _CloneZonePayload CloneZonePayload

// NewCloneZonePayload instantiates a new CloneZonePayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloneZonePayload(dnsName CloneZonePayloadGetDnsNameArgType) *CloneZonePayload {
	this := CloneZonePayload{}
	setCloneZonePayloadGetDnsNameAttributeType(&this.DnsName, dnsName)
	return &this
}

// NewCloneZonePayloadWithDefaults instantiates a new CloneZonePayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloneZonePayloadWithDefaults() *CloneZonePayload {
	this := CloneZonePayload{}
	return &this
}

// GetAdjustRecords returns the AdjustRecords field value if set, zero value otherwise.
func (o *CloneZonePayload) GetAdjustRecords() (res CloneZonePayloadgetAdjustRecordsRetType) {
	res, _ = o.GetAdjustRecordsOk()
	return
}

// GetAdjustRecordsOk returns a tuple with the AdjustRecords field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloneZonePayload) GetAdjustRecordsOk() (ret CloneZonePayloadgetAdjustRecordsRetType, ok bool) {
	return getCloneZonePayloadgetAdjustRecordsAttributeTypeOk(o.AdjustRecords)
}

// HasAdjustRecords returns a boolean if a field has been set.
func (o *CloneZonePayload) HasAdjustRecords() bool {
	_, ok := o.GetAdjustRecordsOk()
	return ok
}

// SetAdjustRecords gets a reference to the given bool and assigns it to the AdjustRecords field.
func (o *CloneZonePayload) SetAdjustRecords(v CloneZonePayloadgetAdjustRecordsRetType) {
	setCloneZonePayloadgetAdjustRecordsAttributeType(&o.AdjustRecords, v)
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CloneZonePayload) GetDescription() (res CloneZonePayloadGetDescriptionRetType) {
	res, _ = o.GetDescriptionOk()
	return
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloneZonePayload) GetDescriptionOk() (ret CloneZonePayloadGetDescriptionRetType, ok bool) {
	return getCloneZonePayloadGetDescriptionAttributeTypeOk(o.Description)
}

// HasDescription returns a boolean if a field has been set.
func (o *CloneZonePayload) HasDescription() bool {
	_, ok := o.GetDescriptionOk()
	return ok
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CloneZonePayload) SetDescription(v CloneZonePayloadGetDescriptionRetType) {
	setCloneZonePayloadGetDescriptionAttributeType(&o.Description, v)
}

// GetDnsName returns the DnsName field value
func (o *CloneZonePayload) GetDnsName() (ret CloneZonePayloadGetDnsNameRetType) {
	ret, _ = o.GetDnsNameOk()
	return ret
}

// GetDnsNameOk returns a tuple with the DnsName field value
// and a boolean to check if the value has been set.
func (o *CloneZonePayload) GetDnsNameOk() (ret CloneZonePayloadGetDnsNameRetType, ok bool) {
	return getCloneZonePayloadGetDnsNameAttributeTypeOk(o.DnsName)
}

// SetDnsName sets field value
func (o *CloneZonePayload) SetDnsName(v CloneZonePayloadGetDnsNameRetType) {
	setCloneZonePayloadGetDnsNameAttributeType(&o.DnsName, v)
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CloneZonePayload) GetName() (res CloneZonePayloadGetNameRetType) {
	res, _ = o.GetNameOk()
	return
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloneZonePayload) GetNameOk() (ret CloneZonePayloadGetNameRetType, ok bool) {
	return getCloneZonePayloadGetNameAttributeTypeOk(o.Name)
}

// HasName returns a boolean if a field has been set.
func (o *CloneZonePayload) HasName() bool {
	_, ok := o.GetNameOk()
	return ok
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CloneZonePayload) SetName(v CloneZonePayloadGetNameRetType) {
	setCloneZonePayloadGetNameAttributeType(&o.Name, v)
}

func (o CloneZonePayload) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CloneZonePayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getCloneZonePayloadgetAdjustRecordsAttributeTypeOk(o.AdjustRecords); ok {
		toSerialize["AdjustRecords"] = val
	}
	if val, ok := getCloneZonePayloadGetDescriptionAttributeTypeOk(o.Description); ok {
		toSerialize["Description"] = val
	}
	if val, ok := getCloneZonePayloadGetDnsNameAttributeTypeOk(o.DnsName); ok {
		toSerialize["DnsName"] = val
	}
	if val, ok := getCloneZonePayloadGetNameAttributeTypeOk(o.Name); ok {
		toSerialize["Name"] = val
	}
	return toSerialize, nil
}

func (o *CloneZonePayload) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"dnsName",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCloneZonePayload := _CloneZonePayload{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCloneZonePayload)

	if err != nil {
		return err
	}

	*o = CloneZonePayload(varCloneZonePayload)

	return err
}

type NullableCloneZonePayload struct {
	value *CloneZonePayload
	isSet bool
}

func (v NullableCloneZonePayload) Get() *CloneZonePayload {
	return v.value
}

func (v *NullableCloneZonePayload) Set(val *CloneZonePayload) {
	v.value = val
	v.isSet = true
}

func (v NullableCloneZonePayload) IsSet() bool {
	return v.isSet
}

func (v *NullableCloneZonePayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloneZonePayload(val *CloneZonePayload) *NullableCloneZonePayload {
	return &NullableCloneZonePayload{value: val, isSet: true}
}

func (v NullableCloneZonePayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloneZonePayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
