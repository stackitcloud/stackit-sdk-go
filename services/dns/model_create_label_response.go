/*
STACKIT DNS API

This api provides dns

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dns

import (
	"encoding/json"
)

// checks if the CreateLabelResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateLabelResponse{}

/*
	types and functions for label
*/

// isModel
type CreateLabelResponseGetLabelAttributeType = *Label
type CreateLabelResponseGetLabelArgType = Label
type CreateLabelResponseGetLabelRetType = Label

func getCreateLabelResponseGetLabelAttributeTypeOk(arg CreateLabelResponseGetLabelAttributeType) (ret CreateLabelResponseGetLabelRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setCreateLabelResponseGetLabelAttributeType(arg *CreateLabelResponseGetLabelAttributeType, val CreateLabelResponseGetLabelRetType) {
	*arg = &val
}

/*
	types and functions for message
*/

// isNotNullableString
type CreateLabelResponseGetMessageAttributeType = *string

func getCreateLabelResponseGetMessageAttributeTypeOk(arg CreateLabelResponseGetMessageAttributeType) (ret CreateLabelResponseGetMessageRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setCreateLabelResponseGetMessageAttributeType(arg *CreateLabelResponseGetMessageAttributeType, val CreateLabelResponseGetMessageRetType) {
	*arg = &val
}

type CreateLabelResponseGetMessageArgType = string
type CreateLabelResponseGetMessageRetType = string

// CreateLabelResponse ResponseUpsertLabel.
type CreateLabelResponse struct {
	Label   CreateLabelResponseGetLabelAttributeType   `json:"label,omitempty"`
	Message CreateLabelResponseGetMessageAttributeType `json:"message,omitempty"`
}

// NewCreateLabelResponse instantiates a new CreateLabelResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateLabelResponse() *CreateLabelResponse {
	this := CreateLabelResponse{}
	return &this
}

// NewCreateLabelResponseWithDefaults instantiates a new CreateLabelResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateLabelResponseWithDefaults() *CreateLabelResponse {
	this := CreateLabelResponse{}
	return &this
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *CreateLabelResponse) GetLabel() (res CreateLabelResponseGetLabelRetType) {
	res, _ = o.GetLabelOk()
	return
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateLabelResponse) GetLabelOk() (ret CreateLabelResponseGetLabelRetType, ok bool) {
	return getCreateLabelResponseGetLabelAttributeTypeOk(o.Label)
}

// HasLabel returns a boolean if a field has been set.
func (o *CreateLabelResponse) HasLabel() bool {
	_, ok := o.GetLabelOk()
	return ok
}

// SetLabel gets a reference to the given Label and assigns it to the Label field.
func (o *CreateLabelResponse) SetLabel(v CreateLabelResponseGetLabelRetType) {
	setCreateLabelResponseGetLabelAttributeType(&o.Label, v)
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *CreateLabelResponse) GetMessage() (res CreateLabelResponseGetMessageRetType) {
	res, _ = o.GetMessageOk()
	return
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateLabelResponse) GetMessageOk() (ret CreateLabelResponseGetMessageRetType, ok bool) {
	return getCreateLabelResponseGetMessageAttributeTypeOk(o.Message)
}

// HasMessage returns a boolean if a field has been set.
func (o *CreateLabelResponse) HasMessage() bool {
	_, ok := o.GetMessageOk()
	return ok
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *CreateLabelResponse) SetMessage(v CreateLabelResponseGetMessageRetType) {
	setCreateLabelResponseGetMessageAttributeType(&o.Message, v)
}

func (o CreateLabelResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getCreateLabelResponseGetLabelAttributeTypeOk(o.Label); ok {
		toSerialize["Label"] = val
	}
	if val, ok := getCreateLabelResponseGetMessageAttributeTypeOk(o.Message); ok {
		toSerialize["Message"] = val
	}
	return toSerialize, nil
}

type NullableCreateLabelResponse struct {
	value *CreateLabelResponse
	isSet bool
}

func (v NullableCreateLabelResponse) Get() *CreateLabelResponse {
	return v.value
}

func (v *NullableCreateLabelResponse) Set(val *CreateLabelResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateLabelResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateLabelResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateLabelResponse(val *CreateLabelResponse) *NullableCreateLabelResponse {
	return &NullableCreateLabelResponse{value: val, isSet: true}
}

func (v NullableCreateLabelResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateLabelResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
