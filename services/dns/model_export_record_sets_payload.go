/*
STACKIT DNS API

This api provides dns

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dns

import (
	"encoding/json"
)

// checks if the ExportRecordSetsPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExportRecordSetsPayload{}

// ExportRecordSetsPayload struct for ExportRecordSetsPayload
type ExportRecordSetsPayload struct {
	ExportAsFQDN *bool   `json:"exportAsFQDN,omitempty"`
	Format       *string `json:"format,omitempty"`
}

// NewExportRecordSetsPayload instantiates a new ExportRecordSetsPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExportRecordSetsPayload() *ExportRecordSetsPayload {
	this := ExportRecordSetsPayload{}
	var exportAsFQDN bool = true
	this.ExportAsFQDN = &exportAsFQDN
	var format string = "csv"
	this.Format = &format
	return &this
}

// NewExportRecordSetsPayloadWithDefaults instantiates a new ExportRecordSetsPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExportRecordSetsPayloadWithDefaults() *ExportRecordSetsPayload {
	this := ExportRecordSetsPayload{}
	var exportAsFQDN bool = true
	this.ExportAsFQDN = &exportAsFQDN
	var format string = "csv"
	this.Format = &format
	return &this
}

// GetExportAsFQDN returns the ExportAsFQDN field value if set, zero value otherwise.
func (o *ExportRecordSetsPayload) GetExportAsFQDN() *bool {
	if o == nil || IsNil(o.ExportAsFQDN) {
		var ret *bool
		return ret
	}
	return o.ExportAsFQDN
}

// GetExportAsFQDNOk returns a tuple with the ExportAsFQDN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportRecordSetsPayload) GetExportAsFQDNOk() (*bool, bool) {
	if o == nil || IsNil(o.ExportAsFQDN) {
		return nil, false
	}
	return o.ExportAsFQDN, true
}

// HasExportAsFQDN returns a boolean if a field has been set.
func (o *ExportRecordSetsPayload) HasExportAsFQDN() bool {
	if o != nil && !IsNil(o.ExportAsFQDN) {
		return true
	}

	return false
}

// SetExportAsFQDN gets a reference to the given bool and assigns it to the ExportAsFQDN field.
func (o *ExportRecordSetsPayload) SetExportAsFQDN(v *bool) {
	o.ExportAsFQDN = v
}

// GetFormat returns the Format field value if set, zero value otherwise.
func (o *ExportRecordSetsPayload) GetFormat() *string {
	if o == nil || IsNil(o.Format) {
		var ret *string
		return ret
	}
	return o.Format
}

// GetFormatOk returns a tuple with the Format field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportRecordSetsPayload) GetFormatOk() (*string, bool) {
	if o == nil || IsNil(o.Format) {
		return nil, false
	}
	return o.Format, true
}

// HasFormat returns a boolean if a field has been set.
func (o *ExportRecordSetsPayload) HasFormat() bool {
	if o != nil && !IsNil(o.Format) {
		return true
	}

	return false
}

// SetFormat gets a reference to the given string and assigns it to the Format field.
func (o *ExportRecordSetsPayload) SetFormat(v *string) {
	o.Format = v
}

func (o ExportRecordSetsPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ExportAsFQDN) {
		toSerialize["exportAsFQDN"] = o.ExportAsFQDN
	}
	if !IsNil(o.Format) {
		toSerialize["format"] = o.Format
	}
	return toSerialize, nil
}

type NullableExportRecordSetsPayload struct {
	value *ExportRecordSetsPayload
	isSet bool
}

func (v NullableExportRecordSetsPayload) Get() *ExportRecordSetsPayload {
	return v.value
}

func (v *NullableExportRecordSetsPayload) Set(val *ExportRecordSetsPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableExportRecordSetsPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableExportRecordSetsPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExportRecordSetsPayload(val *ExportRecordSetsPayload) *NullableExportRecordSetsPayload {
	return &NullableExportRecordSetsPayload{value: val, isSet: true}
}

func (v NullableExportRecordSetsPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExportRecordSetsPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
