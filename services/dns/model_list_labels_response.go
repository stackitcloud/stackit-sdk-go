/*
STACKIT DNS API

This api provides dns

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dns

import (
	"encoding/json"
)

// checks if the ListLabelsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListLabelsResponse{}

/*
	types and functions for labels
*/

// isArray
type ListLabelsResponseGetLabelsAttributeType = *[]Label
type ListLabelsResponseGetLabelsArgType = []Label
type ListLabelsResponseGetLabelsRetType = []Label

func getListLabelsResponseGetLabelsAttributeTypeOk(arg ListLabelsResponseGetLabelsAttributeType) (ret ListLabelsResponseGetLabelsRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setListLabelsResponseGetLabelsAttributeType(arg *ListLabelsResponseGetLabelsAttributeType, val ListLabelsResponseGetLabelsRetType) {
	*arg = &val
}

/*
	types and functions for message
*/

// isNotNullableString
type ListLabelsResponseGetMessageAttributeType = *string

func getListLabelsResponseGetMessageAttributeTypeOk(arg ListLabelsResponseGetMessageAttributeType) (ret ListLabelsResponseGetMessageRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setListLabelsResponseGetMessageAttributeType(arg *ListLabelsResponseGetMessageAttributeType, val ListLabelsResponseGetMessageRetType) {
	*arg = &val
}

type ListLabelsResponseGetMessageArgType = string
type ListLabelsResponseGetMessageRetType = string

// ListLabelsResponse ResponseAllLabels.
type ListLabelsResponse struct {
	Labels  ListLabelsResponseGetLabelsAttributeType  `json:"labels,omitempty"`
	Message ListLabelsResponseGetMessageAttributeType `json:"message,omitempty"`
}

// NewListLabelsResponse instantiates a new ListLabelsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListLabelsResponse() *ListLabelsResponse {
	this := ListLabelsResponse{}
	return &this
}

// NewListLabelsResponseWithDefaults instantiates a new ListLabelsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListLabelsResponseWithDefaults() *ListLabelsResponse {
	this := ListLabelsResponse{}
	return &this
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *ListLabelsResponse) GetLabels() (res ListLabelsResponseGetLabelsRetType) {
	res, _ = o.GetLabelsOk()
	return
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListLabelsResponse) GetLabelsOk() (ret ListLabelsResponseGetLabelsRetType, ok bool) {
	return getListLabelsResponseGetLabelsAttributeTypeOk(o.Labels)
}

// HasLabels returns a boolean if a field has been set.
func (o *ListLabelsResponse) HasLabels() bool {
	_, ok := o.GetLabelsOk()
	return ok
}

// SetLabels gets a reference to the given []Label and assigns it to the Labels field.
func (o *ListLabelsResponse) SetLabels(v ListLabelsResponseGetLabelsRetType) {
	setListLabelsResponseGetLabelsAttributeType(&o.Labels, v)
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *ListLabelsResponse) GetMessage() (res ListLabelsResponseGetMessageRetType) {
	res, _ = o.GetMessageOk()
	return
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListLabelsResponse) GetMessageOk() (ret ListLabelsResponseGetMessageRetType, ok bool) {
	return getListLabelsResponseGetMessageAttributeTypeOk(o.Message)
}

// HasMessage returns a boolean if a field has been set.
func (o *ListLabelsResponse) HasMessage() bool {
	_, ok := o.GetMessageOk()
	return ok
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *ListLabelsResponse) SetMessage(v ListLabelsResponseGetMessageRetType) {
	setListLabelsResponseGetMessageAttributeType(&o.Message, v)
}

func (o ListLabelsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getListLabelsResponseGetLabelsAttributeTypeOk(o.Labels); ok {
		toSerialize["Labels"] = val
	}
	if val, ok := getListLabelsResponseGetMessageAttributeTypeOk(o.Message); ok {
		toSerialize["Message"] = val
	}
	return toSerialize, nil
}

type NullableListLabelsResponse struct {
	value *ListLabelsResponse
	isSet bool
}

func (v NullableListLabelsResponse) Get() *ListLabelsResponse {
	return v.value
}

func (v *NullableListLabelsResponse) Set(val *ListLabelsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListLabelsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListLabelsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListLabelsResponse(val *ListLabelsResponse) *NullableListLabelsResponse {
	return &NullableListLabelsResponse{value: val, isSet: true}
}

func (v NullableListLabelsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListLabelsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
