/*
Application Load Balancer API

This API offers an interface to provision and manage load balancing servers in your STACKIT project. It also has the possibility of pooling target servers for load balancing purposes.  For each application load balancer provided, two VMs are deployed in your OpenStack project subject to a fee.

API version: 2beta2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alb

import (
	"encoding/json"
)

// checks if the SecurityGroup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SecurityGroup{}

/*
	types and functions for id
*/

// isNotNullableString
type SecurityGroupGetIdAttributeType = *string

func getSecurityGroupGetIdAttributeTypeOk(arg SecurityGroupGetIdAttributeType) (ret SecurityGroupGetIdRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setSecurityGroupGetIdAttributeType(arg *SecurityGroupGetIdAttributeType, val SecurityGroupGetIdRetType) {
	*arg = &val
}

type SecurityGroupGetIdArgType = string
type SecurityGroupGetIdRetType = string

/*
	types and functions for name
*/

// isNotNullableString
type SecurityGroupGetNameAttributeType = *string

func getSecurityGroupGetNameAttributeTypeOk(arg SecurityGroupGetNameAttributeType) (ret SecurityGroupGetNameRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setSecurityGroupGetNameAttributeType(arg *SecurityGroupGetNameAttributeType, val SecurityGroupGetNameRetType) {
	*arg = &val
}

type SecurityGroupGetNameArgType = string
type SecurityGroupGetNameRetType = string

// SecurityGroup struct for SecurityGroup
type SecurityGroup struct {
	// ID of the security Group
	Id SecurityGroupGetIdAttributeType `json:"id,omitempty"`
	// Name of the security Group
	Name SecurityGroupGetNameAttributeType `json:"name,omitempty"`
}

// NewSecurityGroup instantiates a new SecurityGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecurityGroup() *SecurityGroup {
	this := SecurityGroup{}
	return &this
}

// NewSecurityGroupWithDefaults instantiates a new SecurityGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecurityGroupWithDefaults() *SecurityGroup {
	this := SecurityGroup{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SecurityGroup) GetId() (res SecurityGroupGetIdRetType) {
	res, _ = o.GetIdOk()
	return
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityGroup) GetIdOk() (ret SecurityGroupGetIdRetType, ok bool) {
	return getSecurityGroupGetIdAttributeTypeOk(o.Id)
}

// HasId returns a boolean if a field has been set.
func (o *SecurityGroup) HasId() bool {
	_, ok := o.GetIdOk()
	return ok
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *SecurityGroup) SetId(v SecurityGroupGetIdRetType) {
	setSecurityGroupGetIdAttributeType(&o.Id, v)
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SecurityGroup) GetName() (res SecurityGroupGetNameRetType) {
	res, _ = o.GetNameOk()
	return
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityGroup) GetNameOk() (ret SecurityGroupGetNameRetType, ok bool) {
	return getSecurityGroupGetNameAttributeTypeOk(o.Name)
}

// HasName returns a boolean if a field has been set.
func (o *SecurityGroup) HasName() bool {
	_, ok := o.GetNameOk()
	return ok
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SecurityGroup) SetName(v SecurityGroupGetNameRetType) {
	setSecurityGroupGetNameAttributeType(&o.Name, v)
}

func (o SecurityGroup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getSecurityGroupGetIdAttributeTypeOk(o.Id); ok {
		toSerialize["Id"] = val
	}
	if val, ok := getSecurityGroupGetNameAttributeTypeOk(o.Name); ok {
		toSerialize["Name"] = val
	}
	return toSerialize, nil
}

type NullableSecurityGroup struct {
	value *SecurityGroup
	isSet bool
}

func (v NullableSecurityGroup) Get() *SecurityGroup {
	return v.value
}

func (v *NullableSecurityGroup) Set(val *SecurityGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableSecurityGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableSecurityGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecurityGroup(val *SecurityGroup) *NullableSecurityGroup {
	return &NullableSecurityGroup{value: val, isSet: true}
}

func (v NullableSecurityGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecurityGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
