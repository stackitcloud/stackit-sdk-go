/*
Application Load Balancer API

This API offers an interface to provision and manage load balancing servers in your STACKIT project. It also has the possibility of pooling target servers for load balancing purposes.  For each application load balancer provided, two VMs are deployed in your OpenStack project subject to a fee.

API version: 2beta2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alb

import (
	"encoding/json"
)

// checks if the QueryParameter type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QueryParameter{}

/*
	types and functions for exactMatch
*/

// isNotNullableString
type QueryParameterGetExactMatchAttributeType = *string

func getQueryParameterGetExactMatchAttributeTypeOk(arg QueryParameterGetExactMatchAttributeType) (ret QueryParameterGetExactMatchRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setQueryParameterGetExactMatchAttributeType(arg *QueryParameterGetExactMatchAttributeType, val QueryParameterGetExactMatchRetType) {
	*arg = &val
}

type QueryParameterGetExactMatchArgType = string
type QueryParameterGetExactMatchRetType = string

/*
	types and functions for name
*/

// isNotNullableString
type QueryParameterGetNameAttributeType = *string

func getQueryParameterGetNameAttributeTypeOk(arg QueryParameterGetNameAttributeType) (ret QueryParameterGetNameRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setQueryParameterGetNameAttributeType(arg *QueryParameterGetNameAttributeType, val QueryParameterGetNameRetType) {
	*arg = &val
}

type QueryParameterGetNameArgType = string
type QueryParameterGetNameRetType = string

// QueryParameter struct for QueryParameter
type QueryParameter struct {
	// Exact match for the parameter value.
	ExactMatch QueryParameterGetExactMatchAttributeType `json:"exactMatch,omitempty"`
	// Parameter name.
	Name QueryParameterGetNameAttributeType `json:"name,omitempty"`
}

// NewQueryParameter instantiates a new QueryParameter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQueryParameter() *QueryParameter {
	this := QueryParameter{}
	return &this
}

// NewQueryParameterWithDefaults instantiates a new QueryParameter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQueryParameterWithDefaults() *QueryParameter {
	this := QueryParameter{}
	return &this
}

// GetExactMatch returns the ExactMatch field value if set, zero value otherwise.
func (o *QueryParameter) GetExactMatch() (res QueryParameterGetExactMatchRetType) {
	res, _ = o.GetExactMatchOk()
	return
}

// GetExactMatchOk returns a tuple with the ExactMatch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryParameter) GetExactMatchOk() (ret QueryParameterGetExactMatchRetType, ok bool) {
	return getQueryParameterGetExactMatchAttributeTypeOk(o.ExactMatch)
}

// HasExactMatch returns a boolean if a field has been set.
func (o *QueryParameter) HasExactMatch() bool {
	_, ok := o.GetExactMatchOk()
	return ok
}

// SetExactMatch gets a reference to the given string and assigns it to the ExactMatch field.
func (o *QueryParameter) SetExactMatch(v QueryParameterGetExactMatchRetType) {
	setQueryParameterGetExactMatchAttributeType(&o.ExactMatch, v)
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *QueryParameter) GetName() (res QueryParameterGetNameRetType) {
	res, _ = o.GetNameOk()
	return
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryParameter) GetNameOk() (ret QueryParameterGetNameRetType, ok bool) {
	return getQueryParameterGetNameAttributeTypeOk(o.Name)
}

// HasName returns a boolean if a field has been set.
func (o *QueryParameter) HasName() bool {
	_, ok := o.GetNameOk()
	return ok
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *QueryParameter) SetName(v QueryParameterGetNameRetType) {
	setQueryParameterGetNameAttributeType(&o.Name, v)
}

func (o QueryParameter) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getQueryParameterGetExactMatchAttributeTypeOk(o.ExactMatch); ok {
		toSerialize["ExactMatch"] = val
	}
	if val, ok := getQueryParameterGetNameAttributeTypeOk(o.Name); ok {
		toSerialize["Name"] = val
	}
	return toSerialize, nil
}

type NullableQueryParameter struct {
	value *QueryParameter
	isSet bool
}

func (v NullableQueryParameter) Get() *QueryParameter {
	return v.value
}

func (v *NullableQueryParameter) Set(val *QueryParameter) {
	v.value = val
	v.isSet = true
}

func (v NullableQueryParameter) IsSet() bool {
	return v.isSet
}

func (v *NullableQueryParameter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQueryParameter(val *QueryParameter) *NullableQueryParameter {
	return &NullableQueryParameter{value: val, isSet: true}
}

func (v NullableQueryParameter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQueryParameter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
