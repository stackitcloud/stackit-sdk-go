/*
IaaS-API

This API allows you to create and modify IaaS resources.

API version: 1alpha1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iaasalpha

import (
	"encoding/json"
)

// checks if the BackupListResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BackupListResponse{}

// BackupListResponse Backup list response.
type BackupListResponse struct {
	// A list containing backup objects.
	// REQUIRED
	Items *[]Backup `json:"items"`
}

type _BackupListResponse BackupListResponse

// NewBackupListResponse instantiates a new BackupListResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBackupListResponse(items *[]Backup) *BackupListResponse {
	this := BackupListResponse{}
	this.Items = items
	return &this
}

// NewBackupListResponseWithDefaults instantiates a new BackupListResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBackupListResponseWithDefaults() *BackupListResponse {
	this := BackupListResponse{}
	return &this
}

// GetItems returns the Items field value
func (o *BackupListResponse) GetItems() *[]Backup {
	if o == nil || IsNil(o.Items) {
		var ret *[]Backup
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *BackupListResponse) GetItemsOk() (*[]Backup, bool) {
	if o == nil {
		return nil, false
	}
	return o.Items, true
}

// SetItems sets field value
func (o *BackupListResponse) SetItems(v *[]Backup) {
	o.Items = v
}

func (o BackupListResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["items"] = o.Items
	return toSerialize, nil
}

type NullableBackupListResponse struct {
	value *BackupListResponse
	isSet bool
}

func (v NullableBackupListResponse) Get() *BackupListResponse {
	return v.value
}

func (v *NullableBackupListResponse) Set(val *BackupListResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableBackupListResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableBackupListResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBackupListResponse(val *BackupListResponse) *NullableBackupListResponse {
	return &NullableBackupListResponse{value: val, isSet: true}
}

func (v NullableBackupListResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBackupListResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
