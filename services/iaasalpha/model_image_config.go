/*
IaaS-API

This API allows you to create and modify IaaS resources.

API version: 1alpha1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iaasalpha

import (
	"encoding/json"
)

// checks if the ImageConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ImageConfig{}

// ImageConfig Properties to set hardware and scheduling settings for an Image.
type ImageConfig struct {
	// Represents CPU architecture. The default for new images is x86.
	Architecture *string `json:"architecture,omitempty"`
	// Enables the BIOS bootmenu. The default for new images is disabled.
	BootMenu *bool `json:"bootMenu,omitempty"`
	// Sets CDROM bus controller type.
	CdromBus *NullableString `json:"cdromBus,omitempty"`
	// Sets Disk bus controller type.
	DiskBus *NullableString `json:"diskBus,omitempty"`
	// Sets virtual nic model.
	NicModel *NullableString `json:"nicModel,omitempty"`
	// Enables OS specific optimizations.
	OperatingSystem *string `json:"operatingSystem,omitempty"`
	// Operating System Distribution.
	OperatingSystemDistro *NullableString `json:"operatingSystemDistro,omitempty"`
	// Version of the OS.
	OperatingSystemVersion *NullableString `json:"operatingSystemVersion,omitempty"`
	// Sets the device bus when the image is used as a rescue image.
	RescueBus *NullableString `json:"rescueBus,omitempty"`
	// Sets the device when the image is used as a rescue image.
	RescueDevice *NullableString `json:"rescueDevice,omitempty"`
	// Enables Secure Boot. The default for new images is disabled.
	SecureBoot *bool `json:"secureBoot,omitempty"`
	// Configure UEFI boot. The default for new images is enabled.
	Uefi *bool `json:"uefi,omitempty"`
	// Sets Graphic device model.
	VideoModel *NullableString `json:"videoModel,omitempty"`
	// Enables the use of VirtIO SCSI to provide block device access. By default servers use VirtIO Block.
	VirtioScsi *bool `json:"virtioScsi,omitempty"`
}

// NewImageConfig instantiates a new ImageConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImageConfig() *ImageConfig {
	this := ImageConfig{}
	return &this
}

// NewImageConfigWithDefaults instantiates a new ImageConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImageConfigWithDefaults() *ImageConfig {
	this := ImageConfig{}
	return &this
}

// GetArchitecture returns the Architecture field value if set, zero value otherwise.
func (o *ImageConfig) GetArchitecture() *string {
	if o == nil || IsNil(o.Architecture) {
		var ret *string
		return ret
	}
	return o.Architecture
}

// GetArchitectureOk returns a tuple with the Architecture field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageConfig) GetArchitectureOk() (*string, bool) {
	if o == nil || IsNil(o.Architecture) {
		return nil, false
	}
	return o.Architecture, true
}

// HasArchitecture returns a boolean if a field has been set.
func (o *ImageConfig) HasArchitecture() bool {
	if o != nil && !IsNil(o.Architecture) {
		return true
	}

	return false
}

// SetArchitecture gets a reference to the given string and assigns it to the Architecture field.
func (o *ImageConfig) SetArchitecture(v *string) {
	o.Architecture = v
}

// GetBootMenu returns the BootMenu field value if set, zero value otherwise.
func (o *ImageConfig) GetBootMenu() *bool {
	if o == nil || IsNil(o.BootMenu) {
		var ret *bool
		return ret
	}
	return o.BootMenu
}

// GetBootMenuOk returns a tuple with the BootMenu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageConfig) GetBootMenuOk() (*bool, bool) {
	if o == nil || IsNil(o.BootMenu) {
		return nil, false
	}
	return o.BootMenu, true
}

// HasBootMenu returns a boolean if a field has been set.
func (o *ImageConfig) HasBootMenu() bool {
	if o != nil && !IsNil(o.BootMenu) {
		return true
	}

	return false
}

// SetBootMenu gets a reference to the given bool and assigns it to the BootMenu field.
func (o *ImageConfig) SetBootMenu(v *bool) {
	o.BootMenu = v
}

// GetCdromBus returns the CdromBus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImageConfig) GetCdromBus() *string {
	if o == nil || IsNil(o.CdromBus) || IsNil(o.CdromBus.Get()) {
		var ret *string
		return ret
	}
	return o.CdromBus.Get()
}

// GetCdromBusOk returns a tuple with the CdromBus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImageConfig) GetCdromBusOk() (*string, bool) {
	if o == nil || IsNil(o.CdromBus) {
		return nil, false
	}
	return o.CdromBus.Get(), o.CdromBus.IsSet()
}

// HasCdromBus returns a boolean if a field has been set.
func (o *ImageConfig) HasCdromBus() bool {
	if o != nil && !IsNil(o.CdromBus) && o.CdromBus.IsSet() {
		return true
	}

	return false
}

// SetCdromBus gets a reference to the given string and assigns it to the CdromBus field.
func (o *ImageConfig) SetCdromBus(v *string) {
	if IsNil(o.CdromBus) {
		o.CdromBus = new(NullableString)
	}
	o.CdromBus.Set(v)
}

// SetCdromBusNil sets the value for CdromBus to be an explicit nil
func (o *ImageConfig) SetCdromBusNil() {
	if IsNil(o.CdromBus) {
		o.CdromBus = new(NullableString)
	}
	o.CdromBus.Set(nil)
}

// UnsetCdromBus ensures that no value is present for CdromBus, not even an explicit nil
func (o *ImageConfig) UnsetCdromBus() {
	if IsNil(o.CdromBus) {
		o.CdromBus = new(NullableString)
	}
	o.CdromBus.Unset()
}

// GetDiskBus returns the DiskBus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImageConfig) GetDiskBus() *string {
	if o == nil || IsNil(o.DiskBus) || IsNil(o.DiskBus.Get()) {
		var ret *string
		return ret
	}
	return o.DiskBus.Get()
}

// GetDiskBusOk returns a tuple with the DiskBus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImageConfig) GetDiskBusOk() (*string, bool) {
	if o == nil || IsNil(o.DiskBus) {
		return nil, false
	}
	return o.DiskBus.Get(), o.DiskBus.IsSet()
}

// HasDiskBus returns a boolean if a field has been set.
func (o *ImageConfig) HasDiskBus() bool {
	if o != nil && !IsNil(o.DiskBus) && o.DiskBus.IsSet() {
		return true
	}

	return false
}

// SetDiskBus gets a reference to the given string and assigns it to the DiskBus field.
func (o *ImageConfig) SetDiskBus(v *string) {
	if IsNil(o.DiskBus) {
		o.DiskBus = new(NullableString)
	}
	o.DiskBus.Set(v)
}

// SetDiskBusNil sets the value for DiskBus to be an explicit nil
func (o *ImageConfig) SetDiskBusNil() {
	if IsNil(o.DiskBus) {
		o.DiskBus = new(NullableString)
	}
	o.DiskBus.Set(nil)
}

// UnsetDiskBus ensures that no value is present for DiskBus, not even an explicit nil
func (o *ImageConfig) UnsetDiskBus() {
	if IsNil(o.DiskBus) {
		o.DiskBus = new(NullableString)
	}
	o.DiskBus.Unset()
}

// GetNicModel returns the NicModel field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImageConfig) GetNicModel() *string {
	if o == nil || IsNil(o.NicModel) || IsNil(o.NicModel.Get()) {
		var ret *string
		return ret
	}
	return o.NicModel.Get()
}

// GetNicModelOk returns a tuple with the NicModel field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImageConfig) GetNicModelOk() (*string, bool) {
	if o == nil || IsNil(o.NicModel) {
		return nil, false
	}
	return o.NicModel.Get(), o.NicModel.IsSet()
}

// HasNicModel returns a boolean if a field has been set.
func (o *ImageConfig) HasNicModel() bool {
	if o != nil && !IsNil(o.NicModel) && o.NicModel.IsSet() {
		return true
	}

	return false
}

// SetNicModel gets a reference to the given string and assigns it to the NicModel field.
func (o *ImageConfig) SetNicModel(v *string) {
	if IsNil(o.NicModel) {
		o.NicModel = new(NullableString)
	}
	o.NicModel.Set(v)
}

// SetNicModelNil sets the value for NicModel to be an explicit nil
func (o *ImageConfig) SetNicModelNil() {
	if IsNil(o.NicModel) {
		o.NicModel = new(NullableString)
	}
	o.NicModel.Set(nil)
}

// UnsetNicModel ensures that no value is present for NicModel, not even an explicit nil
func (o *ImageConfig) UnsetNicModel() {
	if IsNil(o.NicModel) {
		o.NicModel = new(NullableString)
	}
	o.NicModel.Unset()
}

// GetOperatingSystem returns the OperatingSystem field value if set, zero value otherwise.
func (o *ImageConfig) GetOperatingSystem() *string {
	if o == nil || IsNil(o.OperatingSystem) {
		var ret *string
		return ret
	}
	return o.OperatingSystem
}

// GetOperatingSystemOk returns a tuple with the OperatingSystem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageConfig) GetOperatingSystemOk() (*string, bool) {
	if o == nil || IsNil(o.OperatingSystem) {
		return nil, false
	}
	return o.OperatingSystem, true
}

// HasOperatingSystem returns a boolean if a field has been set.
func (o *ImageConfig) HasOperatingSystem() bool {
	if o != nil && !IsNil(o.OperatingSystem) {
		return true
	}

	return false
}

// SetOperatingSystem gets a reference to the given string and assigns it to the OperatingSystem field.
func (o *ImageConfig) SetOperatingSystem(v *string) {
	o.OperatingSystem = v
}

// GetOperatingSystemDistro returns the OperatingSystemDistro field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImageConfig) GetOperatingSystemDistro() *string {
	if o == nil || IsNil(o.OperatingSystemDistro) || IsNil(o.OperatingSystemDistro.Get()) {
		var ret *string
		return ret
	}
	return o.OperatingSystemDistro.Get()
}

// GetOperatingSystemDistroOk returns a tuple with the OperatingSystemDistro field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImageConfig) GetOperatingSystemDistroOk() (*string, bool) {
	if o == nil || IsNil(o.OperatingSystemDistro) {
		return nil, false
	}
	return o.OperatingSystemDistro.Get(), o.OperatingSystemDistro.IsSet()
}

// HasOperatingSystemDistro returns a boolean if a field has been set.
func (o *ImageConfig) HasOperatingSystemDistro() bool {
	if o != nil && !IsNil(o.OperatingSystemDistro) && o.OperatingSystemDistro.IsSet() {
		return true
	}

	return false
}

// SetOperatingSystemDistro gets a reference to the given string and assigns it to the OperatingSystemDistro field.
func (o *ImageConfig) SetOperatingSystemDistro(v *string) {
	if IsNil(o.OperatingSystemDistro) {
		o.OperatingSystemDistro = new(NullableString)
	}
	o.OperatingSystemDistro.Set(v)
}

// SetOperatingSystemDistroNil sets the value for OperatingSystemDistro to be an explicit nil
func (o *ImageConfig) SetOperatingSystemDistroNil() {
	if IsNil(o.OperatingSystemDistro) {
		o.OperatingSystemDistro = new(NullableString)
	}
	o.OperatingSystemDistro.Set(nil)
}

// UnsetOperatingSystemDistro ensures that no value is present for OperatingSystemDistro, not even an explicit nil
func (o *ImageConfig) UnsetOperatingSystemDistro() {
	if IsNil(o.OperatingSystemDistro) {
		o.OperatingSystemDistro = new(NullableString)
	}
	o.OperatingSystemDistro.Unset()
}

// GetOperatingSystemVersion returns the OperatingSystemVersion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImageConfig) GetOperatingSystemVersion() *string {
	if o == nil || IsNil(o.OperatingSystemVersion) || IsNil(o.OperatingSystemVersion.Get()) {
		var ret *string
		return ret
	}
	return o.OperatingSystemVersion.Get()
}

// GetOperatingSystemVersionOk returns a tuple with the OperatingSystemVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImageConfig) GetOperatingSystemVersionOk() (*string, bool) {
	if o == nil || IsNil(o.OperatingSystemVersion) {
		return nil, false
	}
	return o.OperatingSystemVersion.Get(), o.OperatingSystemVersion.IsSet()
}

// HasOperatingSystemVersion returns a boolean if a field has been set.
func (o *ImageConfig) HasOperatingSystemVersion() bool {
	if o != nil && !IsNil(o.OperatingSystemVersion) && o.OperatingSystemVersion.IsSet() {
		return true
	}

	return false
}

// SetOperatingSystemVersion gets a reference to the given string and assigns it to the OperatingSystemVersion field.
func (o *ImageConfig) SetOperatingSystemVersion(v *string) {
	if IsNil(o.OperatingSystemVersion) {
		o.OperatingSystemVersion = new(NullableString)
	}
	o.OperatingSystemVersion.Set(v)
}

// SetOperatingSystemVersionNil sets the value for OperatingSystemVersion to be an explicit nil
func (o *ImageConfig) SetOperatingSystemVersionNil() {
	if IsNil(o.OperatingSystemVersion) {
		o.OperatingSystemVersion = new(NullableString)
	}
	o.OperatingSystemVersion.Set(nil)
}

// UnsetOperatingSystemVersion ensures that no value is present for OperatingSystemVersion, not even an explicit nil
func (o *ImageConfig) UnsetOperatingSystemVersion() {
	if IsNil(o.OperatingSystemVersion) {
		o.OperatingSystemVersion = new(NullableString)
	}
	o.OperatingSystemVersion.Unset()
}

// GetRescueBus returns the RescueBus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImageConfig) GetRescueBus() *string {
	if o == nil || IsNil(o.RescueBus) || IsNil(o.RescueBus.Get()) {
		var ret *string
		return ret
	}
	return o.RescueBus.Get()
}

// GetRescueBusOk returns a tuple with the RescueBus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImageConfig) GetRescueBusOk() (*string, bool) {
	if o == nil || IsNil(o.RescueBus) {
		return nil, false
	}
	return o.RescueBus.Get(), o.RescueBus.IsSet()
}

// HasRescueBus returns a boolean if a field has been set.
func (o *ImageConfig) HasRescueBus() bool {
	if o != nil && !IsNil(o.RescueBus) && o.RescueBus.IsSet() {
		return true
	}

	return false
}

// SetRescueBus gets a reference to the given string and assigns it to the RescueBus field.
func (o *ImageConfig) SetRescueBus(v *string) {
	if IsNil(o.RescueBus) {
		o.RescueBus = new(NullableString)
	}
	o.RescueBus.Set(v)
}

// SetRescueBusNil sets the value for RescueBus to be an explicit nil
func (o *ImageConfig) SetRescueBusNil() {
	if IsNil(o.RescueBus) {
		o.RescueBus = new(NullableString)
	}
	o.RescueBus.Set(nil)
}

// UnsetRescueBus ensures that no value is present for RescueBus, not even an explicit nil
func (o *ImageConfig) UnsetRescueBus() {
	if IsNil(o.RescueBus) {
		o.RescueBus = new(NullableString)
	}
	o.RescueBus.Unset()
}

// GetRescueDevice returns the RescueDevice field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImageConfig) GetRescueDevice() *string {
	if o == nil || IsNil(o.RescueDevice) || IsNil(o.RescueDevice.Get()) {
		var ret *string
		return ret
	}
	return o.RescueDevice.Get()
}

// GetRescueDeviceOk returns a tuple with the RescueDevice field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImageConfig) GetRescueDeviceOk() (*string, bool) {
	if o == nil || IsNil(o.RescueDevice) {
		return nil, false
	}
	return o.RescueDevice.Get(), o.RescueDevice.IsSet()
}

// HasRescueDevice returns a boolean if a field has been set.
func (o *ImageConfig) HasRescueDevice() bool {
	if o != nil && !IsNil(o.RescueDevice) && o.RescueDevice.IsSet() {
		return true
	}

	return false
}

// SetRescueDevice gets a reference to the given string and assigns it to the RescueDevice field.
func (o *ImageConfig) SetRescueDevice(v *string) {
	if IsNil(o.RescueDevice) {
		o.RescueDevice = new(NullableString)
	}
	o.RescueDevice.Set(v)
}

// SetRescueDeviceNil sets the value for RescueDevice to be an explicit nil
func (o *ImageConfig) SetRescueDeviceNil() {
	if IsNil(o.RescueDevice) {
		o.RescueDevice = new(NullableString)
	}
	o.RescueDevice.Set(nil)
}

// UnsetRescueDevice ensures that no value is present for RescueDevice, not even an explicit nil
func (o *ImageConfig) UnsetRescueDevice() {
	if IsNil(o.RescueDevice) {
		o.RescueDevice = new(NullableString)
	}
	o.RescueDevice.Unset()
}

// GetSecureBoot returns the SecureBoot field value if set, zero value otherwise.
func (o *ImageConfig) GetSecureBoot() *bool {
	if o == nil || IsNil(o.SecureBoot) {
		var ret *bool
		return ret
	}
	return o.SecureBoot
}

// GetSecureBootOk returns a tuple with the SecureBoot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageConfig) GetSecureBootOk() (*bool, bool) {
	if o == nil || IsNil(o.SecureBoot) {
		return nil, false
	}
	return o.SecureBoot, true
}

// HasSecureBoot returns a boolean if a field has been set.
func (o *ImageConfig) HasSecureBoot() bool {
	if o != nil && !IsNil(o.SecureBoot) {
		return true
	}

	return false
}

// SetSecureBoot gets a reference to the given bool and assigns it to the SecureBoot field.
func (o *ImageConfig) SetSecureBoot(v *bool) {
	o.SecureBoot = v
}

// GetUefi returns the Uefi field value if set, zero value otherwise.
func (o *ImageConfig) GetUefi() *bool {
	if o == nil || IsNil(o.Uefi) {
		var ret *bool
		return ret
	}
	return o.Uefi
}

// GetUefiOk returns a tuple with the Uefi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageConfig) GetUefiOk() (*bool, bool) {
	if o == nil || IsNil(o.Uefi) {
		return nil, false
	}
	return o.Uefi, true
}

// HasUefi returns a boolean if a field has been set.
func (o *ImageConfig) HasUefi() bool {
	if o != nil && !IsNil(o.Uefi) {
		return true
	}

	return false
}

// SetUefi gets a reference to the given bool and assigns it to the Uefi field.
func (o *ImageConfig) SetUefi(v *bool) {
	o.Uefi = v
}

// GetVideoModel returns the VideoModel field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImageConfig) GetVideoModel() *string {
	if o == nil || IsNil(o.VideoModel) || IsNil(o.VideoModel.Get()) {
		var ret *string
		return ret
	}
	return o.VideoModel.Get()
}

// GetVideoModelOk returns a tuple with the VideoModel field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImageConfig) GetVideoModelOk() (*string, bool) {
	if o == nil || IsNil(o.VideoModel) {
		return nil, false
	}
	return o.VideoModel.Get(), o.VideoModel.IsSet()
}

// HasVideoModel returns a boolean if a field has been set.
func (o *ImageConfig) HasVideoModel() bool {
	if o != nil && !IsNil(o.VideoModel) && o.VideoModel.IsSet() {
		return true
	}

	return false
}

// SetVideoModel gets a reference to the given string and assigns it to the VideoModel field.
func (o *ImageConfig) SetVideoModel(v *string) {
	if IsNil(o.VideoModel) {
		o.VideoModel = new(NullableString)
	}
	o.VideoModel.Set(v)
}

// SetVideoModelNil sets the value for VideoModel to be an explicit nil
func (o *ImageConfig) SetVideoModelNil() {
	if IsNil(o.VideoModel) {
		o.VideoModel = new(NullableString)
	}
	o.VideoModel.Set(nil)
}

// UnsetVideoModel ensures that no value is present for VideoModel, not even an explicit nil
func (o *ImageConfig) UnsetVideoModel() {
	if IsNil(o.VideoModel) {
		o.VideoModel = new(NullableString)
	}
	o.VideoModel.Unset()
}

// GetVirtioScsi returns the VirtioScsi field value if set, zero value otherwise.
func (o *ImageConfig) GetVirtioScsi() *bool {
	if o == nil || IsNil(o.VirtioScsi) {
		var ret *bool
		return ret
	}
	return o.VirtioScsi
}

// GetVirtioScsiOk returns a tuple with the VirtioScsi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageConfig) GetVirtioScsiOk() (*bool, bool) {
	if o == nil || IsNil(o.VirtioScsi) {
		return nil, false
	}
	return o.VirtioScsi, true
}

// HasVirtioScsi returns a boolean if a field has been set.
func (o *ImageConfig) HasVirtioScsi() bool {
	if o != nil && !IsNil(o.VirtioScsi) {
		return true
	}

	return false
}

// SetVirtioScsi gets a reference to the given bool and assigns it to the VirtioScsi field.
func (o *ImageConfig) SetVirtioScsi(v *bool) {
	o.VirtioScsi = v
}

func (o ImageConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Architecture) {
		toSerialize["architecture"] = o.Architecture
	}
	if !IsNil(o.BootMenu) {
		toSerialize["bootMenu"] = o.BootMenu
	}
	if o.CdromBus.IsSet() {
		toSerialize["cdromBus"] = o.CdromBus.Get()
	}
	if o.DiskBus.IsSet() {
		toSerialize["diskBus"] = o.DiskBus.Get()
	}
	if o.NicModel.IsSet() {
		toSerialize["nicModel"] = o.NicModel.Get()
	}
	if !IsNil(o.OperatingSystem) {
		toSerialize["operatingSystem"] = o.OperatingSystem
	}
	if o.OperatingSystemDistro.IsSet() {
		toSerialize["operatingSystemDistro"] = o.OperatingSystemDistro.Get()
	}
	if o.OperatingSystemVersion.IsSet() {
		toSerialize["operatingSystemVersion"] = o.OperatingSystemVersion.Get()
	}
	if o.RescueBus.IsSet() {
		toSerialize["rescueBus"] = o.RescueBus.Get()
	}
	if o.RescueDevice.IsSet() {
		toSerialize["rescueDevice"] = o.RescueDevice.Get()
	}
	if !IsNil(o.SecureBoot) {
		toSerialize["secureBoot"] = o.SecureBoot
	}
	if !IsNil(o.Uefi) {
		toSerialize["uefi"] = o.Uefi
	}
	if o.VideoModel.IsSet() {
		toSerialize["videoModel"] = o.VideoModel.Get()
	}
	if !IsNil(o.VirtioScsi) {
		toSerialize["virtioScsi"] = o.VirtioScsi
	}
	return toSerialize, nil
}

type NullableImageConfig struct {
	value *ImageConfig
	isSet bool
}

func (v NullableImageConfig) Get() *ImageConfig {
	return v.value
}

func (v *NullableImageConfig) Set(val *ImageConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableImageConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableImageConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImageConfig(val *ImageConfig) *NullableImageConfig {
	return &NullableImageConfig{value: val, isSet: true}
}

func (v NullableImageConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImageConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
