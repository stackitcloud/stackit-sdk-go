/*
IaaS-API

This API allows you to create and modify IaaS resources.

API version: 1alpha1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iaasalpha

import (
	"encoding/json"
)

// checks if the CreateNetworkAreaRoutePayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateNetworkAreaRoutePayload{}

/*
	types and functions for ipv4
*/

// isArray
type CreateNetworkAreaRoutePayloadGetIpv4AttributeType = *[]Route
type CreateNetworkAreaRoutePayloadGetIpv4ArgType = []Route
type CreateNetworkAreaRoutePayloadGetIpv4RetType = []Route

func getCreateNetworkAreaRoutePayloadGetIpv4AttributeTypeOk(arg CreateNetworkAreaRoutePayloadGetIpv4AttributeType) (ret CreateNetworkAreaRoutePayloadGetIpv4RetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setCreateNetworkAreaRoutePayloadGetIpv4AttributeType(arg *CreateNetworkAreaRoutePayloadGetIpv4AttributeType, val CreateNetworkAreaRoutePayloadGetIpv4RetType) {
	*arg = &val
}

// CreateNetworkAreaRoutePayload struct for CreateNetworkAreaRoutePayload
type CreateNetworkAreaRoutePayload struct {
	// A list of routes.
	Ipv4 CreateNetworkAreaRoutePayloadGetIpv4AttributeType `json:"ipv4,omitempty"`
}

// NewCreateNetworkAreaRoutePayload instantiates a new CreateNetworkAreaRoutePayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateNetworkAreaRoutePayload() *CreateNetworkAreaRoutePayload {
	this := CreateNetworkAreaRoutePayload{}
	return &this
}

// NewCreateNetworkAreaRoutePayloadWithDefaults instantiates a new CreateNetworkAreaRoutePayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateNetworkAreaRoutePayloadWithDefaults() *CreateNetworkAreaRoutePayload {
	this := CreateNetworkAreaRoutePayload{}
	return &this
}

// GetIpv4 returns the Ipv4 field value if set, zero value otherwise.
func (o *CreateNetworkAreaRoutePayload) GetIpv4() (res CreateNetworkAreaRoutePayloadGetIpv4RetType) {
	res, _ = o.GetIpv4Ok()
	return
}

// GetIpv4Ok returns a tuple with the Ipv4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateNetworkAreaRoutePayload) GetIpv4Ok() (ret CreateNetworkAreaRoutePayloadGetIpv4RetType, ok bool) {
	return getCreateNetworkAreaRoutePayloadGetIpv4AttributeTypeOk(o.Ipv4)
}

// HasIpv4 returns a boolean if a field has been set.
func (o *CreateNetworkAreaRoutePayload) HasIpv4() bool {
	_, ok := o.GetIpv4Ok()
	return ok
}

// SetIpv4 gets a reference to the given []Route and assigns it to the Ipv4 field.
func (o *CreateNetworkAreaRoutePayload) SetIpv4(v CreateNetworkAreaRoutePayloadGetIpv4RetType) {
	setCreateNetworkAreaRoutePayloadGetIpv4AttributeType(&o.Ipv4, v)
}

func (o CreateNetworkAreaRoutePayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getCreateNetworkAreaRoutePayloadGetIpv4AttributeTypeOk(o.Ipv4); ok {
		toSerialize["Ipv4"] = val
	}
	return toSerialize, nil
}

type NullableCreateNetworkAreaRoutePayload struct {
	value *CreateNetworkAreaRoutePayload
	isSet bool
}

func (v NullableCreateNetworkAreaRoutePayload) Get() *CreateNetworkAreaRoutePayload {
	return v.value
}

func (v *NullableCreateNetworkAreaRoutePayload) Set(val *CreateNetworkAreaRoutePayload) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateNetworkAreaRoutePayload) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateNetworkAreaRoutePayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateNetworkAreaRoutePayload(val *CreateNetworkAreaRoutePayload) *NullableCreateNetworkAreaRoutePayload {
	return &NullableCreateNetworkAreaRoutePayload{value: val, isSet: true}
}

func (v NullableCreateNetworkAreaRoutePayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateNetworkAreaRoutePayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
