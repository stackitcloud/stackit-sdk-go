/*
IaaS-API

This API allows you to create and modify IaaS resources.

API version: 1alpha1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iaasalpha

import (
	"encoding/json"
	"time"
)

// checks if the CreateSecurityGroupPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateSecurityGroupPayload{}

// CreateSecurityGroupPayload Object that represents a security group.
type CreateSecurityGroupPayload struct {
	// Date-time when resource was created.
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	// Description Object. Allows string up to 127 Characters.
	Description *string `json:"description,omitempty"`
	// Universally Unique Identifier (UUID).
	Id *string `json:"id,omitempty"`
	// Object that represents the labels of an object.
	Labels *map[string]interface{} `json:"labels,omitempty"`
	// The name for a General Object. Matches Names and also UUIDs.
	// REQUIRED
	Name *string `json:"name"`
	// A list containing security group rule objects.
	Rules *[]SecurityGroupRule `json:"rules,omitempty"`
	// Shows if a security group is stateful or stateless. You can only have one type of security groups per network interface/server.
	Stateful *bool `json:"stateful,omitempty"`
	// Date-time when resource was last updated.
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

type _CreateSecurityGroupPayload CreateSecurityGroupPayload

// NewCreateSecurityGroupPayload instantiates a new CreateSecurityGroupPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateSecurityGroupPayload(name *string) *CreateSecurityGroupPayload {
	this := CreateSecurityGroupPayload{}
	this.Name = name
	var stateful bool = true
	this.Stateful = &stateful
	return &this
}

// NewCreateSecurityGroupPayloadWithDefaults instantiates a new CreateSecurityGroupPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateSecurityGroupPayloadWithDefaults() *CreateSecurityGroupPayload {
	this := CreateSecurityGroupPayload{}
	var stateful bool = true
	this.Stateful = &stateful
	return &this
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *CreateSecurityGroupPayload) GetCreatedAt() *time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret *time.Time
		return ret
	}
	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSecurityGroupPayload) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *CreateSecurityGroupPayload) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *CreateSecurityGroupPayload) SetCreatedAt(v *time.Time) {
	o.CreatedAt = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CreateSecurityGroupPayload) GetDescription() *string {
	if o == nil || IsNil(o.Description) {
		var ret *string
		return ret
	}
	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSecurityGroupPayload) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateSecurityGroupPayload) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CreateSecurityGroupPayload) SetDescription(v *string) {
	o.Description = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CreateSecurityGroupPayload) GetId() *string {
	if o == nil || IsNil(o.Id) {
		var ret *string
		return ret
	}
	return o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSecurityGroupPayload) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CreateSecurityGroupPayload) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CreateSecurityGroupPayload) SetId(v *string) {
	o.Id = v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *CreateSecurityGroupPayload) GetLabels() *map[string]interface{} {
	if o == nil || IsNil(o.Labels) {
		var ret *map[string]interface{}
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSecurityGroupPayload) GetLabelsOk() (*map[string]interface{}, bool) {
	if o == nil || IsNil(o.Labels) {
		return &map[string]interface{}{}, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *CreateSecurityGroupPayload) HasLabels() bool {
	if o != nil && !IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given map[string]interface{} and assigns it to the Labels field.
func (o *CreateSecurityGroupPayload) SetLabels(v *map[string]interface{}) {
	o.Labels = v
}

// GetName returns the Name field value
func (o *CreateSecurityGroupPayload) GetName() *string {
	if o == nil {
		var ret *string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateSecurityGroupPayload) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name, true
}

// SetName sets field value
func (o *CreateSecurityGroupPayload) SetName(v *string) {
	o.Name = v
}

// GetRules returns the Rules field value if set, zero value otherwise.
func (o *CreateSecurityGroupPayload) GetRules() *[]SecurityGroupRule {
	if o == nil || IsNil(o.Rules) {
		var ret *[]SecurityGroupRule
		return ret
	}
	return o.Rules
}

// GetRulesOk returns a tuple with the Rules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSecurityGroupPayload) GetRulesOk() (*[]SecurityGroupRule, bool) {
	if o == nil || IsNil(o.Rules) {
		return nil, false
	}
	return o.Rules, true
}

// HasRules returns a boolean if a field has been set.
func (o *CreateSecurityGroupPayload) HasRules() bool {
	if o != nil && !IsNil(o.Rules) {
		return true
	}

	return false
}

// SetRules gets a reference to the given []SecurityGroupRule and assigns it to the Rules field.
func (o *CreateSecurityGroupPayload) SetRules(v *[]SecurityGroupRule) {
	o.Rules = v
}

// GetStateful returns the Stateful field value if set, zero value otherwise.
func (o *CreateSecurityGroupPayload) GetStateful() *bool {
	if o == nil || IsNil(o.Stateful) {
		var ret *bool
		return ret
	}
	return o.Stateful
}

// GetStatefulOk returns a tuple with the Stateful field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSecurityGroupPayload) GetStatefulOk() (*bool, bool) {
	if o == nil || IsNil(o.Stateful) {
		return nil, false
	}
	return o.Stateful, true
}

// HasStateful returns a boolean if a field has been set.
func (o *CreateSecurityGroupPayload) HasStateful() bool {
	if o != nil && !IsNil(o.Stateful) {
		return true
	}

	return false
}

// SetStateful gets a reference to the given bool and assigns it to the Stateful field.
func (o *CreateSecurityGroupPayload) SetStateful(v *bool) {
	o.Stateful = v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *CreateSecurityGroupPayload) GetUpdatedAt() *time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret *time.Time
		return ret
	}
	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSecurityGroupPayload) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *CreateSecurityGroupPayload) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *CreateSecurityGroupPayload) SetUpdatedAt(v *time.Time) {
	o.UpdatedAt = v
}

func (o CreateSecurityGroupPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.Rules) {
		toSerialize["rules"] = o.Rules
	}
	if !IsNil(o.Stateful) {
		toSerialize["stateful"] = o.Stateful
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullableCreateSecurityGroupPayload struct {
	value *CreateSecurityGroupPayload
	isSet bool
}

func (v NullableCreateSecurityGroupPayload) Get() *CreateSecurityGroupPayload {
	return v.value
}

func (v *NullableCreateSecurityGroupPayload) Set(val *CreateSecurityGroupPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateSecurityGroupPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateSecurityGroupPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateSecurityGroupPayload(val *CreateSecurityGroupPayload) *NullableCreateSecurityGroupPayload {
	return &NullableCreateSecurityGroupPayload{value: val, isSet: true}
}

func (v NullableCreateSecurityGroupPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateSecurityGroupPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
