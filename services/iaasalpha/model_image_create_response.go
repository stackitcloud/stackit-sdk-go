/*
IaaS-API

This API allows you to create and modify IaaS resources.

API version: 1alpha1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iaasalpha

import (
	"encoding/json"
)

// checks if the ImageCreateResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ImageCreateResponse{}

// ImageCreateResponse Image creation response.
type ImageCreateResponse struct {
	// Universally Unique Identifier (UUID).
	// REQUIRED
	Id *string `json:"id"`
	// REQUIRED
	UploadUrl *string `json:"uploadUrl"`
}

type _ImageCreateResponse ImageCreateResponse

// NewImageCreateResponse instantiates a new ImageCreateResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImageCreateResponse(id *string, uploadUrl *string) *ImageCreateResponse {
	this := ImageCreateResponse{}
	this.Id = id
	this.UploadUrl = uploadUrl
	return &this
}

// NewImageCreateResponseWithDefaults instantiates a new ImageCreateResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImageCreateResponseWithDefaults() *ImageCreateResponse {
	this := ImageCreateResponse{}
	return &this
}

// GetId returns the Id field value
func (o *ImageCreateResponse) GetId() *string {
	if o == nil {
		var ret *string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ImageCreateResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id, true
}

// SetId sets field value
func (o *ImageCreateResponse) SetId(v *string) {
	o.Id = v
}

// GetUploadUrl returns the UploadUrl field value
func (o *ImageCreateResponse) GetUploadUrl() *string {
	if o == nil {
		var ret *string
		return ret
	}

	return o.UploadUrl
}

// GetUploadUrlOk returns a tuple with the UploadUrl field value
// and a boolean to check if the value has been set.
func (o *ImageCreateResponse) GetUploadUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UploadUrl, true
}

// SetUploadUrl sets field value
func (o *ImageCreateResponse) SetUploadUrl(v *string) {
	o.UploadUrl = v
}

func (o ImageCreateResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["uploadUrl"] = o.UploadUrl
	return toSerialize, nil
}

type NullableImageCreateResponse struct {
	value *ImageCreateResponse
	isSet bool
}

func (v NullableImageCreateResponse) Get() *ImageCreateResponse {
	return v.value
}

func (v *NullableImageCreateResponse) Set(val *ImageCreateResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableImageCreateResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableImageCreateResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImageCreateResponse(val *ImageCreateResponse) *NullableImageCreateResponse {
	return &NullableImageCreateResponse{value: val, isSet: true}
}

func (v NullableImageCreateResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImageCreateResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
