/*
IaaS-API

This API allows you to create and modify IaaS resources.

API version: 1alpha1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iaasalpha

import (
	"encoding/json"
)

// checks if the V1SecurityGroupRuleProtocol type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1SecurityGroupRuleProtocol{}

// V1SecurityGroupRuleProtocol The internet protocol which the rule should match.
type V1SecurityGroupRuleProtocol struct {
	// The protocol name which the rule should match.
	Name *string `json:"name,omitempty"`
	// The protocol number which the rule should match.
	Protocol *int64 `json:"protocol,omitempty"`
}

// NewV1SecurityGroupRuleProtocol instantiates a new V1SecurityGroupRuleProtocol object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1SecurityGroupRuleProtocol() *V1SecurityGroupRuleProtocol {
	this := V1SecurityGroupRuleProtocol{}
	return &this
}

// NewV1SecurityGroupRuleProtocolWithDefaults instantiates a new V1SecurityGroupRuleProtocol object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1SecurityGroupRuleProtocolWithDefaults() *V1SecurityGroupRuleProtocol {
	this := V1SecurityGroupRuleProtocol{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *V1SecurityGroupRuleProtocol) GetName() *string {
	if o == nil || IsNil(o.Name) {
		var ret *string
		return ret
	}
	return o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1SecurityGroupRuleProtocol) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *V1SecurityGroupRuleProtocol) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *V1SecurityGroupRuleProtocol) SetName(v *string) {
	o.Name = v
}

// GetProtocol returns the Protocol field value if set, zero value otherwise.
func (o *V1SecurityGroupRuleProtocol) GetProtocol() *int64 {
	if o == nil || IsNil(o.Protocol) {
		var ret *int64
		return ret
	}
	return o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1SecurityGroupRuleProtocol) GetProtocolOk() (*int64, bool) {
	if o == nil || IsNil(o.Protocol) {
		return nil, false
	}
	return o.Protocol, true
}

// HasProtocol returns a boolean if a field has been set.
func (o *V1SecurityGroupRuleProtocol) HasProtocol() bool {
	if o != nil && !IsNil(o.Protocol) {
		return true
	}

	return false
}

// SetProtocol gets a reference to the given int64 and assigns it to the Protocol field.
func (o *V1SecurityGroupRuleProtocol) SetProtocol(v *int64) {
	o.Protocol = v
}

func (o V1SecurityGroupRuleProtocol) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Protocol) {
		toSerialize["protocol"] = o.Protocol
	}
	return toSerialize, nil
}

type NullableV1SecurityGroupRuleProtocol struct {
	value *V1SecurityGroupRuleProtocol
	isSet bool
}

func (v NullableV1SecurityGroupRuleProtocol) Get() *V1SecurityGroupRuleProtocol {
	return v.value
}

func (v *NullableV1SecurityGroupRuleProtocol) Set(val *V1SecurityGroupRuleProtocol) {
	v.value = val
	v.isSet = true
}

func (v NullableV1SecurityGroupRuleProtocol) IsSet() bool {
	return v.isSet
}

func (v *NullableV1SecurityGroupRuleProtocol) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1SecurityGroupRuleProtocol(val *V1SecurityGroupRuleProtocol) *NullableV1SecurityGroupRuleProtocol {
	return &NullableV1SecurityGroupRuleProtocol{value: val, isSet: true}
}

func (v NullableV1SecurityGroupRuleProtocol) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1SecurityGroupRuleProtocol) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
