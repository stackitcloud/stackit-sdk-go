/*
STACKIT PostgreSQL Flex API

This is the documentation for the STACKIT postgres service

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package postgresflex

import (
	"encoding/json"
)

// checks if the UpdateInstancePayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateInstancePayload{}

/*
	types and functions for acl
*/

// isModel
type UpdateInstancePayloadGetAclAttributeType = *ACL
type UpdateInstancePayloadGetAclArgType = ACL
type UpdateInstancePayloadGetAclRetType = ACL

func getUpdateInstancePayloadGetAclAttributeTypeOk(arg UpdateInstancePayloadGetAclAttributeType) (ret UpdateInstancePayloadGetAclRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setUpdateInstancePayloadGetAclAttributeType(arg *UpdateInstancePayloadGetAclAttributeType, val UpdateInstancePayloadGetAclRetType) {
	*arg = &val
}

/*
	types and functions for backupSchedule
*/

// isNotNullableString
type UpdateInstancePayloadGetBackupScheduleAttributeType = *string

func getUpdateInstancePayloadGetBackupScheduleAttributeTypeOk(arg UpdateInstancePayloadGetBackupScheduleAttributeType) (ret UpdateInstancePayloadGetBackupScheduleRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setUpdateInstancePayloadGetBackupScheduleAttributeType(arg *UpdateInstancePayloadGetBackupScheduleAttributeType, val UpdateInstancePayloadGetBackupScheduleRetType) {
	*arg = &val
}

type UpdateInstancePayloadGetBackupScheduleArgType = string
type UpdateInstancePayloadGetBackupScheduleRetType = string

/*
	types and functions for flavorId
*/

// isNotNullableString
type UpdateInstancePayloadGetFlavorIdAttributeType = *string

func getUpdateInstancePayloadGetFlavorIdAttributeTypeOk(arg UpdateInstancePayloadGetFlavorIdAttributeType) (ret UpdateInstancePayloadGetFlavorIdRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setUpdateInstancePayloadGetFlavorIdAttributeType(arg *UpdateInstancePayloadGetFlavorIdAttributeType, val UpdateInstancePayloadGetFlavorIdRetType) {
	*arg = &val
}

type UpdateInstancePayloadGetFlavorIdArgType = string
type UpdateInstancePayloadGetFlavorIdRetType = string

/*
	types and functions for labels
*/

// isContainer
type UpdateInstancePayloadGetLabelsAttributeType = *map[string]string
type UpdateInstancePayloadGetLabelsArgType = map[string]string
type UpdateInstancePayloadGetLabelsRetType = map[string]string

func getUpdateInstancePayloadGetLabelsAttributeTypeOk(arg UpdateInstancePayloadGetLabelsAttributeType) (ret UpdateInstancePayloadGetLabelsRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setUpdateInstancePayloadGetLabelsAttributeType(arg *UpdateInstancePayloadGetLabelsAttributeType, val UpdateInstancePayloadGetLabelsRetType) {
	*arg = &val
}

/*
	types and functions for name
*/

// isNotNullableString
type UpdateInstancePayloadGetNameAttributeType = *string

func getUpdateInstancePayloadGetNameAttributeTypeOk(arg UpdateInstancePayloadGetNameAttributeType) (ret UpdateInstancePayloadGetNameRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setUpdateInstancePayloadGetNameAttributeType(arg *UpdateInstancePayloadGetNameAttributeType, val UpdateInstancePayloadGetNameRetType) {
	*arg = &val
}

type UpdateInstancePayloadGetNameArgType = string
type UpdateInstancePayloadGetNameRetType = string

/*
	types and functions for options
*/

// isContainer
type UpdateInstancePayloadGetOptionsAttributeType = *map[string]string
type UpdateInstancePayloadGetOptionsArgType = map[string]string
type UpdateInstancePayloadGetOptionsRetType = map[string]string

func getUpdateInstancePayloadGetOptionsAttributeTypeOk(arg UpdateInstancePayloadGetOptionsAttributeType) (ret UpdateInstancePayloadGetOptionsRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setUpdateInstancePayloadGetOptionsAttributeType(arg *UpdateInstancePayloadGetOptionsAttributeType, val UpdateInstancePayloadGetOptionsRetType) {
	*arg = &val
}

/*
	types and functions for replicas
*/

// isInteger
type UpdateInstancePayloadGetReplicasAttributeType = *int64
type UpdateInstancePayloadGetReplicasArgType = int64
type UpdateInstancePayloadGetReplicasRetType = int64

func getUpdateInstancePayloadGetReplicasAttributeTypeOk(arg UpdateInstancePayloadGetReplicasAttributeType) (ret UpdateInstancePayloadGetReplicasRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setUpdateInstancePayloadGetReplicasAttributeType(arg *UpdateInstancePayloadGetReplicasAttributeType, val UpdateInstancePayloadGetReplicasRetType) {
	*arg = &val
}

/*
	types and functions for storage
*/

// isModel
type UpdateInstancePayloadGetStorageAttributeType = *Storage
type UpdateInstancePayloadGetStorageArgType = Storage
type UpdateInstancePayloadGetStorageRetType = Storage

func getUpdateInstancePayloadGetStorageAttributeTypeOk(arg UpdateInstancePayloadGetStorageAttributeType) (ret UpdateInstancePayloadGetStorageRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setUpdateInstancePayloadGetStorageAttributeType(arg *UpdateInstancePayloadGetStorageAttributeType, val UpdateInstancePayloadGetStorageRetType) {
	*arg = &val
}

/*
	types and functions for version
*/

// isNotNullableString
type UpdateInstancePayloadGetVersionAttributeType = *string

func getUpdateInstancePayloadGetVersionAttributeTypeOk(arg UpdateInstancePayloadGetVersionAttributeType) (ret UpdateInstancePayloadGetVersionRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setUpdateInstancePayloadGetVersionAttributeType(arg *UpdateInstancePayloadGetVersionAttributeType, val UpdateInstancePayloadGetVersionRetType) {
	*arg = &val
}

type UpdateInstancePayloadGetVersionArgType = string
type UpdateInstancePayloadGetVersionRetType = string

// UpdateInstancePayload struct for UpdateInstancePayload
type UpdateInstancePayload struct {
	Acl            UpdateInstancePayloadGetAclAttributeType            `json:"acl,omitempty"`
	BackupSchedule UpdateInstancePayloadGetBackupScheduleAttributeType `json:"backupSchedule,omitempty"`
	FlavorId       UpdateInstancePayloadGetFlavorIdAttributeType       `json:"flavorId,omitempty"`
	// Labels field is not certain/clear
	Labels  UpdateInstancePayloadGetLabelsAttributeType  `json:"labels,omitempty"`
	Name    UpdateInstancePayloadGetNameAttributeType    `json:"name,omitempty"`
	Options UpdateInstancePayloadGetOptionsAttributeType `json:"options,omitempty"`
	// Can be cast to int32 without loss of precision.
	Replicas UpdateInstancePayloadGetReplicasAttributeType `json:"replicas,omitempty"`
	Storage  UpdateInstancePayloadGetStorageAttributeType  `json:"storage,omitempty"`
	Version  UpdateInstancePayloadGetVersionAttributeType  `json:"version,omitempty"`
}

// NewUpdateInstancePayload instantiates a new UpdateInstancePayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateInstancePayload() *UpdateInstancePayload {
	this := UpdateInstancePayload{}
	return &this
}

// NewUpdateInstancePayloadWithDefaults instantiates a new UpdateInstancePayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateInstancePayloadWithDefaults() *UpdateInstancePayload {
	this := UpdateInstancePayload{}
	return &this
}

// GetAcl returns the Acl field value if set, zero value otherwise.
func (o *UpdateInstancePayload) GetAcl() (res UpdateInstancePayloadGetAclRetType) {
	res, _ = o.GetAclOk()
	return
}

// GetAclOk returns a tuple with the Acl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInstancePayload) GetAclOk() (ret UpdateInstancePayloadGetAclRetType, ok bool) {
	return getUpdateInstancePayloadGetAclAttributeTypeOk(o.Acl)
}

// HasAcl returns a boolean if a field has been set.
func (o *UpdateInstancePayload) HasAcl() bool {
	_, ok := o.GetAclOk()
	return ok
}

// SetAcl gets a reference to the given ACL and assigns it to the Acl field.
func (o *UpdateInstancePayload) SetAcl(v UpdateInstancePayloadGetAclRetType) {
	setUpdateInstancePayloadGetAclAttributeType(&o.Acl, v)
}

// GetBackupSchedule returns the BackupSchedule field value if set, zero value otherwise.
func (o *UpdateInstancePayload) GetBackupSchedule() (res UpdateInstancePayloadGetBackupScheduleRetType) {
	res, _ = o.GetBackupScheduleOk()
	return
}

// GetBackupScheduleOk returns a tuple with the BackupSchedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInstancePayload) GetBackupScheduleOk() (ret UpdateInstancePayloadGetBackupScheduleRetType, ok bool) {
	return getUpdateInstancePayloadGetBackupScheduleAttributeTypeOk(o.BackupSchedule)
}

// HasBackupSchedule returns a boolean if a field has been set.
func (o *UpdateInstancePayload) HasBackupSchedule() bool {
	_, ok := o.GetBackupScheduleOk()
	return ok
}

// SetBackupSchedule gets a reference to the given string and assigns it to the BackupSchedule field.
func (o *UpdateInstancePayload) SetBackupSchedule(v UpdateInstancePayloadGetBackupScheduleRetType) {
	setUpdateInstancePayloadGetBackupScheduleAttributeType(&o.BackupSchedule, v)
}

// GetFlavorId returns the FlavorId field value if set, zero value otherwise.
func (o *UpdateInstancePayload) GetFlavorId() (res UpdateInstancePayloadGetFlavorIdRetType) {
	res, _ = o.GetFlavorIdOk()
	return
}

// GetFlavorIdOk returns a tuple with the FlavorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInstancePayload) GetFlavorIdOk() (ret UpdateInstancePayloadGetFlavorIdRetType, ok bool) {
	return getUpdateInstancePayloadGetFlavorIdAttributeTypeOk(o.FlavorId)
}

// HasFlavorId returns a boolean if a field has been set.
func (o *UpdateInstancePayload) HasFlavorId() bool {
	_, ok := o.GetFlavorIdOk()
	return ok
}

// SetFlavorId gets a reference to the given string and assigns it to the FlavorId field.
func (o *UpdateInstancePayload) SetFlavorId(v UpdateInstancePayloadGetFlavorIdRetType) {
	setUpdateInstancePayloadGetFlavorIdAttributeType(&o.FlavorId, v)
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *UpdateInstancePayload) GetLabels() (res UpdateInstancePayloadGetLabelsRetType) {
	res, _ = o.GetLabelsOk()
	return
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInstancePayload) GetLabelsOk() (ret UpdateInstancePayloadGetLabelsRetType, ok bool) {
	return getUpdateInstancePayloadGetLabelsAttributeTypeOk(o.Labels)
}

// HasLabels returns a boolean if a field has been set.
func (o *UpdateInstancePayload) HasLabels() bool {
	_, ok := o.GetLabelsOk()
	return ok
}

// SetLabels gets a reference to the given map[string]string and assigns it to the Labels field.
func (o *UpdateInstancePayload) SetLabels(v UpdateInstancePayloadGetLabelsRetType) {
	setUpdateInstancePayloadGetLabelsAttributeType(&o.Labels, v)
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateInstancePayload) GetName() (res UpdateInstancePayloadGetNameRetType) {
	res, _ = o.GetNameOk()
	return
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInstancePayload) GetNameOk() (ret UpdateInstancePayloadGetNameRetType, ok bool) {
	return getUpdateInstancePayloadGetNameAttributeTypeOk(o.Name)
}

// HasName returns a boolean if a field has been set.
func (o *UpdateInstancePayload) HasName() bool {
	_, ok := o.GetNameOk()
	return ok
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateInstancePayload) SetName(v UpdateInstancePayloadGetNameRetType) {
	setUpdateInstancePayloadGetNameAttributeType(&o.Name, v)
}

// GetOptions returns the Options field value if set, zero value otherwise.
func (o *UpdateInstancePayload) GetOptions() (res UpdateInstancePayloadGetOptionsRetType) {
	res, _ = o.GetOptionsOk()
	return
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInstancePayload) GetOptionsOk() (ret UpdateInstancePayloadGetOptionsRetType, ok bool) {
	return getUpdateInstancePayloadGetOptionsAttributeTypeOk(o.Options)
}

// HasOptions returns a boolean if a field has been set.
func (o *UpdateInstancePayload) HasOptions() bool {
	_, ok := o.GetOptionsOk()
	return ok
}

// SetOptions gets a reference to the given map[string]string and assigns it to the Options field.
func (o *UpdateInstancePayload) SetOptions(v UpdateInstancePayloadGetOptionsRetType) {
	setUpdateInstancePayloadGetOptionsAttributeType(&o.Options, v)
}

// GetReplicas returns the Replicas field value if set, zero value otherwise.
func (o *UpdateInstancePayload) GetReplicas() (res UpdateInstancePayloadGetReplicasRetType) {
	res, _ = o.GetReplicasOk()
	return
}

// GetReplicasOk returns a tuple with the Replicas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInstancePayload) GetReplicasOk() (ret UpdateInstancePayloadGetReplicasRetType, ok bool) {
	return getUpdateInstancePayloadGetReplicasAttributeTypeOk(o.Replicas)
}

// HasReplicas returns a boolean if a field has been set.
func (o *UpdateInstancePayload) HasReplicas() bool {
	_, ok := o.GetReplicasOk()
	return ok
}

// SetReplicas gets a reference to the given int64 and assigns it to the Replicas field.
func (o *UpdateInstancePayload) SetReplicas(v UpdateInstancePayloadGetReplicasRetType) {
	setUpdateInstancePayloadGetReplicasAttributeType(&o.Replicas, v)
}

// GetStorage returns the Storage field value if set, zero value otherwise.
func (o *UpdateInstancePayload) GetStorage() (res UpdateInstancePayloadGetStorageRetType) {
	res, _ = o.GetStorageOk()
	return
}

// GetStorageOk returns a tuple with the Storage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInstancePayload) GetStorageOk() (ret UpdateInstancePayloadGetStorageRetType, ok bool) {
	return getUpdateInstancePayloadGetStorageAttributeTypeOk(o.Storage)
}

// HasStorage returns a boolean if a field has been set.
func (o *UpdateInstancePayload) HasStorage() bool {
	_, ok := o.GetStorageOk()
	return ok
}

// SetStorage gets a reference to the given Storage and assigns it to the Storage field.
func (o *UpdateInstancePayload) SetStorage(v UpdateInstancePayloadGetStorageRetType) {
	setUpdateInstancePayloadGetStorageAttributeType(&o.Storage, v)
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *UpdateInstancePayload) GetVersion() (res UpdateInstancePayloadGetVersionRetType) {
	res, _ = o.GetVersionOk()
	return
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInstancePayload) GetVersionOk() (ret UpdateInstancePayloadGetVersionRetType, ok bool) {
	return getUpdateInstancePayloadGetVersionAttributeTypeOk(o.Version)
}

// HasVersion returns a boolean if a field has been set.
func (o *UpdateInstancePayload) HasVersion() bool {
	_, ok := o.GetVersionOk()
	return ok
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *UpdateInstancePayload) SetVersion(v UpdateInstancePayloadGetVersionRetType) {
	setUpdateInstancePayloadGetVersionAttributeType(&o.Version, v)
}

func (o UpdateInstancePayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getUpdateInstancePayloadGetAclAttributeTypeOk(o.Acl); ok {
		toSerialize["Acl"] = val
	}
	if val, ok := getUpdateInstancePayloadGetBackupScheduleAttributeTypeOk(o.BackupSchedule); ok {
		toSerialize["BackupSchedule"] = val
	}
	if val, ok := getUpdateInstancePayloadGetFlavorIdAttributeTypeOk(o.FlavorId); ok {
		toSerialize["FlavorId"] = val
	}
	if val, ok := getUpdateInstancePayloadGetLabelsAttributeTypeOk(o.Labels); ok {
		toSerialize["Labels"] = val
	}
	if val, ok := getUpdateInstancePayloadGetNameAttributeTypeOk(o.Name); ok {
		toSerialize["Name"] = val
	}
	if val, ok := getUpdateInstancePayloadGetOptionsAttributeTypeOk(o.Options); ok {
		toSerialize["Options"] = val
	}
	if val, ok := getUpdateInstancePayloadGetReplicasAttributeTypeOk(o.Replicas); ok {
		toSerialize["Replicas"] = val
	}
	if val, ok := getUpdateInstancePayloadGetStorageAttributeTypeOk(o.Storage); ok {
		toSerialize["Storage"] = val
	}
	if val, ok := getUpdateInstancePayloadGetVersionAttributeTypeOk(o.Version); ok {
		toSerialize["Version"] = val
	}
	return toSerialize, nil
}

type NullableUpdateInstancePayload struct {
	value *UpdateInstancePayload
	isSet bool
}

func (v NullableUpdateInstancePayload) Get() *UpdateInstancePayload {
	return v.value
}

func (v *NullableUpdateInstancePayload) Set(val *UpdateInstancePayload) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateInstancePayload) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateInstancePayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateInstancePayload(val *UpdateInstancePayload) *NullableUpdateInstancePayload {
	return &NullableUpdateInstancePayload{value: val, isSet: true}
}

func (v NullableUpdateInstancePayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateInstancePayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
