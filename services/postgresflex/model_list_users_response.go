/*
STACKIT PostgreSQL Flex API

This is the documentation for the STACKIT postgres service

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package postgresflex

import (
	"encoding/json"
)

// checks if the ListUsersResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListUsersResponse{}

/*
	types and functions for count
*/

// isLong
type ListUsersResponseGetCountAttributeType = *int64
type ListUsersResponseGetCountArgType = int64
type ListUsersResponseGetCountRetType = int64

func getListUsersResponseGetCountAttributeTypeOk(arg ListUsersResponseGetCountAttributeType) (ret ListUsersResponseGetCountRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setListUsersResponseGetCountAttributeType(arg *ListUsersResponseGetCountAttributeType, val ListUsersResponseGetCountRetType) {
	*arg = &val
}

/*
	types and functions for items
*/

// isArray
type ListUsersResponseGetItemsAttributeType = *[]ListUsersResponseItem
type ListUsersResponseGetItemsArgType = []ListUsersResponseItem
type ListUsersResponseGetItemsRetType = []ListUsersResponseItem

func getListUsersResponseGetItemsAttributeTypeOk(arg ListUsersResponseGetItemsAttributeType) (ret ListUsersResponseGetItemsRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setListUsersResponseGetItemsAttributeType(arg *ListUsersResponseGetItemsAttributeType, val ListUsersResponseGetItemsRetType) {
	*arg = &val
}

// ListUsersResponse struct for ListUsersResponse
type ListUsersResponse struct {
	Count ListUsersResponseGetCountAttributeType `json:"count,omitempty"`
	Items ListUsersResponseGetItemsAttributeType `json:"items,omitempty"`
}

// NewListUsersResponse instantiates a new ListUsersResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListUsersResponse() *ListUsersResponse {
	this := ListUsersResponse{}
	return &this
}

// NewListUsersResponseWithDefaults instantiates a new ListUsersResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListUsersResponseWithDefaults() *ListUsersResponse {
	this := ListUsersResponse{}
	return &this
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *ListUsersResponse) GetCount() (res ListUsersResponseGetCountRetType) {
	res, _ = o.GetCountOk()
	return
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListUsersResponse) GetCountOk() (ret ListUsersResponseGetCountRetType, ok bool) {
	return getListUsersResponseGetCountAttributeTypeOk(o.Count)
}

// HasCount returns a boolean if a field has been set.
func (o *ListUsersResponse) HasCount() bool {
	_, ok := o.GetCountOk()
	return ok
}

// SetCount gets a reference to the given int64 and assigns it to the Count field.
func (o *ListUsersResponse) SetCount(v ListUsersResponseGetCountRetType) {
	setListUsersResponseGetCountAttributeType(&o.Count, v)
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *ListUsersResponse) GetItems() (res ListUsersResponseGetItemsRetType) {
	res, _ = o.GetItemsOk()
	return
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListUsersResponse) GetItemsOk() (ret ListUsersResponseGetItemsRetType, ok bool) {
	return getListUsersResponseGetItemsAttributeTypeOk(o.Items)
}

// HasItems returns a boolean if a field has been set.
func (o *ListUsersResponse) HasItems() bool {
	_, ok := o.GetItemsOk()
	return ok
}

// SetItems gets a reference to the given []ListUsersResponseItem and assigns it to the Items field.
func (o *ListUsersResponse) SetItems(v ListUsersResponseGetItemsRetType) {
	setListUsersResponseGetItemsAttributeType(&o.Items, v)
}

func (o ListUsersResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getListUsersResponseGetCountAttributeTypeOk(o.Count); ok {
		toSerialize["Count"] = val
	}
	if val, ok := getListUsersResponseGetItemsAttributeTypeOk(o.Items); ok {
		toSerialize["Items"] = val
	}
	return toSerialize, nil
}

type NullableListUsersResponse struct {
	value *ListUsersResponse
	isSet bool
}

func (v NullableListUsersResponse) Get() *ListUsersResponse {
	return v.value
}

func (v *NullableListUsersResponse) Set(val *ListUsersResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListUsersResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListUsersResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListUsersResponse(val *ListUsersResponse) *NullableListUsersResponse {
	return &NullableListUsersResponse{value: val, isSet: true}
}

func (v NullableListUsersResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListUsersResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
