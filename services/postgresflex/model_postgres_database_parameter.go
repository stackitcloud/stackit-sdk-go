/*
STACKIT PostgreSQL Flex API

This is the documentation for the STACKIT postgres service

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package postgresflex

import (
	"encoding/json"
)

// checks if the PostgresDatabaseParameter type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostgresDatabaseParameter{}

/*
	types and functions for context
*/

// isNotNullableString
type PostgresDatabaseParameterGetContextAttributeType = *string

func getPostgresDatabaseParameterGetContextAttributeTypeOk(arg PostgresDatabaseParameterGetContextAttributeType) (ret PostgresDatabaseParameterGetContextRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setPostgresDatabaseParameterGetContextAttributeType(arg *PostgresDatabaseParameterGetContextAttributeType, val PostgresDatabaseParameterGetContextRetType) {
	*arg = &val
}

type PostgresDatabaseParameterGetContextArgType = string
type PostgresDatabaseParameterGetContextRetType = string

/*
	types and functions for dataType
*/

// isNotNullableString
type PostgresDatabaseParameterGetDataTypeAttributeType = *string

func getPostgresDatabaseParameterGetDataTypeAttributeTypeOk(arg PostgresDatabaseParameterGetDataTypeAttributeType) (ret PostgresDatabaseParameterGetDataTypeRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setPostgresDatabaseParameterGetDataTypeAttributeType(arg *PostgresDatabaseParameterGetDataTypeAttributeType, val PostgresDatabaseParameterGetDataTypeRetType) {
	*arg = &val
}

type PostgresDatabaseParameterGetDataTypeArgType = string
type PostgresDatabaseParameterGetDataTypeRetType = string

/*
	types and functions for defaultValue
*/

// isNotNullableString
type PostgresDatabaseParameterGetDefaultValueAttributeType = *string

func getPostgresDatabaseParameterGetDefaultValueAttributeTypeOk(arg PostgresDatabaseParameterGetDefaultValueAttributeType) (ret PostgresDatabaseParameterGetDefaultValueRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setPostgresDatabaseParameterGetDefaultValueAttributeType(arg *PostgresDatabaseParameterGetDefaultValueAttributeType, val PostgresDatabaseParameterGetDefaultValueRetType) {
	*arg = &val
}

type PostgresDatabaseParameterGetDefaultValueArgType = string
type PostgresDatabaseParameterGetDefaultValueRetType = string

/*
	types and functions for description
*/

// isNotNullableString
type PostgresDatabaseParameterGetDescriptionAttributeType = *string

func getPostgresDatabaseParameterGetDescriptionAttributeTypeOk(arg PostgresDatabaseParameterGetDescriptionAttributeType) (ret PostgresDatabaseParameterGetDescriptionRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setPostgresDatabaseParameterGetDescriptionAttributeType(arg *PostgresDatabaseParameterGetDescriptionAttributeType, val PostgresDatabaseParameterGetDescriptionRetType) {
	*arg = &val
}

type PostgresDatabaseParameterGetDescriptionArgType = string
type PostgresDatabaseParameterGetDescriptionRetType = string

/*
	types and functions for edit
*/

// isBoolean
type PostgresDatabaseParametergetEditAttributeType = *bool
type PostgresDatabaseParametergetEditArgType = bool
type PostgresDatabaseParametergetEditRetType = bool

func getPostgresDatabaseParametergetEditAttributeTypeOk(arg PostgresDatabaseParametergetEditAttributeType) (ret PostgresDatabaseParametergetEditRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setPostgresDatabaseParametergetEditAttributeType(arg *PostgresDatabaseParametergetEditAttributeType, val PostgresDatabaseParametergetEditRetType) {
	*arg = &val
}

/*
	types and functions for maxValue
*/

// isNotNullableString
type PostgresDatabaseParameterGetMaxValueAttributeType = *string

func getPostgresDatabaseParameterGetMaxValueAttributeTypeOk(arg PostgresDatabaseParameterGetMaxValueAttributeType) (ret PostgresDatabaseParameterGetMaxValueRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setPostgresDatabaseParameterGetMaxValueAttributeType(arg *PostgresDatabaseParameterGetMaxValueAttributeType, val PostgresDatabaseParameterGetMaxValueRetType) {
	*arg = &val
}

type PostgresDatabaseParameterGetMaxValueArgType = string
type PostgresDatabaseParameterGetMaxValueRetType = string

/*
	types and functions for minValue
*/

// isNotNullableString
type PostgresDatabaseParameterGetMinValueAttributeType = *string

func getPostgresDatabaseParameterGetMinValueAttributeTypeOk(arg PostgresDatabaseParameterGetMinValueAttributeType) (ret PostgresDatabaseParameterGetMinValueRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setPostgresDatabaseParameterGetMinValueAttributeType(arg *PostgresDatabaseParameterGetMinValueAttributeType, val PostgresDatabaseParameterGetMinValueRetType) {
	*arg = &val
}

type PostgresDatabaseParameterGetMinValueArgType = string
type PostgresDatabaseParameterGetMinValueRetType = string

/*
	types and functions for name
*/

// isNotNullableString
type PostgresDatabaseParameterGetNameAttributeType = *string

func getPostgresDatabaseParameterGetNameAttributeTypeOk(arg PostgresDatabaseParameterGetNameAttributeType) (ret PostgresDatabaseParameterGetNameRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setPostgresDatabaseParameterGetNameAttributeType(arg *PostgresDatabaseParameterGetNameAttributeType, val PostgresDatabaseParameterGetNameRetType) {
	*arg = &val
}

type PostgresDatabaseParameterGetNameArgType = string
type PostgresDatabaseParameterGetNameRetType = string

/*
	types and functions for pendingRestart
*/

// isBoolean
type PostgresDatabaseParametergetPendingRestartAttributeType = *bool
type PostgresDatabaseParametergetPendingRestartArgType = bool
type PostgresDatabaseParametergetPendingRestartRetType = bool

func getPostgresDatabaseParametergetPendingRestartAttributeTypeOk(arg PostgresDatabaseParametergetPendingRestartAttributeType) (ret PostgresDatabaseParametergetPendingRestartRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setPostgresDatabaseParametergetPendingRestartAttributeType(arg *PostgresDatabaseParametergetPendingRestartAttributeType, val PostgresDatabaseParametergetPendingRestartRetType) {
	*arg = &val
}

/*
	types and functions for resetValue
*/

// isNotNullableString
type PostgresDatabaseParameterGetResetValueAttributeType = *string

func getPostgresDatabaseParameterGetResetValueAttributeTypeOk(arg PostgresDatabaseParameterGetResetValueAttributeType) (ret PostgresDatabaseParameterGetResetValueRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setPostgresDatabaseParameterGetResetValueAttributeType(arg *PostgresDatabaseParameterGetResetValueAttributeType, val PostgresDatabaseParameterGetResetValueRetType) {
	*arg = &val
}

type PostgresDatabaseParameterGetResetValueArgType = string
type PostgresDatabaseParameterGetResetValueRetType = string

/*
	types and functions for unit
*/

// isNotNullableString
type PostgresDatabaseParameterGetUnitAttributeType = *string

func getPostgresDatabaseParameterGetUnitAttributeTypeOk(arg PostgresDatabaseParameterGetUnitAttributeType) (ret PostgresDatabaseParameterGetUnitRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setPostgresDatabaseParameterGetUnitAttributeType(arg *PostgresDatabaseParameterGetUnitAttributeType, val PostgresDatabaseParameterGetUnitRetType) {
	*arg = &val
}

type PostgresDatabaseParameterGetUnitArgType = string
type PostgresDatabaseParameterGetUnitRetType = string

/*
	types and functions for value
*/

// isNotNullableString
type PostgresDatabaseParameterGetValueAttributeType = *string

func getPostgresDatabaseParameterGetValueAttributeTypeOk(arg PostgresDatabaseParameterGetValueAttributeType) (ret PostgresDatabaseParameterGetValueRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setPostgresDatabaseParameterGetValueAttributeType(arg *PostgresDatabaseParameterGetValueAttributeType, val PostgresDatabaseParameterGetValueRetType) {
	*arg = &val
}

type PostgresDatabaseParameterGetValueArgType = string
type PostgresDatabaseParameterGetValueRetType = string

// PostgresDatabaseParameter struct for PostgresDatabaseParameter
type PostgresDatabaseParameter struct {
	// Context of the parameter.
	Context PostgresDatabaseParameterGetContextAttributeType `json:"context,omitempty"`
	// Datatype describes the type of data that is used in the Value field.
	DataType PostgresDatabaseParameterGetDataTypeAttributeType `json:"dataType,omitempty"`
	// DefaultValue for the value field.
	DefaultValue PostgresDatabaseParameterGetDefaultValueAttributeType `json:"defaultValue,omitempty"`
	// Description of the parameter.
	Description PostgresDatabaseParameterGetDescriptionAttributeType `json:"description,omitempty"`
	// Edit shows if the user can change this value.
	Edit PostgresDatabaseParametergetEditAttributeType `json:"edit,omitempty"`
	// MaxValue describes the highest possible value that can be set.
	MaxValue PostgresDatabaseParameterGetMaxValueAttributeType `json:"maxValue,omitempty"`
	// MinValue describes the lowest possible value that can be set.
	MinValue PostgresDatabaseParameterGetMinValueAttributeType `json:"minValue,omitempty"`
	// Name of the parameter.
	Name PostgresDatabaseParameterGetNameAttributeType `json:"name,omitempty"`
	// PendingRestart describes if a parameter change requires a restart of the server.
	PendingRestart PostgresDatabaseParametergetPendingRestartAttributeType `json:"pendingRestart,omitempty"`
	// ResetValue for the value field af.ter a reset.
	ResetValue PostgresDatabaseParameterGetResetValueAttributeType `json:"resetValue,omitempty"`
	// Unit if the parameter has a unit if not empty.
	Unit PostgresDatabaseParameterGetUnitAttributeType `json:"unit,omitempty"`
	// Value of this parameter.
	Value PostgresDatabaseParameterGetValueAttributeType `json:"value,omitempty"`
}

// NewPostgresDatabaseParameter instantiates a new PostgresDatabaseParameter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostgresDatabaseParameter() *PostgresDatabaseParameter {
	this := PostgresDatabaseParameter{}
	return &this
}

// NewPostgresDatabaseParameterWithDefaults instantiates a new PostgresDatabaseParameter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostgresDatabaseParameterWithDefaults() *PostgresDatabaseParameter {
	this := PostgresDatabaseParameter{}
	return &this
}

// GetContext returns the Context field value if set, zero value otherwise.
func (o *PostgresDatabaseParameter) GetContext() (res PostgresDatabaseParameterGetContextRetType) {
	res, _ = o.GetContextOk()
	return
}

// GetContextOk returns a tuple with the Context field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostgresDatabaseParameter) GetContextOk() (ret PostgresDatabaseParameterGetContextRetType, ok bool) {
	return getPostgresDatabaseParameterGetContextAttributeTypeOk(o.Context)
}

// HasContext returns a boolean if a field has been set.
func (o *PostgresDatabaseParameter) HasContext() bool {
	_, ok := o.GetContextOk()
	return ok
}

// SetContext gets a reference to the given string and assigns it to the Context field.
func (o *PostgresDatabaseParameter) SetContext(v PostgresDatabaseParameterGetContextRetType) {
	setPostgresDatabaseParameterGetContextAttributeType(&o.Context, v)
}

// GetDataType returns the DataType field value if set, zero value otherwise.
func (o *PostgresDatabaseParameter) GetDataType() (res PostgresDatabaseParameterGetDataTypeRetType) {
	res, _ = o.GetDataTypeOk()
	return
}

// GetDataTypeOk returns a tuple with the DataType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostgresDatabaseParameter) GetDataTypeOk() (ret PostgresDatabaseParameterGetDataTypeRetType, ok bool) {
	return getPostgresDatabaseParameterGetDataTypeAttributeTypeOk(o.DataType)
}

// HasDataType returns a boolean if a field has been set.
func (o *PostgresDatabaseParameter) HasDataType() bool {
	_, ok := o.GetDataTypeOk()
	return ok
}

// SetDataType gets a reference to the given string and assigns it to the DataType field.
func (o *PostgresDatabaseParameter) SetDataType(v PostgresDatabaseParameterGetDataTypeRetType) {
	setPostgresDatabaseParameterGetDataTypeAttributeType(&o.DataType, v)
}

// GetDefaultValue returns the DefaultValue field value if set, zero value otherwise.
func (o *PostgresDatabaseParameter) GetDefaultValue() (res PostgresDatabaseParameterGetDefaultValueRetType) {
	res, _ = o.GetDefaultValueOk()
	return
}

// GetDefaultValueOk returns a tuple with the DefaultValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostgresDatabaseParameter) GetDefaultValueOk() (ret PostgresDatabaseParameterGetDefaultValueRetType, ok bool) {
	return getPostgresDatabaseParameterGetDefaultValueAttributeTypeOk(o.DefaultValue)
}

// HasDefaultValue returns a boolean if a field has been set.
func (o *PostgresDatabaseParameter) HasDefaultValue() bool {
	_, ok := o.GetDefaultValueOk()
	return ok
}

// SetDefaultValue gets a reference to the given string and assigns it to the DefaultValue field.
func (o *PostgresDatabaseParameter) SetDefaultValue(v PostgresDatabaseParameterGetDefaultValueRetType) {
	setPostgresDatabaseParameterGetDefaultValueAttributeType(&o.DefaultValue, v)
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *PostgresDatabaseParameter) GetDescription() (res PostgresDatabaseParameterGetDescriptionRetType) {
	res, _ = o.GetDescriptionOk()
	return
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostgresDatabaseParameter) GetDescriptionOk() (ret PostgresDatabaseParameterGetDescriptionRetType, ok bool) {
	return getPostgresDatabaseParameterGetDescriptionAttributeTypeOk(o.Description)
}

// HasDescription returns a boolean if a field has been set.
func (o *PostgresDatabaseParameter) HasDescription() bool {
	_, ok := o.GetDescriptionOk()
	return ok
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *PostgresDatabaseParameter) SetDescription(v PostgresDatabaseParameterGetDescriptionRetType) {
	setPostgresDatabaseParameterGetDescriptionAttributeType(&o.Description, v)
}

// GetEdit returns the Edit field value if set, zero value otherwise.
func (o *PostgresDatabaseParameter) GetEdit() (res PostgresDatabaseParametergetEditRetType) {
	res, _ = o.GetEditOk()
	return
}

// GetEditOk returns a tuple with the Edit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostgresDatabaseParameter) GetEditOk() (ret PostgresDatabaseParametergetEditRetType, ok bool) {
	return getPostgresDatabaseParametergetEditAttributeTypeOk(o.Edit)
}

// HasEdit returns a boolean if a field has been set.
func (o *PostgresDatabaseParameter) HasEdit() bool {
	_, ok := o.GetEditOk()
	return ok
}

// SetEdit gets a reference to the given bool and assigns it to the Edit field.
func (o *PostgresDatabaseParameter) SetEdit(v PostgresDatabaseParametergetEditRetType) {
	setPostgresDatabaseParametergetEditAttributeType(&o.Edit, v)
}

// GetMaxValue returns the MaxValue field value if set, zero value otherwise.
func (o *PostgresDatabaseParameter) GetMaxValue() (res PostgresDatabaseParameterGetMaxValueRetType) {
	res, _ = o.GetMaxValueOk()
	return
}

// GetMaxValueOk returns a tuple with the MaxValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostgresDatabaseParameter) GetMaxValueOk() (ret PostgresDatabaseParameterGetMaxValueRetType, ok bool) {
	return getPostgresDatabaseParameterGetMaxValueAttributeTypeOk(o.MaxValue)
}

// HasMaxValue returns a boolean if a field has been set.
func (o *PostgresDatabaseParameter) HasMaxValue() bool {
	_, ok := o.GetMaxValueOk()
	return ok
}

// SetMaxValue gets a reference to the given string and assigns it to the MaxValue field.
func (o *PostgresDatabaseParameter) SetMaxValue(v PostgresDatabaseParameterGetMaxValueRetType) {
	setPostgresDatabaseParameterGetMaxValueAttributeType(&o.MaxValue, v)
}

// GetMinValue returns the MinValue field value if set, zero value otherwise.
func (o *PostgresDatabaseParameter) GetMinValue() (res PostgresDatabaseParameterGetMinValueRetType) {
	res, _ = o.GetMinValueOk()
	return
}

// GetMinValueOk returns a tuple with the MinValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostgresDatabaseParameter) GetMinValueOk() (ret PostgresDatabaseParameterGetMinValueRetType, ok bool) {
	return getPostgresDatabaseParameterGetMinValueAttributeTypeOk(o.MinValue)
}

// HasMinValue returns a boolean if a field has been set.
func (o *PostgresDatabaseParameter) HasMinValue() bool {
	_, ok := o.GetMinValueOk()
	return ok
}

// SetMinValue gets a reference to the given string and assigns it to the MinValue field.
func (o *PostgresDatabaseParameter) SetMinValue(v PostgresDatabaseParameterGetMinValueRetType) {
	setPostgresDatabaseParameterGetMinValueAttributeType(&o.MinValue, v)
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PostgresDatabaseParameter) GetName() (res PostgresDatabaseParameterGetNameRetType) {
	res, _ = o.GetNameOk()
	return
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostgresDatabaseParameter) GetNameOk() (ret PostgresDatabaseParameterGetNameRetType, ok bool) {
	return getPostgresDatabaseParameterGetNameAttributeTypeOk(o.Name)
}

// HasName returns a boolean if a field has been set.
func (o *PostgresDatabaseParameter) HasName() bool {
	_, ok := o.GetNameOk()
	return ok
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PostgresDatabaseParameter) SetName(v PostgresDatabaseParameterGetNameRetType) {
	setPostgresDatabaseParameterGetNameAttributeType(&o.Name, v)
}

// GetPendingRestart returns the PendingRestart field value if set, zero value otherwise.
func (o *PostgresDatabaseParameter) GetPendingRestart() (res PostgresDatabaseParametergetPendingRestartRetType) {
	res, _ = o.GetPendingRestartOk()
	return
}

// GetPendingRestartOk returns a tuple with the PendingRestart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostgresDatabaseParameter) GetPendingRestartOk() (ret PostgresDatabaseParametergetPendingRestartRetType, ok bool) {
	return getPostgresDatabaseParametergetPendingRestartAttributeTypeOk(o.PendingRestart)
}

// HasPendingRestart returns a boolean if a field has been set.
func (o *PostgresDatabaseParameter) HasPendingRestart() bool {
	_, ok := o.GetPendingRestartOk()
	return ok
}

// SetPendingRestart gets a reference to the given bool and assigns it to the PendingRestart field.
func (o *PostgresDatabaseParameter) SetPendingRestart(v PostgresDatabaseParametergetPendingRestartRetType) {
	setPostgresDatabaseParametergetPendingRestartAttributeType(&o.PendingRestart, v)
}

// GetResetValue returns the ResetValue field value if set, zero value otherwise.
func (o *PostgresDatabaseParameter) GetResetValue() (res PostgresDatabaseParameterGetResetValueRetType) {
	res, _ = o.GetResetValueOk()
	return
}

// GetResetValueOk returns a tuple with the ResetValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostgresDatabaseParameter) GetResetValueOk() (ret PostgresDatabaseParameterGetResetValueRetType, ok bool) {
	return getPostgresDatabaseParameterGetResetValueAttributeTypeOk(o.ResetValue)
}

// HasResetValue returns a boolean if a field has been set.
func (o *PostgresDatabaseParameter) HasResetValue() bool {
	_, ok := o.GetResetValueOk()
	return ok
}

// SetResetValue gets a reference to the given string and assigns it to the ResetValue field.
func (o *PostgresDatabaseParameter) SetResetValue(v PostgresDatabaseParameterGetResetValueRetType) {
	setPostgresDatabaseParameterGetResetValueAttributeType(&o.ResetValue, v)
}

// GetUnit returns the Unit field value if set, zero value otherwise.
func (o *PostgresDatabaseParameter) GetUnit() (res PostgresDatabaseParameterGetUnitRetType) {
	res, _ = o.GetUnitOk()
	return
}

// GetUnitOk returns a tuple with the Unit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostgresDatabaseParameter) GetUnitOk() (ret PostgresDatabaseParameterGetUnitRetType, ok bool) {
	return getPostgresDatabaseParameterGetUnitAttributeTypeOk(o.Unit)
}

// HasUnit returns a boolean if a field has been set.
func (o *PostgresDatabaseParameter) HasUnit() bool {
	_, ok := o.GetUnitOk()
	return ok
}

// SetUnit gets a reference to the given string and assigns it to the Unit field.
func (o *PostgresDatabaseParameter) SetUnit(v PostgresDatabaseParameterGetUnitRetType) {
	setPostgresDatabaseParameterGetUnitAttributeType(&o.Unit, v)
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *PostgresDatabaseParameter) GetValue() (res PostgresDatabaseParameterGetValueRetType) {
	res, _ = o.GetValueOk()
	return
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostgresDatabaseParameter) GetValueOk() (ret PostgresDatabaseParameterGetValueRetType, ok bool) {
	return getPostgresDatabaseParameterGetValueAttributeTypeOk(o.Value)
}

// HasValue returns a boolean if a field has been set.
func (o *PostgresDatabaseParameter) HasValue() bool {
	_, ok := o.GetValueOk()
	return ok
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *PostgresDatabaseParameter) SetValue(v PostgresDatabaseParameterGetValueRetType) {
	setPostgresDatabaseParameterGetValueAttributeType(&o.Value, v)
}

func (o PostgresDatabaseParameter) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getPostgresDatabaseParameterGetContextAttributeTypeOk(o.Context); ok {
		toSerialize["Context"] = val
	}
	if val, ok := getPostgresDatabaseParameterGetDataTypeAttributeTypeOk(o.DataType); ok {
		toSerialize["DataType"] = val
	}
	if val, ok := getPostgresDatabaseParameterGetDefaultValueAttributeTypeOk(o.DefaultValue); ok {
		toSerialize["DefaultValue"] = val
	}
	if val, ok := getPostgresDatabaseParameterGetDescriptionAttributeTypeOk(o.Description); ok {
		toSerialize["Description"] = val
	}
	if val, ok := getPostgresDatabaseParametergetEditAttributeTypeOk(o.Edit); ok {
		toSerialize["Edit"] = val
	}
	if val, ok := getPostgresDatabaseParameterGetMaxValueAttributeTypeOk(o.MaxValue); ok {
		toSerialize["MaxValue"] = val
	}
	if val, ok := getPostgresDatabaseParameterGetMinValueAttributeTypeOk(o.MinValue); ok {
		toSerialize["MinValue"] = val
	}
	if val, ok := getPostgresDatabaseParameterGetNameAttributeTypeOk(o.Name); ok {
		toSerialize["Name"] = val
	}
	if val, ok := getPostgresDatabaseParametergetPendingRestartAttributeTypeOk(o.PendingRestart); ok {
		toSerialize["PendingRestart"] = val
	}
	if val, ok := getPostgresDatabaseParameterGetResetValueAttributeTypeOk(o.ResetValue); ok {
		toSerialize["ResetValue"] = val
	}
	if val, ok := getPostgresDatabaseParameterGetUnitAttributeTypeOk(o.Unit); ok {
		toSerialize["Unit"] = val
	}
	if val, ok := getPostgresDatabaseParameterGetValueAttributeTypeOk(o.Value); ok {
		toSerialize["Value"] = val
	}
	return toSerialize, nil
}

type NullablePostgresDatabaseParameter struct {
	value *PostgresDatabaseParameter
	isSet bool
}

func (v NullablePostgresDatabaseParameter) Get() *PostgresDatabaseParameter {
	return v.value
}

func (v *NullablePostgresDatabaseParameter) Set(val *PostgresDatabaseParameter) {
	v.value = val
	v.isSet = true
}

func (v NullablePostgresDatabaseParameter) IsSet() bool {
	return v.isSet
}

func (v *NullablePostgresDatabaseParameter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostgresDatabaseParameter(val *PostgresDatabaseParameter) *NullablePostgresDatabaseParameter {
	return &NullablePostgresDatabaseParameter{value: val, isSet: true}
}

func (v NullablePostgresDatabaseParameter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostgresDatabaseParameter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
