/*
STACKIT PostgreSQL Flex API

This is the documentation for the STACKIT postgres service

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package postgresflex

import (
	"encoding/json"
)

// checks if the InstanceHost type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InstanceHost{}

/*
	types and functions for hostMetrics
*/

// isArray
type InstanceHostGetHostMetricsAttributeType = *[]InstanceHostMetric
type InstanceHostGetHostMetricsArgType = []InstanceHostMetric
type InstanceHostGetHostMetricsRetType = []InstanceHostMetric

func getInstanceHostGetHostMetricsAttributeTypeOk(arg InstanceHostGetHostMetricsAttributeType) (ret InstanceHostGetHostMetricsRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setInstanceHostGetHostMetricsAttributeType(arg *InstanceHostGetHostMetricsAttributeType, val InstanceHostGetHostMetricsRetType) {
	*arg = &val
}

/*
	types and functions for id
*/

// isNotNullableString
type InstanceHostGetIdAttributeType = *string

func getInstanceHostGetIdAttributeTypeOk(arg InstanceHostGetIdAttributeType) (ret InstanceHostGetIdRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setInstanceHostGetIdAttributeType(arg *InstanceHostGetIdAttributeType, val InstanceHostGetIdRetType) {
	*arg = &val
}

type InstanceHostGetIdArgType = string
type InstanceHostGetIdRetType = string

// InstanceHost struct for InstanceHost
type InstanceHost struct {
	HostMetrics InstanceHostGetHostMetricsAttributeType `json:"hostMetrics,omitempty"`
	Id          InstanceHostGetIdAttributeType          `json:"id,omitempty"`
}

// NewInstanceHost instantiates a new InstanceHost object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInstanceHost() *InstanceHost {
	this := InstanceHost{}
	return &this
}

// NewInstanceHostWithDefaults instantiates a new InstanceHost object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInstanceHostWithDefaults() *InstanceHost {
	this := InstanceHost{}
	return &this
}

// GetHostMetrics returns the HostMetrics field value if set, zero value otherwise.
func (o *InstanceHost) GetHostMetrics() (res InstanceHostGetHostMetricsRetType) {
	res, _ = o.GetHostMetricsOk()
	return
}

// GetHostMetricsOk returns a tuple with the HostMetrics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceHost) GetHostMetricsOk() (ret InstanceHostGetHostMetricsRetType, ok bool) {
	return getInstanceHostGetHostMetricsAttributeTypeOk(o.HostMetrics)
}

// HasHostMetrics returns a boolean if a field has been set.
func (o *InstanceHost) HasHostMetrics() bool {
	_, ok := o.GetHostMetricsOk()
	return ok
}

// SetHostMetrics gets a reference to the given []InstanceHostMetric and assigns it to the HostMetrics field.
func (o *InstanceHost) SetHostMetrics(v InstanceHostGetHostMetricsRetType) {
	setInstanceHostGetHostMetricsAttributeType(&o.HostMetrics, v)
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InstanceHost) GetId() (res InstanceHostGetIdRetType) {
	res, _ = o.GetIdOk()
	return
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceHost) GetIdOk() (ret InstanceHostGetIdRetType, ok bool) {
	return getInstanceHostGetIdAttributeTypeOk(o.Id)
}

// HasId returns a boolean if a field has been set.
func (o *InstanceHost) HasId() bool {
	_, ok := o.GetIdOk()
	return ok
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *InstanceHost) SetId(v InstanceHostGetIdRetType) {
	setInstanceHostGetIdAttributeType(&o.Id, v)
}

func (o InstanceHost) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getInstanceHostGetHostMetricsAttributeTypeOk(o.HostMetrics); ok {
		toSerialize["HostMetrics"] = val
	}
	if val, ok := getInstanceHostGetIdAttributeTypeOk(o.Id); ok {
		toSerialize["Id"] = val
	}
	return toSerialize, nil
}

type NullableInstanceHost struct {
	value *InstanceHost
	isSet bool
}

func (v NullableInstanceHost) Get() *InstanceHost {
	return v.value
}

func (v *NullableInstanceHost) Set(val *InstanceHost) {
	v.value = val
	v.isSet = true
}

func (v NullableInstanceHost) IsSet() bool {
	return v.isSet
}

func (v *NullableInstanceHost) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInstanceHost(val *InstanceHost) *NullableInstanceHost {
	return &NullableInstanceHost{value: val, isSet: true}
}

func (v NullableInstanceHost) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInstanceHost) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
