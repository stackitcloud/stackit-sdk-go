/*
STACKIT PostgreSQL Flex API

This is the documentation for the STACKIT postgres service

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package postgresflex

import (
	"encoding/json"
)

// checks if the ApiExtensionList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiExtensionList{}

/*
	types and functions for ID
*/

// isLong
type ApiExtensionListGetIDAttributeType = *int64
type ApiExtensionListGetIDArgType = int64
type ApiExtensionListGetIDRetType = int64

func getApiExtensionListGetIDAttributeTypeOk(arg ApiExtensionListGetIDAttributeType) (ret ApiExtensionListGetIDRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setApiExtensionListGetIDAttributeType(arg *ApiExtensionListGetIDAttributeType, val ApiExtensionListGetIDRetType) {
	*arg = &val
}

/*
	types and functions for description
*/

// isNotNullableString
type ApiExtensionListGetDescriptionAttributeType = *string

func getApiExtensionListGetDescriptionAttributeTypeOk(arg ApiExtensionListGetDescriptionAttributeType) (ret ApiExtensionListGetDescriptionRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setApiExtensionListGetDescriptionAttributeType(arg *ApiExtensionListGetDescriptionAttributeType, val ApiExtensionListGetDescriptionRetType) {
	*arg = &val
}

type ApiExtensionListGetDescriptionArgType = string
type ApiExtensionListGetDescriptionRetType = string

/*
	types and functions for name
*/

// isNotNullableString
type ApiExtensionListGetNameAttributeType = *string

func getApiExtensionListGetNameAttributeTypeOk(arg ApiExtensionListGetNameAttributeType) (ret ApiExtensionListGetNameRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setApiExtensionListGetNameAttributeType(arg *ApiExtensionListGetNameAttributeType, val ApiExtensionListGetNameRetType) {
	*arg = &val
}

type ApiExtensionListGetNameArgType = string
type ApiExtensionListGetNameRetType = string

// ApiExtensionList struct for ApiExtensionList
type ApiExtensionList struct {
	ID          ApiExtensionListGetIDAttributeType          `json:"ID,omitempty"`
	Description ApiExtensionListGetDescriptionAttributeType `json:"description,omitempty"`
	Name        ApiExtensionListGetNameAttributeType        `json:"name,omitempty"`
}

// NewApiExtensionList instantiates a new ApiExtensionList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiExtensionList() *ApiExtensionList {
	this := ApiExtensionList{}
	return &this
}

// NewApiExtensionListWithDefaults instantiates a new ApiExtensionList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiExtensionListWithDefaults() *ApiExtensionList {
	this := ApiExtensionList{}
	return &this
}

// GetID returns the ID field value if set, zero value otherwise.
func (o *ApiExtensionList) GetID() (res ApiExtensionListGetIDRetType) {
	res, _ = o.GetIDOk()
	return
}

// GetIDOk returns a tuple with the ID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiExtensionList) GetIDOk() (ret ApiExtensionListGetIDRetType, ok bool) {
	return getApiExtensionListGetIDAttributeTypeOk(o.ID)
}

// HasID returns a boolean if a field has been set.
func (o *ApiExtensionList) HasID() bool {
	_, ok := o.GetIDOk()
	return ok
}

// SetID gets a reference to the given int64 and assigns it to the ID field.
func (o *ApiExtensionList) SetID(v ApiExtensionListGetIDRetType) {
	setApiExtensionListGetIDAttributeType(&o.ID, v)
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ApiExtensionList) GetDescription() (res ApiExtensionListGetDescriptionRetType) {
	res, _ = o.GetDescriptionOk()
	return
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiExtensionList) GetDescriptionOk() (ret ApiExtensionListGetDescriptionRetType, ok bool) {
	return getApiExtensionListGetDescriptionAttributeTypeOk(o.Description)
}

// HasDescription returns a boolean if a field has been set.
func (o *ApiExtensionList) HasDescription() bool {
	_, ok := o.GetDescriptionOk()
	return ok
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ApiExtensionList) SetDescription(v ApiExtensionListGetDescriptionRetType) {
	setApiExtensionListGetDescriptionAttributeType(&o.Description, v)
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ApiExtensionList) GetName() (res ApiExtensionListGetNameRetType) {
	res, _ = o.GetNameOk()
	return
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiExtensionList) GetNameOk() (ret ApiExtensionListGetNameRetType, ok bool) {
	return getApiExtensionListGetNameAttributeTypeOk(o.Name)
}

// HasName returns a boolean if a field has been set.
func (o *ApiExtensionList) HasName() bool {
	_, ok := o.GetNameOk()
	return ok
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ApiExtensionList) SetName(v ApiExtensionListGetNameRetType) {
	setApiExtensionListGetNameAttributeType(&o.Name, v)
}

func (o ApiExtensionList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getApiExtensionListGetIDAttributeTypeOk(o.ID); ok {
		toSerialize["ID"] = val
	}
	if val, ok := getApiExtensionListGetDescriptionAttributeTypeOk(o.Description); ok {
		toSerialize["Description"] = val
	}
	if val, ok := getApiExtensionListGetNameAttributeTypeOk(o.Name); ok {
		toSerialize["Name"] = val
	}
	return toSerialize, nil
}

type NullableApiExtensionList struct {
	value *ApiExtensionList
	isSet bool
}

func (v NullableApiExtensionList) Get() *ApiExtensionList {
	return v.value
}

func (v *NullableApiExtensionList) Set(val *ApiExtensionList) {
	v.value = val
	v.isSet = true
}

func (v NullableApiExtensionList) IsSet() bool {
	return v.isSet
}

func (v *NullableApiExtensionList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiExtensionList(val *ApiExtensionList) *NullableApiExtensionList {
	return &NullableApiExtensionList{value: val, isSet: true}
}

func (v NullableApiExtensionList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiExtensionList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
