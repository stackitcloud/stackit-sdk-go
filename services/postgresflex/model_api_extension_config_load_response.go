/*
STACKIT PostgreSQL Flex API

This is the documentation for the STACKIT postgres service

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package postgresflex

import (
	"encoding/json"
)

// checks if the ApiExtensionConfigLoadResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiExtensionConfigLoadResponse{}

/*
	types and functions for configuration
*/

// isArray
type ApiExtensionConfigLoadResponseGetConfigurationAttributeType = *[]ApiConfiguration
type ApiExtensionConfigLoadResponseGetConfigurationArgType = []ApiConfiguration
type ApiExtensionConfigLoadResponseGetConfigurationRetType = []ApiConfiguration

func getApiExtensionConfigLoadResponseGetConfigurationAttributeTypeOk(arg ApiExtensionConfigLoadResponseGetConfigurationAttributeType) (ret ApiExtensionConfigLoadResponseGetConfigurationRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setApiExtensionConfigLoadResponseGetConfigurationAttributeType(arg *ApiExtensionConfigLoadResponseGetConfigurationAttributeType, val ApiExtensionConfigLoadResponseGetConfigurationRetType) {
	*arg = &val
}

// ApiExtensionConfigLoadResponse struct for ApiExtensionConfigLoadResponse
type ApiExtensionConfigLoadResponse struct {
	// Returns marshalled JSON of the new configuration of whatever extension is called
	Configuration ApiExtensionConfigLoadResponseGetConfigurationAttributeType `json:"configuration,omitempty"`
}

// NewApiExtensionConfigLoadResponse instantiates a new ApiExtensionConfigLoadResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiExtensionConfigLoadResponse() *ApiExtensionConfigLoadResponse {
	this := ApiExtensionConfigLoadResponse{}
	return &this
}

// NewApiExtensionConfigLoadResponseWithDefaults instantiates a new ApiExtensionConfigLoadResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiExtensionConfigLoadResponseWithDefaults() *ApiExtensionConfigLoadResponse {
	this := ApiExtensionConfigLoadResponse{}
	return &this
}

// GetConfiguration returns the Configuration field value if set, zero value otherwise.
func (o *ApiExtensionConfigLoadResponse) GetConfiguration() (res ApiExtensionConfigLoadResponseGetConfigurationRetType) {
	res, _ = o.GetConfigurationOk()
	return
}

// GetConfigurationOk returns a tuple with the Configuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiExtensionConfigLoadResponse) GetConfigurationOk() (ret ApiExtensionConfigLoadResponseGetConfigurationRetType, ok bool) {
	return getApiExtensionConfigLoadResponseGetConfigurationAttributeTypeOk(o.Configuration)
}

// HasConfiguration returns a boolean if a field has been set.
func (o *ApiExtensionConfigLoadResponse) HasConfiguration() bool {
	_, ok := o.GetConfigurationOk()
	return ok
}

// SetConfiguration gets a reference to the given []ApiConfiguration and assigns it to the Configuration field.
func (o *ApiExtensionConfigLoadResponse) SetConfiguration(v ApiExtensionConfigLoadResponseGetConfigurationRetType) {
	setApiExtensionConfigLoadResponseGetConfigurationAttributeType(&o.Configuration, v)
}

func (o ApiExtensionConfigLoadResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getApiExtensionConfigLoadResponseGetConfigurationAttributeTypeOk(o.Configuration); ok {
		toSerialize["Configuration"] = val
	}
	return toSerialize, nil
}

type NullableApiExtensionConfigLoadResponse struct {
	value *ApiExtensionConfigLoadResponse
	isSet bool
}

func (v NullableApiExtensionConfigLoadResponse) Get() *ApiExtensionConfigLoadResponse {
	return v.value
}

func (v *NullableApiExtensionConfigLoadResponse) Set(val *ApiExtensionConfigLoadResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableApiExtensionConfigLoadResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableApiExtensionConfigLoadResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiExtensionConfigLoadResponse(val *ApiExtensionConfigLoadResponse) *NullableApiExtensionConfigLoadResponse {
	return &NullableApiExtensionConfigLoadResponse{value: val, isSet: true}
}

func (v NullableApiExtensionConfigLoadResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiExtensionConfigLoadResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
