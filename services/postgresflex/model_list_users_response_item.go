/*
STACKIT PostgreSQL Flex API

This is the documentation for the STACKIT postgres service

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package postgresflex

import (
	"encoding/json"
)

// checks if the ListUsersResponseItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListUsersResponseItem{}

/*
	types and functions for id
*/

// isNotNullableString
type ListUsersResponseItemGetIdAttributeType = *string

func getListUsersResponseItemGetIdAttributeTypeOk(arg ListUsersResponseItemGetIdAttributeType) (ret ListUsersResponseItemGetIdRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setListUsersResponseItemGetIdAttributeType(arg *ListUsersResponseItemGetIdAttributeType, val ListUsersResponseItemGetIdRetType) {
	*arg = &val
}

type ListUsersResponseItemGetIdArgType = string
type ListUsersResponseItemGetIdRetType = string

/*
	types and functions for username
*/

// isNotNullableString
type ListUsersResponseItemGetUsernameAttributeType = *string

func getListUsersResponseItemGetUsernameAttributeTypeOk(arg ListUsersResponseItemGetUsernameAttributeType) (ret ListUsersResponseItemGetUsernameRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setListUsersResponseItemGetUsernameAttributeType(arg *ListUsersResponseItemGetUsernameAttributeType, val ListUsersResponseItemGetUsernameRetType) {
	*arg = &val
}

type ListUsersResponseItemGetUsernameArgType = string
type ListUsersResponseItemGetUsernameRetType = string

// ListUsersResponseItem struct for ListUsersResponseItem
type ListUsersResponseItem struct {
	Id       ListUsersResponseItemGetIdAttributeType       `json:"id,omitempty"`
	Username ListUsersResponseItemGetUsernameAttributeType `json:"username,omitempty"`
}

// NewListUsersResponseItem instantiates a new ListUsersResponseItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListUsersResponseItem() *ListUsersResponseItem {
	this := ListUsersResponseItem{}
	return &this
}

// NewListUsersResponseItemWithDefaults instantiates a new ListUsersResponseItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListUsersResponseItemWithDefaults() *ListUsersResponseItem {
	this := ListUsersResponseItem{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ListUsersResponseItem) GetId() (res ListUsersResponseItemGetIdRetType) {
	res, _ = o.GetIdOk()
	return
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListUsersResponseItem) GetIdOk() (ret ListUsersResponseItemGetIdRetType, ok bool) {
	return getListUsersResponseItemGetIdAttributeTypeOk(o.Id)
}

// HasId returns a boolean if a field has been set.
func (o *ListUsersResponseItem) HasId() bool {
	_, ok := o.GetIdOk()
	return ok
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ListUsersResponseItem) SetId(v ListUsersResponseItemGetIdRetType) {
	setListUsersResponseItemGetIdAttributeType(&o.Id, v)
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *ListUsersResponseItem) GetUsername() (res ListUsersResponseItemGetUsernameRetType) {
	res, _ = o.GetUsernameOk()
	return
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListUsersResponseItem) GetUsernameOk() (ret ListUsersResponseItemGetUsernameRetType, ok bool) {
	return getListUsersResponseItemGetUsernameAttributeTypeOk(o.Username)
}

// HasUsername returns a boolean if a field has been set.
func (o *ListUsersResponseItem) HasUsername() bool {
	_, ok := o.GetUsernameOk()
	return ok
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *ListUsersResponseItem) SetUsername(v ListUsersResponseItemGetUsernameRetType) {
	setListUsersResponseItemGetUsernameAttributeType(&o.Username, v)
}

func (o ListUsersResponseItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getListUsersResponseItemGetIdAttributeTypeOk(o.Id); ok {
		toSerialize["Id"] = val
	}
	if val, ok := getListUsersResponseItemGetUsernameAttributeTypeOk(o.Username); ok {
		toSerialize["Username"] = val
	}
	return toSerialize, nil
}

type NullableListUsersResponseItem struct {
	value *ListUsersResponseItem
	isSet bool
}

func (v NullableListUsersResponseItem) Get() *ListUsersResponseItem {
	return v.value
}

func (v *NullableListUsersResponseItem) Set(val *ListUsersResponseItem) {
	v.value = val
	v.isSet = true
}

func (v NullableListUsersResponseItem) IsSet() bool {
	return v.isSet
}

func (v *NullableListUsersResponseItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListUsersResponseItem(val *ListUsersResponseItem) *NullableListUsersResponseItem {
	return &NullableListUsersResponseItem{value: val, isSet: true}
}

func (v NullableListUsersResponseItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListUsersResponseItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
