/*
STACKIT LogMe API

The STACKIT LogMe API provides endpoints to list service offerings, manage service instances and service credentials within STACKIT portal projects.

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package logme

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the CreateInstanceResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateInstanceResponse{}

/*
	types and functions for instanceId
*/

// isNotNullableString
type CreateInstanceResponseGetInstanceIdAttributeType = *string

func getCreateInstanceResponseGetInstanceIdAttributeTypeOk(arg CreateInstanceResponseGetInstanceIdAttributeType) (ret CreateInstanceResponseGetInstanceIdRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setCreateInstanceResponseGetInstanceIdAttributeType(arg *CreateInstanceResponseGetInstanceIdAttributeType, val CreateInstanceResponseGetInstanceIdRetType) {
	*arg = &val
}

type CreateInstanceResponseGetInstanceIdArgType = string
type CreateInstanceResponseGetInstanceIdRetType = string

// CreateInstanceResponse struct for CreateInstanceResponse
type CreateInstanceResponse struct {
	// REQUIRED
	InstanceId CreateInstanceResponseGetInstanceIdAttributeType `json:"instanceId"`
}

type _CreateInstanceResponse CreateInstanceResponse

// NewCreateInstanceResponse instantiates a new CreateInstanceResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateInstanceResponse(instanceId CreateInstanceResponseGetInstanceIdArgType) *CreateInstanceResponse {
	this := CreateInstanceResponse{}
	setCreateInstanceResponseGetInstanceIdAttributeType(&this.InstanceId, instanceId)
	return &this
}

// NewCreateInstanceResponseWithDefaults instantiates a new CreateInstanceResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateInstanceResponseWithDefaults() *CreateInstanceResponse {
	this := CreateInstanceResponse{}
	return &this
}

// GetInstanceId returns the InstanceId field value
func (o *CreateInstanceResponse) GetInstanceId() (ret CreateInstanceResponseGetInstanceIdRetType) {
	ret, _ = o.GetInstanceIdOk()
	return ret
}

// GetInstanceIdOk returns a tuple with the InstanceId field value
// and a boolean to check if the value has been set.
func (o *CreateInstanceResponse) GetInstanceIdOk() (ret CreateInstanceResponseGetInstanceIdRetType, ok bool) {
	return getCreateInstanceResponseGetInstanceIdAttributeTypeOk(o.InstanceId)
}

// SetInstanceId sets field value
func (o *CreateInstanceResponse) SetInstanceId(v CreateInstanceResponseGetInstanceIdRetType) {
	setCreateInstanceResponseGetInstanceIdAttributeType(&o.InstanceId, v)
}

func (o CreateInstanceResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateInstanceResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getCreateInstanceResponseGetInstanceIdAttributeTypeOk(o.InstanceId); ok {
		toSerialize["InstanceId"] = val
	}
	return toSerialize, nil
}

func (o *CreateInstanceResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"instanceId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateInstanceResponse := _CreateInstanceResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateInstanceResponse)

	if err != nil {
		return err
	}

	*o = CreateInstanceResponse(varCreateInstanceResponse)

	return err
}

type NullableCreateInstanceResponse struct {
	value *CreateInstanceResponse
	isSet bool
}

func (v NullableCreateInstanceResponse) Get() *CreateInstanceResponse {
	return v.value
}

func (v *NullableCreateInstanceResponse) Set(val *CreateInstanceResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateInstanceResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateInstanceResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateInstanceResponse(val *CreateInstanceResponse) *NullableCreateInstanceResponse {
	return &NullableCreateInstanceResponse{value: val, isSet: true}
}

func (v NullableCreateInstanceResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateInstanceResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
