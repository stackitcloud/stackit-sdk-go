/*
STACKIT LogMe API

The STACKIT LogMe API provides endpoints to list service offerings, manage service instances and service credentials within STACKIT portal projects.

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package logme

import (
	"encoding/json"
)

// checks if the Restore type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Restore{}

/*
	types and functions for backup_id
*/

// isInteger
type RestoreGetBackupIdAttributeType = *int64
type RestoreGetBackupIdArgType = int64
type RestoreGetBackupIdRetType = int64

func getRestoreGetBackupIdAttributeTypeOk(arg RestoreGetBackupIdAttributeType) (ret RestoreGetBackupIdRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setRestoreGetBackupIdAttributeType(arg *RestoreGetBackupIdAttributeType, val RestoreGetBackupIdRetType) {
	*arg = &val
}

/*
	types and functions for finished_at
*/

// isNotNullableString
type RestoreGetFinishedAtAttributeType = *string

func getRestoreGetFinishedAtAttributeTypeOk(arg RestoreGetFinishedAtAttributeType) (ret RestoreGetFinishedAtRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setRestoreGetFinishedAtAttributeType(arg *RestoreGetFinishedAtAttributeType, val RestoreGetFinishedAtRetType) {
	*arg = &val
}

type RestoreGetFinishedAtArgType = string
type RestoreGetFinishedAtRetType = string

/*
	types and functions for id
*/

// isInteger
type RestoreGetIdAttributeType = *int64
type RestoreGetIdArgType = int64
type RestoreGetIdRetType = int64

func getRestoreGetIdAttributeTypeOk(arg RestoreGetIdAttributeType) (ret RestoreGetIdRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setRestoreGetIdAttributeType(arg *RestoreGetIdAttributeType, val RestoreGetIdRetType) {
	*arg = &val
}

/*
	types and functions for status
*/

// isNotNullableString
type RestoreGetStatusAttributeType = *string

func getRestoreGetStatusAttributeTypeOk(arg RestoreGetStatusAttributeType) (ret RestoreGetStatusRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setRestoreGetStatusAttributeType(arg *RestoreGetStatusAttributeType, val RestoreGetStatusRetType) {
	*arg = &val
}

type RestoreGetStatusArgType = string
type RestoreGetStatusRetType = string

/*
	types and functions for triggered_at
*/

// isNotNullableString
type RestoreGetTriggeredAtAttributeType = *string

func getRestoreGetTriggeredAtAttributeTypeOk(arg RestoreGetTriggeredAtAttributeType) (ret RestoreGetTriggeredAtRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setRestoreGetTriggeredAtAttributeType(arg *RestoreGetTriggeredAtAttributeType, val RestoreGetTriggeredAtRetType) {
	*arg = &val
}

type RestoreGetTriggeredAtArgType = string
type RestoreGetTriggeredAtRetType = string

// Restore struct for Restore
type Restore struct {
	// REQUIRED
	BackupId RestoreGetBackupIdAttributeType `json:"backup_id"`
	// REQUIRED
	FinishedAt RestoreGetFinishedAtAttributeType `json:"finished_at"`
	// REQUIRED
	Id RestoreGetIdAttributeType `json:"id"`
	// REQUIRED
	Status      RestoreGetStatusAttributeType      `json:"status"`
	TriggeredAt RestoreGetTriggeredAtAttributeType `json:"triggered_at,omitempty"`
}

type _Restore Restore

// NewRestore instantiates a new Restore object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestore(backupId RestoreGetBackupIdArgType, finishedAt RestoreGetFinishedAtArgType, id RestoreGetIdArgType, status RestoreGetStatusArgType) *Restore {
	this := Restore{}
	setRestoreGetBackupIdAttributeType(&this.BackupId, backupId)
	setRestoreGetFinishedAtAttributeType(&this.FinishedAt, finishedAt)
	setRestoreGetIdAttributeType(&this.Id, id)
	setRestoreGetStatusAttributeType(&this.Status, status)
	return &this
}

// NewRestoreWithDefaults instantiates a new Restore object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestoreWithDefaults() *Restore {
	this := Restore{}
	return &this
}

// GetBackupId returns the BackupId field value
func (o *Restore) GetBackupId() (ret RestoreGetBackupIdRetType) {
	ret, _ = o.GetBackupIdOk()
	return ret
}

// GetBackupIdOk returns a tuple with the BackupId field value
// and a boolean to check if the value has been set.
func (o *Restore) GetBackupIdOk() (ret RestoreGetBackupIdRetType, ok bool) {
	return getRestoreGetBackupIdAttributeTypeOk(o.BackupId)
}

// SetBackupId sets field value
func (o *Restore) SetBackupId(v RestoreGetBackupIdRetType) {
	setRestoreGetBackupIdAttributeType(&o.BackupId, v)
}

// GetFinishedAt returns the FinishedAt field value
func (o *Restore) GetFinishedAt() (ret RestoreGetFinishedAtRetType) {
	ret, _ = o.GetFinishedAtOk()
	return ret
}

// GetFinishedAtOk returns a tuple with the FinishedAt field value
// and a boolean to check if the value has been set.
func (o *Restore) GetFinishedAtOk() (ret RestoreGetFinishedAtRetType, ok bool) {
	return getRestoreGetFinishedAtAttributeTypeOk(o.FinishedAt)
}

// SetFinishedAt sets field value
func (o *Restore) SetFinishedAt(v RestoreGetFinishedAtRetType) {
	setRestoreGetFinishedAtAttributeType(&o.FinishedAt, v)
}

// GetId returns the Id field value
func (o *Restore) GetId() (ret RestoreGetIdRetType) {
	ret, _ = o.GetIdOk()
	return ret
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Restore) GetIdOk() (ret RestoreGetIdRetType, ok bool) {
	return getRestoreGetIdAttributeTypeOk(o.Id)
}

// SetId sets field value
func (o *Restore) SetId(v RestoreGetIdRetType) {
	setRestoreGetIdAttributeType(&o.Id, v)
}

// GetStatus returns the Status field value
func (o *Restore) GetStatus() (ret RestoreGetStatusRetType) {
	ret, _ = o.GetStatusOk()
	return ret
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *Restore) GetStatusOk() (ret RestoreGetStatusRetType, ok bool) {
	return getRestoreGetStatusAttributeTypeOk(o.Status)
}

// SetStatus sets field value
func (o *Restore) SetStatus(v RestoreGetStatusRetType) {
	setRestoreGetStatusAttributeType(&o.Status, v)
}

// GetTriggeredAt returns the TriggeredAt field value if set, zero value otherwise.
func (o *Restore) GetTriggeredAt() (res RestoreGetTriggeredAtRetType) {
	res, _ = o.GetTriggeredAtOk()
	return
}

// GetTriggeredAtOk returns a tuple with the TriggeredAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Restore) GetTriggeredAtOk() (ret RestoreGetTriggeredAtRetType, ok bool) {
	return getRestoreGetTriggeredAtAttributeTypeOk(o.TriggeredAt)
}

// HasTriggeredAt returns a boolean if a field has been set.
func (o *Restore) HasTriggeredAt() bool {
	_, ok := o.GetTriggeredAtOk()
	return ok
}

// SetTriggeredAt gets a reference to the given string and assigns it to the TriggeredAt field.
func (o *Restore) SetTriggeredAt(v RestoreGetTriggeredAtRetType) {
	setRestoreGetTriggeredAtAttributeType(&o.TriggeredAt, v)
}

func (o Restore) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getRestoreGetBackupIdAttributeTypeOk(o.BackupId); ok {
		toSerialize["BackupId"] = val
	}
	if val, ok := getRestoreGetFinishedAtAttributeTypeOk(o.FinishedAt); ok {
		toSerialize["FinishedAt"] = val
	}
	if val, ok := getRestoreGetIdAttributeTypeOk(o.Id); ok {
		toSerialize["Id"] = val
	}
	if val, ok := getRestoreGetStatusAttributeTypeOk(o.Status); ok {
		toSerialize["Status"] = val
	}
	if val, ok := getRestoreGetTriggeredAtAttributeTypeOk(o.TriggeredAt); ok {
		toSerialize["TriggeredAt"] = val
	}
	return toSerialize, nil
}

type NullableRestore struct {
	value *Restore
	isSet bool
}

func (v NullableRestore) Get() *Restore {
	return v.value
}

func (v *NullableRestore) Set(val *Restore) {
	v.value = val
	v.isSet = true
}

func (v NullableRestore) IsSet() bool {
	return v.isSet
}

func (v *NullableRestore) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestore(val *Restore) *NullableRestore {
	return &NullableRestore{value: val, isSet: true}
}

func (v NullableRestore) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestore) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
