/*
STACKIT Server Backup Management API

API endpoints for Server Backup Operations on STACKIT Servers.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package serverbackup

import (
	"encoding/json"
)

// checks if the BackupPolicy type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BackupPolicy{}

/*
	types and functions for backupProperties
*/

// isModel
type BackupPolicyGetBackupPropertiesAttributeType = *BackupPolicyBackupProperties
type BackupPolicyGetBackupPropertiesArgType = BackupPolicyBackupProperties
type BackupPolicyGetBackupPropertiesRetType = BackupPolicyBackupProperties

func getBackupPolicyGetBackupPropertiesAttributeTypeOk(arg BackupPolicyGetBackupPropertiesAttributeType) (ret BackupPolicyGetBackupPropertiesRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setBackupPolicyGetBackupPropertiesAttributeType(arg *BackupPolicyGetBackupPropertiesAttributeType, val BackupPolicyGetBackupPropertiesRetType) {
	*arg = &val
}

/*
	types and functions for default
*/

// isBoolean
type BackupPolicygetDefaultAttributeType = *bool
type BackupPolicygetDefaultArgType = bool
type BackupPolicygetDefaultRetType = bool

func getBackupPolicygetDefaultAttributeTypeOk(arg BackupPolicygetDefaultAttributeType) (ret BackupPolicygetDefaultRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setBackupPolicygetDefaultAttributeType(arg *BackupPolicygetDefaultAttributeType, val BackupPolicygetDefaultRetType) {
	*arg = &val
}

/*
	types and functions for description
*/

// isNotNullableString
type BackupPolicyGetDescriptionAttributeType = *string

func getBackupPolicyGetDescriptionAttributeTypeOk(arg BackupPolicyGetDescriptionAttributeType) (ret BackupPolicyGetDescriptionRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setBackupPolicyGetDescriptionAttributeType(arg *BackupPolicyGetDescriptionAttributeType, val BackupPolicyGetDescriptionRetType) {
	*arg = &val
}

type BackupPolicyGetDescriptionArgType = string
type BackupPolicyGetDescriptionRetType = string

/*
	types and functions for enabled
*/

// isBoolean
type BackupPolicygetEnabledAttributeType = *bool
type BackupPolicygetEnabledArgType = bool
type BackupPolicygetEnabledRetType = bool

func getBackupPolicygetEnabledAttributeTypeOk(arg BackupPolicygetEnabledAttributeType) (ret BackupPolicygetEnabledRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setBackupPolicygetEnabledAttributeType(arg *BackupPolicygetEnabledAttributeType, val BackupPolicygetEnabledRetType) {
	*arg = &val
}

/*
	types and functions for id
*/

// isNotNullableString
type BackupPolicyGetIdAttributeType = *string

func getBackupPolicyGetIdAttributeTypeOk(arg BackupPolicyGetIdAttributeType) (ret BackupPolicyGetIdRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setBackupPolicyGetIdAttributeType(arg *BackupPolicyGetIdAttributeType, val BackupPolicyGetIdRetType) {
	*arg = &val
}

type BackupPolicyGetIdArgType = string
type BackupPolicyGetIdRetType = string

/*
	types and functions for name
*/

// isNotNullableString
type BackupPolicyGetNameAttributeType = *string

func getBackupPolicyGetNameAttributeTypeOk(arg BackupPolicyGetNameAttributeType) (ret BackupPolicyGetNameRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setBackupPolicyGetNameAttributeType(arg *BackupPolicyGetNameAttributeType, val BackupPolicyGetNameRetType) {
	*arg = &val
}

type BackupPolicyGetNameArgType = string
type BackupPolicyGetNameRetType = string

/*
	types and functions for rrule
*/

// isNotNullableString
type BackupPolicyGetRruleAttributeType = *string

func getBackupPolicyGetRruleAttributeTypeOk(arg BackupPolicyGetRruleAttributeType) (ret BackupPolicyGetRruleRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setBackupPolicyGetRruleAttributeType(arg *BackupPolicyGetRruleAttributeType, val BackupPolicyGetRruleRetType) {
	*arg = &val
}

type BackupPolicyGetRruleArgType = string
type BackupPolicyGetRruleRetType = string

// BackupPolicy struct for BackupPolicy
type BackupPolicy struct {
	BackupProperties BackupPolicyGetBackupPropertiesAttributeType `json:"backupProperties,omitempty"`
	Default          BackupPolicygetDefaultAttributeType          `json:"default,omitempty"`
	Description      BackupPolicyGetDescriptionAttributeType      `json:"description,omitempty"`
	Enabled          BackupPolicygetEnabledAttributeType          `json:"enabled,omitempty"`
	Id               BackupPolicyGetIdAttributeType               `json:"id,omitempty"`
	Name             BackupPolicyGetNameAttributeType             `json:"name,omitempty"`
	Rrule            BackupPolicyGetRruleAttributeType            `json:"rrule,omitempty"`
}

// NewBackupPolicy instantiates a new BackupPolicy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBackupPolicy() *BackupPolicy {
	this := BackupPolicy{}
	return &this
}

// NewBackupPolicyWithDefaults instantiates a new BackupPolicy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBackupPolicyWithDefaults() *BackupPolicy {
	this := BackupPolicy{}
	return &this
}

// GetBackupProperties returns the BackupProperties field value if set, zero value otherwise.
func (o *BackupPolicy) GetBackupProperties() (res BackupPolicyGetBackupPropertiesRetType) {
	res, _ = o.GetBackupPropertiesOk()
	return
}

// GetBackupPropertiesOk returns a tuple with the BackupProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupPolicy) GetBackupPropertiesOk() (ret BackupPolicyGetBackupPropertiesRetType, ok bool) {
	return getBackupPolicyGetBackupPropertiesAttributeTypeOk(o.BackupProperties)
}

// HasBackupProperties returns a boolean if a field has been set.
func (o *BackupPolicy) HasBackupProperties() bool {
	_, ok := o.GetBackupPropertiesOk()
	return ok
}

// SetBackupProperties gets a reference to the given BackupPolicyBackupProperties and assigns it to the BackupProperties field.
func (o *BackupPolicy) SetBackupProperties(v BackupPolicyGetBackupPropertiesRetType) {
	setBackupPolicyGetBackupPropertiesAttributeType(&o.BackupProperties, v)
}

// GetDefault returns the Default field value if set, zero value otherwise.
func (o *BackupPolicy) GetDefault() (res BackupPolicygetDefaultRetType) {
	res, _ = o.GetDefaultOk()
	return
}

// GetDefaultOk returns a tuple with the Default field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupPolicy) GetDefaultOk() (ret BackupPolicygetDefaultRetType, ok bool) {
	return getBackupPolicygetDefaultAttributeTypeOk(o.Default)
}

// HasDefault returns a boolean if a field has been set.
func (o *BackupPolicy) HasDefault() bool {
	_, ok := o.GetDefaultOk()
	return ok
}

// SetDefault gets a reference to the given bool and assigns it to the Default field.
func (o *BackupPolicy) SetDefault(v BackupPolicygetDefaultRetType) {
	setBackupPolicygetDefaultAttributeType(&o.Default, v)
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *BackupPolicy) GetDescription() (res BackupPolicyGetDescriptionRetType) {
	res, _ = o.GetDescriptionOk()
	return
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupPolicy) GetDescriptionOk() (ret BackupPolicyGetDescriptionRetType, ok bool) {
	return getBackupPolicyGetDescriptionAttributeTypeOk(o.Description)
}

// HasDescription returns a boolean if a field has been set.
func (o *BackupPolicy) HasDescription() bool {
	_, ok := o.GetDescriptionOk()
	return ok
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *BackupPolicy) SetDescription(v BackupPolicyGetDescriptionRetType) {
	setBackupPolicyGetDescriptionAttributeType(&o.Description, v)
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *BackupPolicy) GetEnabled() (res BackupPolicygetEnabledRetType) {
	res, _ = o.GetEnabledOk()
	return
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupPolicy) GetEnabledOk() (ret BackupPolicygetEnabledRetType, ok bool) {
	return getBackupPolicygetEnabledAttributeTypeOk(o.Enabled)
}

// HasEnabled returns a boolean if a field has been set.
func (o *BackupPolicy) HasEnabled() bool {
	_, ok := o.GetEnabledOk()
	return ok
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *BackupPolicy) SetEnabled(v BackupPolicygetEnabledRetType) {
	setBackupPolicygetEnabledAttributeType(&o.Enabled, v)
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *BackupPolicy) GetId() (res BackupPolicyGetIdRetType) {
	res, _ = o.GetIdOk()
	return
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupPolicy) GetIdOk() (ret BackupPolicyGetIdRetType, ok bool) {
	return getBackupPolicyGetIdAttributeTypeOk(o.Id)
}

// HasId returns a boolean if a field has been set.
func (o *BackupPolicy) HasId() bool {
	_, ok := o.GetIdOk()
	return ok
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *BackupPolicy) SetId(v BackupPolicyGetIdRetType) {
	setBackupPolicyGetIdAttributeType(&o.Id, v)
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *BackupPolicy) GetName() (res BackupPolicyGetNameRetType) {
	res, _ = o.GetNameOk()
	return
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupPolicy) GetNameOk() (ret BackupPolicyGetNameRetType, ok bool) {
	return getBackupPolicyGetNameAttributeTypeOk(o.Name)
}

// HasName returns a boolean if a field has been set.
func (o *BackupPolicy) HasName() bool {
	_, ok := o.GetNameOk()
	return ok
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *BackupPolicy) SetName(v BackupPolicyGetNameRetType) {
	setBackupPolicyGetNameAttributeType(&o.Name, v)
}

// GetRrule returns the Rrule field value if set, zero value otherwise.
func (o *BackupPolicy) GetRrule() (res BackupPolicyGetRruleRetType) {
	res, _ = o.GetRruleOk()
	return
}

// GetRruleOk returns a tuple with the Rrule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupPolicy) GetRruleOk() (ret BackupPolicyGetRruleRetType, ok bool) {
	return getBackupPolicyGetRruleAttributeTypeOk(o.Rrule)
}

// HasRrule returns a boolean if a field has been set.
func (o *BackupPolicy) HasRrule() bool {
	_, ok := o.GetRruleOk()
	return ok
}

// SetRrule gets a reference to the given string and assigns it to the Rrule field.
func (o *BackupPolicy) SetRrule(v BackupPolicyGetRruleRetType) {
	setBackupPolicyGetRruleAttributeType(&o.Rrule, v)
}

func (o BackupPolicy) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getBackupPolicyGetBackupPropertiesAttributeTypeOk(o.BackupProperties); ok {
		toSerialize["BackupProperties"] = val
	}
	if val, ok := getBackupPolicygetDefaultAttributeTypeOk(o.Default); ok {
		toSerialize["Default"] = val
	}
	if val, ok := getBackupPolicyGetDescriptionAttributeTypeOk(o.Description); ok {
		toSerialize["Description"] = val
	}
	if val, ok := getBackupPolicygetEnabledAttributeTypeOk(o.Enabled); ok {
		toSerialize["Enabled"] = val
	}
	if val, ok := getBackupPolicyGetIdAttributeTypeOk(o.Id); ok {
		toSerialize["Id"] = val
	}
	if val, ok := getBackupPolicyGetNameAttributeTypeOk(o.Name); ok {
		toSerialize["Name"] = val
	}
	if val, ok := getBackupPolicyGetRruleAttributeTypeOk(o.Rrule); ok {
		toSerialize["Rrule"] = val
	}
	return toSerialize, nil
}

type NullableBackupPolicy struct {
	value *BackupPolicy
	isSet bool
}

func (v NullableBackupPolicy) Get() *BackupPolicy {
	return v.value
}

func (v *NullableBackupPolicy) Set(val *BackupPolicy) {
	v.value = val
	v.isSet = true
}

func (v NullableBackupPolicy) IsSet() bool {
	return v.isSet
}

func (v *NullableBackupPolicy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBackupPolicy(val *BackupPolicy) *NullableBackupPolicy {
	return &NullableBackupPolicy{value: val, isSet: true}
}

func (v NullableBackupPolicy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBackupPolicy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
