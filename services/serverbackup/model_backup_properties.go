/*
STACKIT Server Backup Management API

API endpoints for Server Backup Operations on STACKIT Servers.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package serverbackup

import (
	"encoding/json"
)

// checks if the BackupProperties type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BackupProperties{}

/*
	types and functions for name
*/

// isNotNullableString
type BackupPropertiesGetNameAttributeType = *string

func getBackupPropertiesGetNameAttributeTypeOk(arg BackupPropertiesGetNameAttributeType) (ret BackupPropertiesGetNameRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setBackupPropertiesGetNameAttributeType(arg *BackupPropertiesGetNameAttributeType, val BackupPropertiesGetNameRetType) {
	*arg = &val
}

type BackupPropertiesGetNameArgType = string
type BackupPropertiesGetNameRetType = string

/*
	types and functions for retentionPeriod
*/

// isInteger
type BackupPropertiesGetRetentionPeriodAttributeType = *int64
type BackupPropertiesGetRetentionPeriodArgType = int64
type BackupPropertiesGetRetentionPeriodRetType = int64

func getBackupPropertiesGetRetentionPeriodAttributeTypeOk(arg BackupPropertiesGetRetentionPeriodAttributeType) (ret BackupPropertiesGetRetentionPeriodRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setBackupPropertiesGetRetentionPeriodAttributeType(arg *BackupPropertiesGetRetentionPeriodAttributeType, val BackupPropertiesGetRetentionPeriodRetType) {
	*arg = &val
}

/*
	types and functions for volumeIds
*/

// isArray
type BackupPropertiesGetVolumeIdsAttributeType = *[]string
type BackupPropertiesGetVolumeIdsArgType = []string
type BackupPropertiesGetVolumeIdsRetType = []string

func getBackupPropertiesGetVolumeIdsAttributeTypeOk(arg BackupPropertiesGetVolumeIdsAttributeType) (ret BackupPropertiesGetVolumeIdsRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setBackupPropertiesGetVolumeIdsAttributeType(arg *BackupPropertiesGetVolumeIdsAttributeType, val BackupPropertiesGetVolumeIdsRetType) {
	*arg = &val
}

// BackupProperties struct for BackupProperties
type BackupProperties struct {
	// Max 255 characters
	// REQUIRED
	Name BackupPropertiesGetNameAttributeType `json:"name" required:"true"`
	// Values are set in days (1-36500)
	// Can be cast to int32 without loss of precision.
	// REQUIRED
	RetentionPeriod BackupPropertiesGetRetentionPeriodAttributeType `json:"retentionPeriod" required:"true"`
	VolumeIds       BackupPropertiesGetVolumeIdsAttributeType       `json:"volumeIds,omitempty"`
}

type _BackupProperties BackupProperties

// NewBackupProperties instantiates a new BackupProperties object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBackupProperties(name BackupPropertiesGetNameArgType, retentionPeriod BackupPropertiesGetRetentionPeriodArgType) *BackupProperties {
	this := BackupProperties{}
	setBackupPropertiesGetNameAttributeType(&this.Name, name)
	setBackupPropertiesGetRetentionPeriodAttributeType(&this.RetentionPeriod, retentionPeriod)
	return &this
}

// NewBackupPropertiesWithDefaults instantiates a new BackupProperties object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBackupPropertiesWithDefaults() *BackupProperties {
	this := BackupProperties{}
	return &this
}

// GetName returns the Name field value
func (o *BackupProperties) GetName() (ret BackupPropertiesGetNameRetType) {
	ret, _ = o.GetNameOk()
	return ret
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *BackupProperties) GetNameOk() (ret BackupPropertiesGetNameRetType, ok bool) {
	return getBackupPropertiesGetNameAttributeTypeOk(o.Name)
}

// SetName sets field value
func (o *BackupProperties) SetName(v BackupPropertiesGetNameRetType) {
	setBackupPropertiesGetNameAttributeType(&o.Name, v)
}

// GetRetentionPeriod returns the RetentionPeriod field value
func (o *BackupProperties) GetRetentionPeriod() (ret BackupPropertiesGetRetentionPeriodRetType) {
	ret, _ = o.GetRetentionPeriodOk()
	return ret
}

// GetRetentionPeriodOk returns a tuple with the RetentionPeriod field value
// and a boolean to check if the value has been set.
func (o *BackupProperties) GetRetentionPeriodOk() (ret BackupPropertiesGetRetentionPeriodRetType, ok bool) {
	return getBackupPropertiesGetRetentionPeriodAttributeTypeOk(o.RetentionPeriod)
}

// SetRetentionPeriod sets field value
func (o *BackupProperties) SetRetentionPeriod(v BackupPropertiesGetRetentionPeriodRetType) {
	setBackupPropertiesGetRetentionPeriodAttributeType(&o.RetentionPeriod, v)
}

// GetVolumeIds returns the VolumeIds field value if set, zero value otherwise.
func (o *BackupProperties) GetVolumeIds() (res BackupPropertiesGetVolumeIdsRetType) {
	res, _ = o.GetVolumeIdsOk()
	return
}

// GetVolumeIdsOk returns a tuple with the VolumeIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupProperties) GetVolumeIdsOk() (ret BackupPropertiesGetVolumeIdsRetType, ok bool) {
	return getBackupPropertiesGetVolumeIdsAttributeTypeOk(o.VolumeIds)
}

// HasVolumeIds returns a boolean if a field has been set.
func (o *BackupProperties) HasVolumeIds() bool {
	_, ok := o.GetVolumeIdsOk()
	return ok
}

// SetVolumeIds gets a reference to the given []string and assigns it to the VolumeIds field.
func (o *BackupProperties) SetVolumeIds(v BackupPropertiesGetVolumeIdsRetType) {
	setBackupPropertiesGetVolumeIdsAttributeType(&o.VolumeIds, v)
}

func (o BackupProperties) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getBackupPropertiesGetNameAttributeTypeOk(o.Name); ok {
		toSerialize["Name"] = val
	}
	if val, ok := getBackupPropertiesGetRetentionPeriodAttributeTypeOk(o.RetentionPeriod); ok {
		toSerialize["RetentionPeriod"] = val
	}
	if val, ok := getBackupPropertiesGetVolumeIdsAttributeTypeOk(o.VolumeIds); ok {
		toSerialize["VolumeIds"] = val
	}
	return toSerialize, nil
}

type NullableBackupProperties struct {
	value *BackupProperties
	isSet bool
}

func (v NullableBackupProperties) Get() *BackupProperties {
	return v.value
}

func (v *NullableBackupProperties) Set(val *BackupProperties) {
	v.value = val
	v.isSet = true
}

func (v NullableBackupProperties) IsSet() bool {
	return v.isSet
}

func (v *NullableBackupProperties) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBackupProperties(val *BackupProperties) *NullableBackupProperties {
	return &NullableBackupProperties{value: val, isSet: true}
}

func (v NullableBackupProperties) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBackupProperties) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
