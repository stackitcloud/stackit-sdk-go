/*
STACKIT Server Backup Management API

API endpoints for Server Backup Operations on STACKIT Servers.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package serverbackup

import (
	"encoding/json"
)

// checks if the RestoreBackupPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RestoreBackupPayload{}

/*
	types and functions for startServerAfterRestore
*/

// isBoolean
type RestoreBackupPayloadgetStartServerAfterRestoreAttributeType = *bool
type RestoreBackupPayloadgetStartServerAfterRestoreArgType = bool
type RestoreBackupPayloadgetStartServerAfterRestoreRetType = bool

func getRestoreBackupPayloadgetStartServerAfterRestoreAttributeTypeOk(arg RestoreBackupPayloadgetStartServerAfterRestoreAttributeType) (ret RestoreBackupPayloadgetStartServerAfterRestoreRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setRestoreBackupPayloadgetStartServerAfterRestoreAttributeType(arg *RestoreBackupPayloadgetStartServerAfterRestoreAttributeType, val RestoreBackupPayloadgetStartServerAfterRestoreRetType) {
	*arg = &val
}

/*
	types and functions for volumeIds
*/

// isArray
type RestoreBackupPayloadGetVolumeIdsAttributeType = *[]string
type RestoreBackupPayloadGetVolumeIdsArgType = []string
type RestoreBackupPayloadGetVolumeIdsRetType = []string

func getRestoreBackupPayloadGetVolumeIdsAttributeTypeOk(arg RestoreBackupPayloadGetVolumeIdsAttributeType) (ret RestoreBackupPayloadGetVolumeIdsRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setRestoreBackupPayloadGetVolumeIdsAttributeType(arg *RestoreBackupPayloadGetVolumeIdsAttributeType, val RestoreBackupPayloadGetVolumeIdsRetType) {
	*arg = &val
}

// RestoreBackupPayload struct for RestoreBackupPayload
type RestoreBackupPayload struct {
	// REQUIRED
	StartServerAfterRestore RestoreBackupPayloadgetStartServerAfterRestoreAttributeType `json:"startServerAfterRestore"`
	VolumeIds               RestoreBackupPayloadGetVolumeIdsAttributeType               `json:"volumeIds,omitempty"`
}

type _RestoreBackupPayload RestoreBackupPayload

// NewRestoreBackupPayload instantiates a new RestoreBackupPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestoreBackupPayload(startServerAfterRestore RestoreBackupPayloadgetStartServerAfterRestoreArgType) *RestoreBackupPayload {
	this := RestoreBackupPayload{}
	setRestoreBackupPayloadgetStartServerAfterRestoreAttributeType(&this.StartServerAfterRestore, startServerAfterRestore)
	return &this
}

// NewRestoreBackupPayloadWithDefaults instantiates a new RestoreBackupPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestoreBackupPayloadWithDefaults() *RestoreBackupPayload {
	this := RestoreBackupPayload{}
	return &this
}

// GetStartServerAfterRestore returns the StartServerAfterRestore field value
func (o *RestoreBackupPayload) GetStartServerAfterRestore() (ret RestoreBackupPayloadgetStartServerAfterRestoreRetType) {
	ret, _ = o.GetStartServerAfterRestoreOk()
	return ret
}

// GetStartServerAfterRestoreOk returns a tuple with the StartServerAfterRestore field value
// and a boolean to check if the value has been set.
func (o *RestoreBackupPayload) GetStartServerAfterRestoreOk() (ret RestoreBackupPayloadgetStartServerAfterRestoreRetType, ok bool) {
	return getRestoreBackupPayloadgetStartServerAfterRestoreAttributeTypeOk(o.StartServerAfterRestore)
}

// SetStartServerAfterRestore sets field value
func (o *RestoreBackupPayload) SetStartServerAfterRestore(v RestoreBackupPayloadgetStartServerAfterRestoreRetType) {
	setRestoreBackupPayloadgetStartServerAfterRestoreAttributeType(&o.StartServerAfterRestore, v)
}

// GetVolumeIds returns the VolumeIds field value if set, zero value otherwise.
func (o *RestoreBackupPayload) GetVolumeIds() (res RestoreBackupPayloadGetVolumeIdsRetType) {
	res, _ = o.GetVolumeIdsOk()
	return
}

// GetVolumeIdsOk returns a tuple with the VolumeIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreBackupPayload) GetVolumeIdsOk() (ret RestoreBackupPayloadGetVolumeIdsRetType, ok bool) {
	return getRestoreBackupPayloadGetVolumeIdsAttributeTypeOk(o.VolumeIds)
}

// HasVolumeIds returns a boolean if a field has been set.
func (o *RestoreBackupPayload) HasVolumeIds() bool {
	_, ok := o.GetVolumeIdsOk()
	return ok
}

// SetVolumeIds gets a reference to the given []string and assigns it to the VolumeIds field.
func (o *RestoreBackupPayload) SetVolumeIds(v RestoreBackupPayloadGetVolumeIdsRetType) {
	setRestoreBackupPayloadGetVolumeIdsAttributeType(&o.VolumeIds, v)
}

func (o RestoreBackupPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getRestoreBackupPayloadgetStartServerAfterRestoreAttributeTypeOk(o.StartServerAfterRestore); ok {
		toSerialize["StartServerAfterRestore"] = val
	}
	if val, ok := getRestoreBackupPayloadGetVolumeIdsAttributeTypeOk(o.VolumeIds); ok {
		toSerialize["VolumeIds"] = val
	}
	return toSerialize, nil
}

type NullableRestoreBackupPayload struct {
	value *RestoreBackupPayload
	isSet bool
}

func (v NullableRestoreBackupPayload) Get() *RestoreBackupPayload {
	return v.value
}

func (v *NullableRestoreBackupPayload) Set(val *RestoreBackupPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableRestoreBackupPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableRestoreBackupPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestoreBackupPayload(val *RestoreBackupPayload) *NullableRestoreBackupPayload {
	return &NullableRestoreBackupPayload{value: val, isSet: true}
}

func (v NullableRestoreBackupPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestoreBackupPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
