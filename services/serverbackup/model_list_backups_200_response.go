/*
STACKIT Server Backup Management API

API endpoints for Server Backup Operations on STACKIT Servers.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package serverbackup

import (
	"encoding/json"
)

// checks if the ListBackups200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListBackups200Response{}

// ListBackups200Response struct for ListBackups200Response
type ListBackups200Response struct {
	Items *[]Backup `json:"items,omitempty"`
}

// NewListBackups200Response instantiates a new ListBackups200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListBackups200Response() *ListBackups200Response {
	this := ListBackups200Response{}
	return &this
}

// NewListBackups200ResponseWithDefaults instantiates a new ListBackups200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListBackups200ResponseWithDefaults() *ListBackups200Response {
	this := ListBackups200Response{}
	return &this
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *ListBackups200Response) GetItems() *[]Backup {
	if o == nil || IsNil(o.Items) {
		var ret *[]Backup
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListBackups200Response) GetItemsOk() (*[]Backup, bool) {
	if o == nil || IsNil(o.Items) {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *ListBackups200Response) HasItems() bool {
	if o != nil && !IsNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given []Backup and assigns it to the Items field.
func (o *ListBackups200Response) SetItems(v *[]Backup) {
	o.Items = v
}

func (o ListBackups200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Items) {
		toSerialize["items"] = o.Items
	}
	return toSerialize, nil
}

type NullableListBackups200Response struct {
	value *ListBackups200Response
	isSet bool
}

func (v NullableListBackups200Response) Get() *ListBackups200Response {
	return v.value
}

func (v *NullableListBackups200Response) Set(val *ListBackups200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableListBackups200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableListBackups200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListBackups200Response(val *ListBackups200Response) *NullableListBackups200Response {
	return &NullableListBackups200Response{value: val, isSet: true}
}

func (v NullableListBackups200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListBackups200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
