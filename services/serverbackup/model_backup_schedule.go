/*
STACKIT Server Backup Management API

API endpoints for Server Backup Operations on STACKIT Servers.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package serverbackup

import (
	"encoding/json"
)

// checks if the BackupSchedule type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BackupSchedule{}

/*
	types and functions for backupProperties
*/

// isModel
type BackupScheduleGetBackupPropertiesAttributeType = *BackupProperties
type BackupScheduleGetBackupPropertiesArgType = BackupProperties
type BackupScheduleGetBackupPropertiesRetType = BackupProperties

func getBackupScheduleGetBackupPropertiesAttributeTypeOk(arg BackupScheduleGetBackupPropertiesAttributeType) (ret BackupScheduleGetBackupPropertiesRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setBackupScheduleGetBackupPropertiesAttributeType(arg *BackupScheduleGetBackupPropertiesAttributeType, val BackupScheduleGetBackupPropertiesRetType) {
	*arg = &val
}

/*
	types and functions for enabled
*/

// isBoolean
type BackupSchedulegetEnabledAttributeType = *bool
type BackupSchedulegetEnabledArgType = bool
type BackupSchedulegetEnabledRetType = bool

func getBackupSchedulegetEnabledAttributeTypeOk(arg BackupSchedulegetEnabledAttributeType) (ret BackupSchedulegetEnabledRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setBackupSchedulegetEnabledAttributeType(arg *BackupSchedulegetEnabledAttributeType, val BackupSchedulegetEnabledRetType) {
	*arg = &val
}

/*
	types and functions for id
*/

// isInteger
type BackupScheduleGetIdAttributeType = *int64
type BackupScheduleGetIdArgType = int64
type BackupScheduleGetIdRetType = int64

func getBackupScheduleGetIdAttributeTypeOk(arg BackupScheduleGetIdAttributeType) (ret BackupScheduleGetIdRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setBackupScheduleGetIdAttributeType(arg *BackupScheduleGetIdAttributeType, val BackupScheduleGetIdRetType) {
	*arg = &val
}

/*
	types and functions for name
*/

// isNotNullableString
type BackupScheduleGetNameAttributeType = *string

func getBackupScheduleGetNameAttributeTypeOk(arg BackupScheduleGetNameAttributeType) (ret BackupScheduleGetNameRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setBackupScheduleGetNameAttributeType(arg *BackupScheduleGetNameAttributeType, val BackupScheduleGetNameRetType) {
	*arg = &val
}

type BackupScheduleGetNameArgType = string
type BackupScheduleGetNameRetType = string

/*
	types and functions for rrule
*/

// isNotNullableString
type BackupScheduleGetRruleAttributeType = *string

func getBackupScheduleGetRruleAttributeTypeOk(arg BackupScheduleGetRruleAttributeType) (ret BackupScheduleGetRruleRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setBackupScheduleGetRruleAttributeType(arg *BackupScheduleGetRruleAttributeType, val BackupScheduleGetRruleRetType) {
	*arg = &val
}

type BackupScheduleGetRruleArgType = string
type BackupScheduleGetRruleRetType = string

// BackupSchedule struct for BackupSchedule
type BackupSchedule struct {
	BackupProperties BackupScheduleGetBackupPropertiesAttributeType `json:"backupProperties,omitempty"`
	// REQUIRED
	Enabled BackupSchedulegetEnabledAttributeType `json:"enabled"`
	// Can be cast to int32 without loss of precision.
	// REQUIRED
	Id BackupScheduleGetIdAttributeType `json:"id"`
	// REQUIRED
	Name BackupScheduleGetNameAttributeType `json:"name"`
	// REQUIRED
	Rrule BackupScheduleGetRruleAttributeType `json:"rrule"`
}

type _BackupSchedule BackupSchedule

// NewBackupSchedule instantiates a new BackupSchedule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBackupSchedule(enabled BackupSchedulegetEnabledArgType, id BackupScheduleGetIdArgType, name BackupScheduleGetNameArgType, rrule BackupScheduleGetRruleArgType) *BackupSchedule {
	this := BackupSchedule{}
	setBackupSchedulegetEnabledAttributeType(&this.Enabled, enabled)
	setBackupScheduleGetIdAttributeType(&this.Id, id)
	setBackupScheduleGetNameAttributeType(&this.Name, name)
	setBackupScheduleGetRruleAttributeType(&this.Rrule, rrule)
	return &this
}

// NewBackupScheduleWithDefaults instantiates a new BackupSchedule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBackupScheduleWithDefaults() *BackupSchedule {
	this := BackupSchedule{}
	return &this
}

// GetBackupProperties returns the BackupProperties field value if set, zero value otherwise.
func (o *BackupSchedule) GetBackupProperties() (res BackupScheduleGetBackupPropertiesRetType) {
	res, _ = o.GetBackupPropertiesOk()
	return
}

// GetBackupPropertiesOk returns a tuple with the BackupProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupSchedule) GetBackupPropertiesOk() (ret BackupScheduleGetBackupPropertiesRetType, ok bool) {
	return getBackupScheduleGetBackupPropertiesAttributeTypeOk(o.BackupProperties)
}

// HasBackupProperties returns a boolean if a field has been set.
func (o *BackupSchedule) HasBackupProperties() bool {
	_, ok := o.GetBackupPropertiesOk()
	return ok
}

// SetBackupProperties gets a reference to the given BackupProperties and assigns it to the BackupProperties field.
func (o *BackupSchedule) SetBackupProperties(v BackupScheduleGetBackupPropertiesRetType) {
	setBackupScheduleGetBackupPropertiesAttributeType(&o.BackupProperties, v)
}

// GetEnabled returns the Enabled field value
func (o *BackupSchedule) GetEnabled() (ret BackupSchedulegetEnabledRetType) {
	ret, _ = o.GetEnabledOk()
	return ret
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *BackupSchedule) GetEnabledOk() (ret BackupSchedulegetEnabledRetType, ok bool) {
	return getBackupSchedulegetEnabledAttributeTypeOk(o.Enabled)
}

// SetEnabled sets field value
func (o *BackupSchedule) SetEnabled(v BackupSchedulegetEnabledRetType) {
	setBackupSchedulegetEnabledAttributeType(&o.Enabled, v)
}

// GetId returns the Id field value
func (o *BackupSchedule) GetId() (ret BackupScheduleGetIdRetType) {
	ret, _ = o.GetIdOk()
	return ret
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *BackupSchedule) GetIdOk() (ret BackupScheduleGetIdRetType, ok bool) {
	return getBackupScheduleGetIdAttributeTypeOk(o.Id)
}

// SetId sets field value
func (o *BackupSchedule) SetId(v BackupScheduleGetIdRetType) {
	setBackupScheduleGetIdAttributeType(&o.Id, v)
}

// GetName returns the Name field value
func (o *BackupSchedule) GetName() (ret BackupScheduleGetNameRetType) {
	ret, _ = o.GetNameOk()
	return ret
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *BackupSchedule) GetNameOk() (ret BackupScheduleGetNameRetType, ok bool) {
	return getBackupScheduleGetNameAttributeTypeOk(o.Name)
}

// SetName sets field value
func (o *BackupSchedule) SetName(v BackupScheduleGetNameRetType) {
	setBackupScheduleGetNameAttributeType(&o.Name, v)
}

// GetRrule returns the Rrule field value
func (o *BackupSchedule) GetRrule() (ret BackupScheduleGetRruleRetType) {
	ret, _ = o.GetRruleOk()
	return ret
}

// GetRruleOk returns a tuple with the Rrule field value
// and a boolean to check if the value has been set.
func (o *BackupSchedule) GetRruleOk() (ret BackupScheduleGetRruleRetType, ok bool) {
	return getBackupScheduleGetRruleAttributeTypeOk(o.Rrule)
}

// SetRrule sets field value
func (o *BackupSchedule) SetRrule(v BackupScheduleGetRruleRetType) {
	setBackupScheduleGetRruleAttributeType(&o.Rrule, v)
}

func (o BackupSchedule) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getBackupScheduleGetBackupPropertiesAttributeTypeOk(o.BackupProperties); ok {
		toSerialize["BackupProperties"] = val
	}
	if val, ok := getBackupSchedulegetEnabledAttributeTypeOk(o.Enabled); ok {
		toSerialize["Enabled"] = val
	}
	if val, ok := getBackupScheduleGetIdAttributeTypeOk(o.Id); ok {
		toSerialize["Id"] = val
	}
	if val, ok := getBackupScheduleGetNameAttributeTypeOk(o.Name); ok {
		toSerialize["Name"] = val
	}
	if val, ok := getBackupScheduleGetRruleAttributeTypeOk(o.Rrule); ok {
		toSerialize["Rrule"] = val
	}
	return toSerialize, nil
}

type NullableBackupSchedule struct {
	value *BackupSchedule
	isSet bool
}

func (v NullableBackupSchedule) Get() *BackupSchedule {
	return v.value
}

func (v *NullableBackupSchedule) Set(val *BackupSchedule) {
	v.value = val
	v.isSet = true
}

func (v NullableBackupSchedule) IsSet() bool {
	return v.isSet
}

func (v *NullableBackupSchedule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBackupSchedule(val *BackupSchedule) *NullableBackupSchedule {
	return &NullableBackupSchedule{value: val, isSet: true}
}

func (v NullableBackupSchedule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBackupSchedule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
