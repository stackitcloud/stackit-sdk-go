/*
STACKIT Server Backup Management API

API endpoints for Server Backup Operations on STACKIT Servers.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package serverbackup

import (
	"encoding/json"
)

// checks if the BackupSchedule type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BackupSchedule{}

// BackupSchedule struct for BackupSchedule
type BackupSchedule struct {
	BackupProperties *BackupProperties `json:"backupProperties,omitempty"`
	// REQUIRED
	Enabled *bool `json:"enabled"`
	// REQUIRED
	Id *int64 `json:"id"`
	// REQUIRED
	Name *string `json:"name"`
	// REQUIRED
	Rrule *string `json:"rrule"`
}

type _BackupSchedule BackupSchedule

// NewBackupSchedule instantiates a new BackupSchedule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBackupSchedule(enabled *bool, id *int64, name *string, rrule *string) *BackupSchedule {
	this := BackupSchedule{}
	this.Enabled = enabled
	this.Id = id
	this.Name = name
	this.Rrule = rrule
	return &this
}

// NewBackupScheduleWithDefaults instantiates a new BackupSchedule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBackupScheduleWithDefaults() *BackupSchedule {
	this := BackupSchedule{}
	return &this
}

// GetBackupProperties returns the BackupProperties field value if set, zero value otherwise.
func (o *BackupSchedule) GetBackupProperties() *BackupProperties {
	if o == nil || IsNil(o.BackupProperties) {
		var ret *BackupProperties
		return ret
	}
	return o.BackupProperties
}

// GetBackupPropertiesOk returns a tuple with the BackupProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupSchedule) GetBackupPropertiesOk() (*BackupProperties, bool) {
	if o == nil || IsNil(o.BackupProperties) {
		return nil, false
	}
	return o.BackupProperties, true
}

// HasBackupProperties returns a boolean if a field has been set.
func (o *BackupSchedule) HasBackupProperties() bool {
	if o != nil && !IsNil(o.BackupProperties) {
		return true
	}

	return false
}

// SetBackupProperties gets a reference to the given BackupProperties and assigns it to the BackupProperties field.
func (o *BackupSchedule) SetBackupProperties(v *BackupProperties) {
	o.BackupProperties = v
}

// GetEnabled returns the Enabled field value
func (o *BackupSchedule) GetEnabled() *bool {
	if o == nil || IsNil(o.Enabled) {
		var ret *bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *BackupSchedule) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Enabled, true
}

// SetEnabled sets field value
func (o *BackupSchedule) SetEnabled(v *bool) {
	o.Enabled = v
}

// GetId returns the Id field value
func (o *BackupSchedule) GetId() *int64 {
	if o == nil || IsNil(o.Id) {
		var ret *int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *BackupSchedule) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id, true
}

// SetId sets field value
func (o *BackupSchedule) SetId(v *int64) {
	o.Id = v
}

// GetName returns the Name field value
func (o *BackupSchedule) GetName() *string {
	if o == nil || IsNil(o.Name) {
		var ret *string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *BackupSchedule) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name, true
}

// SetName sets field value
func (o *BackupSchedule) SetName(v *string) {
	o.Name = v
}

// GetRrule returns the Rrule field value
func (o *BackupSchedule) GetRrule() *string {
	if o == nil || IsNil(o.Rrule) {
		var ret *string
		return ret
	}

	return o.Rrule
}

// GetRruleOk returns a tuple with the Rrule field value
// and a boolean to check if the value has been set.
func (o *BackupSchedule) GetRruleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Rrule, true
}

// SetRrule sets field value
func (o *BackupSchedule) SetRrule(v *string) {
	o.Rrule = v
}

func (o BackupSchedule) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BackupProperties) {
		toSerialize["backupProperties"] = o.BackupProperties
	}
	toSerialize["enabled"] = o.Enabled
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["rrule"] = o.Rrule
	return toSerialize, nil
}

type NullableBackupSchedule struct {
	value *BackupSchedule
	isSet bool
}

func (v NullableBackupSchedule) Get() *BackupSchedule {
	return v.value
}

func (v *NullableBackupSchedule) Set(val *BackupSchedule) {
	v.value = val
	v.isSet = true
}

func (v NullableBackupSchedule) IsSet() bool {
	return v.isSet
}

func (v *NullableBackupSchedule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBackupSchedule(val *BackupSchedule) *NullableBackupSchedule {
	return &NullableBackupSchedule{value: val, isSet: true}
}

func (v NullableBackupSchedule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBackupSchedule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
