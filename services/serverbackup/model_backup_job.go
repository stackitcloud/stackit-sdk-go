/*
STACKIT Server Backup Management API

API endpoints for Server Backup Operations on STACKIT Servers.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package serverbackup

import (
	"encoding/json"
)

// checks if the BackupJob type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BackupJob{}

// BackupJob struct for BackupJob
type BackupJob struct {
	// REQUIRED
	Id *string `json:"id"`
}

type _BackupJob BackupJob

// NewBackupJob instantiates a new BackupJob object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBackupJob(id *string) *BackupJob {
	this := BackupJob{}
	this.Id = id
	return &this
}

// NewBackupJobWithDefaults instantiates a new BackupJob object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBackupJobWithDefaults() *BackupJob {
	this := BackupJob{}
	return &this
}

// GetId returns the Id field value
func (o *BackupJob) GetId() *string {
	if o == nil {
		var ret *string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *BackupJob) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id, true
}

// SetId sets field value
func (o *BackupJob) SetId(v *string) {
	o.Id = v
}

func (o BackupJob) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	return toSerialize, nil
}

type NullableBackupJob struct {
	value *BackupJob
	isSet bool
}

func (v NullableBackupJob) Get() *BackupJob {
	return v.value
}

func (v *NullableBackupJob) Set(val *BackupJob) {
	v.value = val
	v.isSet = true
}

func (v NullableBackupJob) IsSet() bool {
	return v.isSet
}

func (v *NullableBackupJob) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBackupJob(val *BackupJob) *NullableBackupJob {
	return &NullableBackupJob{value: val, isSet: true}
}

func (v NullableBackupJob) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBackupJob) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
