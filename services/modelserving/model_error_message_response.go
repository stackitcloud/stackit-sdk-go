/*
STACKIT Model Serving API

This API provides endpoints for the model serving api

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package modelserving

import (
	"encoding/json"
)

// checks if the ErrorMessageResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ErrorMessageResponse{}

/*
	types and functions for error
*/

// isNotNullableString
type ErrorMessageResponseGetErrorAttributeType = *string

func getErrorMessageResponseGetErrorAttributeTypeOk(arg ErrorMessageResponseGetErrorAttributeType) (ret ErrorMessageResponseGetErrorRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setErrorMessageResponseGetErrorAttributeType(arg *ErrorMessageResponseGetErrorAttributeType, val ErrorMessageResponseGetErrorRetType) {
	*arg = &val
}

type ErrorMessageResponseGetErrorArgType = string
type ErrorMessageResponseGetErrorRetType = string

/*
	types and functions for message
*/

// isNotNullableString
type ErrorMessageResponseGetMessageAttributeType = *string

func getErrorMessageResponseGetMessageAttributeTypeOk(arg ErrorMessageResponseGetMessageAttributeType) (ret ErrorMessageResponseGetMessageRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setErrorMessageResponseGetMessageAttributeType(arg *ErrorMessageResponseGetMessageAttributeType, val ErrorMessageResponseGetMessageRetType) {
	*arg = &val
}

type ErrorMessageResponseGetMessageArgType = string
type ErrorMessageResponseGetMessageRetType = string

// ErrorMessageResponse struct for ErrorMessageResponse
type ErrorMessageResponse struct {
	Error   ErrorMessageResponseGetErrorAttributeType   `json:"error,omitempty"`
	Message ErrorMessageResponseGetMessageAttributeType `json:"message,omitempty"`
}

// NewErrorMessageResponse instantiates a new ErrorMessageResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewErrorMessageResponse() *ErrorMessageResponse {
	this := ErrorMessageResponse{}
	return &this
}

// NewErrorMessageResponseWithDefaults instantiates a new ErrorMessageResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewErrorMessageResponseWithDefaults() *ErrorMessageResponse {
	this := ErrorMessageResponse{}
	return &this
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *ErrorMessageResponse) GetError() (res ErrorMessageResponseGetErrorRetType) {
	res, _ = o.GetErrorOk()
	return
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrorMessageResponse) GetErrorOk() (ret ErrorMessageResponseGetErrorRetType, ok bool) {
	return getErrorMessageResponseGetErrorAttributeTypeOk(o.Error)
}

// HasError returns a boolean if a field has been set.
func (o *ErrorMessageResponse) HasError() bool {
	_, ok := o.GetErrorOk()
	return ok
}

// SetError gets a reference to the given string and assigns it to the Error field.
func (o *ErrorMessageResponse) SetError(v ErrorMessageResponseGetErrorRetType) {
	setErrorMessageResponseGetErrorAttributeType(&o.Error, v)
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *ErrorMessageResponse) GetMessage() (res ErrorMessageResponseGetMessageRetType) {
	res, _ = o.GetMessageOk()
	return
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrorMessageResponse) GetMessageOk() (ret ErrorMessageResponseGetMessageRetType, ok bool) {
	return getErrorMessageResponseGetMessageAttributeTypeOk(o.Message)
}

// HasMessage returns a boolean if a field has been set.
func (o *ErrorMessageResponse) HasMessage() bool {
	_, ok := o.GetMessageOk()
	return ok
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *ErrorMessageResponse) SetMessage(v ErrorMessageResponseGetMessageRetType) {
	setErrorMessageResponseGetMessageAttributeType(&o.Message, v)
}

func (o ErrorMessageResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getErrorMessageResponseGetErrorAttributeTypeOk(o.Error); ok {
		toSerialize["Error"] = val
	}
	if val, ok := getErrorMessageResponseGetMessageAttributeTypeOk(o.Message); ok {
		toSerialize["Message"] = val
	}
	return toSerialize, nil
}

type NullableErrorMessageResponse struct {
	value *ErrorMessageResponse
	isSet bool
}

func (v NullableErrorMessageResponse) Get() *ErrorMessageResponse {
	return v.value
}

func (v *NullableErrorMessageResponse) Set(val *ErrorMessageResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableErrorMessageResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableErrorMessageResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableErrorMessageResponse(val *ErrorMessageResponse) *NullableErrorMessageResponse {
	return &NullableErrorMessageResponse{value: val, isSet: true}
}

func (v NullableErrorMessageResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableErrorMessageResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
