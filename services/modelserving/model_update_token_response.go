/*
STACKIT Model Serving API

This API provides endpoints for the model serving api

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package modelserving

import (
	"encoding/json"
)

// checks if the UpdateTokenResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateTokenResponse{}

// UpdateTokenResponse struct for UpdateTokenResponse
type UpdateTokenResponse struct {
	Message *string `json:"message,omitempty"`
	// REQUIRED
	Token *Token `json:"token"`
}

type _UpdateTokenResponse UpdateTokenResponse

// NewUpdateTokenResponse instantiates a new UpdateTokenResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateTokenResponse(token *Token) *UpdateTokenResponse {
	this := UpdateTokenResponse{}
	this.Token = token
	return &this
}

// NewUpdateTokenResponseWithDefaults instantiates a new UpdateTokenResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateTokenResponseWithDefaults() *UpdateTokenResponse {
	this := UpdateTokenResponse{}
	return &this
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *UpdateTokenResponse) GetMessage() *string {
	if o == nil || IsNil(o.Message) {
		var ret *string
		return ret
	}
	return o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTokenResponse) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *UpdateTokenResponse) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *UpdateTokenResponse) SetMessage(v *string) {
	o.Message = v
}

// GetToken returns the Token field value
func (o *UpdateTokenResponse) GetToken() *Token {
	if o == nil || IsNil(o.Token) {
		var ret *Token
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *UpdateTokenResponse) GetTokenOk() (*Token, bool) {
	if o == nil {
		return nil, false
	}
	return o.Token, true
}

// SetToken sets field value
func (o *UpdateTokenResponse) SetToken(v *Token) {
	o.Token = v
}

func (o UpdateTokenResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	toSerialize["token"] = o.Token
	return toSerialize, nil
}

type NullableUpdateTokenResponse struct {
	value *UpdateTokenResponse
	isSet bool
}

func (v NullableUpdateTokenResponse) Get() *UpdateTokenResponse {
	return v.value
}

func (v *NullableUpdateTokenResponse) Set(val *UpdateTokenResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateTokenResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateTokenResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateTokenResponse(val *UpdateTokenResponse) *NullableUpdateTokenResponse {
	return &NullableUpdateTokenResponse{value: val, isSet: true}
}

func (v NullableUpdateTokenResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateTokenResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
