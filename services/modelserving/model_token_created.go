/*
STACKIT Model Serving API

This API provides endpoints for the model serving api

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package modelserving

import (
	"encoding/json"
	"time"
)

// checks if the TokenCreated type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TokenCreated{}

// TokenCreated struct for TokenCreated
type TokenCreated struct {
	// REQUIRED
	Content     *string `json:"content"`
	Description *string `json:"description,omitempty"`
	// REQUIRED
	Id *string `json:"id"`
	// REQUIRED
	Name *string `json:"name"`
	// REQUIRED
	Region *string `json:"region"`
	// REQUIRED
	State *string `json:"state"`
	// REQUIRED
	ValidUntil *time.Time `json:"validUntil"`
}

type _TokenCreated TokenCreated

// NewTokenCreated instantiates a new TokenCreated object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTokenCreated(content *string, id *string, name *string, region *string, state *string, validUntil *time.Time) *TokenCreated {
	this := TokenCreated{}
	this.Content = content
	this.Id = id
	this.Name = name
	this.Region = region
	this.State = state
	this.ValidUntil = validUntil
	return &this
}

// NewTokenCreatedWithDefaults instantiates a new TokenCreated object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTokenCreatedWithDefaults() *TokenCreated {
	this := TokenCreated{}
	return &this
}

// GetContent returns the Content field value
func (o *TokenCreated) GetContent() *string {
	if o == nil || IsNil(o.Content) {
		var ret *string
		return ret
	}

	return o.Content
}

// GetContentOk returns a tuple with the Content field value
// and a boolean to check if the value has been set.
func (o *TokenCreated) GetContentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Content, true
}

// SetContent sets field value
func (o *TokenCreated) SetContent(v *string) {
	o.Content = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *TokenCreated) GetDescription() *string {
	if o == nil || IsNil(o.Description) {
		var ret *string
		return ret
	}
	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenCreated) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *TokenCreated) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *TokenCreated) SetDescription(v *string) {
	o.Description = v
}

// GetId returns the Id field value
func (o *TokenCreated) GetId() *string {
	if o == nil || IsNil(o.Id) {
		var ret *string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *TokenCreated) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id, true
}

// SetId sets field value
func (o *TokenCreated) SetId(v *string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *TokenCreated) GetName() *string {
	if o == nil || IsNil(o.Name) {
		var ret *string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *TokenCreated) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name, true
}

// SetName sets field value
func (o *TokenCreated) SetName(v *string) {
	o.Name = v
}

// GetRegion returns the Region field value
func (o *TokenCreated) GetRegion() *string {
	if o == nil || IsNil(o.Region) {
		var ret *string
		return ret
	}

	return o.Region
}

// GetRegionOk returns a tuple with the Region field value
// and a boolean to check if the value has been set.
func (o *TokenCreated) GetRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Region, true
}

// SetRegion sets field value
func (o *TokenCreated) SetRegion(v *string) {
	o.Region = v
}

// GetState returns the State field value
func (o *TokenCreated) GetState() *string {
	if o == nil || IsNil(o.State) {
		var ret *string
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *TokenCreated) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.State, true
}

// SetState sets field value
func (o *TokenCreated) SetState(v *string) {
	o.State = v
}

// GetValidUntil returns the ValidUntil field value
func (o *TokenCreated) GetValidUntil() *time.Time {
	if o == nil || IsNil(o.ValidUntil) {
		var ret *time.Time
		return ret
	}

	return o.ValidUntil
}

// GetValidUntilOk returns a tuple with the ValidUntil field value
// and a boolean to check if the value has been set.
func (o *TokenCreated) GetValidUntilOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.ValidUntil, true
}

// SetValidUntil sets field value
func (o *TokenCreated) SetValidUntil(v *time.Time) {
	o.ValidUntil = v
}

func (o TokenCreated) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["content"] = o.Content
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["region"] = o.Region
	toSerialize["state"] = o.State
	toSerialize["validUntil"] = o.ValidUntil
	return toSerialize, nil
}

type NullableTokenCreated struct {
	value *TokenCreated
	isSet bool
}

func (v NullableTokenCreated) Get() *TokenCreated {
	return v.value
}

func (v *NullableTokenCreated) Set(val *TokenCreated) {
	v.value = val
	v.isSet = true
}

func (v NullableTokenCreated) IsSet() bool {
	return v.isSet
}

func (v *NullableTokenCreated) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTokenCreated(val *TokenCreated) *NullableTokenCreated {
	return &NullableTokenCreated{value: val, isSet: true}
}

func (v NullableTokenCreated) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTokenCreated) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
