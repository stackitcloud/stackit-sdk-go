/*
STACKIT Model Serving API

This API provides endpoints for the model serving api

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package modelserving

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the CreateTokenResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateTokenResponse{}

/*
	types and functions for message
*/

// isNotNullableString
type CreateTokenResponseGetMessageAttributeType = *string

func getCreateTokenResponseGetMessageAttributeTypeOk(arg CreateTokenResponseGetMessageAttributeType) (ret CreateTokenResponseGetMessageRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setCreateTokenResponseGetMessageAttributeType(arg *CreateTokenResponseGetMessageAttributeType, val CreateTokenResponseGetMessageRetType) {
	*arg = &val
}

type CreateTokenResponseGetMessageArgType = string
type CreateTokenResponseGetMessageRetType = string

/*
	types and functions for token
*/

// isModel
type CreateTokenResponseGetTokenAttributeType = *TokenCreated
type CreateTokenResponseGetTokenArgType = TokenCreated
type CreateTokenResponseGetTokenRetType = TokenCreated

func getCreateTokenResponseGetTokenAttributeTypeOk(arg CreateTokenResponseGetTokenAttributeType) (ret CreateTokenResponseGetTokenRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setCreateTokenResponseGetTokenAttributeType(arg *CreateTokenResponseGetTokenAttributeType, val CreateTokenResponseGetTokenRetType) {
	*arg = &val
}

// CreateTokenResponse struct for CreateTokenResponse
type CreateTokenResponse struct {
	Message CreateTokenResponseGetMessageAttributeType `json:"message,omitempty"`
	// REQUIRED
	Token CreateTokenResponseGetTokenAttributeType `json:"token"`
}

type _CreateTokenResponse CreateTokenResponse

// NewCreateTokenResponse instantiates a new CreateTokenResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTokenResponse(token CreateTokenResponseGetTokenArgType) *CreateTokenResponse {
	this := CreateTokenResponse{}
	setCreateTokenResponseGetTokenAttributeType(&this.Token, token)
	return &this
}

// NewCreateTokenResponseWithDefaults instantiates a new CreateTokenResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTokenResponseWithDefaults() *CreateTokenResponse {
	this := CreateTokenResponse{}
	return &this
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *CreateTokenResponse) GetMessage() (res CreateTokenResponseGetMessageRetType) {
	res, _ = o.GetMessageOk()
	return
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTokenResponse) GetMessageOk() (ret CreateTokenResponseGetMessageRetType, ok bool) {
	return getCreateTokenResponseGetMessageAttributeTypeOk(o.Message)
}

// HasMessage returns a boolean if a field has been set.
func (o *CreateTokenResponse) HasMessage() bool {
	_, ok := o.GetMessageOk()
	return ok
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *CreateTokenResponse) SetMessage(v CreateTokenResponseGetMessageRetType) {
	setCreateTokenResponseGetMessageAttributeType(&o.Message, v)
}

// GetToken returns the Token field value
func (o *CreateTokenResponse) GetToken() (ret CreateTokenResponseGetTokenRetType) {
	ret, _ = o.GetTokenOk()
	return ret
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *CreateTokenResponse) GetTokenOk() (ret CreateTokenResponseGetTokenRetType, ok bool) {
	return getCreateTokenResponseGetTokenAttributeTypeOk(o.Token)
}

// SetToken sets field value
func (o *CreateTokenResponse) SetToken(v CreateTokenResponseGetTokenRetType) {
	setCreateTokenResponseGetTokenAttributeType(&o.Token, v)
}

func (o CreateTokenResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateTokenResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getCreateTokenResponseGetMessageAttributeTypeOk(o.Message); ok {
		toSerialize["Message"] = val
	}
	if val, ok := getCreateTokenResponseGetTokenAttributeTypeOk(o.Token); ok {
		toSerialize["Token"] = val
	}
	return toSerialize, nil
}

func (o *CreateTokenResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"token",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateTokenResponse := _CreateTokenResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateTokenResponse)

	if err != nil {
		return err
	}

	*o = CreateTokenResponse(varCreateTokenResponse)

	return err
}

type NullableCreateTokenResponse struct {
	value *CreateTokenResponse
	isSet bool
}

func (v NullableCreateTokenResponse) Get() *CreateTokenResponse {
	return v.value
}

func (v *NullableCreateTokenResponse) Set(val *CreateTokenResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTokenResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTokenResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTokenResponse(val *CreateTokenResponse) *NullableCreateTokenResponse {
	return &NullableCreateTokenResponse{value: val, isSet: true}
}

func (v NullableCreateTokenResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTokenResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
