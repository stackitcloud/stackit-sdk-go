/*
STACKIT Model Serving API

This API provides endpoints for the model serving api

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package modelserving

import (
	"encoding/json"
	"fmt"
)

// checks if the ChatModelDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChatModelDetails{}

/*
	types and functions for bits
*/

// isEnum

// ChatModelDetailsBits the model 'ChatModelDetails'
type ChatModelDetailsBits int32

// List of Bits
const (
	CHATMODELDETAILSBITS_1Bit   ChatModelDetailsBits = 1
	CHATMODELDETAILSBITS_2Bits  ChatModelDetailsBits = 2
	CHATMODELDETAILSBITS_4Bits  ChatModelDetailsBits = 4
	CHATMODELDETAILSBITS_8Bits  ChatModelDetailsBits = 8
	CHATMODELDETAILSBITS_16Bits ChatModelDetailsBits = 16
)

// All allowed values of ChatModelDetails enum
var AllowedChatModelDetailsBitsEnumValues = []ChatModelDetailsBits{
	1,
	2,
	4,
	8,
	16,
}

func (v *ChatModelDetailsBits) UnmarshalJSON(src []byte) error {
	var value int32
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	// Allow unmarshalling zero value for testing purposes
	var zeroValue int32
	if value == zeroValue {
		return nil
	}
	enumTypeValue := ChatModelDetailsBits(value)
	for _, existing := range AllowedChatModelDetailsBitsEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ChatModelDetails", value)
}

// NewChatModelDetailsBitsFromValue returns a pointer to a valid ChatModelDetailsBits
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewChatModelDetailsBitsFromValue(v int32) (*ChatModelDetailsBits, error) {
	ev := ChatModelDetailsBits(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ChatModelDetailsBits: valid values are %v", v, AllowedChatModelDetailsBitsEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ChatModelDetailsBits) IsValid() bool {
	for _, existing := range AllowedChatModelDetailsBitsEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to BitsBits value
func (v ChatModelDetailsBits) Ptr() *ChatModelDetailsBits {
	return &v
}

type NullableChatModelDetailsBits struct {
	value *ChatModelDetailsBits
	isSet bool
}

func (v NullableChatModelDetailsBits) Get() *ChatModelDetailsBits {
	return v.value
}

func (v *NullableChatModelDetailsBits) Set(val *ChatModelDetailsBits) {
	v.value = val
	v.isSet = true
}

func (v NullableChatModelDetailsBits) IsSet() bool {
	return v.isSet
}

func (v *NullableChatModelDetailsBits) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChatModelDetailsBits(val *ChatModelDetailsBits) *NullableChatModelDetailsBits {
	return &NullableChatModelDetailsBits{value: val, isSet: true}
}

func (v NullableChatModelDetailsBits) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChatModelDetailsBits) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

type ChatModelDetailsGetBitsAttributeType = *ChatModelDetailsBits
type ChatModelDetailsGetBitsArgType = ChatModelDetailsBits
type ChatModelDetailsGetBitsRetType = ChatModelDetailsBits

func getChatModelDetailsGetBitsAttributeTypeOk(arg ChatModelDetailsGetBitsAttributeType) (ret ChatModelDetailsGetBitsRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setChatModelDetailsGetBitsAttributeType(arg *ChatModelDetailsGetBitsAttributeType, val ChatModelDetailsGetBitsRetType) {
	*arg = &val
}

/*
	types and functions for category
*/

// isEnum

// ChatModelDetailsCategory the model 'ChatModelDetails'
type ChatModelDetailsCategory string

// List of Category
const (
	CHATMODELDETAILSCATEGORY_STANDARD ChatModelDetailsCategory = "standard"
	CHATMODELDETAILSCATEGORY_PLUS     ChatModelDetailsCategory = "plus"
	CHATMODELDETAILSCATEGORY_PREMIUM  ChatModelDetailsCategory = "premium"
)

// All allowed values of ChatModelDetails enum
var AllowedChatModelDetailsCategoryEnumValues = []ChatModelDetailsCategory{
	"standard",
	"plus",
	"premium",
}

func (v *ChatModelDetailsCategory) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	// Allow unmarshalling zero value for testing purposes
	var zeroValue string
	if value == zeroValue {
		return nil
	}
	enumTypeValue := ChatModelDetailsCategory(value)
	for _, existing := range AllowedChatModelDetailsCategoryEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ChatModelDetails", value)
}

// NewChatModelDetailsCategoryFromValue returns a pointer to a valid ChatModelDetailsCategory
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewChatModelDetailsCategoryFromValue(v string) (*ChatModelDetailsCategory, error) {
	ev := ChatModelDetailsCategory(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ChatModelDetailsCategory: valid values are %v", v, AllowedChatModelDetailsCategoryEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ChatModelDetailsCategory) IsValid() bool {
	for _, existing := range AllowedChatModelDetailsCategoryEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to CategoryCategory value
func (v ChatModelDetailsCategory) Ptr() *ChatModelDetailsCategory {
	return &v
}

type NullableChatModelDetailsCategory struct {
	value *ChatModelDetailsCategory
	isSet bool
}

func (v NullableChatModelDetailsCategory) Get() *ChatModelDetailsCategory {
	return v.value
}

func (v *NullableChatModelDetailsCategory) Set(val *ChatModelDetailsCategory) {
	v.value = val
	v.isSet = true
}

func (v NullableChatModelDetailsCategory) IsSet() bool {
	return v.isSet
}

func (v *NullableChatModelDetailsCategory) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChatModelDetailsCategory(val *ChatModelDetailsCategory) *NullableChatModelDetailsCategory {
	return &NullableChatModelDetailsCategory{value: val, isSet: true}
}

func (v NullableChatModelDetailsCategory) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChatModelDetailsCategory) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

type ChatModelDetailsGetCategoryAttributeType = *ChatModelDetailsCategory
type ChatModelDetailsGetCategoryArgType = ChatModelDetailsCategory
type ChatModelDetailsGetCategoryRetType = ChatModelDetailsCategory

func getChatModelDetailsGetCategoryAttributeTypeOk(arg ChatModelDetailsGetCategoryAttributeType) (ret ChatModelDetailsGetCategoryRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setChatModelDetailsGetCategoryAttributeType(arg *ChatModelDetailsGetCategoryAttributeType, val ChatModelDetailsGetCategoryRetType) {
	*arg = &val
}

/*
	types and functions for contextLength
*/

// isLong
type ChatModelDetailsGetContextLengthAttributeType = *int64
type ChatModelDetailsGetContextLengthArgType = int64
type ChatModelDetailsGetContextLengthRetType = int64

func getChatModelDetailsGetContextLengthAttributeTypeOk(arg ChatModelDetailsGetContextLengthAttributeType) (ret ChatModelDetailsGetContextLengthRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setChatModelDetailsGetContextLengthAttributeType(arg *ChatModelDetailsGetContextLengthAttributeType, val ChatModelDetailsGetContextLengthRetType) {
	*arg = &val
}

/*
	types and functions for description
*/

// isNotNullableString
type ChatModelDetailsGetDescriptionAttributeType = *string

func getChatModelDetailsGetDescriptionAttributeTypeOk(arg ChatModelDetailsGetDescriptionAttributeType) (ret ChatModelDetailsGetDescriptionRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setChatModelDetailsGetDescriptionAttributeType(arg *ChatModelDetailsGetDescriptionAttributeType, val ChatModelDetailsGetDescriptionRetType) {
	*arg = &val
}

type ChatModelDetailsGetDescriptionArgType = string
type ChatModelDetailsGetDescriptionRetType = string

/*
	types and functions for displayedName
*/

// isNotNullableString
type ChatModelDetailsGetDisplayedNameAttributeType = *string

func getChatModelDetailsGetDisplayedNameAttributeTypeOk(arg ChatModelDetailsGetDisplayedNameAttributeType) (ret ChatModelDetailsGetDisplayedNameRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setChatModelDetailsGetDisplayedNameAttributeType(arg *ChatModelDetailsGetDisplayedNameAttributeType, val ChatModelDetailsGetDisplayedNameRetType) {
	*arg = &val
}

type ChatModelDetailsGetDisplayedNameArgType = string
type ChatModelDetailsGetDisplayedNameRetType = string

/*
	types and functions for id
*/

// isNotNullableString
type ChatModelDetailsGetIdAttributeType = *string

func getChatModelDetailsGetIdAttributeTypeOk(arg ChatModelDetailsGetIdAttributeType) (ret ChatModelDetailsGetIdRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setChatModelDetailsGetIdAttributeType(arg *ChatModelDetailsGetIdAttributeType, val ChatModelDetailsGetIdRetType) {
	*arg = &val
}

type ChatModelDetailsGetIdArgType = string
type ChatModelDetailsGetIdRetType = string

/*
	types and functions for name
*/

// isNotNullableString
type ChatModelDetailsGetNameAttributeType = *string

func getChatModelDetailsGetNameAttributeTypeOk(arg ChatModelDetailsGetNameAttributeType) (ret ChatModelDetailsGetNameRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setChatModelDetailsGetNameAttributeType(arg *ChatModelDetailsGetNameAttributeType, val ChatModelDetailsGetNameRetType) {
	*arg = &val
}

type ChatModelDetailsGetNameArgType = string
type ChatModelDetailsGetNameRetType = string

/*
	types and functions for quantizationMethod
*/

// isEnum

// ChatModelDetailsQuantizationMethod the model 'ChatModelDetails'
type ChatModelDetailsQuantizationMethod string

// List of QuantizationMethod
const (
	CHATMODELDETAILSQUANTIZATION_METHOD_PTQ ChatModelDetailsQuantizationMethod = "PTQ"
	CHATMODELDETAILSQUANTIZATION_METHOD_QAT ChatModelDetailsQuantizationMethod = "QAT"
)

// All allowed values of ChatModelDetails enum
var AllowedChatModelDetailsQuantizationMethodEnumValues = []ChatModelDetailsQuantizationMethod{
	"PTQ",
	"QAT",
}

func (v *ChatModelDetailsQuantizationMethod) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	// Allow unmarshalling zero value for testing purposes
	var zeroValue string
	if value == zeroValue {
		return nil
	}
	enumTypeValue := ChatModelDetailsQuantizationMethod(value)
	for _, existing := range AllowedChatModelDetailsQuantizationMethodEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ChatModelDetails", value)
}

// NewChatModelDetailsQuantizationMethodFromValue returns a pointer to a valid ChatModelDetailsQuantizationMethod
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewChatModelDetailsQuantizationMethodFromValue(v string) (*ChatModelDetailsQuantizationMethod, error) {
	ev := ChatModelDetailsQuantizationMethod(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ChatModelDetailsQuantizationMethod: valid values are %v", v, AllowedChatModelDetailsQuantizationMethodEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ChatModelDetailsQuantizationMethod) IsValid() bool {
	for _, existing := range AllowedChatModelDetailsQuantizationMethodEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to QuantizationMethodQuantizationMethod value
func (v ChatModelDetailsQuantizationMethod) Ptr() *ChatModelDetailsQuantizationMethod {
	return &v
}

type NullableChatModelDetailsQuantizationMethod struct {
	value *ChatModelDetailsQuantizationMethod
	isSet bool
}

func (v NullableChatModelDetailsQuantizationMethod) Get() *ChatModelDetailsQuantizationMethod {
	return v.value
}

func (v *NullableChatModelDetailsQuantizationMethod) Set(val *ChatModelDetailsQuantizationMethod) {
	v.value = val
	v.isSet = true
}

func (v NullableChatModelDetailsQuantizationMethod) IsSet() bool {
	return v.isSet
}

func (v *NullableChatModelDetailsQuantizationMethod) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChatModelDetailsQuantizationMethod(val *ChatModelDetailsQuantizationMethod) *NullableChatModelDetailsQuantizationMethod {
	return &NullableChatModelDetailsQuantizationMethod{value: val, isSet: true}
}

func (v NullableChatModelDetailsQuantizationMethod) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChatModelDetailsQuantizationMethod) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

type ChatModelDetailsGetQuantizationMethodAttributeType = *ChatModelDetailsQuantizationMethod
type ChatModelDetailsGetQuantizationMethodArgType = ChatModelDetailsQuantizationMethod
type ChatModelDetailsGetQuantizationMethodRetType = ChatModelDetailsQuantizationMethod

func getChatModelDetailsGetQuantizationMethodAttributeTypeOk(arg ChatModelDetailsGetQuantizationMethodAttributeType) (ret ChatModelDetailsGetQuantizationMethodRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setChatModelDetailsGetQuantizationMethodAttributeType(arg *ChatModelDetailsGetQuantizationMethodAttributeType, val ChatModelDetailsGetQuantizationMethodRetType) {
	*arg = &val
}

/*
	types and functions for region
*/

// isNotNullableString
type ChatModelDetailsGetRegionAttributeType = *string

func getChatModelDetailsGetRegionAttributeTypeOk(arg ChatModelDetailsGetRegionAttributeType) (ret ChatModelDetailsGetRegionRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setChatModelDetailsGetRegionAttributeType(arg *ChatModelDetailsGetRegionAttributeType, val ChatModelDetailsGetRegionRetType) {
	*arg = &val
}

type ChatModelDetailsGetRegionArgType = string
type ChatModelDetailsGetRegionRetType = string

/*
	types and functions for size
*/

// isLong
type ChatModelDetailsGetSizeAttributeType = *int64
type ChatModelDetailsGetSizeArgType = int64
type ChatModelDetailsGetSizeRetType = int64

func getChatModelDetailsGetSizeAttributeTypeOk(arg ChatModelDetailsGetSizeAttributeType) (ret ChatModelDetailsGetSizeRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setChatModelDetailsGetSizeAttributeType(arg *ChatModelDetailsGetSizeAttributeType, val ChatModelDetailsGetSizeRetType) {
	*arg = &val
}

/*
	types and functions for skus
*/

// isArray
type ChatModelDetailsGetSkusAttributeType = *[]SKU
type ChatModelDetailsGetSkusArgType = []SKU
type ChatModelDetailsGetSkusRetType = []SKU

func getChatModelDetailsGetSkusAttributeTypeOk(arg ChatModelDetailsGetSkusAttributeType) (ret ChatModelDetailsGetSkusRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setChatModelDetailsGetSkusAttributeType(arg *ChatModelDetailsGetSkusAttributeType, val ChatModelDetailsGetSkusRetType) {
	*arg = &val
}

/*
	types and functions for tags
*/

// isArray
type ChatModelDetailsGetTagsAttributeType = *[]string
type ChatModelDetailsGetTagsArgType = []string
type ChatModelDetailsGetTagsRetType = []string

func getChatModelDetailsGetTagsAttributeTypeOk(arg ChatModelDetailsGetTagsAttributeType) (ret ChatModelDetailsGetTagsRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setChatModelDetailsGetTagsAttributeType(arg *ChatModelDetailsGetTagsAttributeType, val ChatModelDetailsGetTagsRetType) {
	*arg = &val
}

/*
	types and functions for url
*/

// isNotNullableString
type ChatModelDetailsGetUrlAttributeType = *string

func getChatModelDetailsGetUrlAttributeTypeOk(arg ChatModelDetailsGetUrlAttributeType) (ret ChatModelDetailsGetUrlRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setChatModelDetailsGetUrlAttributeType(arg *ChatModelDetailsGetUrlAttributeType, val ChatModelDetailsGetUrlRetType) {
	*arg = &val
}

type ChatModelDetailsGetUrlArgType = string
type ChatModelDetailsGetUrlRetType = string

// ChatModelDetails struct for ChatModelDetails
type ChatModelDetails struct {
	// Can be cast to int32 without loss of precision.
	Bits ChatModelDetailsGetBitsAttributeType `json:"bits,omitempty"`
	// REQUIRED
	Category ChatModelDetailsGetCategoryAttributeType `json:"category"`
	// REQUIRED
	ContextLength ChatModelDetailsGetContextLengthAttributeType `json:"contextLength"`
	// REQUIRED
	Description ChatModelDetailsGetDescriptionAttributeType `json:"description"`
	// REQUIRED
	DisplayedName ChatModelDetailsGetDisplayedNameAttributeType `json:"displayedName"`
	// generated uuid to identify a model
	// REQUIRED
	Id ChatModelDetailsGetIdAttributeType `json:"id"`
	// huggingface name
	// REQUIRED
	Name               ChatModelDetailsGetNameAttributeType               `json:"name"`
	QuantizationMethod ChatModelDetailsGetQuantizationMethodAttributeType `json:"quantizationMethod,omitempty"`
	// REQUIRED
	Region ChatModelDetailsGetRegionAttributeType `json:"region"`
	// model size in bytes
	// REQUIRED
	Size ChatModelDetailsGetSizeAttributeType `json:"size"`
	// REQUIRED
	Skus ChatModelDetailsGetSkusAttributeType `json:"skus"`
	// REQUIRED
	Tags ChatModelDetailsGetTagsAttributeType `json:"tags"`
	// url of the model
	// REQUIRED
	Url ChatModelDetailsGetUrlAttributeType `json:"url"`
}

type _ChatModelDetails ChatModelDetails

// NewChatModelDetails instantiates a new ChatModelDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChatModelDetails(category ChatModelDetailsGetCategoryArgType, contextLength ChatModelDetailsGetContextLengthArgType, description ChatModelDetailsGetDescriptionArgType, displayedName ChatModelDetailsGetDisplayedNameArgType, id ChatModelDetailsGetIdArgType, name ChatModelDetailsGetNameArgType, region ChatModelDetailsGetRegionArgType, size ChatModelDetailsGetSizeArgType, skus ChatModelDetailsGetSkusArgType, tags ChatModelDetailsGetTagsArgType, url ChatModelDetailsGetUrlArgType) *ChatModelDetails {
	this := ChatModelDetails{}
	setChatModelDetailsGetCategoryAttributeType(&this.Category, category)
	setChatModelDetailsGetContextLengthAttributeType(&this.ContextLength, contextLength)
	setChatModelDetailsGetDescriptionAttributeType(&this.Description, description)
	setChatModelDetailsGetDisplayedNameAttributeType(&this.DisplayedName, displayedName)
	setChatModelDetailsGetIdAttributeType(&this.Id, id)
	setChatModelDetailsGetNameAttributeType(&this.Name, name)
	setChatModelDetailsGetRegionAttributeType(&this.Region, region)
	setChatModelDetailsGetSizeAttributeType(&this.Size, size)
	setChatModelDetailsGetSkusAttributeType(&this.Skus, skus)
	setChatModelDetailsGetTagsAttributeType(&this.Tags, tags)
	setChatModelDetailsGetUrlAttributeType(&this.Url, url)
	return &this
}

// NewChatModelDetailsWithDefaults instantiates a new ChatModelDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChatModelDetailsWithDefaults() *ChatModelDetails {
	this := ChatModelDetails{}
	return &this
}

// GetBits returns the Bits field value if set, zero value otherwise.
func (o *ChatModelDetails) GetBits() (res ChatModelDetailsGetBitsRetType) {
	res, _ = o.GetBitsOk()
	return
}

// GetBitsOk returns a tuple with the Bits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChatModelDetails) GetBitsOk() (ret ChatModelDetailsGetBitsRetType, ok bool) {
	return getChatModelDetailsGetBitsAttributeTypeOk(o.Bits)
}

// HasBits returns a boolean if a field has been set.
func (o *ChatModelDetails) HasBits() bool {
	_, ok := o.GetBitsOk()
	return ok
}

// SetBits gets a reference to the given int64 and assigns it to the Bits field.
func (o *ChatModelDetails) SetBits(v ChatModelDetailsGetBitsRetType) {
	setChatModelDetailsGetBitsAttributeType(&o.Bits, v)
}

// GetCategory returns the Category field value
func (o *ChatModelDetails) GetCategory() (ret ChatModelDetailsGetCategoryRetType) {
	ret, _ = o.GetCategoryOk()
	return ret
}

// GetCategoryOk returns a tuple with the Category field value
// and a boolean to check if the value has been set.
func (o *ChatModelDetails) GetCategoryOk() (ret ChatModelDetailsGetCategoryRetType, ok bool) {
	return getChatModelDetailsGetCategoryAttributeTypeOk(o.Category)
}

// SetCategory sets field value
func (o *ChatModelDetails) SetCategory(v ChatModelDetailsGetCategoryRetType) {
	setChatModelDetailsGetCategoryAttributeType(&o.Category, v)
}

// GetContextLength returns the ContextLength field value
func (o *ChatModelDetails) GetContextLength() (ret ChatModelDetailsGetContextLengthRetType) {
	ret, _ = o.GetContextLengthOk()
	return ret
}

// GetContextLengthOk returns a tuple with the ContextLength field value
// and a boolean to check if the value has been set.
func (o *ChatModelDetails) GetContextLengthOk() (ret ChatModelDetailsGetContextLengthRetType, ok bool) {
	return getChatModelDetailsGetContextLengthAttributeTypeOk(o.ContextLength)
}

// SetContextLength sets field value
func (o *ChatModelDetails) SetContextLength(v ChatModelDetailsGetContextLengthRetType) {
	setChatModelDetailsGetContextLengthAttributeType(&o.ContextLength, v)
}

// GetDescription returns the Description field value
func (o *ChatModelDetails) GetDescription() (ret ChatModelDetailsGetDescriptionRetType) {
	ret, _ = o.GetDescriptionOk()
	return ret
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *ChatModelDetails) GetDescriptionOk() (ret ChatModelDetailsGetDescriptionRetType, ok bool) {
	return getChatModelDetailsGetDescriptionAttributeTypeOk(o.Description)
}

// SetDescription sets field value
func (o *ChatModelDetails) SetDescription(v ChatModelDetailsGetDescriptionRetType) {
	setChatModelDetailsGetDescriptionAttributeType(&o.Description, v)
}

// GetDisplayedName returns the DisplayedName field value
func (o *ChatModelDetails) GetDisplayedName() (ret ChatModelDetailsGetDisplayedNameRetType) {
	ret, _ = o.GetDisplayedNameOk()
	return ret
}

// GetDisplayedNameOk returns a tuple with the DisplayedName field value
// and a boolean to check if the value has been set.
func (o *ChatModelDetails) GetDisplayedNameOk() (ret ChatModelDetailsGetDisplayedNameRetType, ok bool) {
	return getChatModelDetailsGetDisplayedNameAttributeTypeOk(o.DisplayedName)
}

// SetDisplayedName sets field value
func (o *ChatModelDetails) SetDisplayedName(v ChatModelDetailsGetDisplayedNameRetType) {
	setChatModelDetailsGetDisplayedNameAttributeType(&o.DisplayedName, v)
}

// GetId returns the Id field value
func (o *ChatModelDetails) GetId() (ret ChatModelDetailsGetIdRetType) {
	ret, _ = o.GetIdOk()
	return ret
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ChatModelDetails) GetIdOk() (ret ChatModelDetailsGetIdRetType, ok bool) {
	return getChatModelDetailsGetIdAttributeTypeOk(o.Id)
}

// SetId sets field value
func (o *ChatModelDetails) SetId(v ChatModelDetailsGetIdRetType) {
	setChatModelDetailsGetIdAttributeType(&o.Id, v)
}

// GetName returns the Name field value
func (o *ChatModelDetails) GetName() (ret ChatModelDetailsGetNameRetType) {
	ret, _ = o.GetNameOk()
	return ret
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ChatModelDetails) GetNameOk() (ret ChatModelDetailsGetNameRetType, ok bool) {
	return getChatModelDetailsGetNameAttributeTypeOk(o.Name)
}

// SetName sets field value
func (o *ChatModelDetails) SetName(v ChatModelDetailsGetNameRetType) {
	setChatModelDetailsGetNameAttributeType(&o.Name, v)
}

// GetQuantizationMethod returns the QuantizationMethod field value if set, zero value otherwise.
func (o *ChatModelDetails) GetQuantizationMethod() (res ChatModelDetailsGetQuantizationMethodRetType) {
	res, _ = o.GetQuantizationMethodOk()
	return
}

// GetQuantizationMethodOk returns a tuple with the QuantizationMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChatModelDetails) GetQuantizationMethodOk() (ret ChatModelDetailsGetQuantizationMethodRetType, ok bool) {
	return getChatModelDetailsGetQuantizationMethodAttributeTypeOk(o.QuantizationMethod)
}

// HasQuantizationMethod returns a boolean if a field has been set.
func (o *ChatModelDetails) HasQuantizationMethod() bool {
	_, ok := o.GetQuantizationMethodOk()
	return ok
}

// SetQuantizationMethod gets a reference to the given string and assigns it to the QuantizationMethod field.
func (o *ChatModelDetails) SetQuantizationMethod(v ChatModelDetailsGetQuantizationMethodRetType) {
	setChatModelDetailsGetQuantizationMethodAttributeType(&o.QuantizationMethod, v)
}

// GetRegion returns the Region field value
func (o *ChatModelDetails) GetRegion() (ret ChatModelDetailsGetRegionRetType) {
	ret, _ = o.GetRegionOk()
	return ret
}

// GetRegionOk returns a tuple with the Region field value
// and a boolean to check if the value has been set.
func (o *ChatModelDetails) GetRegionOk() (ret ChatModelDetailsGetRegionRetType, ok bool) {
	return getChatModelDetailsGetRegionAttributeTypeOk(o.Region)
}

// SetRegion sets field value
func (o *ChatModelDetails) SetRegion(v ChatModelDetailsGetRegionRetType) {
	setChatModelDetailsGetRegionAttributeType(&o.Region, v)
}

// GetSize returns the Size field value
func (o *ChatModelDetails) GetSize() (ret ChatModelDetailsGetSizeRetType) {
	ret, _ = o.GetSizeOk()
	return ret
}

// GetSizeOk returns a tuple with the Size field value
// and a boolean to check if the value has been set.
func (o *ChatModelDetails) GetSizeOk() (ret ChatModelDetailsGetSizeRetType, ok bool) {
	return getChatModelDetailsGetSizeAttributeTypeOk(o.Size)
}

// SetSize sets field value
func (o *ChatModelDetails) SetSize(v ChatModelDetailsGetSizeRetType) {
	setChatModelDetailsGetSizeAttributeType(&o.Size, v)
}

// GetSkus returns the Skus field value
func (o *ChatModelDetails) GetSkus() (ret ChatModelDetailsGetSkusRetType) {
	ret, _ = o.GetSkusOk()
	return ret
}

// GetSkusOk returns a tuple with the Skus field value
// and a boolean to check if the value has been set.
func (o *ChatModelDetails) GetSkusOk() (ret ChatModelDetailsGetSkusRetType, ok bool) {
	return getChatModelDetailsGetSkusAttributeTypeOk(o.Skus)
}

// SetSkus sets field value
func (o *ChatModelDetails) SetSkus(v ChatModelDetailsGetSkusRetType) {
	setChatModelDetailsGetSkusAttributeType(&o.Skus, v)
}

// GetTags returns the Tags field value
func (o *ChatModelDetails) GetTags() (ret ChatModelDetailsGetTagsRetType) {
	ret, _ = o.GetTagsOk()
	return ret
}

// GetTagsOk returns a tuple with the Tags field value
// and a boolean to check if the value has been set.
func (o *ChatModelDetails) GetTagsOk() (ret ChatModelDetailsGetTagsRetType, ok bool) {
	return getChatModelDetailsGetTagsAttributeTypeOk(o.Tags)
}

// SetTags sets field value
func (o *ChatModelDetails) SetTags(v ChatModelDetailsGetTagsRetType) {
	setChatModelDetailsGetTagsAttributeType(&o.Tags, v)
}

// GetUrl returns the Url field value
func (o *ChatModelDetails) GetUrl() (ret ChatModelDetailsGetUrlRetType) {
	ret, _ = o.GetUrlOk()
	return ret
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *ChatModelDetails) GetUrlOk() (ret ChatModelDetailsGetUrlRetType, ok bool) {
	return getChatModelDetailsGetUrlAttributeTypeOk(o.Url)
}

// SetUrl sets field value
func (o *ChatModelDetails) SetUrl(v ChatModelDetailsGetUrlRetType) {
	setChatModelDetailsGetUrlAttributeType(&o.Url, v)
}

func (o ChatModelDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getChatModelDetailsGetBitsAttributeTypeOk(o.Bits); ok {
		toSerialize["Bits"] = val
	}
	if val, ok := getChatModelDetailsGetCategoryAttributeTypeOk(o.Category); ok {
		toSerialize["Category"] = val
	}
	if val, ok := getChatModelDetailsGetContextLengthAttributeTypeOk(o.ContextLength); ok {
		toSerialize["ContextLength"] = val
	}
	if val, ok := getChatModelDetailsGetDescriptionAttributeTypeOk(o.Description); ok {
		toSerialize["Description"] = val
	}
	if val, ok := getChatModelDetailsGetDisplayedNameAttributeTypeOk(o.DisplayedName); ok {
		toSerialize["DisplayedName"] = val
	}
	if val, ok := getChatModelDetailsGetIdAttributeTypeOk(o.Id); ok {
		toSerialize["Id"] = val
	}
	if val, ok := getChatModelDetailsGetNameAttributeTypeOk(o.Name); ok {
		toSerialize["Name"] = val
	}
	if val, ok := getChatModelDetailsGetQuantizationMethodAttributeTypeOk(o.QuantizationMethod); ok {
		toSerialize["QuantizationMethod"] = val
	}
	if val, ok := getChatModelDetailsGetRegionAttributeTypeOk(o.Region); ok {
		toSerialize["Region"] = val
	}
	if val, ok := getChatModelDetailsGetSizeAttributeTypeOk(o.Size); ok {
		toSerialize["Size"] = val
	}
	if val, ok := getChatModelDetailsGetSkusAttributeTypeOk(o.Skus); ok {
		toSerialize["Skus"] = val
	}
	if val, ok := getChatModelDetailsGetTagsAttributeTypeOk(o.Tags); ok {
		toSerialize["Tags"] = val
	}
	if val, ok := getChatModelDetailsGetUrlAttributeTypeOk(o.Url); ok {
		toSerialize["Url"] = val
	}
	return toSerialize, nil
}

type NullableChatModelDetails struct {
	value *ChatModelDetails
	isSet bool
}

func (v NullableChatModelDetails) Get() *ChatModelDetails {
	return v.value
}

func (v *NullableChatModelDetails) Set(val *ChatModelDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableChatModelDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableChatModelDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChatModelDetails(val *ChatModelDetails) *NullableChatModelDetails {
	return &NullableChatModelDetails{value: val, isSet: true}
}

func (v NullableChatModelDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChatModelDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
