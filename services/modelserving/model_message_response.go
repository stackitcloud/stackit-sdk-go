/*
STACKIT Model Serving API

This API provides endpoints for the model serving api

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package modelserving

import (
	"encoding/json"
)

// checks if the MessageResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MessageResponse{}

/*
	types and functions for message
*/

// isNotNullableString
type MessageResponseGetMessageAttributeType = *string

func getMessageResponseGetMessageAttributeTypeOk(arg MessageResponseGetMessageAttributeType) (ret MessageResponseGetMessageRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setMessageResponseGetMessageAttributeType(arg *MessageResponseGetMessageAttributeType, val MessageResponseGetMessageRetType) {
	*arg = &val
}

type MessageResponseGetMessageArgType = string
type MessageResponseGetMessageRetType = string

// MessageResponse struct for MessageResponse
type MessageResponse struct {
	Message MessageResponseGetMessageAttributeType `json:"message,omitempty"`
}

// NewMessageResponse instantiates a new MessageResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMessageResponse() *MessageResponse {
	this := MessageResponse{}
	return &this
}

// NewMessageResponseWithDefaults instantiates a new MessageResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMessageResponseWithDefaults() *MessageResponse {
	this := MessageResponse{}
	return &this
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *MessageResponse) GetMessage() (res MessageResponseGetMessageRetType) {
	res, _ = o.GetMessageOk()
	return
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageResponse) GetMessageOk() (ret MessageResponseGetMessageRetType, ok bool) {
	return getMessageResponseGetMessageAttributeTypeOk(o.Message)
}

// HasMessage returns a boolean if a field has been set.
func (o *MessageResponse) HasMessage() bool {
	_, ok := o.GetMessageOk()
	return ok
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *MessageResponse) SetMessage(v MessageResponseGetMessageRetType) {
	setMessageResponseGetMessageAttributeType(&o.Message, v)
}

func (o MessageResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getMessageResponseGetMessageAttributeTypeOk(o.Message); ok {
		toSerialize["Message"] = val
	}
	return toSerialize, nil
}

type NullableMessageResponse struct {
	value *MessageResponse
	isSet bool
}

func (v NullableMessageResponse) Get() *MessageResponse {
	return v.value
}

func (v *NullableMessageResponse) Set(val *MessageResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableMessageResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableMessageResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMessageResponse(val *MessageResponse) *NullableMessageResponse {
	return &NullableMessageResponse{value: val, isSet: true}
}

func (v NullableMessageResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMessageResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
