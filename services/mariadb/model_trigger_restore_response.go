/*
STACKIT MariaDB API

The STACKIT MariaDB API provides endpoints to list service offerings, manage service instances and service credentials within STACKIT portal projects.

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mariadb

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the TriggerRestoreResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TriggerRestoreResponse{}

/*
	types and functions for id
*/

// isInteger
type TriggerRestoreResponseGetIdAttributeType = *int64
type TriggerRestoreResponseGetIdArgType = int64
type TriggerRestoreResponseGetIdRetType = int64

func getTriggerRestoreResponseGetIdAttributeTypeOk(arg TriggerRestoreResponseGetIdAttributeType) (ret TriggerRestoreResponseGetIdRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setTriggerRestoreResponseGetIdAttributeType(arg *TriggerRestoreResponseGetIdAttributeType, val TriggerRestoreResponseGetIdRetType) {
	*arg = &val
}

// TriggerRestoreResponse struct for TriggerRestoreResponse
type TriggerRestoreResponse struct {
	// REQUIRED
	Id TriggerRestoreResponseGetIdAttributeType `json:"id"`
}

type _TriggerRestoreResponse TriggerRestoreResponse

// NewTriggerRestoreResponse instantiates a new TriggerRestoreResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTriggerRestoreResponse(id TriggerRestoreResponseGetIdArgType) *TriggerRestoreResponse {
	this := TriggerRestoreResponse{}
	setTriggerRestoreResponseGetIdAttributeType(&this.Id, id)
	return &this
}

// NewTriggerRestoreResponseWithDefaults instantiates a new TriggerRestoreResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTriggerRestoreResponseWithDefaults() *TriggerRestoreResponse {
	this := TriggerRestoreResponse{}
	return &this
}

// GetId returns the Id field value
func (o *TriggerRestoreResponse) GetId() (ret TriggerRestoreResponseGetIdRetType) {
	ret, _ = o.GetIdOk()
	return ret
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *TriggerRestoreResponse) GetIdOk() (ret TriggerRestoreResponseGetIdRetType, ok bool) {
	return getTriggerRestoreResponseGetIdAttributeTypeOk(o.Id)
}

// SetId sets field value
func (o *TriggerRestoreResponse) SetId(v TriggerRestoreResponseGetIdRetType) {
	setTriggerRestoreResponseGetIdAttributeType(&o.Id, v)
}

func (o TriggerRestoreResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TriggerRestoreResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getTriggerRestoreResponseGetIdAttributeTypeOk(o.Id); ok {
		toSerialize["Id"] = val
	}
	return toSerialize, nil
}

func (o *TriggerRestoreResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTriggerRestoreResponse := _TriggerRestoreResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTriggerRestoreResponse)

	if err != nil {
		return err
	}

	*o = TriggerRestoreResponse(varTriggerRestoreResponse)

	return err
}

type NullableTriggerRestoreResponse struct {
	value *TriggerRestoreResponse
	isSet bool
}

func (v NullableTriggerRestoreResponse) Get() *TriggerRestoreResponse {
	return v.value
}

func (v *NullableTriggerRestoreResponse) Set(val *TriggerRestoreResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableTriggerRestoreResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableTriggerRestoreResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTriggerRestoreResponse(val *TriggerRestoreResponse) *NullableTriggerRestoreResponse {
	return &NullableTriggerRestoreResponse{value: val, isSet: true}
}

func (v NullableTriggerRestoreResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTriggerRestoreResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
