/*
STACKIT MariaDB API

The STACKIT MariaDB API provides endpoints to list service offerings, manage service instances and service credentials within STACKIT portal projects.

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mariadb

import (
	"encoding/json"
)

// checks if the CredentialsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CredentialsResponse{}

/*
	types and functions for id
*/

// isNotNullableString
type CredentialsResponseGetIdAttributeType = *string

func getCredentialsResponseGetIdAttributeTypeOk(arg CredentialsResponseGetIdAttributeType) (ret CredentialsResponseGetIdRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setCredentialsResponseGetIdAttributeType(arg *CredentialsResponseGetIdAttributeType, val CredentialsResponseGetIdRetType) {
	*arg = &val
}

type CredentialsResponseGetIdArgType = string
type CredentialsResponseGetIdRetType = string

/*
	types and functions for raw
*/

// isModel
type CredentialsResponseGetRawAttributeType = *RawCredentials
type CredentialsResponseGetRawArgType = RawCredentials
type CredentialsResponseGetRawRetType = RawCredentials

func getCredentialsResponseGetRawAttributeTypeOk(arg CredentialsResponseGetRawAttributeType) (ret CredentialsResponseGetRawRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setCredentialsResponseGetRawAttributeType(arg *CredentialsResponseGetRawAttributeType, val CredentialsResponseGetRawRetType) {
	*arg = &val
}

/*
	types and functions for uri
*/

// isNotNullableString
type CredentialsResponseGetUriAttributeType = *string

func getCredentialsResponseGetUriAttributeTypeOk(arg CredentialsResponseGetUriAttributeType) (ret CredentialsResponseGetUriRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setCredentialsResponseGetUriAttributeType(arg *CredentialsResponseGetUriAttributeType, val CredentialsResponseGetUriRetType) {
	*arg = &val
}

type CredentialsResponseGetUriArgType = string
type CredentialsResponseGetUriRetType = string

// CredentialsResponse struct for CredentialsResponse
type CredentialsResponse struct {
	// REQUIRED
	Id  CredentialsResponseGetIdAttributeType  `json:"id"`
	Raw CredentialsResponseGetRawAttributeType `json:"raw,omitempty"`
	// REQUIRED
	Uri CredentialsResponseGetUriAttributeType `json:"uri"`
}

type _CredentialsResponse CredentialsResponse

// NewCredentialsResponse instantiates a new CredentialsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCredentialsResponse(id CredentialsResponseGetIdArgType, uri CredentialsResponseGetUriArgType) *CredentialsResponse {
	this := CredentialsResponse{}
	setCredentialsResponseGetIdAttributeType(&this.Id, id)
	setCredentialsResponseGetUriAttributeType(&this.Uri, uri)
	return &this
}

// NewCredentialsResponseWithDefaults instantiates a new CredentialsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCredentialsResponseWithDefaults() *CredentialsResponse {
	this := CredentialsResponse{}
	return &this
}

// GetId returns the Id field value
func (o *CredentialsResponse) GetId() (ret CredentialsResponseGetIdRetType) {
	ret, _ = o.GetIdOk()
	return ret
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CredentialsResponse) GetIdOk() (ret CredentialsResponseGetIdRetType, ok bool) {
	return getCredentialsResponseGetIdAttributeTypeOk(o.Id)
}

// SetId sets field value
func (o *CredentialsResponse) SetId(v CredentialsResponseGetIdRetType) {
	setCredentialsResponseGetIdAttributeType(&o.Id, v)
}

// GetRaw returns the Raw field value if set, zero value otherwise.
func (o *CredentialsResponse) GetRaw() (res CredentialsResponseGetRawRetType) {
	res, _ = o.GetRawOk()
	return
}

// GetRawOk returns a tuple with the Raw field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialsResponse) GetRawOk() (ret CredentialsResponseGetRawRetType, ok bool) {
	return getCredentialsResponseGetRawAttributeTypeOk(o.Raw)
}

// HasRaw returns a boolean if a field has been set.
func (o *CredentialsResponse) HasRaw() bool {
	_, ok := o.GetRawOk()
	return ok
}

// SetRaw gets a reference to the given RawCredentials and assigns it to the Raw field.
func (o *CredentialsResponse) SetRaw(v CredentialsResponseGetRawRetType) {
	setCredentialsResponseGetRawAttributeType(&o.Raw, v)
}

// GetUri returns the Uri field value
func (o *CredentialsResponse) GetUri() (ret CredentialsResponseGetUriRetType) {
	ret, _ = o.GetUriOk()
	return ret
}

// GetUriOk returns a tuple with the Uri field value
// and a boolean to check if the value has been set.
func (o *CredentialsResponse) GetUriOk() (ret CredentialsResponseGetUriRetType, ok bool) {
	return getCredentialsResponseGetUriAttributeTypeOk(o.Uri)
}

// SetUri sets field value
func (o *CredentialsResponse) SetUri(v CredentialsResponseGetUriRetType) {
	setCredentialsResponseGetUriAttributeType(&o.Uri, v)
}

func (o CredentialsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getCredentialsResponseGetIdAttributeTypeOk(o.Id); ok {
		toSerialize["Id"] = val
	}
	if val, ok := getCredentialsResponseGetRawAttributeTypeOk(o.Raw); ok {
		toSerialize["Raw"] = val
	}
	if val, ok := getCredentialsResponseGetUriAttributeTypeOk(o.Uri); ok {
		toSerialize["Uri"] = val
	}
	return toSerialize, nil
}

type NullableCredentialsResponse struct {
	value *CredentialsResponse
	isSet bool
}

func (v NullableCredentialsResponse) Get() *CredentialsResponse {
	return v.value
}

func (v *NullableCredentialsResponse) Set(val *CredentialsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCredentialsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCredentialsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCredentialsResponse(val *CredentialsResponse) *NullableCredentialsResponse {
	return &NullableCredentialsResponse{value: val, isSet: true}
}

func (v NullableCredentialsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCredentialsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
