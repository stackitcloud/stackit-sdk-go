/*
STACKIT MariaDB API

The STACKIT MariaDB API provides endpoints to list service offerings, manage service instances and service credentials within STACKIT portal projects.

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mariadb

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the UpdateBackupsConfigResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateBackupsConfigResponse{}

/*
	types and functions for message
*/

// isNotNullableString
type UpdateBackupsConfigResponseGetMessageAttributeType = *string

func getUpdateBackupsConfigResponseGetMessageAttributeTypeOk(arg UpdateBackupsConfigResponseGetMessageAttributeType) (ret UpdateBackupsConfigResponseGetMessageRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setUpdateBackupsConfigResponseGetMessageAttributeType(arg *UpdateBackupsConfigResponseGetMessageAttributeType, val UpdateBackupsConfigResponseGetMessageRetType) {
	*arg = &val
}

type UpdateBackupsConfigResponseGetMessageArgType = string
type UpdateBackupsConfigResponseGetMessageRetType = string

// UpdateBackupsConfigResponse struct for UpdateBackupsConfigResponse
type UpdateBackupsConfigResponse struct {
	// REQUIRED
	Message UpdateBackupsConfigResponseGetMessageAttributeType `json:"message"`
}

type _UpdateBackupsConfigResponse UpdateBackupsConfigResponse

// NewUpdateBackupsConfigResponse instantiates a new UpdateBackupsConfigResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateBackupsConfigResponse(message UpdateBackupsConfigResponseGetMessageArgType) *UpdateBackupsConfigResponse {
	this := UpdateBackupsConfigResponse{}
	setUpdateBackupsConfigResponseGetMessageAttributeType(&this.Message, message)
	return &this
}

// NewUpdateBackupsConfigResponseWithDefaults instantiates a new UpdateBackupsConfigResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateBackupsConfigResponseWithDefaults() *UpdateBackupsConfigResponse {
	this := UpdateBackupsConfigResponse{}
	return &this
}

// GetMessage returns the Message field value
func (o *UpdateBackupsConfigResponse) GetMessage() (ret UpdateBackupsConfigResponseGetMessageRetType) {
	ret, _ = o.GetMessageOk()
	return ret
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *UpdateBackupsConfigResponse) GetMessageOk() (ret UpdateBackupsConfigResponseGetMessageRetType, ok bool) {
	return getUpdateBackupsConfigResponseGetMessageAttributeTypeOk(o.Message)
}

// SetMessage sets field value
func (o *UpdateBackupsConfigResponse) SetMessage(v UpdateBackupsConfigResponseGetMessageRetType) {
	setUpdateBackupsConfigResponseGetMessageAttributeType(&o.Message, v)
}

func (o UpdateBackupsConfigResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateBackupsConfigResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getUpdateBackupsConfigResponseGetMessageAttributeTypeOk(o.Message); ok {
		toSerialize["Message"] = val
	}
	return toSerialize, nil
}

func (o *UpdateBackupsConfigResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"message",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUpdateBackupsConfigResponse := _UpdateBackupsConfigResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUpdateBackupsConfigResponse)

	if err != nil {
		return err
	}

	*o = UpdateBackupsConfigResponse(varUpdateBackupsConfigResponse)

	return err
}

type NullableUpdateBackupsConfigResponse struct {
	value *UpdateBackupsConfigResponse
	isSet bool
}

func (v NullableUpdateBackupsConfigResponse) Get() *UpdateBackupsConfigResponse {
	return v.value
}

func (v *NullableUpdateBackupsConfigResponse) Set(val *UpdateBackupsConfigResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateBackupsConfigResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateBackupsConfigResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateBackupsConfigResponse(val *UpdateBackupsConfigResponse) *NullableUpdateBackupsConfigResponse {
	return &NullableUpdateBackupsConfigResponse{value: val, isSet: true}
}

func (v NullableUpdateBackupsConfigResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateBackupsConfigResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
