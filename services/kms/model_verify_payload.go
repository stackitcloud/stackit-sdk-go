/*
STACKIT Key Management Service API

This API provides endpoints for managing keys and key rings.

API version: 1beta.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kms

import (
	"encoding/json"
)

// checks if the VerifyPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VerifyPayload{}

/*
	types and functions for data
*/

// isByteArray
type VerifyPayloadGetDataAttributeType = *[]byte
type VerifyPayloadGetDataArgType = []byte
type VerifyPayloadGetDataRetType = []byte

func getVerifyPayloadGetDataAttributeTypeOk(arg VerifyPayloadGetDataAttributeType) (ret VerifyPayloadGetDataRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setVerifyPayloadGetDataAttributeType(arg *VerifyPayloadGetDataAttributeType, val VerifyPayloadGetDataRetType) {
	*arg = &val
}

/*
	types and functions for signature
*/

// isByteArray
type VerifyPayloadGetSignatureAttributeType = *[]byte
type VerifyPayloadGetSignatureArgType = []byte
type VerifyPayloadGetSignatureRetType = []byte

func getVerifyPayloadGetSignatureAttributeTypeOk(arg VerifyPayloadGetSignatureAttributeType) (ret VerifyPayloadGetSignatureRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setVerifyPayloadGetSignatureAttributeType(arg *VerifyPayloadGetSignatureAttributeType, val VerifyPayloadGetSignatureRetType) {
	*arg = &val
}

// VerifyPayload struct for VerifyPayload
type VerifyPayload struct {
	// The data to be verified. Encoded in base64.
	// REQUIRED
	Data VerifyPayloadGetDataAttributeType `json:"data"`
	// The signature of the data. Encoded in base64.
	// REQUIRED
	Signature VerifyPayloadGetSignatureAttributeType `json:"signature"`
}

type _VerifyPayload VerifyPayload

// NewVerifyPayload instantiates a new VerifyPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVerifyPayload(data VerifyPayloadGetDataArgType, signature VerifyPayloadGetSignatureArgType) *VerifyPayload {
	this := VerifyPayload{}
	setVerifyPayloadGetDataAttributeType(&this.Data, data)
	setVerifyPayloadGetSignatureAttributeType(&this.Signature, signature)
	return &this
}

// NewVerifyPayloadWithDefaults instantiates a new VerifyPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVerifyPayloadWithDefaults() *VerifyPayload {
	this := VerifyPayload{}
	return &this
}

// GetData returns the Data field value
func (o *VerifyPayload) GetData() (ret VerifyPayloadGetDataRetType) {
	ret, _ = o.GetDataOk()
	return ret
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *VerifyPayload) GetDataOk() (ret VerifyPayloadGetDataRetType, ok bool) {
	return getVerifyPayloadGetDataAttributeTypeOk(o.Data)
}

// SetData sets field value
func (o *VerifyPayload) SetData(v VerifyPayloadGetDataRetType) {
	setVerifyPayloadGetDataAttributeType(&o.Data, v)
}

// GetSignature returns the Signature field value
func (o *VerifyPayload) GetSignature() (ret VerifyPayloadGetSignatureRetType) {
	ret, _ = o.GetSignatureOk()
	return ret
}

// GetSignatureOk returns a tuple with the Signature field value
// and a boolean to check if the value has been set.
func (o *VerifyPayload) GetSignatureOk() (ret VerifyPayloadGetSignatureRetType, ok bool) {
	return getVerifyPayloadGetSignatureAttributeTypeOk(o.Signature)
}

// SetSignature sets field value
func (o *VerifyPayload) SetSignature(v VerifyPayloadGetSignatureRetType) {
	setVerifyPayloadGetSignatureAttributeType(&o.Signature, v)
}

func (o VerifyPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getVerifyPayloadGetDataAttributeTypeOk(o.Data); ok {
		toSerialize["Data"] = val
	}
	if val, ok := getVerifyPayloadGetSignatureAttributeTypeOk(o.Signature); ok {
		toSerialize["Signature"] = val
	}
	return toSerialize, nil
}

type NullableVerifyPayload struct {
	value *VerifyPayload
	isSet bool
}

func (v NullableVerifyPayload) Get() *VerifyPayload {
	return v.value
}

func (v *NullableVerifyPayload) Set(val *VerifyPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableVerifyPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableVerifyPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVerifyPayload(val *VerifyPayload) *NullableVerifyPayload {
	return &NullableVerifyPayload{value: val, isSet: true}
}

func (v NullableVerifyPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVerifyPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
