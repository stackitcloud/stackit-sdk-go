/*
STACKIT Key Management Service API

This API provides endpoints for managing keys and key rings.

API version: 1beta.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kms

import (
	"encoding/json"
)

// checks if the KeyRingList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyRingList{}

/*
	types and functions for keyRings
*/

// isArray
type KeyRingListGetKeyRingsAttributeType = *[]KeyRing
type KeyRingListGetKeyRingsArgType = []KeyRing
type KeyRingListGetKeyRingsRetType = []KeyRing

func getKeyRingListGetKeyRingsAttributeTypeOk(arg KeyRingListGetKeyRingsAttributeType) (ret KeyRingListGetKeyRingsRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setKeyRingListGetKeyRingsAttributeType(arg *KeyRingListGetKeyRingsAttributeType, val KeyRingListGetKeyRingsRetType) {
	*arg = &val
}

// KeyRingList struct for KeyRingList
type KeyRingList struct {
	// REQUIRED
	KeyRings KeyRingListGetKeyRingsAttributeType `json:"keyRings" required:"true"`
}

type _KeyRingList KeyRingList

// NewKeyRingList instantiates a new KeyRingList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyRingList(keyRings KeyRingListGetKeyRingsArgType) *KeyRingList {
	this := KeyRingList{}
	setKeyRingListGetKeyRingsAttributeType(&this.KeyRings, keyRings)
	return &this
}

// NewKeyRingListWithDefaults instantiates a new KeyRingList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyRingListWithDefaults() *KeyRingList {
	this := KeyRingList{}
	return &this
}

// GetKeyRings returns the KeyRings field value
func (o *KeyRingList) GetKeyRings() (ret KeyRingListGetKeyRingsRetType) {
	ret, _ = o.GetKeyRingsOk()
	return ret
}

// GetKeyRingsOk returns a tuple with the KeyRings field value
// and a boolean to check if the value has been set.
func (o *KeyRingList) GetKeyRingsOk() (ret KeyRingListGetKeyRingsRetType, ok bool) {
	return getKeyRingListGetKeyRingsAttributeTypeOk(o.KeyRings)
}

// SetKeyRings sets field value
func (o *KeyRingList) SetKeyRings(v KeyRingListGetKeyRingsRetType) {
	setKeyRingListGetKeyRingsAttributeType(&o.KeyRings, v)
}

func (o KeyRingList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getKeyRingListGetKeyRingsAttributeTypeOk(o.KeyRings); ok {
		toSerialize["KeyRings"] = val
	}
	return toSerialize, nil
}

type NullableKeyRingList struct {
	value *KeyRingList
	isSet bool
}

func (v NullableKeyRingList) Get() *KeyRingList {
	return v.value
}

func (v *NullableKeyRingList) Set(val *KeyRingList) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyRingList) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyRingList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyRingList(val *KeyRingList) *NullableKeyRingList {
	return &NullableKeyRingList{value: val, isSet: true}
}

func (v NullableKeyRingList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyRingList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
