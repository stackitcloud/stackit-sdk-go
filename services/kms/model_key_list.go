/*
STACKIT Key Management Service API

This API provides endpoints for managing keys and key rings.

API version: 1beta.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kms

import (
	"encoding/json"
)

// checks if the KeyList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyList{}

/*
	types and functions for keys
*/

// isArray
type KeyListGetKeysAttributeType = *[]Key
type KeyListGetKeysArgType = []Key
type KeyListGetKeysRetType = []Key

func getKeyListGetKeysAttributeTypeOk(arg KeyListGetKeysAttributeType) (ret KeyListGetKeysRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setKeyListGetKeysAttributeType(arg *KeyListGetKeysAttributeType, val KeyListGetKeysRetType) {
	*arg = &val
}

// KeyList struct for KeyList
type KeyList struct {
	// REQUIRED
	Keys KeyListGetKeysAttributeType `json:"keys"`
}

type _KeyList KeyList

// NewKeyList instantiates a new KeyList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyList(keys KeyListGetKeysArgType) *KeyList {
	this := KeyList{}
	setKeyListGetKeysAttributeType(&this.Keys, keys)
	return &this
}

// NewKeyListWithDefaults instantiates a new KeyList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyListWithDefaults() *KeyList {
	this := KeyList{}
	return &this
}

// GetKeys returns the Keys field value
func (o *KeyList) GetKeys() (ret KeyListGetKeysRetType) {
	ret, _ = o.GetKeysOk()
	return ret
}

// GetKeysOk returns a tuple with the Keys field value
// and a boolean to check if the value has been set.
func (o *KeyList) GetKeysOk() (ret KeyListGetKeysRetType, ok bool) {
	return getKeyListGetKeysAttributeTypeOk(o.Keys)
}

// SetKeys sets field value
func (o *KeyList) SetKeys(v KeyListGetKeysRetType) {
	setKeyListGetKeysAttributeType(&o.Keys, v)
}

func (o KeyList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getKeyListGetKeysAttributeTypeOk(o.Keys); ok {
		toSerialize["Keys"] = val
	}
	return toSerialize, nil
}

type NullableKeyList struct {
	value *KeyList
	isSet bool
}

func (v NullableKeyList) Get() *KeyList {
	return v.value
}

func (v *NullableKeyList) Set(val *KeyList) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyList) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyList(val *KeyList) *NullableKeyList {
	return &NullableKeyList{value: val, isSet: true}
}

func (v NullableKeyList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
