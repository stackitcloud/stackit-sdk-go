/*
STACKIT Key Management Service API

This API provides endpoints for managing keys and key rings.

API version: 1beta.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kms

import (
	"encoding/json"
)

// checks if the ImportKeyPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ImportKeyPayload{}

/*
	types and functions for wrappedKey
*/

// isNotNullableString
type ImportKeyPayloadGetWrappedKeyAttributeType = *string

func getImportKeyPayloadGetWrappedKeyAttributeTypeOk(arg ImportKeyPayloadGetWrappedKeyAttributeType) (ret ImportKeyPayloadGetWrappedKeyRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setImportKeyPayloadGetWrappedKeyAttributeType(arg *ImportKeyPayloadGetWrappedKeyAttributeType, val ImportKeyPayloadGetWrappedKeyRetType) {
	*arg = &val
}

type ImportKeyPayloadGetWrappedKeyArgType = string
type ImportKeyPayloadGetWrappedKeyRetType = string

/*
	types and functions for wrappingKeyId
*/

// isNotNullableString
type ImportKeyPayloadGetWrappingKeyIdAttributeType = *string

func getImportKeyPayloadGetWrappingKeyIdAttributeTypeOk(arg ImportKeyPayloadGetWrappingKeyIdAttributeType) (ret ImportKeyPayloadGetWrappingKeyIdRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setImportKeyPayloadGetWrappingKeyIdAttributeType(arg *ImportKeyPayloadGetWrappingKeyIdAttributeType, val ImportKeyPayloadGetWrappingKeyIdRetType) {
	*arg = &val
}

type ImportKeyPayloadGetWrappingKeyIdArgType = string
type ImportKeyPayloadGetWrappingKeyIdRetType = string

// ImportKeyPayload struct for ImportKeyPayload
type ImportKeyPayload struct {
	// The wrapped key material that has to be imported. Encoded in base64.
	// REQUIRED
	WrappedKey ImportKeyPayloadGetWrappedKeyAttributeType `json:"wrappedKey" required:"true"`
	// The unique id of the wrapping key the key material has been wrapped with.
	// REQUIRED
	WrappingKeyId ImportKeyPayloadGetWrappingKeyIdAttributeType `json:"wrappingKeyId" required:"true"`
}

type _ImportKeyPayload ImportKeyPayload

// NewImportKeyPayload instantiates a new ImportKeyPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImportKeyPayload(wrappedKey ImportKeyPayloadGetWrappedKeyArgType, wrappingKeyId ImportKeyPayloadGetWrappingKeyIdArgType) *ImportKeyPayload {
	this := ImportKeyPayload{}
	setImportKeyPayloadGetWrappedKeyAttributeType(&this.WrappedKey, wrappedKey)
	setImportKeyPayloadGetWrappingKeyIdAttributeType(&this.WrappingKeyId, wrappingKeyId)
	return &this
}

// NewImportKeyPayloadWithDefaults instantiates a new ImportKeyPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImportKeyPayloadWithDefaults() *ImportKeyPayload {
	this := ImportKeyPayload{}
	return &this
}

// GetWrappedKey returns the WrappedKey field value
func (o *ImportKeyPayload) GetWrappedKey() (ret ImportKeyPayloadGetWrappedKeyRetType) {
	ret, _ = o.GetWrappedKeyOk()
	return ret
}

// GetWrappedKeyOk returns a tuple with the WrappedKey field value
// and a boolean to check if the value has been set.
func (o *ImportKeyPayload) GetWrappedKeyOk() (ret ImportKeyPayloadGetWrappedKeyRetType, ok bool) {
	return getImportKeyPayloadGetWrappedKeyAttributeTypeOk(o.WrappedKey)
}

// SetWrappedKey sets field value
func (o *ImportKeyPayload) SetWrappedKey(v ImportKeyPayloadGetWrappedKeyRetType) {
	setImportKeyPayloadGetWrappedKeyAttributeType(&o.WrappedKey, v)
}

// GetWrappingKeyId returns the WrappingKeyId field value
func (o *ImportKeyPayload) GetWrappingKeyId() (ret ImportKeyPayloadGetWrappingKeyIdRetType) {
	ret, _ = o.GetWrappingKeyIdOk()
	return ret
}

// GetWrappingKeyIdOk returns a tuple with the WrappingKeyId field value
// and a boolean to check if the value has been set.
func (o *ImportKeyPayload) GetWrappingKeyIdOk() (ret ImportKeyPayloadGetWrappingKeyIdRetType, ok bool) {
	return getImportKeyPayloadGetWrappingKeyIdAttributeTypeOk(o.WrappingKeyId)
}

// SetWrappingKeyId sets field value
func (o *ImportKeyPayload) SetWrappingKeyId(v ImportKeyPayloadGetWrappingKeyIdRetType) {
	setImportKeyPayloadGetWrappingKeyIdAttributeType(&o.WrappingKeyId, v)
}

func (o ImportKeyPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getImportKeyPayloadGetWrappedKeyAttributeTypeOk(o.WrappedKey); ok {
		toSerialize["WrappedKey"] = val
	}
	if val, ok := getImportKeyPayloadGetWrappingKeyIdAttributeTypeOk(o.WrappingKeyId); ok {
		toSerialize["WrappingKeyId"] = val
	}
	return toSerialize, nil
}

type NullableImportKeyPayload struct {
	value *ImportKeyPayload
	isSet bool
}

func (v NullableImportKeyPayload) Get() *ImportKeyPayload {
	return v.value
}

func (v *NullableImportKeyPayload) Set(val *ImportKeyPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableImportKeyPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableImportKeyPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImportKeyPayload(val *ImportKeyPayload) *NullableImportKeyPayload {
	return &NullableImportKeyPayload{value: val, isSet: true}
}

func (v NullableImportKeyPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImportKeyPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
