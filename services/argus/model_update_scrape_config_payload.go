/*
STACKIT Argus API

API endpoints for Argus on STACKIT

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package argus

import (
	"encoding/json"
)

// checks if the UpdateScrapeConfigPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateScrapeConfigPayload{}

// UpdateScrapeConfigPayload struct for UpdateScrapeConfigPayload
type UpdateScrapeConfigPayload struct {
	BasicAuth *CreateScrapeConfigPayloadBasicAuth `json:"basicAuth,omitempty"`
	// Sets the 'Authorization' header on every scrape request with the configured bearer token. It is mutually exclusive with 'bearer_token_file'. `Additional Validators:` * needs to be a valid bearer token * if bearerToken is in the body no other authentication method should be in the body
	BearerToken *string `json:"bearerToken,omitempty"`
	// Note that any globally configured 'external_labels' are unaffected by this setting. In communication with external systems, they are always applied only when a time series does not have a given label yet and are ignored otherwise.
	HonorLabels *bool `json:"honorLabels,omitempty"`
	// honor_timestamps controls whether Prometheus respects the timestamps present in scraped data. If honor_timestamps is set to 'true', the timestamps of the metrics exposed by the target will be used.
	HonorTimeStamps *bool `json:"honorTimeStamps,omitempty"`
	// The HTTP resource path on which to fetch metrics from targets. E.g. /metrics
	// REQUIRED
	MetricsPath *string `json:"metricsPath"`
	// List of metric relabel configurations
	MetricsRelabelConfigs *[]CreateScrapeConfigPayloadMetricsRelabelConfigsInner `json:"metricsRelabelConfigs,omitempty"`
	// Optional http params `Additional Validators:` * should not contain more than 5 keys * each key and value should not have more than 200 characters
	Params *map[string]interface{} `json:"params,omitempty"`
	// Per-scrape limit on number of scraped samples that will be accepted. If more than this number of samples are present after metric relabeling the entire scrape will be treated as failed. The total limit depends on the service plan target limits * samples
	SampleLimit *float64 `json:"sampleLimit,omitempty"`
	// Configures the protocol scheme used for requests. https or http
	// REQUIRED
	Scheme *string `json:"scheme"`
	// How frequently to scrape targets from this job. E.g. 5m `Additional Validators:` * must be a valid time format* must be >= 60s
	// REQUIRED
	ScrapeInterval *string `json:"scrapeInterval"`
	// Per-scrape timeout when scraping this job. `Additional Validators:` * must be a valid time format* must be smaller than scrapeInterval
	// REQUIRED
	ScrapeTimeout *string `json:"scrapeTimeout"`
	// A list of scrape configurations.
	// REQUIRED
	StaticConfigs *[]UpdateScrapeConfigPayloadStaticConfigsInner              `json:"staticConfigs"`
	TlsConfig     *CreateScrapeConfigPayloadHttpSdConfigsInnerOauth2TlsConfig `json:"tlsConfig,omitempty"`
}

type _UpdateScrapeConfigPayload UpdateScrapeConfigPayload

// NewUpdateScrapeConfigPayload instantiates a new UpdateScrapeConfigPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateScrapeConfigPayload(metricsPath *string, scheme *string, scrapeInterval *string, scrapeTimeout *string, staticConfigs *[]UpdateScrapeConfigPayloadStaticConfigsInner) *UpdateScrapeConfigPayload {
	this := UpdateScrapeConfigPayload{}
	var honorLabels bool = false
	this.HonorLabels = &honorLabels
	var honorTimeStamps bool = false
	this.HonorTimeStamps = &honorTimeStamps
	this.MetricsPath = metricsPath
	this.Scheme = scheme
	this.ScrapeInterval = scrapeInterval
	this.ScrapeTimeout = scrapeTimeout
	this.StaticConfigs = staticConfigs
	return &this
}

// NewUpdateScrapeConfigPayloadWithDefaults instantiates a new UpdateScrapeConfigPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateScrapeConfigPayloadWithDefaults() *UpdateScrapeConfigPayload {
	this := UpdateScrapeConfigPayload{}
	var honorLabels bool = false
	this.HonorLabels = &honorLabels
	var honorTimeStamps bool = false
	this.HonorTimeStamps = &honorTimeStamps
	var metricsPath string = "/metrics"
	this.MetricsPath = &metricsPath
	return &this
}

// GetBasicAuth returns the BasicAuth field value if set, zero value otherwise.
func (o *UpdateScrapeConfigPayload) GetBasicAuth() *CreateScrapeConfigPayloadBasicAuth {
	if o == nil || IsNil(o.BasicAuth) {
		var ret *CreateScrapeConfigPayloadBasicAuth
		return ret
	}
	return o.BasicAuth
}

// GetBasicAuthOk returns a tuple with the BasicAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateScrapeConfigPayload) GetBasicAuthOk() (*CreateScrapeConfigPayloadBasicAuth, bool) {
	if o == nil || IsNil(o.BasicAuth) {
		return nil, false
	}
	return o.BasicAuth, true
}

// HasBasicAuth returns a boolean if a field has been set.
func (o *UpdateScrapeConfigPayload) HasBasicAuth() bool {
	if o != nil && !IsNil(o.BasicAuth) {
		return true
	}

	return false
}

// SetBasicAuth gets a reference to the given CreateScrapeConfigPayloadBasicAuth and assigns it to the BasicAuth field.
func (o *UpdateScrapeConfigPayload) SetBasicAuth(v *CreateScrapeConfigPayloadBasicAuth) {
	o.BasicAuth = v
}

// GetBearerToken returns the BearerToken field value if set, zero value otherwise.
func (o *UpdateScrapeConfigPayload) GetBearerToken() *string {
	if o == nil || IsNil(o.BearerToken) {
		var ret *string
		return ret
	}
	return o.BearerToken
}

// GetBearerTokenOk returns a tuple with the BearerToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateScrapeConfigPayload) GetBearerTokenOk() (*string, bool) {
	if o == nil || IsNil(o.BearerToken) {
		return nil, false
	}
	return o.BearerToken, true
}

// HasBearerToken returns a boolean if a field has been set.
func (o *UpdateScrapeConfigPayload) HasBearerToken() bool {
	if o != nil && !IsNil(o.BearerToken) {
		return true
	}

	return false
}

// SetBearerToken gets a reference to the given string and assigns it to the BearerToken field.
func (o *UpdateScrapeConfigPayload) SetBearerToken(v *string) {
	o.BearerToken = v
}

// GetHonorLabels returns the HonorLabels field value if set, zero value otherwise.
func (o *UpdateScrapeConfigPayload) GetHonorLabels() *bool {
	if o == nil || IsNil(o.HonorLabels) {
		var ret *bool
		return ret
	}
	return o.HonorLabels
}

// GetHonorLabelsOk returns a tuple with the HonorLabels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateScrapeConfigPayload) GetHonorLabelsOk() (*bool, bool) {
	if o == nil || IsNil(o.HonorLabels) {
		return nil, false
	}
	return o.HonorLabels, true
}

// HasHonorLabels returns a boolean if a field has been set.
func (o *UpdateScrapeConfigPayload) HasHonorLabels() bool {
	if o != nil && !IsNil(o.HonorLabels) {
		return true
	}

	return false
}

// SetHonorLabels gets a reference to the given bool and assigns it to the HonorLabels field.
func (o *UpdateScrapeConfigPayload) SetHonorLabels(v *bool) {
	o.HonorLabels = v
}

// GetHonorTimeStamps returns the HonorTimeStamps field value if set, zero value otherwise.
func (o *UpdateScrapeConfigPayload) GetHonorTimeStamps() *bool {
	if o == nil || IsNil(o.HonorTimeStamps) {
		var ret *bool
		return ret
	}
	return o.HonorTimeStamps
}

// GetHonorTimeStampsOk returns a tuple with the HonorTimeStamps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateScrapeConfigPayload) GetHonorTimeStampsOk() (*bool, bool) {
	if o == nil || IsNil(o.HonorTimeStamps) {
		return nil, false
	}
	return o.HonorTimeStamps, true
}

// HasHonorTimeStamps returns a boolean if a field has been set.
func (o *UpdateScrapeConfigPayload) HasHonorTimeStamps() bool {
	if o != nil && !IsNil(o.HonorTimeStamps) {
		return true
	}

	return false
}

// SetHonorTimeStamps gets a reference to the given bool and assigns it to the HonorTimeStamps field.
func (o *UpdateScrapeConfigPayload) SetHonorTimeStamps(v *bool) {
	o.HonorTimeStamps = v
}

// GetMetricsPath returns the MetricsPath field value
func (o *UpdateScrapeConfigPayload) GetMetricsPath() *string {
	if o == nil {
		var ret *string
		return ret
	}

	return o.MetricsPath
}

// GetMetricsPathOk returns a tuple with the MetricsPath field value
// and a boolean to check if the value has been set.
func (o *UpdateScrapeConfigPayload) GetMetricsPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MetricsPath, true
}

// SetMetricsPath sets field value
func (o *UpdateScrapeConfigPayload) SetMetricsPath(v *string) {
	o.MetricsPath = v
}

// GetMetricsRelabelConfigs returns the MetricsRelabelConfigs field value if set, zero value otherwise.
func (o *UpdateScrapeConfigPayload) GetMetricsRelabelConfigs() *[]CreateScrapeConfigPayloadMetricsRelabelConfigsInner {
	if o == nil || IsNil(o.MetricsRelabelConfigs) {
		var ret *[]CreateScrapeConfigPayloadMetricsRelabelConfigsInner
		return ret
	}
	return o.MetricsRelabelConfigs
}

// GetMetricsRelabelConfigsOk returns a tuple with the MetricsRelabelConfigs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateScrapeConfigPayload) GetMetricsRelabelConfigsOk() (*[]CreateScrapeConfigPayloadMetricsRelabelConfigsInner, bool) {
	if o == nil || IsNil(o.MetricsRelabelConfigs) {
		return nil, false
	}
	return o.MetricsRelabelConfigs, true
}

// HasMetricsRelabelConfigs returns a boolean if a field has been set.
func (o *UpdateScrapeConfigPayload) HasMetricsRelabelConfigs() bool {
	if o != nil && !IsNil(o.MetricsRelabelConfigs) {
		return true
	}

	return false
}

// SetMetricsRelabelConfigs gets a reference to the given []CreateScrapeConfigPayloadMetricsRelabelConfigsInner and assigns it to the MetricsRelabelConfigs field.
func (o *UpdateScrapeConfigPayload) SetMetricsRelabelConfigs(v *[]CreateScrapeConfigPayloadMetricsRelabelConfigsInner) {
	o.MetricsRelabelConfigs = v
}

// GetParams returns the Params field value if set, zero value otherwise.
func (o *UpdateScrapeConfigPayload) GetParams() *map[string]interface{} {
	if o == nil || IsNil(o.Params) {
		var ret *map[string]interface{}
		return ret
	}
	return o.Params
}

// GetParamsOk returns a tuple with the Params field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateScrapeConfigPayload) GetParamsOk() (*map[string]interface{}, bool) {
	if o == nil || IsNil(o.Params) {
		return &map[string]interface{}{}, false
	}
	return o.Params, true
}

// HasParams returns a boolean if a field has been set.
func (o *UpdateScrapeConfigPayload) HasParams() bool {
	if o != nil && !IsNil(o.Params) {
		return true
	}

	return false
}

// SetParams gets a reference to the given map[string]interface{} and assigns it to the Params field.
func (o *UpdateScrapeConfigPayload) SetParams(v *map[string]interface{}) {
	o.Params = v
}

// GetSampleLimit returns the SampleLimit field value if set, zero value otherwise.
func (o *UpdateScrapeConfigPayload) GetSampleLimit() *float64 {
	if o == nil || IsNil(o.SampleLimit) {
		var ret *float64
		return ret
	}
	return o.SampleLimit
}

// GetSampleLimitOk returns a tuple with the SampleLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateScrapeConfigPayload) GetSampleLimitOk() (*float64, bool) {
	if o == nil || IsNil(o.SampleLimit) {
		return nil, false
	}
	return o.SampleLimit, true
}

// HasSampleLimit returns a boolean if a field has been set.
func (o *UpdateScrapeConfigPayload) HasSampleLimit() bool {
	if o != nil && !IsNil(o.SampleLimit) {
		return true
	}

	return false
}

// SetSampleLimit gets a reference to the given float64 and assigns it to the SampleLimit field.
func (o *UpdateScrapeConfigPayload) SetSampleLimit(v *float64) {
	o.SampleLimit = v
}

// GetScheme returns the Scheme field value
func (o *UpdateScrapeConfigPayload) GetScheme() *string {
	if o == nil {
		var ret *string
		return ret
	}

	return o.Scheme
}

// GetSchemeOk returns a tuple with the Scheme field value
// and a boolean to check if the value has been set.
func (o *UpdateScrapeConfigPayload) GetSchemeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Scheme, true
}

// SetScheme sets field value
func (o *UpdateScrapeConfigPayload) SetScheme(v *string) {
	o.Scheme = v
}

// GetScrapeInterval returns the ScrapeInterval field value
func (o *UpdateScrapeConfigPayload) GetScrapeInterval() *string {
	if o == nil {
		var ret *string
		return ret
	}

	return o.ScrapeInterval
}

// GetScrapeIntervalOk returns a tuple with the ScrapeInterval field value
// and a boolean to check if the value has been set.
func (o *UpdateScrapeConfigPayload) GetScrapeIntervalOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ScrapeInterval, true
}

// SetScrapeInterval sets field value
func (o *UpdateScrapeConfigPayload) SetScrapeInterval(v *string) {
	o.ScrapeInterval = v
}

// GetScrapeTimeout returns the ScrapeTimeout field value
func (o *UpdateScrapeConfigPayload) GetScrapeTimeout() *string {
	if o == nil {
		var ret *string
		return ret
	}

	return o.ScrapeTimeout
}

// GetScrapeTimeoutOk returns a tuple with the ScrapeTimeout field value
// and a boolean to check if the value has been set.
func (o *UpdateScrapeConfigPayload) GetScrapeTimeoutOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ScrapeTimeout, true
}

// SetScrapeTimeout sets field value
func (o *UpdateScrapeConfigPayload) SetScrapeTimeout(v *string) {
	o.ScrapeTimeout = v
}

// GetStaticConfigs returns the StaticConfigs field value
func (o *UpdateScrapeConfigPayload) GetStaticConfigs() *[]UpdateScrapeConfigPayloadStaticConfigsInner {
	if o == nil {
		var ret *[]UpdateScrapeConfigPayloadStaticConfigsInner
		return ret
	}

	return o.StaticConfigs
}

// GetStaticConfigsOk returns a tuple with the StaticConfigs field value
// and a boolean to check if the value has been set.
func (o *UpdateScrapeConfigPayload) GetStaticConfigsOk() (*[]UpdateScrapeConfigPayloadStaticConfigsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.StaticConfigs, true
}

// SetStaticConfigs sets field value
func (o *UpdateScrapeConfigPayload) SetStaticConfigs(v *[]UpdateScrapeConfigPayloadStaticConfigsInner) {
	o.StaticConfigs = v
}

// GetTlsConfig returns the TlsConfig field value if set, zero value otherwise.
func (o *UpdateScrapeConfigPayload) GetTlsConfig() *CreateScrapeConfigPayloadHttpSdConfigsInnerOauth2TlsConfig {
	if o == nil || IsNil(o.TlsConfig) {
		var ret *CreateScrapeConfigPayloadHttpSdConfigsInnerOauth2TlsConfig
		return ret
	}
	return o.TlsConfig
}

// GetTlsConfigOk returns a tuple with the TlsConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateScrapeConfigPayload) GetTlsConfigOk() (*CreateScrapeConfigPayloadHttpSdConfigsInnerOauth2TlsConfig, bool) {
	if o == nil || IsNil(o.TlsConfig) {
		return nil, false
	}
	return o.TlsConfig, true
}

// HasTlsConfig returns a boolean if a field has been set.
func (o *UpdateScrapeConfigPayload) HasTlsConfig() bool {
	if o != nil && !IsNil(o.TlsConfig) {
		return true
	}

	return false
}

// SetTlsConfig gets a reference to the given CreateScrapeConfigPayloadHttpSdConfigsInnerOauth2TlsConfig and assigns it to the TlsConfig field.
func (o *UpdateScrapeConfigPayload) SetTlsConfig(v *CreateScrapeConfigPayloadHttpSdConfigsInnerOauth2TlsConfig) {
	o.TlsConfig = v
}

func (o UpdateScrapeConfigPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BasicAuth) {
		toSerialize["basicAuth"] = o.BasicAuth
	}
	if !IsNil(o.BearerToken) {
		toSerialize["bearerToken"] = o.BearerToken
	}
	if !IsNil(o.HonorLabels) {
		toSerialize["honorLabels"] = o.HonorLabels
	}
	if !IsNil(o.HonorTimeStamps) {
		toSerialize["honorTimeStamps"] = o.HonorTimeStamps
	}
	toSerialize["metricsPath"] = o.MetricsPath
	if !IsNil(o.MetricsRelabelConfigs) {
		toSerialize["metricsRelabelConfigs"] = o.MetricsRelabelConfigs
	}
	if !IsNil(o.Params) {
		toSerialize["params"] = o.Params
	}
	if !IsNil(o.SampleLimit) {
		toSerialize["sampleLimit"] = o.SampleLimit
	}
	toSerialize["scheme"] = o.Scheme
	toSerialize["scrapeInterval"] = o.ScrapeInterval
	toSerialize["scrapeTimeout"] = o.ScrapeTimeout
	toSerialize["staticConfigs"] = o.StaticConfigs
	if !IsNil(o.TlsConfig) {
		toSerialize["tlsConfig"] = o.TlsConfig
	}
	return toSerialize, nil
}

type NullableUpdateScrapeConfigPayload struct {
	value *UpdateScrapeConfigPayload
	isSet bool
}

func (v NullableUpdateScrapeConfigPayload) Get() *UpdateScrapeConfigPayload {
	return v.value
}

func (v *NullableUpdateScrapeConfigPayload) Set(val *UpdateScrapeConfigPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateScrapeConfigPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateScrapeConfigPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateScrapeConfigPayload(val *UpdateScrapeConfigPayload) *NullableUpdateScrapeConfigPayload {
	return &NullableUpdateScrapeConfigPayload{value: val, isSet: true}
}

func (v NullableUpdateScrapeConfigPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateScrapeConfigPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
