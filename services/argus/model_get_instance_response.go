/*
STACKIT Argus API

API endpoints for Argus on STACKIT

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package argus

import (
	"encoding/json"
)

// checks if the GetInstanceResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetInstanceResponse{}

// GetInstanceResponse struct for GetInstanceResponse
type GetInstanceResponse struct {
	// REQUIRED
	DashboardUrl *string         `json:"dashboardUrl"`
	Error        *NullableString `json:"error,omitempty"`
	// REQUIRED
	Id *string `json:"id"`
	// REQUIRED
	Instance    *InstanceSensitiveData `json:"instance"`
	IsUpdatable *bool                  `json:"isUpdatable,omitempty"`
	// REQUIRED
	Message    *string            `json:"message"`
	Name       *string            `json:"name,omitempty"`
	Parameters *map[string]string `json:"parameters,omitempty"`
	// REQUIRED
	PlanId *string `json:"planId"`
	// REQUIRED
	PlanName   *string `json:"planName"`
	PlanSchema *string `json:"planSchema,omitempty"`
	// REQUIRED
	ServiceName *string `json:"serviceName"`
	// REQUIRED
	Status *string `json:"status"`
}

type _GetInstanceResponse GetInstanceResponse

// NewGetInstanceResponse instantiates a new GetInstanceResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetInstanceResponse(dashboardUrl *string, id *string, instance *InstanceSensitiveData, message *string, planId *string, planName *string, serviceName *string, status *string) *GetInstanceResponse {
	this := GetInstanceResponse{}
	this.DashboardUrl = dashboardUrl
	this.Id = id
	this.Instance = instance
	var isUpdatable bool = true
	this.IsUpdatable = &isUpdatable
	this.Message = message
	this.PlanId = planId
	this.PlanName = planName
	var planSchema string = ""
	this.PlanSchema = &planSchema
	this.ServiceName = serviceName
	this.Status = status
	return &this
}

// NewGetInstanceResponseWithDefaults instantiates a new GetInstanceResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetInstanceResponseWithDefaults() *GetInstanceResponse {
	this := GetInstanceResponse{}
	var isUpdatable bool = true
	this.IsUpdatable = &isUpdatable
	var planSchema string = ""
	this.PlanSchema = &planSchema
	return &this
}

// GetDashboardUrl returns the DashboardUrl field value
func (o *GetInstanceResponse) GetDashboardUrl() *string {
	if o == nil {
		var ret *string
		return ret
	}

	return o.DashboardUrl
}

// GetDashboardUrlOk returns a tuple with the DashboardUrl field value
// and a boolean to check if the value has been set.
func (o *GetInstanceResponse) GetDashboardUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DashboardUrl, true
}

// SetDashboardUrl sets field value
func (o *GetInstanceResponse) SetDashboardUrl(v *string) {
	o.DashboardUrl = v
}

// GetError returns the Error field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetInstanceResponse) GetError() *string {
	if o == nil || IsNil(o.Error.Get()) {
		var ret *string
		return ret
	}
	return o.Error.Get()
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetInstanceResponse) GetErrorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Error.Get(), o.Error.IsSet()
}

// HasError returns a boolean if a field has been set.
func (o *GetInstanceResponse) HasError() bool {
	if o != nil && o.Error.IsSet() {
		return true
	}

	return false
}

// SetError gets a reference to the given string and assigns it to the Error field.
func (o *GetInstanceResponse) SetError(v *string) {
	o.Error.Set(v)
}

// SetErrorNil sets the value for Error to be an explicit nil
func (o *GetInstanceResponse) SetErrorNil() {
	o.Error.Set(nil)
}

// UnsetError ensures that no value is present for Error, not even an explicit nil
func (o *GetInstanceResponse) UnsetError() {
	o.Error.Unset()
}

// GetId returns the Id field value
func (o *GetInstanceResponse) GetId() *string {
	if o == nil {
		var ret *string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *GetInstanceResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id, true
}

// SetId sets field value
func (o *GetInstanceResponse) SetId(v *string) {
	o.Id = v
}

// GetInstance returns the Instance field value
func (o *GetInstanceResponse) GetInstance() *InstanceSensitiveData {
	if o == nil {
		var ret *InstanceSensitiveData
		return ret
	}

	return o.Instance
}

// GetInstanceOk returns a tuple with the Instance field value
// and a boolean to check if the value has been set.
func (o *GetInstanceResponse) GetInstanceOk() (*InstanceSensitiveData, bool) {
	if o == nil {
		return nil, false
	}
	return o.Instance, true
}

// SetInstance sets field value
func (o *GetInstanceResponse) SetInstance(v *InstanceSensitiveData) {
	o.Instance = v
}

// GetIsUpdatable returns the IsUpdatable field value if set, zero value otherwise.
func (o *GetInstanceResponse) GetIsUpdatable() *bool {
	if o == nil || IsNil(o.IsUpdatable) {
		var ret *bool
		return ret
	}
	return o.IsUpdatable
}

// GetIsUpdatableOk returns a tuple with the IsUpdatable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInstanceResponse) GetIsUpdatableOk() (*bool, bool) {
	if o == nil || IsNil(o.IsUpdatable) {
		return nil, false
	}
	return o.IsUpdatable, true
}

// HasIsUpdatable returns a boolean if a field has been set.
func (o *GetInstanceResponse) HasIsUpdatable() bool {
	if o != nil && !IsNil(o.IsUpdatable) {
		return true
	}

	return false
}

// SetIsUpdatable gets a reference to the given bool and assigns it to the IsUpdatable field.
func (o *GetInstanceResponse) SetIsUpdatable(v *bool) {
	o.IsUpdatable = v
}

// GetMessage returns the Message field value
func (o *GetInstanceResponse) GetMessage() *string {
	if o == nil {
		var ret *string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *GetInstanceResponse) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Message, true
}

// SetMessage sets field value
func (o *GetInstanceResponse) SetMessage(v *string) {
	o.Message = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GetInstanceResponse) GetName() *string {
	if o == nil || IsNil(o.Name) {
		var ret *string
		return ret
	}
	return o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInstanceResponse) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GetInstanceResponse) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GetInstanceResponse) SetName(v *string) {
	o.Name = v
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *GetInstanceResponse) GetParameters() *map[string]string {
	if o == nil || IsNil(o.Parameters) {
		var ret *map[string]string
		return ret
	}
	return o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInstanceResponse) GetParametersOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Parameters) {
		return nil, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *GetInstanceResponse) HasParameters() bool {
	if o != nil && !IsNil(o.Parameters) {
		return true
	}

	return false
}

// SetParameters gets a reference to the given map[string]string and assigns it to the Parameters field.
func (o *GetInstanceResponse) SetParameters(v *map[string]string) {
	o.Parameters = v
}

// GetPlanId returns the PlanId field value
func (o *GetInstanceResponse) GetPlanId() *string {
	if o == nil {
		var ret *string
		return ret
	}

	return o.PlanId
}

// GetPlanIdOk returns a tuple with the PlanId field value
// and a boolean to check if the value has been set.
func (o *GetInstanceResponse) GetPlanIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PlanId, true
}

// SetPlanId sets field value
func (o *GetInstanceResponse) SetPlanId(v *string) {
	o.PlanId = v
}

// GetPlanName returns the PlanName field value
func (o *GetInstanceResponse) GetPlanName() *string {
	if o == nil {
		var ret *string
		return ret
	}

	return o.PlanName
}

// GetPlanNameOk returns a tuple with the PlanName field value
// and a boolean to check if the value has been set.
func (o *GetInstanceResponse) GetPlanNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PlanName, true
}

// SetPlanName sets field value
func (o *GetInstanceResponse) SetPlanName(v *string) {
	o.PlanName = v
}

// GetPlanSchema returns the PlanSchema field value if set, zero value otherwise.
func (o *GetInstanceResponse) GetPlanSchema() *string {
	if o == nil || IsNil(o.PlanSchema) {
		var ret *string
		return ret
	}
	return o.PlanSchema
}

// GetPlanSchemaOk returns a tuple with the PlanSchema field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInstanceResponse) GetPlanSchemaOk() (*string, bool) {
	if o == nil || IsNil(o.PlanSchema) {
		return nil, false
	}
	return o.PlanSchema, true
}

// HasPlanSchema returns a boolean if a field has been set.
func (o *GetInstanceResponse) HasPlanSchema() bool {
	if o != nil && !IsNil(o.PlanSchema) {
		return true
	}

	return false
}

// SetPlanSchema gets a reference to the given string and assigns it to the PlanSchema field.
func (o *GetInstanceResponse) SetPlanSchema(v *string) {
	o.PlanSchema = v
}

// GetServiceName returns the ServiceName field value
func (o *GetInstanceResponse) GetServiceName() *string {
	if o == nil {
		var ret *string
		return ret
	}

	return o.ServiceName
}

// GetServiceNameOk returns a tuple with the ServiceName field value
// and a boolean to check if the value has been set.
func (o *GetInstanceResponse) GetServiceNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ServiceName, true
}

// SetServiceName sets field value
func (o *GetInstanceResponse) SetServiceName(v *string) {
	o.ServiceName = v
}

// GetStatus returns the Status field value
func (o *GetInstanceResponse) GetStatus() *string {
	if o == nil {
		var ret *string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *GetInstanceResponse) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Status, true
}

// SetStatus sets field value
func (o *GetInstanceResponse) SetStatus(v *string) {
	o.Status = v
}

func (o GetInstanceResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["dashboardUrl"] = o.DashboardUrl
	if o.Error.IsSet() {
		toSerialize["error"] = o.Error.Get()
	}
	toSerialize["id"] = o.Id
	toSerialize["instance"] = o.Instance
	if !IsNil(o.IsUpdatable) {
		toSerialize["isUpdatable"] = o.IsUpdatable
	}
	toSerialize["message"] = o.Message
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Parameters) {
		toSerialize["parameters"] = o.Parameters
	}
	toSerialize["planId"] = o.PlanId
	toSerialize["planName"] = o.PlanName
	if !IsNil(o.PlanSchema) {
		toSerialize["planSchema"] = o.PlanSchema
	}
	toSerialize["serviceName"] = o.ServiceName
	toSerialize["status"] = o.Status
	return toSerialize, nil
}

type NullableGetInstanceResponse struct {
	value *GetInstanceResponse
	isSet bool
}

func (v NullableGetInstanceResponse) Get() *GetInstanceResponse {
	return v.value
}

func (v *NullableGetInstanceResponse) Set(val *GetInstanceResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetInstanceResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetInstanceResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetInstanceResponse(val *GetInstanceResponse) *NullableGetInstanceResponse {
	return &NullableGetInstanceResponse{value: val, isSet: true}
}

func (v NullableGetInstanceResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetInstanceResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
