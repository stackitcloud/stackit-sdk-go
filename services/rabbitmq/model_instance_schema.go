/*
STACKIT RabbitMQ API

The STACKIT RabbitMQ API provides endpoints to list service offerings, manage service instances and service credentials within STACKIT portal projects.

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rabbitmq

import (
	"encoding/json"
)

// checks if the InstanceSchema type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InstanceSchema{}

/*
	types and functions for create
*/

// isModel
type InstanceSchemaGetCreateAttributeType = *Schema
type InstanceSchemaGetCreateArgType = Schema
type InstanceSchemaGetCreateRetType = Schema

func getInstanceSchemaGetCreateAttributeTypeOk(arg InstanceSchemaGetCreateAttributeType) (ret InstanceSchemaGetCreateRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setInstanceSchemaGetCreateAttributeType(arg *InstanceSchemaGetCreateAttributeType, val InstanceSchemaGetCreateRetType) {
	*arg = &val
}

/*
	types and functions for update
*/

// isModel
type InstanceSchemaGetUpdateAttributeType = *Schema
type InstanceSchemaGetUpdateArgType = Schema
type InstanceSchemaGetUpdateRetType = Schema

func getInstanceSchemaGetUpdateAttributeTypeOk(arg InstanceSchemaGetUpdateAttributeType) (ret InstanceSchemaGetUpdateRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setInstanceSchemaGetUpdateAttributeType(arg *InstanceSchemaGetUpdateAttributeType, val InstanceSchemaGetUpdateRetType) {
	*arg = &val
}

// InstanceSchema struct for InstanceSchema
type InstanceSchema struct {
	// REQUIRED
	Create InstanceSchemaGetCreateAttributeType `json:"create"`
	// REQUIRED
	Update InstanceSchemaGetUpdateAttributeType `json:"update"`
}

type _InstanceSchema InstanceSchema

// NewInstanceSchema instantiates a new InstanceSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInstanceSchema(create InstanceSchemaGetCreateArgType, update InstanceSchemaGetUpdateArgType) *InstanceSchema {
	this := InstanceSchema{}
	setInstanceSchemaGetCreateAttributeType(&this.Create, create)
	setInstanceSchemaGetUpdateAttributeType(&this.Update, update)
	return &this
}

// NewInstanceSchemaWithDefaults instantiates a new InstanceSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInstanceSchemaWithDefaults() *InstanceSchema {
	this := InstanceSchema{}
	return &this
}

// GetCreate returns the Create field value
func (o *InstanceSchema) GetCreate() (ret InstanceSchemaGetCreateRetType) {
	ret, _ = o.GetCreateOk()
	return ret
}

// GetCreateOk returns a tuple with the Create field value
// and a boolean to check if the value has been set.
func (o *InstanceSchema) GetCreateOk() (ret InstanceSchemaGetCreateRetType, ok bool) {
	return getInstanceSchemaGetCreateAttributeTypeOk(o.Create)
}

// SetCreate sets field value
func (o *InstanceSchema) SetCreate(v InstanceSchemaGetCreateRetType) {
	setInstanceSchemaGetCreateAttributeType(&o.Create, v)
}

// GetUpdate returns the Update field value
func (o *InstanceSchema) GetUpdate() (ret InstanceSchemaGetUpdateRetType) {
	ret, _ = o.GetUpdateOk()
	return ret
}

// GetUpdateOk returns a tuple with the Update field value
// and a boolean to check if the value has been set.
func (o *InstanceSchema) GetUpdateOk() (ret InstanceSchemaGetUpdateRetType, ok bool) {
	return getInstanceSchemaGetUpdateAttributeTypeOk(o.Update)
}

// SetUpdate sets field value
func (o *InstanceSchema) SetUpdate(v InstanceSchemaGetUpdateRetType) {
	setInstanceSchemaGetUpdateAttributeType(&o.Update, v)
}

func (o InstanceSchema) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getInstanceSchemaGetCreateAttributeTypeOk(o.Create); ok {
		toSerialize["Create"] = val
	}
	if val, ok := getInstanceSchemaGetUpdateAttributeTypeOk(o.Update); ok {
		toSerialize["Update"] = val
	}
	return toSerialize, nil
}

type NullableInstanceSchema struct {
	value *InstanceSchema
	isSet bool
}

func (v NullableInstanceSchema) Get() *InstanceSchema {
	return v.value
}

func (v *NullableInstanceSchema) Set(val *InstanceSchema) {
	v.value = val
	v.isSet = true
}

func (v NullableInstanceSchema) IsSet() bool {
	return v.isSet
}

func (v *NullableInstanceSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInstanceSchema(val *InstanceSchema) *NullableInstanceSchema {
	return &NullableInstanceSchema{value: val, isSet: true}
}

func (v NullableInstanceSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInstanceSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
