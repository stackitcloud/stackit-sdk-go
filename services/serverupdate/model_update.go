/*
STACKIT Server Update Management API

API endpoints for Server Update Operations on STACKIT Servers.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package serverupdate

import (
	"encoding/json"
)

// checks if the Update type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Update{}

/*
	types and functions for endDate
*/

// isNotNullableString
type UpdateGetEndDateAttributeType = *string

func getUpdateGetEndDateAttributeTypeOk(arg UpdateGetEndDateAttributeType) (ret UpdateGetEndDateRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setUpdateGetEndDateAttributeType(arg *UpdateGetEndDateAttributeType, val UpdateGetEndDateRetType) {
	*arg = &val
}

type UpdateGetEndDateArgType = string
type UpdateGetEndDateRetType = string

/*
	types and functions for failReason
*/

// isNotNullableString
type UpdateGetFailReasonAttributeType = *string

func getUpdateGetFailReasonAttributeTypeOk(arg UpdateGetFailReasonAttributeType) (ret UpdateGetFailReasonRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setUpdateGetFailReasonAttributeType(arg *UpdateGetFailReasonAttributeType, val UpdateGetFailReasonRetType) {
	*arg = &val
}

type UpdateGetFailReasonArgType = string
type UpdateGetFailReasonRetType = string

/*
	types and functions for failedUpdates
*/

// isInteger
type UpdateGetFailedUpdatesAttributeType = *int64
type UpdateGetFailedUpdatesArgType = int64
type UpdateGetFailedUpdatesRetType = int64

func getUpdateGetFailedUpdatesAttributeTypeOk(arg UpdateGetFailedUpdatesAttributeType) (ret UpdateGetFailedUpdatesRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setUpdateGetFailedUpdatesAttributeType(arg *UpdateGetFailedUpdatesAttributeType, val UpdateGetFailedUpdatesRetType) {
	*arg = &val
}

/*
	types and functions for id
*/

// isInteger
type UpdateGetIdAttributeType = *int64
type UpdateGetIdArgType = int64
type UpdateGetIdRetType = int64

func getUpdateGetIdAttributeTypeOk(arg UpdateGetIdAttributeType) (ret UpdateGetIdRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setUpdateGetIdAttributeType(arg *UpdateGetIdAttributeType, val UpdateGetIdRetType) {
	*arg = &val
}

/*
	types and functions for installedUpdates
*/

// isInteger
type UpdateGetInstalledUpdatesAttributeType = *int64
type UpdateGetInstalledUpdatesArgType = int64
type UpdateGetInstalledUpdatesRetType = int64

func getUpdateGetInstalledUpdatesAttributeTypeOk(arg UpdateGetInstalledUpdatesAttributeType) (ret UpdateGetInstalledUpdatesRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setUpdateGetInstalledUpdatesAttributeType(arg *UpdateGetInstalledUpdatesAttributeType, val UpdateGetInstalledUpdatesRetType) {
	*arg = &val
}

/*
	types and functions for startDate
*/

// isNotNullableString
type UpdateGetStartDateAttributeType = *string

func getUpdateGetStartDateAttributeTypeOk(arg UpdateGetStartDateAttributeType) (ret UpdateGetStartDateRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setUpdateGetStartDateAttributeType(arg *UpdateGetStartDateAttributeType, val UpdateGetStartDateRetType) {
	*arg = &val
}

type UpdateGetStartDateArgType = string
type UpdateGetStartDateRetType = string

/*
	types and functions for status
*/

// isNotNullableString
type UpdateGetStatusAttributeType = *string

func getUpdateGetStatusAttributeTypeOk(arg UpdateGetStatusAttributeType) (ret UpdateGetStatusRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setUpdateGetStatusAttributeType(arg *UpdateGetStatusAttributeType, val UpdateGetStatusRetType) {
	*arg = &val
}

type UpdateGetStatusArgType = string
type UpdateGetStatusRetType = string

// Update struct for Update
type Update struct {
	EndDate    UpdateGetEndDateAttributeType    `json:"endDate,omitempty"`
	FailReason UpdateGetFailReasonAttributeType `json:"failReason,omitempty"`
	// Can be cast to int32 without loss of precision.
	FailedUpdates UpdateGetFailedUpdatesAttributeType `json:"failedUpdates,omitempty"`
	// Can be cast to int32 without loss of precision.
	// REQUIRED
	Id UpdateGetIdAttributeType `json:"id"`
	// Can be cast to int32 without loss of precision.
	InstalledUpdates UpdateGetInstalledUpdatesAttributeType `json:"installedUpdates,omitempty"`
	// REQUIRED
	StartDate UpdateGetStartDateAttributeType `json:"startDate"`
	// REQUIRED
	Status UpdateGetStatusAttributeType `json:"status"`
}

type _Update Update

// NewUpdate instantiates a new Update object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdate(id UpdateGetIdArgType, startDate UpdateGetStartDateArgType, status UpdateGetStatusArgType) *Update {
	this := Update{}
	setUpdateGetIdAttributeType(&this.Id, id)
	setUpdateGetStartDateAttributeType(&this.StartDate, startDate)
	setUpdateGetStatusAttributeType(&this.Status, status)
	return &this
}

// NewUpdateWithDefaults instantiates a new Update object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateWithDefaults() *Update {
	this := Update{}
	return &this
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *Update) GetEndDate() (res UpdateGetEndDateRetType) {
	res, _ = o.GetEndDateOk()
	return
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Update) GetEndDateOk() (ret UpdateGetEndDateRetType, ok bool) {
	return getUpdateGetEndDateAttributeTypeOk(o.EndDate)
}

// HasEndDate returns a boolean if a field has been set.
func (o *Update) HasEndDate() bool {
	_, ok := o.GetEndDateOk()
	return ok
}

// SetEndDate gets a reference to the given string and assigns it to the EndDate field.
func (o *Update) SetEndDate(v UpdateGetEndDateRetType) {
	setUpdateGetEndDateAttributeType(&o.EndDate, v)
}

// GetFailReason returns the FailReason field value if set, zero value otherwise.
func (o *Update) GetFailReason() (res UpdateGetFailReasonRetType) {
	res, _ = o.GetFailReasonOk()
	return
}

// GetFailReasonOk returns a tuple with the FailReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Update) GetFailReasonOk() (ret UpdateGetFailReasonRetType, ok bool) {
	return getUpdateGetFailReasonAttributeTypeOk(o.FailReason)
}

// HasFailReason returns a boolean if a field has been set.
func (o *Update) HasFailReason() bool {
	_, ok := o.GetFailReasonOk()
	return ok
}

// SetFailReason gets a reference to the given string and assigns it to the FailReason field.
func (o *Update) SetFailReason(v UpdateGetFailReasonRetType) {
	setUpdateGetFailReasonAttributeType(&o.FailReason, v)
}

// GetFailedUpdates returns the FailedUpdates field value if set, zero value otherwise.
func (o *Update) GetFailedUpdates() (res UpdateGetFailedUpdatesRetType) {
	res, _ = o.GetFailedUpdatesOk()
	return
}

// GetFailedUpdatesOk returns a tuple with the FailedUpdates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Update) GetFailedUpdatesOk() (ret UpdateGetFailedUpdatesRetType, ok bool) {
	return getUpdateGetFailedUpdatesAttributeTypeOk(o.FailedUpdates)
}

// HasFailedUpdates returns a boolean if a field has been set.
func (o *Update) HasFailedUpdates() bool {
	_, ok := o.GetFailedUpdatesOk()
	return ok
}

// SetFailedUpdates gets a reference to the given int64 and assigns it to the FailedUpdates field.
func (o *Update) SetFailedUpdates(v UpdateGetFailedUpdatesRetType) {
	setUpdateGetFailedUpdatesAttributeType(&o.FailedUpdates, v)
}

// GetId returns the Id field value
func (o *Update) GetId() (ret UpdateGetIdRetType) {
	ret, _ = o.GetIdOk()
	return ret
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Update) GetIdOk() (ret UpdateGetIdRetType, ok bool) {
	return getUpdateGetIdAttributeTypeOk(o.Id)
}

// SetId sets field value
func (o *Update) SetId(v UpdateGetIdRetType) {
	setUpdateGetIdAttributeType(&o.Id, v)
}

// GetInstalledUpdates returns the InstalledUpdates field value if set, zero value otherwise.
func (o *Update) GetInstalledUpdates() (res UpdateGetInstalledUpdatesRetType) {
	res, _ = o.GetInstalledUpdatesOk()
	return
}

// GetInstalledUpdatesOk returns a tuple with the InstalledUpdates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Update) GetInstalledUpdatesOk() (ret UpdateGetInstalledUpdatesRetType, ok bool) {
	return getUpdateGetInstalledUpdatesAttributeTypeOk(o.InstalledUpdates)
}

// HasInstalledUpdates returns a boolean if a field has been set.
func (o *Update) HasInstalledUpdates() bool {
	_, ok := o.GetInstalledUpdatesOk()
	return ok
}

// SetInstalledUpdates gets a reference to the given int64 and assigns it to the InstalledUpdates field.
func (o *Update) SetInstalledUpdates(v UpdateGetInstalledUpdatesRetType) {
	setUpdateGetInstalledUpdatesAttributeType(&o.InstalledUpdates, v)
}

// GetStartDate returns the StartDate field value
func (o *Update) GetStartDate() (ret UpdateGetStartDateRetType) {
	ret, _ = o.GetStartDateOk()
	return ret
}

// GetStartDateOk returns a tuple with the StartDate field value
// and a boolean to check if the value has been set.
func (o *Update) GetStartDateOk() (ret UpdateGetStartDateRetType, ok bool) {
	return getUpdateGetStartDateAttributeTypeOk(o.StartDate)
}

// SetStartDate sets field value
func (o *Update) SetStartDate(v UpdateGetStartDateRetType) {
	setUpdateGetStartDateAttributeType(&o.StartDate, v)
}

// GetStatus returns the Status field value
func (o *Update) GetStatus() (ret UpdateGetStatusRetType) {
	ret, _ = o.GetStatusOk()
	return ret
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *Update) GetStatusOk() (ret UpdateGetStatusRetType, ok bool) {
	return getUpdateGetStatusAttributeTypeOk(o.Status)
}

// SetStatus sets field value
func (o *Update) SetStatus(v UpdateGetStatusRetType) {
	setUpdateGetStatusAttributeType(&o.Status, v)
}

func (o Update) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getUpdateGetEndDateAttributeTypeOk(o.EndDate); ok {
		toSerialize["EndDate"] = val
	}
	if val, ok := getUpdateGetFailReasonAttributeTypeOk(o.FailReason); ok {
		toSerialize["FailReason"] = val
	}
	if val, ok := getUpdateGetFailedUpdatesAttributeTypeOk(o.FailedUpdates); ok {
		toSerialize["FailedUpdates"] = val
	}
	if val, ok := getUpdateGetIdAttributeTypeOk(o.Id); ok {
		toSerialize["Id"] = val
	}
	if val, ok := getUpdateGetInstalledUpdatesAttributeTypeOk(o.InstalledUpdates); ok {
		toSerialize["InstalledUpdates"] = val
	}
	if val, ok := getUpdateGetStartDateAttributeTypeOk(o.StartDate); ok {
		toSerialize["StartDate"] = val
	}
	if val, ok := getUpdateGetStatusAttributeTypeOk(o.Status); ok {
		toSerialize["Status"] = val
	}
	return toSerialize, nil
}

type NullableUpdate struct {
	value *Update
	isSet bool
}

func (v NullableUpdate) Get() *Update {
	return v.value
}

func (v *NullableUpdate) Set(val *Update) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdate(val *Update) *NullableUpdate {
	return &NullableUpdate{value: val, isSet: true}
}

func (v NullableUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
