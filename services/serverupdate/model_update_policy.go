/*
STACKIT Server Update Management API

API endpoints for Server Update Operations on STACKIT Servers.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package serverupdate

import (
	"encoding/json"
)

// checks if the UpdatePolicy type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdatePolicy{}

/*
	types and functions for default
*/

// isBoolean
type UpdatePolicygetDefaultAttributeType = *bool
type UpdatePolicygetDefaultArgType = bool
type UpdatePolicygetDefaultRetType = bool

func getUpdatePolicygetDefaultAttributeTypeOk(arg UpdatePolicygetDefaultAttributeType) (ret UpdatePolicygetDefaultRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setUpdatePolicygetDefaultAttributeType(arg *UpdatePolicygetDefaultAttributeType, val UpdatePolicygetDefaultRetType) {
	*arg = &val
}

/*
	types and functions for description
*/

// isNotNullableString
type UpdatePolicyGetDescriptionAttributeType = *string

func getUpdatePolicyGetDescriptionAttributeTypeOk(arg UpdatePolicyGetDescriptionAttributeType) (ret UpdatePolicyGetDescriptionRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setUpdatePolicyGetDescriptionAttributeType(arg *UpdatePolicyGetDescriptionAttributeType, val UpdatePolicyGetDescriptionRetType) {
	*arg = &val
}

type UpdatePolicyGetDescriptionArgType = string
type UpdatePolicyGetDescriptionRetType = string

/*
	types and functions for enabled
*/

// isBoolean
type UpdatePolicygetEnabledAttributeType = *bool
type UpdatePolicygetEnabledArgType = bool
type UpdatePolicygetEnabledRetType = bool

func getUpdatePolicygetEnabledAttributeTypeOk(arg UpdatePolicygetEnabledAttributeType) (ret UpdatePolicygetEnabledRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setUpdatePolicygetEnabledAttributeType(arg *UpdatePolicygetEnabledAttributeType, val UpdatePolicygetEnabledRetType) {
	*arg = &val
}

/*
	types and functions for id
*/

// isNotNullableString
type UpdatePolicyGetIdAttributeType = *string

func getUpdatePolicyGetIdAttributeTypeOk(arg UpdatePolicyGetIdAttributeType) (ret UpdatePolicyGetIdRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setUpdatePolicyGetIdAttributeType(arg *UpdatePolicyGetIdAttributeType, val UpdatePolicyGetIdRetType) {
	*arg = &val
}

type UpdatePolicyGetIdArgType = string
type UpdatePolicyGetIdRetType = string

/*
	types and functions for maintenanceWindow
*/

// isInteger
type UpdatePolicyGetMaintenanceWindowAttributeType = *int64
type UpdatePolicyGetMaintenanceWindowArgType = int64
type UpdatePolicyGetMaintenanceWindowRetType = int64

func getUpdatePolicyGetMaintenanceWindowAttributeTypeOk(arg UpdatePolicyGetMaintenanceWindowAttributeType) (ret UpdatePolicyGetMaintenanceWindowRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setUpdatePolicyGetMaintenanceWindowAttributeType(arg *UpdatePolicyGetMaintenanceWindowAttributeType, val UpdatePolicyGetMaintenanceWindowRetType) {
	*arg = &val
}

/*
	types and functions for name
*/

// isNotNullableString
type UpdatePolicyGetNameAttributeType = *string

func getUpdatePolicyGetNameAttributeTypeOk(arg UpdatePolicyGetNameAttributeType) (ret UpdatePolicyGetNameRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setUpdatePolicyGetNameAttributeType(arg *UpdatePolicyGetNameAttributeType, val UpdatePolicyGetNameRetType) {
	*arg = &val
}

type UpdatePolicyGetNameArgType = string
type UpdatePolicyGetNameRetType = string

/*
	types and functions for rrule
*/

// isNotNullableString
type UpdatePolicyGetRruleAttributeType = *string

func getUpdatePolicyGetRruleAttributeTypeOk(arg UpdatePolicyGetRruleAttributeType) (ret UpdatePolicyGetRruleRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setUpdatePolicyGetRruleAttributeType(arg *UpdatePolicyGetRruleAttributeType, val UpdatePolicyGetRruleRetType) {
	*arg = &val
}

type UpdatePolicyGetRruleArgType = string
type UpdatePolicyGetRruleRetType = string

// UpdatePolicy struct for UpdatePolicy
type UpdatePolicy struct {
	Default     UpdatePolicygetDefaultAttributeType     `json:"default,omitempty"`
	Description UpdatePolicyGetDescriptionAttributeType `json:"description,omitempty"`
	Enabled     UpdatePolicygetEnabledAttributeType     `json:"enabled,omitempty"`
	Id          UpdatePolicyGetIdAttributeType          `json:"id,omitempty"`
	// Can be cast to int32 without loss of precision.
	MaintenanceWindow UpdatePolicyGetMaintenanceWindowAttributeType `json:"maintenanceWindow,omitempty"`
	Name              UpdatePolicyGetNameAttributeType              `json:"name,omitempty"`
	Rrule             UpdatePolicyGetRruleAttributeType             `json:"rrule,omitempty"`
}

// NewUpdatePolicy instantiates a new UpdatePolicy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdatePolicy() *UpdatePolicy {
	this := UpdatePolicy{}
	return &this
}

// NewUpdatePolicyWithDefaults instantiates a new UpdatePolicy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdatePolicyWithDefaults() *UpdatePolicy {
	this := UpdatePolicy{}
	return &this
}

// GetDefault returns the Default field value if set, zero value otherwise.
func (o *UpdatePolicy) GetDefault() (res UpdatePolicygetDefaultRetType) {
	res, _ = o.GetDefaultOk()
	return
}

// GetDefaultOk returns a tuple with the Default field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdatePolicy) GetDefaultOk() (ret UpdatePolicygetDefaultRetType, ok bool) {
	return getUpdatePolicygetDefaultAttributeTypeOk(o.Default)
}

// HasDefault returns a boolean if a field has been set.
func (o *UpdatePolicy) HasDefault() bool {
	_, ok := o.GetDefaultOk()
	return ok
}

// SetDefault gets a reference to the given bool and assigns it to the Default field.
func (o *UpdatePolicy) SetDefault(v UpdatePolicygetDefaultRetType) {
	setUpdatePolicygetDefaultAttributeType(&o.Default, v)
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *UpdatePolicy) GetDescription() (res UpdatePolicyGetDescriptionRetType) {
	res, _ = o.GetDescriptionOk()
	return
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdatePolicy) GetDescriptionOk() (ret UpdatePolicyGetDescriptionRetType, ok bool) {
	return getUpdatePolicyGetDescriptionAttributeTypeOk(o.Description)
}

// HasDescription returns a boolean if a field has been set.
func (o *UpdatePolicy) HasDescription() bool {
	_, ok := o.GetDescriptionOk()
	return ok
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *UpdatePolicy) SetDescription(v UpdatePolicyGetDescriptionRetType) {
	setUpdatePolicyGetDescriptionAttributeType(&o.Description, v)
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *UpdatePolicy) GetEnabled() (res UpdatePolicygetEnabledRetType) {
	res, _ = o.GetEnabledOk()
	return
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdatePolicy) GetEnabledOk() (ret UpdatePolicygetEnabledRetType, ok bool) {
	return getUpdatePolicygetEnabledAttributeTypeOk(o.Enabled)
}

// HasEnabled returns a boolean if a field has been set.
func (o *UpdatePolicy) HasEnabled() bool {
	_, ok := o.GetEnabledOk()
	return ok
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *UpdatePolicy) SetEnabled(v UpdatePolicygetEnabledRetType) {
	setUpdatePolicygetEnabledAttributeType(&o.Enabled, v)
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *UpdatePolicy) GetId() (res UpdatePolicyGetIdRetType) {
	res, _ = o.GetIdOk()
	return
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdatePolicy) GetIdOk() (ret UpdatePolicyGetIdRetType, ok bool) {
	return getUpdatePolicyGetIdAttributeTypeOk(o.Id)
}

// HasId returns a boolean if a field has been set.
func (o *UpdatePolicy) HasId() bool {
	_, ok := o.GetIdOk()
	return ok
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *UpdatePolicy) SetId(v UpdatePolicyGetIdRetType) {
	setUpdatePolicyGetIdAttributeType(&o.Id, v)
}

// GetMaintenanceWindow returns the MaintenanceWindow field value if set, zero value otherwise.
func (o *UpdatePolicy) GetMaintenanceWindow() (res UpdatePolicyGetMaintenanceWindowRetType) {
	res, _ = o.GetMaintenanceWindowOk()
	return
}

// GetMaintenanceWindowOk returns a tuple with the MaintenanceWindow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdatePolicy) GetMaintenanceWindowOk() (ret UpdatePolicyGetMaintenanceWindowRetType, ok bool) {
	return getUpdatePolicyGetMaintenanceWindowAttributeTypeOk(o.MaintenanceWindow)
}

// HasMaintenanceWindow returns a boolean if a field has been set.
func (o *UpdatePolicy) HasMaintenanceWindow() bool {
	_, ok := o.GetMaintenanceWindowOk()
	return ok
}

// SetMaintenanceWindow gets a reference to the given int64 and assigns it to the MaintenanceWindow field.
func (o *UpdatePolicy) SetMaintenanceWindow(v UpdatePolicyGetMaintenanceWindowRetType) {
	setUpdatePolicyGetMaintenanceWindowAttributeType(&o.MaintenanceWindow, v)
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdatePolicy) GetName() (res UpdatePolicyGetNameRetType) {
	res, _ = o.GetNameOk()
	return
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdatePolicy) GetNameOk() (ret UpdatePolicyGetNameRetType, ok bool) {
	return getUpdatePolicyGetNameAttributeTypeOk(o.Name)
}

// HasName returns a boolean if a field has been set.
func (o *UpdatePolicy) HasName() bool {
	_, ok := o.GetNameOk()
	return ok
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdatePolicy) SetName(v UpdatePolicyGetNameRetType) {
	setUpdatePolicyGetNameAttributeType(&o.Name, v)
}

// GetRrule returns the Rrule field value if set, zero value otherwise.
func (o *UpdatePolicy) GetRrule() (res UpdatePolicyGetRruleRetType) {
	res, _ = o.GetRruleOk()
	return
}

// GetRruleOk returns a tuple with the Rrule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdatePolicy) GetRruleOk() (ret UpdatePolicyGetRruleRetType, ok bool) {
	return getUpdatePolicyGetRruleAttributeTypeOk(o.Rrule)
}

// HasRrule returns a boolean if a field has been set.
func (o *UpdatePolicy) HasRrule() bool {
	_, ok := o.GetRruleOk()
	return ok
}

// SetRrule gets a reference to the given string and assigns it to the Rrule field.
func (o *UpdatePolicy) SetRrule(v UpdatePolicyGetRruleRetType) {
	setUpdatePolicyGetRruleAttributeType(&o.Rrule, v)
}

func (o UpdatePolicy) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getUpdatePolicygetDefaultAttributeTypeOk(o.Default); ok {
		toSerialize["Default"] = val
	}
	if val, ok := getUpdatePolicyGetDescriptionAttributeTypeOk(o.Description); ok {
		toSerialize["Description"] = val
	}
	if val, ok := getUpdatePolicygetEnabledAttributeTypeOk(o.Enabled); ok {
		toSerialize["Enabled"] = val
	}
	if val, ok := getUpdatePolicyGetIdAttributeTypeOk(o.Id); ok {
		toSerialize["Id"] = val
	}
	if val, ok := getUpdatePolicyGetMaintenanceWindowAttributeTypeOk(o.MaintenanceWindow); ok {
		toSerialize["MaintenanceWindow"] = val
	}
	if val, ok := getUpdatePolicyGetNameAttributeTypeOk(o.Name); ok {
		toSerialize["Name"] = val
	}
	if val, ok := getUpdatePolicyGetRruleAttributeTypeOk(o.Rrule); ok {
		toSerialize["Rrule"] = val
	}
	return toSerialize, nil
}

type NullableUpdatePolicy struct {
	value *UpdatePolicy
	isSet bool
}

func (v NullableUpdatePolicy) Get() *UpdatePolicy {
	return v.value
}

func (v *NullableUpdatePolicy) Set(val *UpdatePolicy) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdatePolicy) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdatePolicy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdatePolicy(val *UpdatePolicy) *NullableUpdatePolicy {
	return &NullableUpdatePolicy{value: val, isSet: true}
}

func (v NullableUpdatePolicy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdatePolicy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
