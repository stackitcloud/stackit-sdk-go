/*
STACKIT Server Update Management API

API endpoints for Server Update Operations on STACKIT Servers.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package serverupdate

import (
	"encoding/json"
)

// checks if the GetUpdatePoliciesResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetUpdatePoliciesResponse{}

/*
	types and functions for items
*/

// isArray
type GetUpdatePoliciesResponseGetItemsAttributeType = *[]UpdatePolicy
type GetUpdatePoliciesResponseGetItemsArgType = []UpdatePolicy
type GetUpdatePoliciesResponseGetItemsRetType = []UpdatePolicy

func getGetUpdatePoliciesResponseGetItemsAttributeTypeOk(arg GetUpdatePoliciesResponseGetItemsAttributeType) (ret GetUpdatePoliciesResponseGetItemsRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setGetUpdatePoliciesResponseGetItemsAttributeType(arg *GetUpdatePoliciesResponseGetItemsAttributeType, val GetUpdatePoliciesResponseGetItemsRetType) {
	*arg = &val
}

// GetUpdatePoliciesResponse struct for GetUpdatePoliciesResponse
type GetUpdatePoliciesResponse struct {
	Items GetUpdatePoliciesResponseGetItemsAttributeType `json:"items,omitempty"`
}

// NewGetUpdatePoliciesResponse instantiates a new GetUpdatePoliciesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetUpdatePoliciesResponse() *GetUpdatePoliciesResponse {
	this := GetUpdatePoliciesResponse{}
	return &this
}

// NewGetUpdatePoliciesResponseWithDefaults instantiates a new GetUpdatePoliciesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetUpdatePoliciesResponseWithDefaults() *GetUpdatePoliciesResponse {
	this := GetUpdatePoliciesResponse{}
	return &this
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *GetUpdatePoliciesResponse) GetItems() (res GetUpdatePoliciesResponseGetItemsRetType) {
	res, _ = o.GetItemsOk()
	return
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetUpdatePoliciesResponse) GetItemsOk() (ret GetUpdatePoliciesResponseGetItemsRetType, ok bool) {
	return getGetUpdatePoliciesResponseGetItemsAttributeTypeOk(o.Items)
}

// HasItems returns a boolean if a field has been set.
func (o *GetUpdatePoliciesResponse) HasItems() bool {
	_, ok := o.GetItemsOk()
	return ok
}

// SetItems gets a reference to the given []UpdatePolicy and assigns it to the Items field.
func (o *GetUpdatePoliciesResponse) SetItems(v GetUpdatePoliciesResponseGetItemsRetType) {
	setGetUpdatePoliciesResponseGetItemsAttributeType(&o.Items, v)
}

func (o GetUpdatePoliciesResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getGetUpdatePoliciesResponseGetItemsAttributeTypeOk(o.Items); ok {
		toSerialize["Items"] = val
	}
	return toSerialize, nil
}

type NullableGetUpdatePoliciesResponse struct {
	value *GetUpdatePoliciesResponse
	isSet bool
}

func (v NullableGetUpdatePoliciesResponse) Get() *GetUpdatePoliciesResponse {
	return v.value
}

func (v *NullableGetUpdatePoliciesResponse) Set(val *GetUpdatePoliciesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetUpdatePoliciesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetUpdatePoliciesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetUpdatePoliciesResponse(val *GetUpdatePoliciesResponse) *NullableGetUpdatePoliciesResponse {
	return &NullableGetUpdatePoliciesResponse{value: val, isSet: true}
}

func (v NullableGetUpdatePoliciesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetUpdatePoliciesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
