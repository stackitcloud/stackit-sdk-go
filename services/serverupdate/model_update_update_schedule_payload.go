/*
STACKIT Server Update Management API

API endpoints for Server Update Operations on STACKIT Servers.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package serverupdate

import (
	"encoding/json"
)

// checks if the UpdateUpdateSchedulePayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateUpdateSchedulePayload{}

// UpdateUpdateSchedulePayload struct for UpdateUpdateSchedulePayload
type UpdateUpdateSchedulePayload struct {
	// REQUIRED
	Enabled *bool `json:"enabled"`
	// Can be cast to int32 without loss of precision.
	Id *int64 `json:"id,omitempty"`
	// Can be cast to int32 without loss of precision.
	// REQUIRED
	MaintenanceWindow *int64 `json:"maintenanceWindow"`
	// REQUIRED
	Name *string `json:"name"`
	// REQUIRED
	Rrule *string `json:"rrule"`
}

type _UpdateUpdateSchedulePayload UpdateUpdateSchedulePayload

// NewUpdateUpdateSchedulePayload instantiates a new UpdateUpdateSchedulePayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateUpdateSchedulePayload(enabled *bool, maintenanceWindow *int64, name *string, rrule *string) *UpdateUpdateSchedulePayload {
	this := UpdateUpdateSchedulePayload{}
	this.Enabled = enabled
	this.MaintenanceWindow = maintenanceWindow
	this.Name = name
	this.Rrule = rrule
	return &this
}

// NewUpdateUpdateSchedulePayloadWithDefaults instantiates a new UpdateUpdateSchedulePayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateUpdateSchedulePayloadWithDefaults() *UpdateUpdateSchedulePayload {
	this := UpdateUpdateSchedulePayload{}
	return &this
}

// GetEnabled returns the Enabled field value
func (o *UpdateUpdateSchedulePayload) GetEnabled() *bool {
	if o == nil {
		var ret *bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *UpdateUpdateSchedulePayload) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Enabled, true
}

// SetEnabled sets field value
func (o *UpdateUpdateSchedulePayload) SetEnabled(v *bool) {
	o.Enabled = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *UpdateUpdateSchedulePayload) GetId() *int64 {
	if o == nil || IsNil(o.Id) {
		var ret *int64
		return ret
	}
	return o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUpdateSchedulePayload) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *UpdateUpdateSchedulePayload) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *UpdateUpdateSchedulePayload) SetId(v *int64) {
	o.Id = v
}

// GetMaintenanceWindow returns the MaintenanceWindow field value
func (o *UpdateUpdateSchedulePayload) GetMaintenanceWindow() *int64 {
	if o == nil {
		var ret *int64
		return ret
	}

	return o.MaintenanceWindow
}

// GetMaintenanceWindowOk returns a tuple with the MaintenanceWindow field value
// and a boolean to check if the value has been set.
func (o *UpdateUpdateSchedulePayload) GetMaintenanceWindowOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaintenanceWindow, true
}

// SetMaintenanceWindow sets field value
func (o *UpdateUpdateSchedulePayload) SetMaintenanceWindow(v *int64) {
	o.MaintenanceWindow = v
}

// GetName returns the Name field value
func (o *UpdateUpdateSchedulePayload) GetName() *string {
	if o == nil {
		var ret *string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *UpdateUpdateSchedulePayload) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name, true
}

// SetName sets field value
func (o *UpdateUpdateSchedulePayload) SetName(v *string) {
	o.Name = v
}

// GetRrule returns the Rrule field value
func (o *UpdateUpdateSchedulePayload) GetRrule() *string {
	if o == nil {
		var ret *string
		return ret
	}

	return o.Rrule
}

// GetRruleOk returns a tuple with the Rrule field value
// and a boolean to check if the value has been set.
func (o *UpdateUpdateSchedulePayload) GetRruleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Rrule, true
}

// SetRrule sets field value
func (o *UpdateUpdateSchedulePayload) SetRrule(v *string) {
	o.Rrule = v
}

func (o UpdateUpdateSchedulePayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["enabled"] = o.Enabled
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["maintenanceWindow"] = o.MaintenanceWindow
	toSerialize["name"] = o.Name
	toSerialize["rrule"] = o.Rrule
	return toSerialize, nil
}

type NullableUpdateUpdateSchedulePayload struct {
	value *UpdateUpdateSchedulePayload
	isSet bool
}

func (v NullableUpdateUpdateSchedulePayload) Get() *UpdateUpdateSchedulePayload {
	return v.value
}

func (v *NullableUpdateUpdateSchedulePayload) Set(val *UpdateUpdateSchedulePayload) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateUpdateSchedulePayload) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateUpdateSchedulePayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateUpdateSchedulePayload(val *UpdateUpdateSchedulePayload) *NullableUpdateUpdateSchedulePayload {
	return &NullableUpdateUpdateSchedulePayload{value: val, isSet: true}
}

func (v NullableUpdateUpdateSchedulePayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateUpdateSchedulePayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
