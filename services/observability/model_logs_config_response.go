/*
STACKIT Observability API

API endpoints for Observability on STACKIT

API version: 1.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package observability

import (
	"encoding/json"
)

// checks if the LogsConfigResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LogsConfigResponse{}

/*
	types and functions for config
*/

// isModel
type LogsConfigResponseGetConfigAttributeType = *LogsConfig
type LogsConfigResponseGetConfigArgType = LogsConfig
type LogsConfigResponseGetConfigRetType = LogsConfig

func getLogsConfigResponseGetConfigAttributeTypeOk(arg LogsConfigResponseGetConfigAttributeType) (ret LogsConfigResponseGetConfigRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setLogsConfigResponseGetConfigAttributeType(arg *LogsConfigResponseGetConfigAttributeType, val LogsConfigResponseGetConfigRetType) {
	*arg = &val
}

/*
	types and functions for message
*/

// isNotNullableString
type LogsConfigResponseGetMessageAttributeType = *string

func getLogsConfigResponseGetMessageAttributeTypeOk(arg LogsConfigResponseGetMessageAttributeType) (ret LogsConfigResponseGetMessageRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setLogsConfigResponseGetMessageAttributeType(arg *LogsConfigResponseGetMessageAttributeType, val LogsConfigResponseGetMessageRetType) {
	*arg = &val
}

type LogsConfigResponseGetMessageArgType = string
type LogsConfigResponseGetMessageRetType = string

// LogsConfigResponse struct for LogsConfigResponse
type LogsConfigResponse struct {
	// REQUIRED
	Config LogsConfigResponseGetConfigAttributeType `json:"config" required:"true"`
	// REQUIRED
	Message LogsConfigResponseGetMessageAttributeType `json:"message" required:"true"`
}

type _LogsConfigResponse LogsConfigResponse

// NewLogsConfigResponse instantiates a new LogsConfigResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogsConfigResponse(config LogsConfigResponseGetConfigArgType, message LogsConfigResponseGetMessageArgType) *LogsConfigResponse {
	this := LogsConfigResponse{}
	setLogsConfigResponseGetConfigAttributeType(&this.Config, config)
	setLogsConfigResponseGetMessageAttributeType(&this.Message, message)
	return &this
}

// NewLogsConfigResponseWithDefaults instantiates a new LogsConfigResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogsConfigResponseWithDefaults() *LogsConfigResponse {
	this := LogsConfigResponse{}
	return &this
}

// GetConfig returns the Config field value
func (o *LogsConfigResponse) GetConfig() (ret LogsConfigResponseGetConfigRetType) {
	ret, _ = o.GetConfigOk()
	return ret
}

// GetConfigOk returns a tuple with the Config field value
// and a boolean to check if the value has been set.
func (o *LogsConfigResponse) GetConfigOk() (ret LogsConfigResponseGetConfigRetType, ok bool) {
	return getLogsConfigResponseGetConfigAttributeTypeOk(o.Config)
}

// SetConfig sets field value
func (o *LogsConfigResponse) SetConfig(v LogsConfigResponseGetConfigRetType) {
	setLogsConfigResponseGetConfigAttributeType(&o.Config, v)
}

// GetMessage returns the Message field value
func (o *LogsConfigResponse) GetMessage() (ret LogsConfigResponseGetMessageRetType) {
	ret, _ = o.GetMessageOk()
	return ret
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *LogsConfigResponse) GetMessageOk() (ret LogsConfigResponseGetMessageRetType, ok bool) {
	return getLogsConfigResponseGetMessageAttributeTypeOk(o.Message)
}

// SetMessage sets field value
func (o *LogsConfigResponse) SetMessage(v LogsConfigResponseGetMessageRetType) {
	setLogsConfigResponseGetMessageAttributeType(&o.Message, v)
}

func (o LogsConfigResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getLogsConfigResponseGetConfigAttributeTypeOk(o.Config); ok {
		toSerialize["Config"] = val
	}
	if val, ok := getLogsConfigResponseGetMessageAttributeTypeOk(o.Message); ok {
		toSerialize["Message"] = val
	}
	return toSerialize, nil
}

type NullableLogsConfigResponse struct {
	value *LogsConfigResponse
	isSet bool
}

func (v NullableLogsConfigResponse) Get() *LogsConfigResponse {
	return v.value
}

func (v *NullableLogsConfigResponse) Set(val *LogsConfigResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableLogsConfigResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableLogsConfigResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogsConfigResponse(val *LogsConfigResponse) *NullableLogsConfigResponse {
	return &NullableLogsConfigResponse{value: val, isSet: true}
}

func (v NullableLogsConfigResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogsConfigResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
