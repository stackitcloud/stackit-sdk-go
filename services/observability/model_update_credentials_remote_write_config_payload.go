/*
STACKIT Observability API

API endpoints for Observability on STACKIT

API version: 1.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package observability

import (
	"encoding/json"
)

// checks if the UpdateCredentialsRemoteWriteConfigPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateCredentialsRemoteWriteConfigPayload{}

/*
	types and functions for maxLimit
*/

// isNumber
type UpdateCredentialsRemoteWriteConfigPayloadGetMaxLimitAttributeType = *float64
type UpdateCredentialsRemoteWriteConfigPayloadGetMaxLimitArgType = float64
type UpdateCredentialsRemoteWriteConfigPayloadGetMaxLimitRetType = float64

func getUpdateCredentialsRemoteWriteConfigPayloadGetMaxLimitAttributeTypeOk(arg UpdateCredentialsRemoteWriteConfigPayloadGetMaxLimitAttributeType) (ret UpdateCredentialsRemoteWriteConfigPayloadGetMaxLimitRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setUpdateCredentialsRemoteWriteConfigPayloadGetMaxLimitAttributeType(arg *UpdateCredentialsRemoteWriteConfigPayloadGetMaxLimitAttributeType, val UpdateCredentialsRemoteWriteConfigPayloadGetMaxLimitRetType) {
	*arg = &val
}

// UpdateCredentialsRemoteWriteConfigPayload Remote write limit config.
type UpdateCredentialsRemoteWriteConfigPayload struct {
	// Remote write metric sample limit for credential to push in a single minute.
	MaxLimit UpdateCredentialsRemoteWriteConfigPayloadGetMaxLimitAttributeType `json:"maxLimit,omitempty"`
}

// NewUpdateCredentialsRemoteWriteConfigPayload instantiates a new UpdateCredentialsRemoteWriteConfigPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateCredentialsRemoteWriteConfigPayload() *UpdateCredentialsRemoteWriteConfigPayload {
	this := UpdateCredentialsRemoteWriteConfigPayload{}
	return &this
}

// NewUpdateCredentialsRemoteWriteConfigPayloadWithDefaults instantiates a new UpdateCredentialsRemoteWriteConfigPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateCredentialsRemoteWriteConfigPayloadWithDefaults() *UpdateCredentialsRemoteWriteConfigPayload {
	this := UpdateCredentialsRemoteWriteConfigPayload{}
	return &this
}

// GetMaxLimit returns the MaxLimit field value if set, zero value otherwise.
func (o *UpdateCredentialsRemoteWriteConfigPayload) GetMaxLimit() (res UpdateCredentialsRemoteWriteConfigPayloadGetMaxLimitRetType) {
	res, _ = o.GetMaxLimitOk()
	return
}

// GetMaxLimitOk returns a tuple with the MaxLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCredentialsRemoteWriteConfigPayload) GetMaxLimitOk() (ret UpdateCredentialsRemoteWriteConfigPayloadGetMaxLimitRetType, ok bool) {
	return getUpdateCredentialsRemoteWriteConfigPayloadGetMaxLimitAttributeTypeOk(o.MaxLimit)
}

// HasMaxLimit returns a boolean if a field has been set.
func (o *UpdateCredentialsRemoteWriteConfigPayload) HasMaxLimit() bool {
	_, ok := o.GetMaxLimitOk()
	return ok
}

// SetMaxLimit gets a reference to the given float64 and assigns it to the MaxLimit field.
func (o *UpdateCredentialsRemoteWriteConfigPayload) SetMaxLimit(v UpdateCredentialsRemoteWriteConfigPayloadGetMaxLimitRetType) {
	setUpdateCredentialsRemoteWriteConfigPayloadGetMaxLimitAttributeType(&o.MaxLimit, v)
}

func (o UpdateCredentialsRemoteWriteConfigPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getUpdateCredentialsRemoteWriteConfigPayloadGetMaxLimitAttributeTypeOk(o.MaxLimit); ok {
		toSerialize["MaxLimit"] = val
	}
	return toSerialize, nil
}

type NullableUpdateCredentialsRemoteWriteConfigPayload struct {
	value *UpdateCredentialsRemoteWriteConfigPayload
	isSet bool
}

func (v NullableUpdateCredentialsRemoteWriteConfigPayload) Get() *UpdateCredentialsRemoteWriteConfigPayload {
	return v.value
}

func (v *NullableUpdateCredentialsRemoteWriteConfigPayload) Set(val *UpdateCredentialsRemoteWriteConfigPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateCredentialsRemoteWriteConfigPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateCredentialsRemoteWriteConfigPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateCredentialsRemoteWriteConfigPayload(val *UpdateCredentialsRemoteWriteConfigPayload) *NullableUpdateCredentialsRemoteWriteConfigPayload {
	return &NullableUpdateCredentialsRemoteWriteConfigPayload{value: val, isSet: true}
}

func (v NullableUpdateCredentialsRemoteWriteConfigPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateCredentialsRemoteWriteConfigPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
