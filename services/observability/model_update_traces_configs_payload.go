/*
STACKIT Observability API

API endpoints for Observability on STACKIT

API version: 1.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package observability

import (
	"encoding/json"
)

// checks if the UpdateTracesConfigsPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateTracesConfigsPayload{}

/*
	types and functions for retention
*/

// isNotNullableString
type UpdateTracesConfigsPayloadGetRetentionAttributeType = *string

func getUpdateTracesConfigsPayloadGetRetentionAttributeTypeOk(arg UpdateTracesConfigsPayloadGetRetentionAttributeType) (ret UpdateTracesConfigsPayloadGetRetentionRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setUpdateTracesConfigsPayloadGetRetentionAttributeType(arg *UpdateTracesConfigsPayloadGetRetentionAttributeType, val UpdateTracesConfigsPayloadGetRetentionRetType) {
	*arg = &val
}

type UpdateTracesConfigsPayloadGetRetentionArgType = string
type UpdateTracesConfigsPayloadGetRetentionRetType = string

// UpdateTracesConfigsPayload struct for UpdateTracesConfigsPayload
type UpdateTracesConfigsPayload struct {
	// How long to keep the traces `Additional Validators:` * Should be a valid time string * Should not be bigger than 30 days
	// REQUIRED
	Retention UpdateTracesConfigsPayloadGetRetentionAttributeType `json:"retention" required:"true"`
}

type _UpdateTracesConfigsPayload UpdateTracesConfigsPayload

// NewUpdateTracesConfigsPayload instantiates a new UpdateTracesConfigsPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateTracesConfigsPayload(retention UpdateTracesConfigsPayloadGetRetentionArgType) *UpdateTracesConfigsPayload {
	this := UpdateTracesConfigsPayload{}
	setUpdateTracesConfigsPayloadGetRetentionAttributeType(&this.Retention, retention)
	return &this
}

// NewUpdateTracesConfigsPayloadWithDefaults instantiates a new UpdateTracesConfigsPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateTracesConfigsPayloadWithDefaults() *UpdateTracesConfigsPayload {
	this := UpdateTracesConfigsPayload{}
	return &this
}

// GetRetention returns the Retention field value
func (o *UpdateTracesConfigsPayload) GetRetention() (ret UpdateTracesConfigsPayloadGetRetentionRetType) {
	ret, _ = o.GetRetentionOk()
	return ret
}

// GetRetentionOk returns a tuple with the Retention field value
// and a boolean to check if the value has been set.
func (o *UpdateTracesConfigsPayload) GetRetentionOk() (ret UpdateTracesConfigsPayloadGetRetentionRetType, ok bool) {
	return getUpdateTracesConfigsPayloadGetRetentionAttributeTypeOk(o.Retention)
}

// SetRetention sets field value
func (o *UpdateTracesConfigsPayload) SetRetention(v UpdateTracesConfigsPayloadGetRetentionRetType) {
	setUpdateTracesConfigsPayloadGetRetentionAttributeType(&o.Retention, v)
}

func (o UpdateTracesConfigsPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getUpdateTracesConfigsPayloadGetRetentionAttributeTypeOk(o.Retention); ok {
		toSerialize["Retention"] = val
	}
	return toSerialize, nil
}

type NullableUpdateTracesConfigsPayload struct {
	value *UpdateTracesConfigsPayload
	isSet bool
}

func (v NullableUpdateTracesConfigsPayload) Get() *UpdateTracesConfigsPayload {
	return v.value
}

func (v *NullableUpdateTracesConfigsPayload) Set(val *UpdateTracesConfigsPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateTracesConfigsPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateTracesConfigsPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateTracesConfigsPayload(val *UpdateTracesConfigsPayload) *NullableUpdateTracesConfigsPayload {
	return &NullableUpdateTracesConfigsPayload{value: val, isSet: true}
}

func (v NullableUpdateTracesConfigsPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateTracesConfigsPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
