/*
STACKIT Observability API

API endpoints for Observability on STACKIT

API version: 1.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package observability

import (
	"encoding/json"
)

// checks if the UpdateInstancePayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateInstancePayload{}

/*
	types and functions for name
*/

// isNotNullableString
type UpdateInstancePayloadGetNameAttributeType = *string

func getUpdateInstancePayloadGetNameAttributeTypeOk(arg UpdateInstancePayloadGetNameAttributeType) (ret UpdateInstancePayloadGetNameRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setUpdateInstancePayloadGetNameAttributeType(arg *UpdateInstancePayloadGetNameAttributeType, val UpdateInstancePayloadGetNameRetType) {
	*arg = &val
}

type UpdateInstancePayloadGetNameArgType = string
type UpdateInstancePayloadGetNameRetType = string

/*
	types and functions for parameter
*/

// isFreeform
type UpdateInstancePayloadGetParameterAttributeType = *map[string]interface{}
type UpdateInstancePayloadGetParameterArgType = map[string]interface{}
type UpdateInstancePayloadGetParameterRetType = map[string]interface{}

func getUpdateInstancePayloadGetParameterAttributeTypeOk(arg UpdateInstancePayloadGetParameterAttributeType) (ret UpdateInstancePayloadGetParameterRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setUpdateInstancePayloadGetParameterAttributeType(arg *UpdateInstancePayloadGetParameterAttributeType, val UpdateInstancePayloadGetParameterRetType) {
	*arg = &val
}

/*
	types and functions for planId
*/

// isNotNullableString
type UpdateInstancePayloadGetPlanIdAttributeType = *string

func getUpdateInstancePayloadGetPlanIdAttributeTypeOk(arg UpdateInstancePayloadGetPlanIdAttributeType) (ret UpdateInstancePayloadGetPlanIdRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setUpdateInstancePayloadGetPlanIdAttributeType(arg *UpdateInstancePayloadGetPlanIdAttributeType, val UpdateInstancePayloadGetPlanIdRetType) {
	*arg = &val
}

type UpdateInstancePayloadGetPlanIdArgType = string
type UpdateInstancePayloadGetPlanIdRetType = string

// UpdateInstancePayload Create update instance body.
type UpdateInstancePayload struct {
	// Name of the service
	Name UpdateInstancePayloadGetNameAttributeType `json:"name,omitempty"`
	// additional parameters
	Parameter UpdateInstancePayloadGetParameterAttributeType `json:"parameter,omitempty"`
	// uuid of the plan to create/update
	// REQUIRED
	PlanId UpdateInstancePayloadGetPlanIdAttributeType `json:"planId"`
}

type _UpdateInstancePayload UpdateInstancePayload

// NewUpdateInstancePayload instantiates a new UpdateInstancePayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateInstancePayload(planId UpdateInstancePayloadGetPlanIdArgType) *UpdateInstancePayload {
	this := UpdateInstancePayload{}
	setUpdateInstancePayloadGetPlanIdAttributeType(&this.PlanId, planId)
	return &this
}

// NewUpdateInstancePayloadWithDefaults instantiates a new UpdateInstancePayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateInstancePayloadWithDefaults() *UpdateInstancePayload {
	this := UpdateInstancePayload{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateInstancePayload) GetName() (res UpdateInstancePayloadGetNameRetType) {
	res, _ = o.GetNameOk()
	return
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInstancePayload) GetNameOk() (ret UpdateInstancePayloadGetNameRetType, ok bool) {
	return getUpdateInstancePayloadGetNameAttributeTypeOk(o.Name)
}

// HasName returns a boolean if a field has been set.
func (o *UpdateInstancePayload) HasName() bool {
	_, ok := o.GetNameOk()
	return ok
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateInstancePayload) SetName(v UpdateInstancePayloadGetNameRetType) {
	setUpdateInstancePayloadGetNameAttributeType(&o.Name, v)
}

// GetParameter returns the Parameter field value if set, zero value otherwise.
func (o *UpdateInstancePayload) GetParameter() (res UpdateInstancePayloadGetParameterRetType) {
	res, _ = o.GetParameterOk()
	return
}

// GetParameterOk returns a tuple with the Parameter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInstancePayload) GetParameterOk() (ret UpdateInstancePayloadGetParameterRetType, ok bool) {
	return getUpdateInstancePayloadGetParameterAttributeTypeOk(o.Parameter)
}

// HasParameter returns a boolean if a field has been set.
func (o *UpdateInstancePayload) HasParameter() bool {
	_, ok := o.GetParameterOk()
	return ok
}

// SetParameter gets a reference to the given map[string]interface{} and assigns it to the Parameter field.
func (o *UpdateInstancePayload) SetParameter(v UpdateInstancePayloadGetParameterRetType) {
	setUpdateInstancePayloadGetParameterAttributeType(&o.Parameter, v)
}

// GetPlanId returns the PlanId field value
func (o *UpdateInstancePayload) GetPlanId() (ret UpdateInstancePayloadGetPlanIdRetType) {
	ret, _ = o.GetPlanIdOk()
	return ret
}

// GetPlanIdOk returns a tuple with the PlanId field value
// and a boolean to check if the value has been set.
func (o *UpdateInstancePayload) GetPlanIdOk() (ret UpdateInstancePayloadGetPlanIdRetType, ok bool) {
	return getUpdateInstancePayloadGetPlanIdAttributeTypeOk(o.PlanId)
}

// SetPlanId sets field value
func (o *UpdateInstancePayload) SetPlanId(v UpdateInstancePayloadGetPlanIdRetType) {
	setUpdateInstancePayloadGetPlanIdAttributeType(&o.PlanId, v)
}

func (o UpdateInstancePayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getUpdateInstancePayloadGetNameAttributeTypeOk(o.Name); ok {
		toSerialize["Name"] = val
	}
	if val, ok := getUpdateInstancePayloadGetParameterAttributeTypeOk(o.Parameter); ok {
		toSerialize["Parameter"] = val
	}
	if val, ok := getUpdateInstancePayloadGetPlanIdAttributeTypeOk(o.PlanId); ok {
		toSerialize["PlanId"] = val
	}
	return toSerialize, nil
}

type NullableUpdateInstancePayload struct {
	value *UpdateInstancePayload
	isSet bool
}

func (v NullableUpdateInstancePayload) Get() *UpdateInstancePayload {
	return v.value
}

func (v *NullableUpdateInstancePayload) Set(val *UpdateInstancePayload) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateInstancePayload) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateInstancePayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateInstancePayload(val *UpdateInstancePayload) *NullableUpdateInstancePayload {
	return &NullableUpdateInstancePayload{value: val, isSet: true}
}

func (v NullableUpdateInstancePayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateInstancePayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
