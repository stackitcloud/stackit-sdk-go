/*
STACKIT Observability API

API endpoints for Observability on STACKIT

API version: 1.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package observability

import (
	"encoding/json"
)

// checks if the Message type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Message{}

/*
	types and functions for message
*/

// isNotNullableString
type MessageGetMessageAttributeType = *string

func getMessageGetMessageAttributeTypeOk(arg MessageGetMessageAttributeType) (ret MessageGetMessageRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setMessageGetMessageAttributeType(arg *MessageGetMessageAttributeType, val MessageGetMessageRetType) {
	*arg = &val
}

type MessageGetMessageArgType = string
type MessageGetMessageRetType = string

// Message struct for Message
type Message struct {
	// REQUIRED
	Message MessageGetMessageAttributeType `json:"message"`
}

type _Message Message

// NewMessage instantiates a new Message object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMessage(message MessageGetMessageArgType) *Message {
	this := Message{}
	setMessageGetMessageAttributeType(&this.Message, message)
	return &this
}

// NewMessageWithDefaults instantiates a new Message object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMessageWithDefaults() *Message {
	this := Message{}
	return &this
}

// GetMessage returns the Message field value
func (o *Message) GetMessage() (ret MessageGetMessageRetType) {
	ret, _ = o.GetMessageOk()
	return ret
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *Message) GetMessageOk() (ret MessageGetMessageRetType, ok bool) {
	return getMessageGetMessageAttributeTypeOk(o.Message)
}

// SetMessage sets field value
func (o *Message) SetMessage(v MessageGetMessageRetType) {
	setMessageGetMessageAttributeType(&o.Message, v)
}

func (o Message) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getMessageGetMessageAttributeTypeOk(o.Message); ok {
		toSerialize["Message"] = val
	}
	return toSerialize, nil
}

type NullableMessage struct {
	value *Message
	isSet bool
}

func (v NullableMessage) Get() *Message {
	return v.value
}

func (v *NullableMessage) Set(val *Message) {
	v.value = val
	v.isSet = true
}

func (v NullableMessage) IsSet() bool {
	return v.isSet
}

func (v *NullableMessage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMessage(val *Message) *NullableMessage {
	return &NullableMessage{value: val, isSet: true}
}

func (v NullableMessage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMessage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
