/*
STACKIT Observability API

API endpoints for Observability on STACKIT

API version: 1.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package observability

import (
	"encoding/json"
)

// checks if the UpdateAlertConfigsPayloadGlobal type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateAlertConfigsPayloadGlobal{}

/*
	types and functions for opsgenieApiKey
*/

// isNotNullableString
type UpdateAlertConfigsPayloadGlobalGetOpsgenieApiKeyAttributeType = *string

func getUpdateAlertConfigsPayloadGlobalGetOpsgenieApiKeyAttributeTypeOk(arg UpdateAlertConfigsPayloadGlobalGetOpsgenieApiKeyAttributeType) (ret UpdateAlertConfigsPayloadGlobalGetOpsgenieApiKeyRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setUpdateAlertConfigsPayloadGlobalGetOpsgenieApiKeyAttributeType(arg *UpdateAlertConfigsPayloadGlobalGetOpsgenieApiKeyAttributeType, val UpdateAlertConfigsPayloadGlobalGetOpsgenieApiKeyRetType) {
	*arg = &val
}

type UpdateAlertConfigsPayloadGlobalGetOpsgenieApiKeyArgType = string
type UpdateAlertConfigsPayloadGlobalGetOpsgenieApiKeyRetType = string

/*
	types and functions for opsgenieApiUrl
*/

// isNotNullableString
type UpdateAlertConfigsPayloadGlobalGetOpsgenieApiUrlAttributeType = *string

func getUpdateAlertConfigsPayloadGlobalGetOpsgenieApiUrlAttributeTypeOk(arg UpdateAlertConfigsPayloadGlobalGetOpsgenieApiUrlAttributeType) (ret UpdateAlertConfigsPayloadGlobalGetOpsgenieApiUrlRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setUpdateAlertConfigsPayloadGlobalGetOpsgenieApiUrlAttributeType(arg *UpdateAlertConfigsPayloadGlobalGetOpsgenieApiUrlAttributeType, val UpdateAlertConfigsPayloadGlobalGetOpsgenieApiUrlRetType) {
	*arg = &val
}

type UpdateAlertConfigsPayloadGlobalGetOpsgenieApiUrlArgType = string
type UpdateAlertConfigsPayloadGlobalGetOpsgenieApiUrlRetType = string

/*
	types and functions for resolveTimeout
*/

// isNotNullableString
type UpdateAlertConfigsPayloadGlobalGetResolveTimeoutAttributeType = *string

func getUpdateAlertConfigsPayloadGlobalGetResolveTimeoutAttributeTypeOk(arg UpdateAlertConfigsPayloadGlobalGetResolveTimeoutAttributeType) (ret UpdateAlertConfigsPayloadGlobalGetResolveTimeoutRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setUpdateAlertConfigsPayloadGlobalGetResolveTimeoutAttributeType(arg *UpdateAlertConfigsPayloadGlobalGetResolveTimeoutAttributeType, val UpdateAlertConfigsPayloadGlobalGetResolveTimeoutRetType) {
	*arg = &val
}

type UpdateAlertConfigsPayloadGlobalGetResolveTimeoutArgType = string
type UpdateAlertConfigsPayloadGlobalGetResolveTimeoutRetType = string

/*
	types and functions for smtpAuthIdentity
*/

// isNotNullableString
type UpdateAlertConfigsPayloadGlobalGetSmtpAuthIdentityAttributeType = *string

func getUpdateAlertConfigsPayloadGlobalGetSmtpAuthIdentityAttributeTypeOk(arg UpdateAlertConfigsPayloadGlobalGetSmtpAuthIdentityAttributeType) (ret UpdateAlertConfigsPayloadGlobalGetSmtpAuthIdentityRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setUpdateAlertConfigsPayloadGlobalGetSmtpAuthIdentityAttributeType(arg *UpdateAlertConfigsPayloadGlobalGetSmtpAuthIdentityAttributeType, val UpdateAlertConfigsPayloadGlobalGetSmtpAuthIdentityRetType) {
	*arg = &val
}

type UpdateAlertConfigsPayloadGlobalGetSmtpAuthIdentityArgType = string
type UpdateAlertConfigsPayloadGlobalGetSmtpAuthIdentityRetType = string

/*
	types and functions for smtpAuthPassword
*/

// isNotNullableString
type UpdateAlertConfigsPayloadGlobalGetSmtpAuthPasswordAttributeType = *string

func getUpdateAlertConfigsPayloadGlobalGetSmtpAuthPasswordAttributeTypeOk(arg UpdateAlertConfigsPayloadGlobalGetSmtpAuthPasswordAttributeType) (ret UpdateAlertConfigsPayloadGlobalGetSmtpAuthPasswordRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setUpdateAlertConfigsPayloadGlobalGetSmtpAuthPasswordAttributeType(arg *UpdateAlertConfigsPayloadGlobalGetSmtpAuthPasswordAttributeType, val UpdateAlertConfigsPayloadGlobalGetSmtpAuthPasswordRetType) {
	*arg = &val
}

type UpdateAlertConfigsPayloadGlobalGetSmtpAuthPasswordArgType = string
type UpdateAlertConfigsPayloadGlobalGetSmtpAuthPasswordRetType = string

/*
	types and functions for smtpAuthUsername
*/

// isNotNullableString
type UpdateAlertConfigsPayloadGlobalGetSmtpAuthUsernameAttributeType = *string

func getUpdateAlertConfigsPayloadGlobalGetSmtpAuthUsernameAttributeTypeOk(arg UpdateAlertConfigsPayloadGlobalGetSmtpAuthUsernameAttributeType) (ret UpdateAlertConfigsPayloadGlobalGetSmtpAuthUsernameRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setUpdateAlertConfigsPayloadGlobalGetSmtpAuthUsernameAttributeType(arg *UpdateAlertConfigsPayloadGlobalGetSmtpAuthUsernameAttributeType, val UpdateAlertConfigsPayloadGlobalGetSmtpAuthUsernameRetType) {
	*arg = &val
}

type UpdateAlertConfigsPayloadGlobalGetSmtpAuthUsernameArgType = string
type UpdateAlertConfigsPayloadGlobalGetSmtpAuthUsernameRetType = string

/*
	types and functions for smtpFrom
*/

// isNotNullableString
type UpdateAlertConfigsPayloadGlobalGetSmtpFromAttributeType = *string

func getUpdateAlertConfigsPayloadGlobalGetSmtpFromAttributeTypeOk(arg UpdateAlertConfigsPayloadGlobalGetSmtpFromAttributeType) (ret UpdateAlertConfigsPayloadGlobalGetSmtpFromRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setUpdateAlertConfigsPayloadGlobalGetSmtpFromAttributeType(arg *UpdateAlertConfigsPayloadGlobalGetSmtpFromAttributeType, val UpdateAlertConfigsPayloadGlobalGetSmtpFromRetType) {
	*arg = &val
}

type UpdateAlertConfigsPayloadGlobalGetSmtpFromArgType = string
type UpdateAlertConfigsPayloadGlobalGetSmtpFromRetType = string

/*
	types and functions for smtpSmarthost
*/

// isNotNullableString
type UpdateAlertConfigsPayloadGlobalGetSmtpSmarthostAttributeType = *string

func getUpdateAlertConfigsPayloadGlobalGetSmtpSmarthostAttributeTypeOk(arg UpdateAlertConfigsPayloadGlobalGetSmtpSmarthostAttributeType) (ret UpdateAlertConfigsPayloadGlobalGetSmtpSmarthostRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setUpdateAlertConfigsPayloadGlobalGetSmtpSmarthostAttributeType(arg *UpdateAlertConfigsPayloadGlobalGetSmtpSmarthostAttributeType, val UpdateAlertConfigsPayloadGlobalGetSmtpSmarthostRetType) {
	*arg = &val
}

type UpdateAlertConfigsPayloadGlobalGetSmtpSmarthostArgType = string
type UpdateAlertConfigsPayloadGlobalGetSmtpSmarthostRetType = string

// UpdateAlertConfigsPayloadGlobal Global config. If nothing passed the default argus config will be used.
type UpdateAlertConfigsPayloadGlobal struct {
	// Opsgenie api key `Additional Validators:` * should only include the characters: a-zA-Z0-9-
	OpsgenieApiKey UpdateAlertConfigsPayloadGlobalGetOpsgenieApiKeyAttributeType `json:"opsgenieApiKey,omitempty"`
	// Opsgenie api url `Additional Validators:` * must be a syntactically valid url address
	OpsgenieApiUrl UpdateAlertConfigsPayloadGlobalGetOpsgenieApiUrlAttributeType `json:"opsgenieApiUrl,omitempty"`
	// ResolveTimeout is the default value used by alertmanager if the alert does not include EndsAt, after this time passes it can declare the alert as resolved if it has not been updated. This has no impact on alerts from Prometheus, as they always include EndsAt.  `Additional Validators:` * must be a valid time format
	ResolveTimeout UpdateAlertConfigsPayloadGlobalGetResolveTimeoutAttributeType `json:"resolveTimeout,omitempty"`
	// Auth identity. `Additional Validators:` * must be a syntactically valid email address
	SmtpAuthIdentity UpdateAlertConfigsPayloadGlobalGetSmtpAuthIdentityAttributeType `json:"smtpAuthIdentity,omitempty"`
	// SMTP Auth using LOGIN and PLAIN.
	SmtpAuthPassword UpdateAlertConfigsPayloadGlobalGetSmtpAuthPasswordAttributeType `json:"smtpAuthPassword,omitempty"`
	// SMTP Auth using CRAM-MD5, LOGIN and PLAIN. If empty, Alertmanager doesn't authenticate to the SMTP server.
	SmtpAuthUsername UpdateAlertConfigsPayloadGlobalGetSmtpAuthUsernameAttributeType `json:"smtpAuthUsername,omitempty"`
	// The default SMTP From header field.  `Additional Validators:` * must be a syntactically valid email address
	SmtpFrom UpdateAlertConfigsPayloadGlobalGetSmtpFromAttributeType `json:"smtpFrom,omitempty"`
	// The default SMTP smarthost used for sending emails, including port number. Port number usually is 25, or 587 for SMTP over TLS (sometimes referred to as STARTTLS). Example: smtp.example.org:587  `Additional Validators:` * should only include the characters: a-zA-Z0-9_./@&?:-
	SmtpSmarthost UpdateAlertConfigsPayloadGlobalGetSmtpSmarthostAttributeType `json:"smtpSmarthost,omitempty"`
}

// NewUpdateAlertConfigsPayloadGlobal instantiates a new UpdateAlertConfigsPayloadGlobal object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateAlertConfigsPayloadGlobal() *UpdateAlertConfigsPayloadGlobal {
	this := UpdateAlertConfigsPayloadGlobal{}
	return &this
}

// NewUpdateAlertConfigsPayloadGlobalWithDefaults instantiates a new UpdateAlertConfigsPayloadGlobal object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateAlertConfigsPayloadGlobalWithDefaults() *UpdateAlertConfigsPayloadGlobal {
	this := UpdateAlertConfigsPayloadGlobal{}
	var resolveTimeout string = "5m"
	this.ResolveTimeout = &resolveTimeout
	return &this
}

// GetOpsgenieApiKey returns the OpsgenieApiKey field value if set, zero value otherwise.
func (o *UpdateAlertConfigsPayloadGlobal) GetOpsgenieApiKey() (res UpdateAlertConfigsPayloadGlobalGetOpsgenieApiKeyRetType) {
	res, _ = o.GetOpsgenieApiKeyOk()
	return
}

// GetOpsgenieApiKeyOk returns a tuple with the OpsgenieApiKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAlertConfigsPayloadGlobal) GetOpsgenieApiKeyOk() (ret UpdateAlertConfigsPayloadGlobalGetOpsgenieApiKeyRetType, ok bool) {
	return getUpdateAlertConfigsPayloadGlobalGetOpsgenieApiKeyAttributeTypeOk(o.OpsgenieApiKey)
}

// HasOpsgenieApiKey returns a boolean if a field has been set.
func (o *UpdateAlertConfigsPayloadGlobal) HasOpsgenieApiKey() bool {
	_, ok := o.GetOpsgenieApiKeyOk()
	return ok
}

// SetOpsgenieApiKey gets a reference to the given string and assigns it to the OpsgenieApiKey field.
func (o *UpdateAlertConfigsPayloadGlobal) SetOpsgenieApiKey(v UpdateAlertConfigsPayloadGlobalGetOpsgenieApiKeyRetType) {
	setUpdateAlertConfigsPayloadGlobalGetOpsgenieApiKeyAttributeType(&o.OpsgenieApiKey, v)
}

// GetOpsgenieApiUrl returns the OpsgenieApiUrl field value if set, zero value otherwise.
func (o *UpdateAlertConfigsPayloadGlobal) GetOpsgenieApiUrl() (res UpdateAlertConfigsPayloadGlobalGetOpsgenieApiUrlRetType) {
	res, _ = o.GetOpsgenieApiUrlOk()
	return
}

// GetOpsgenieApiUrlOk returns a tuple with the OpsgenieApiUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAlertConfigsPayloadGlobal) GetOpsgenieApiUrlOk() (ret UpdateAlertConfigsPayloadGlobalGetOpsgenieApiUrlRetType, ok bool) {
	return getUpdateAlertConfigsPayloadGlobalGetOpsgenieApiUrlAttributeTypeOk(o.OpsgenieApiUrl)
}

// HasOpsgenieApiUrl returns a boolean if a field has been set.
func (o *UpdateAlertConfigsPayloadGlobal) HasOpsgenieApiUrl() bool {
	_, ok := o.GetOpsgenieApiUrlOk()
	return ok
}

// SetOpsgenieApiUrl gets a reference to the given string and assigns it to the OpsgenieApiUrl field.
func (o *UpdateAlertConfigsPayloadGlobal) SetOpsgenieApiUrl(v UpdateAlertConfigsPayloadGlobalGetOpsgenieApiUrlRetType) {
	setUpdateAlertConfigsPayloadGlobalGetOpsgenieApiUrlAttributeType(&o.OpsgenieApiUrl, v)
}

// GetResolveTimeout returns the ResolveTimeout field value if set, zero value otherwise.
func (o *UpdateAlertConfigsPayloadGlobal) GetResolveTimeout() (res UpdateAlertConfigsPayloadGlobalGetResolveTimeoutRetType) {
	res, _ = o.GetResolveTimeoutOk()
	return
}

// GetResolveTimeoutOk returns a tuple with the ResolveTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAlertConfigsPayloadGlobal) GetResolveTimeoutOk() (ret UpdateAlertConfigsPayloadGlobalGetResolveTimeoutRetType, ok bool) {
	return getUpdateAlertConfigsPayloadGlobalGetResolveTimeoutAttributeTypeOk(o.ResolveTimeout)
}

// HasResolveTimeout returns a boolean if a field has been set.
func (o *UpdateAlertConfigsPayloadGlobal) HasResolveTimeout() bool {
	_, ok := o.GetResolveTimeoutOk()
	return ok
}

// SetResolveTimeout gets a reference to the given string and assigns it to the ResolveTimeout field.
func (o *UpdateAlertConfigsPayloadGlobal) SetResolveTimeout(v UpdateAlertConfigsPayloadGlobalGetResolveTimeoutRetType) {
	setUpdateAlertConfigsPayloadGlobalGetResolveTimeoutAttributeType(&o.ResolveTimeout, v)
}

// GetSmtpAuthIdentity returns the SmtpAuthIdentity field value if set, zero value otherwise.
func (o *UpdateAlertConfigsPayloadGlobal) GetSmtpAuthIdentity() (res UpdateAlertConfigsPayloadGlobalGetSmtpAuthIdentityRetType) {
	res, _ = o.GetSmtpAuthIdentityOk()
	return
}

// GetSmtpAuthIdentityOk returns a tuple with the SmtpAuthIdentity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAlertConfigsPayloadGlobal) GetSmtpAuthIdentityOk() (ret UpdateAlertConfigsPayloadGlobalGetSmtpAuthIdentityRetType, ok bool) {
	return getUpdateAlertConfigsPayloadGlobalGetSmtpAuthIdentityAttributeTypeOk(o.SmtpAuthIdentity)
}

// HasSmtpAuthIdentity returns a boolean if a field has been set.
func (o *UpdateAlertConfigsPayloadGlobal) HasSmtpAuthIdentity() bool {
	_, ok := o.GetSmtpAuthIdentityOk()
	return ok
}

// SetSmtpAuthIdentity gets a reference to the given string and assigns it to the SmtpAuthIdentity field.
func (o *UpdateAlertConfigsPayloadGlobal) SetSmtpAuthIdentity(v UpdateAlertConfigsPayloadGlobalGetSmtpAuthIdentityRetType) {
	setUpdateAlertConfigsPayloadGlobalGetSmtpAuthIdentityAttributeType(&o.SmtpAuthIdentity, v)
}

// GetSmtpAuthPassword returns the SmtpAuthPassword field value if set, zero value otherwise.
func (o *UpdateAlertConfigsPayloadGlobal) GetSmtpAuthPassword() (res UpdateAlertConfigsPayloadGlobalGetSmtpAuthPasswordRetType) {
	res, _ = o.GetSmtpAuthPasswordOk()
	return
}

// GetSmtpAuthPasswordOk returns a tuple with the SmtpAuthPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAlertConfigsPayloadGlobal) GetSmtpAuthPasswordOk() (ret UpdateAlertConfigsPayloadGlobalGetSmtpAuthPasswordRetType, ok bool) {
	return getUpdateAlertConfigsPayloadGlobalGetSmtpAuthPasswordAttributeTypeOk(o.SmtpAuthPassword)
}

// HasSmtpAuthPassword returns a boolean if a field has been set.
func (o *UpdateAlertConfigsPayloadGlobal) HasSmtpAuthPassword() bool {
	_, ok := o.GetSmtpAuthPasswordOk()
	return ok
}

// SetSmtpAuthPassword gets a reference to the given string and assigns it to the SmtpAuthPassword field.
func (o *UpdateAlertConfigsPayloadGlobal) SetSmtpAuthPassword(v UpdateAlertConfigsPayloadGlobalGetSmtpAuthPasswordRetType) {
	setUpdateAlertConfigsPayloadGlobalGetSmtpAuthPasswordAttributeType(&o.SmtpAuthPassword, v)
}

// GetSmtpAuthUsername returns the SmtpAuthUsername field value if set, zero value otherwise.
func (o *UpdateAlertConfigsPayloadGlobal) GetSmtpAuthUsername() (res UpdateAlertConfigsPayloadGlobalGetSmtpAuthUsernameRetType) {
	res, _ = o.GetSmtpAuthUsernameOk()
	return
}

// GetSmtpAuthUsernameOk returns a tuple with the SmtpAuthUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAlertConfigsPayloadGlobal) GetSmtpAuthUsernameOk() (ret UpdateAlertConfigsPayloadGlobalGetSmtpAuthUsernameRetType, ok bool) {
	return getUpdateAlertConfigsPayloadGlobalGetSmtpAuthUsernameAttributeTypeOk(o.SmtpAuthUsername)
}

// HasSmtpAuthUsername returns a boolean if a field has been set.
func (o *UpdateAlertConfigsPayloadGlobal) HasSmtpAuthUsername() bool {
	_, ok := o.GetSmtpAuthUsernameOk()
	return ok
}

// SetSmtpAuthUsername gets a reference to the given string and assigns it to the SmtpAuthUsername field.
func (o *UpdateAlertConfigsPayloadGlobal) SetSmtpAuthUsername(v UpdateAlertConfigsPayloadGlobalGetSmtpAuthUsernameRetType) {
	setUpdateAlertConfigsPayloadGlobalGetSmtpAuthUsernameAttributeType(&o.SmtpAuthUsername, v)
}

// GetSmtpFrom returns the SmtpFrom field value if set, zero value otherwise.
func (o *UpdateAlertConfigsPayloadGlobal) GetSmtpFrom() (res UpdateAlertConfigsPayloadGlobalGetSmtpFromRetType) {
	res, _ = o.GetSmtpFromOk()
	return
}

// GetSmtpFromOk returns a tuple with the SmtpFrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAlertConfigsPayloadGlobal) GetSmtpFromOk() (ret UpdateAlertConfigsPayloadGlobalGetSmtpFromRetType, ok bool) {
	return getUpdateAlertConfigsPayloadGlobalGetSmtpFromAttributeTypeOk(o.SmtpFrom)
}

// HasSmtpFrom returns a boolean if a field has been set.
func (o *UpdateAlertConfigsPayloadGlobal) HasSmtpFrom() bool {
	_, ok := o.GetSmtpFromOk()
	return ok
}

// SetSmtpFrom gets a reference to the given string and assigns it to the SmtpFrom field.
func (o *UpdateAlertConfigsPayloadGlobal) SetSmtpFrom(v UpdateAlertConfigsPayloadGlobalGetSmtpFromRetType) {
	setUpdateAlertConfigsPayloadGlobalGetSmtpFromAttributeType(&o.SmtpFrom, v)
}

// GetSmtpSmarthost returns the SmtpSmarthost field value if set, zero value otherwise.
func (o *UpdateAlertConfigsPayloadGlobal) GetSmtpSmarthost() (res UpdateAlertConfigsPayloadGlobalGetSmtpSmarthostRetType) {
	res, _ = o.GetSmtpSmarthostOk()
	return
}

// GetSmtpSmarthostOk returns a tuple with the SmtpSmarthost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAlertConfigsPayloadGlobal) GetSmtpSmarthostOk() (ret UpdateAlertConfigsPayloadGlobalGetSmtpSmarthostRetType, ok bool) {
	return getUpdateAlertConfigsPayloadGlobalGetSmtpSmarthostAttributeTypeOk(o.SmtpSmarthost)
}

// HasSmtpSmarthost returns a boolean if a field has been set.
func (o *UpdateAlertConfigsPayloadGlobal) HasSmtpSmarthost() bool {
	_, ok := o.GetSmtpSmarthostOk()
	return ok
}

// SetSmtpSmarthost gets a reference to the given string and assigns it to the SmtpSmarthost field.
func (o *UpdateAlertConfigsPayloadGlobal) SetSmtpSmarthost(v UpdateAlertConfigsPayloadGlobalGetSmtpSmarthostRetType) {
	setUpdateAlertConfigsPayloadGlobalGetSmtpSmarthostAttributeType(&o.SmtpSmarthost, v)
}

func (o UpdateAlertConfigsPayloadGlobal) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getUpdateAlertConfigsPayloadGlobalGetOpsgenieApiKeyAttributeTypeOk(o.OpsgenieApiKey); ok {
		toSerialize["OpsgenieApiKey"] = val
	}
	if val, ok := getUpdateAlertConfigsPayloadGlobalGetOpsgenieApiUrlAttributeTypeOk(o.OpsgenieApiUrl); ok {
		toSerialize["OpsgenieApiUrl"] = val
	}
	if val, ok := getUpdateAlertConfigsPayloadGlobalGetResolveTimeoutAttributeTypeOk(o.ResolveTimeout); ok {
		toSerialize["ResolveTimeout"] = val
	}
	if val, ok := getUpdateAlertConfigsPayloadGlobalGetSmtpAuthIdentityAttributeTypeOk(o.SmtpAuthIdentity); ok {
		toSerialize["SmtpAuthIdentity"] = val
	}
	if val, ok := getUpdateAlertConfigsPayloadGlobalGetSmtpAuthPasswordAttributeTypeOk(o.SmtpAuthPassword); ok {
		toSerialize["SmtpAuthPassword"] = val
	}
	if val, ok := getUpdateAlertConfigsPayloadGlobalGetSmtpAuthUsernameAttributeTypeOk(o.SmtpAuthUsername); ok {
		toSerialize["SmtpAuthUsername"] = val
	}
	if val, ok := getUpdateAlertConfigsPayloadGlobalGetSmtpFromAttributeTypeOk(o.SmtpFrom); ok {
		toSerialize["SmtpFrom"] = val
	}
	if val, ok := getUpdateAlertConfigsPayloadGlobalGetSmtpSmarthostAttributeTypeOk(o.SmtpSmarthost); ok {
		toSerialize["SmtpSmarthost"] = val
	}
	return toSerialize, nil
}

type NullableUpdateAlertConfigsPayloadGlobal struct {
	value *UpdateAlertConfigsPayloadGlobal
	isSet bool
}

func (v NullableUpdateAlertConfigsPayloadGlobal) Get() *UpdateAlertConfigsPayloadGlobal {
	return v.value
}

func (v *NullableUpdateAlertConfigsPayloadGlobal) Set(val *UpdateAlertConfigsPayloadGlobal) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateAlertConfigsPayloadGlobal) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateAlertConfigsPayloadGlobal) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateAlertConfigsPayloadGlobal(val *UpdateAlertConfigsPayloadGlobal) *NullableUpdateAlertConfigsPayloadGlobal {
	return &NullableUpdateAlertConfigsPayloadGlobal{value: val, isSet: true}
}

func (v NullableUpdateAlertConfigsPayloadGlobal) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateAlertConfigsPayloadGlobal) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
