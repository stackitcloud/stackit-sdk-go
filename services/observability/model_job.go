/*
STACKIT Observability API

API endpoints for Observability on STACKIT

API version: 1.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package observability

import (
	"encoding/json"
	"fmt"
)

// checks if the Job type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Job{}

/*
	types and functions for basicAuth
*/

// isModel
type JobGetBasicAuthAttributeType = *BasicAuth
type JobGetBasicAuthArgType = BasicAuth
type JobGetBasicAuthRetType = BasicAuth

func getJobGetBasicAuthAttributeTypeOk(arg JobGetBasicAuthAttributeType) (ret JobGetBasicAuthRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setJobGetBasicAuthAttributeType(arg *JobGetBasicAuthAttributeType, val JobGetBasicAuthRetType) {
	*arg = &val
}

/*
	types and functions for bearerToken
*/

// isNotNullableString
type JobGetBearerTokenAttributeType = *string

func getJobGetBearerTokenAttributeTypeOk(arg JobGetBearerTokenAttributeType) (ret JobGetBearerTokenRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setJobGetBearerTokenAttributeType(arg *JobGetBearerTokenAttributeType, val JobGetBearerTokenRetType) {
	*arg = &val
}

type JobGetBearerTokenArgType = string
type JobGetBearerTokenRetType = string

/*
	types and functions for honorLabels
*/

// isBoolean
type JobgetHonorLabelsAttributeType = *bool
type JobgetHonorLabelsArgType = bool
type JobgetHonorLabelsRetType = bool

func getJobgetHonorLabelsAttributeTypeOk(arg JobgetHonorLabelsAttributeType) (ret JobgetHonorLabelsRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setJobgetHonorLabelsAttributeType(arg *JobgetHonorLabelsAttributeType, val JobgetHonorLabelsRetType) {
	*arg = &val
}

/*
	types and functions for honorTimeStamps
*/

// isBoolean
type JobgetHonorTimeStampsAttributeType = *bool
type JobgetHonorTimeStampsArgType = bool
type JobgetHonorTimeStampsRetType = bool

func getJobgetHonorTimeStampsAttributeTypeOk(arg JobgetHonorTimeStampsAttributeType) (ret JobgetHonorTimeStampsRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setJobgetHonorTimeStampsAttributeType(arg *JobgetHonorTimeStampsAttributeType, val JobgetHonorTimeStampsRetType) {
	*arg = &val
}

/*
	types and functions for httpSdConfigs
*/

// isArray
type JobGetHttpSdConfigsAttributeType = *[]HTTPServiceSD
type JobGetHttpSdConfigsArgType = []HTTPServiceSD
type JobGetHttpSdConfigsRetType = []HTTPServiceSD

func getJobGetHttpSdConfigsAttributeTypeOk(arg JobGetHttpSdConfigsAttributeType) (ret JobGetHttpSdConfigsRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setJobGetHttpSdConfigsAttributeType(arg *JobGetHttpSdConfigsAttributeType, val JobGetHttpSdConfigsRetType) {
	*arg = &val
}

/*
	types and functions for jobName
*/

// isNotNullableString
type JobGetJobNameAttributeType = *string

func getJobGetJobNameAttributeTypeOk(arg JobGetJobNameAttributeType) (ret JobGetJobNameRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setJobGetJobNameAttributeType(arg *JobGetJobNameAttributeType, val JobGetJobNameRetType) {
	*arg = &val
}

type JobGetJobNameArgType = string
type JobGetJobNameRetType = string

/*
	types and functions for metricsPath
*/

// isNotNullableString
type JobGetMetricsPathAttributeType = *string

func getJobGetMetricsPathAttributeTypeOk(arg JobGetMetricsPathAttributeType) (ret JobGetMetricsPathRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setJobGetMetricsPathAttributeType(arg *JobGetMetricsPathAttributeType, val JobGetMetricsPathRetType) {
	*arg = &val
}

type JobGetMetricsPathArgType = string
type JobGetMetricsPathRetType = string

/*
	types and functions for metricsRelabelConfigs
*/

// isArray
type JobGetMetricsRelabelConfigsAttributeType = *[]MetricsRelabelConfig
type JobGetMetricsRelabelConfigsArgType = []MetricsRelabelConfig
type JobGetMetricsRelabelConfigsRetType = []MetricsRelabelConfig

func getJobGetMetricsRelabelConfigsAttributeTypeOk(arg JobGetMetricsRelabelConfigsAttributeType) (ret JobGetMetricsRelabelConfigsRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setJobGetMetricsRelabelConfigsAttributeType(arg *JobGetMetricsRelabelConfigsAttributeType, val JobGetMetricsRelabelConfigsRetType) {
	*arg = &val
}

/*
	types and functions for oauth2
*/

// isModel
type JobGetOauth2AttributeType = *OAuth2
type JobGetOauth2ArgType = OAuth2
type JobGetOauth2RetType = OAuth2

func getJobGetOauth2AttributeTypeOk(arg JobGetOauth2AttributeType) (ret JobGetOauth2RetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setJobGetOauth2AttributeType(arg *JobGetOauth2AttributeType, val JobGetOauth2RetType) {
	*arg = &val
}

/*
	types and functions for params
*/

// isContainer
type JobGetParamsAttributeType = *map[string][]string
type JobGetParamsArgType = map[string][]string
type JobGetParamsRetType = map[string][]string

func getJobGetParamsAttributeTypeOk(arg JobGetParamsAttributeType) (ret JobGetParamsRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setJobGetParamsAttributeType(arg *JobGetParamsAttributeType, val JobGetParamsRetType) {
	*arg = &val
}

/*
	types and functions for sampleLimit
*/

// isInteger
type JobGetSampleLimitAttributeType = *int64
type JobGetSampleLimitArgType = int64
type JobGetSampleLimitRetType = int64

func getJobGetSampleLimitAttributeTypeOk(arg JobGetSampleLimitAttributeType) (ret JobGetSampleLimitRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setJobGetSampleLimitAttributeType(arg *JobGetSampleLimitAttributeType, val JobGetSampleLimitRetType) {
	*arg = &val
}

/*
	types and functions for scheme
*/

// isEnum

// JobScheme the model 'Job'
type JobScheme string

// List of Scheme
const (
	JOBSCHEME_HTTP  JobScheme = "http"
	JOBSCHEME_HTTPS JobScheme = "https"
)

// All allowed values of Job enum
var AllowedJobSchemeEnumValues = []JobScheme{
	"http",
	"https",
}

func (v *JobScheme) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	// Allow unmarshalling zero value for testing purposes
	var zeroValue string
	if value == zeroValue {
		return nil
	}
	enumTypeValue := JobScheme(value)
	for _, existing := range AllowedJobSchemeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid Job", value)
}

// NewJobSchemeFromValue returns a pointer to a valid JobScheme
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewJobSchemeFromValue(v string) (*JobScheme, error) {
	ev := JobScheme(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for JobScheme: valid values are %v", v, AllowedJobSchemeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v JobScheme) IsValid() bool {
	for _, existing := range AllowedJobSchemeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to SchemeScheme value
func (v JobScheme) Ptr() *JobScheme {
	return &v
}

type NullableJobScheme struct {
	value *JobScheme
	isSet bool
}

func (v NullableJobScheme) Get() *JobScheme {
	return v.value
}

func (v *NullableJobScheme) Set(val *JobScheme) {
	v.value = val
	v.isSet = true
}

func (v NullableJobScheme) IsSet() bool {
	return v.isSet
}

func (v *NullableJobScheme) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJobScheme(val *JobScheme) *NullableJobScheme {
	return &NullableJobScheme{value: val, isSet: true}
}

func (v NullableJobScheme) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJobScheme) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

type JobGetSchemeAttributeType = *JobScheme
type JobGetSchemeArgType = JobScheme
type JobGetSchemeRetType = JobScheme

func getJobGetSchemeAttributeTypeOk(arg JobGetSchemeAttributeType) (ret JobGetSchemeRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setJobGetSchemeAttributeType(arg *JobGetSchemeAttributeType, val JobGetSchemeRetType) {
	*arg = &val
}

/*
	types and functions for scrapeInterval
*/

// isNotNullableString
type JobGetScrapeIntervalAttributeType = *string

func getJobGetScrapeIntervalAttributeTypeOk(arg JobGetScrapeIntervalAttributeType) (ret JobGetScrapeIntervalRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setJobGetScrapeIntervalAttributeType(arg *JobGetScrapeIntervalAttributeType, val JobGetScrapeIntervalRetType) {
	*arg = &val
}

type JobGetScrapeIntervalArgType = string
type JobGetScrapeIntervalRetType = string

/*
	types and functions for scrapeTimeout
*/

// isNotNullableString
type JobGetScrapeTimeoutAttributeType = *string

func getJobGetScrapeTimeoutAttributeTypeOk(arg JobGetScrapeTimeoutAttributeType) (ret JobGetScrapeTimeoutRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setJobGetScrapeTimeoutAttributeType(arg *JobGetScrapeTimeoutAttributeType, val JobGetScrapeTimeoutRetType) {
	*arg = &val
}

type JobGetScrapeTimeoutArgType = string
type JobGetScrapeTimeoutRetType = string

/*
	types and functions for staticConfigs
*/

// isArray
type JobGetStaticConfigsAttributeType = *[]StaticConfigs
type JobGetStaticConfigsArgType = []StaticConfigs
type JobGetStaticConfigsRetType = []StaticConfigs

func getJobGetStaticConfigsAttributeTypeOk(arg JobGetStaticConfigsAttributeType) (ret JobGetStaticConfigsRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setJobGetStaticConfigsAttributeType(arg *JobGetStaticConfigsAttributeType, val JobGetStaticConfigsRetType) {
	*arg = &val
}

/*
	types and functions for tlsConfig
*/

// isModel
type JobGetTlsConfigAttributeType = *TLSConfig
type JobGetTlsConfigArgType = TLSConfig
type JobGetTlsConfigRetType = TLSConfig

func getJobGetTlsConfigAttributeTypeOk(arg JobGetTlsConfigAttributeType) (ret JobGetTlsConfigRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setJobGetTlsConfigAttributeType(arg *JobGetTlsConfigAttributeType, val JobGetTlsConfigRetType) {
	*arg = &val
}

// Job struct for Job
type Job struct {
	BasicAuth       JobGetBasicAuthAttributeType       `json:"basicAuth,omitempty"`
	BearerToken     JobGetBearerTokenAttributeType     `json:"bearerToken,omitempty"`
	HonorLabels     JobgetHonorLabelsAttributeType     `json:"honorLabels,omitempty"`
	HonorTimeStamps JobgetHonorTimeStampsAttributeType `json:"honorTimeStamps,omitempty"`
	HttpSdConfigs   JobGetHttpSdConfigsAttributeType   `json:"httpSdConfigs,omitempty"`
	// REQUIRED
	JobName               JobGetJobNameAttributeType               `json:"jobName"`
	MetricsPath           JobGetMetricsPathAttributeType           `json:"metricsPath,omitempty"`
	MetricsRelabelConfigs JobGetMetricsRelabelConfigsAttributeType `json:"metricsRelabelConfigs,omitempty"`
	Oauth2                JobGetOauth2AttributeType                `json:"oauth2,omitempty"`
	Params                JobGetParamsAttributeType                `json:"params,omitempty"`
	SampleLimit           JobGetSampleLimitAttributeType           `json:"sampleLimit,omitempty"`
	Scheme                JobGetSchemeAttributeType                `json:"scheme,omitempty"`
	// REQUIRED
	ScrapeInterval JobGetScrapeIntervalAttributeType `json:"scrapeInterval"`
	// REQUIRED
	ScrapeTimeout JobGetScrapeTimeoutAttributeType `json:"scrapeTimeout"`
	// REQUIRED
	StaticConfigs JobGetStaticConfigsAttributeType `json:"staticConfigs"`
	TlsConfig     JobGetTlsConfigAttributeType     `json:"tlsConfig,omitempty"`
}

type _Job Job

// NewJob instantiates a new Job object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJob(jobName JobGetJobNameArgType, scrapeInterval JobGetScrapeIntervalArgType, scrapeTimeout JobGetScrapeTimeoutArgType, staticConfigs JobGetStaticConfigsArgType) *Job {
	this := Job{}
	setJobGetJobNameAttributeType(&this.JobName, jobName)
	setJobGetScrapeIntervalAttributeType(&this.ScrapeInterval, scrapeInterval)
	setJobGetScrapeTimeoutAttributeType(&this.ScrapeTimeout, scrapeTimeout)
	setJobGetStaticConfigsAttributeType(&this.StaticConfigs, staticConfigs)
	return &this
}

// NewJobWithDefaults instantiates a new Job object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJobWithDefaults() *Job {
	this := Job{}
	var honorLabels bool = false
	this.HonorLabels = &honorLabels
	var honorTimeStamps bool = false
	this.HonorTimeStamps = &honorTimeStamps
	var metricsPath string = "/metrics"
	this.MetricsPath = &metricsPath
	var scheme JobScheme = "http"
	this.Scheme = &scheme
	return &this
}

// GetBasicAuth returns the BasicAuth field value if set, zero value otherwise.
func (o *Job) GetBasicAuth() (res JobGetBasicAuthRetType) {
	res, _ = o.GetBasicAuthOk()
	return
}

// GetBasicAuthOk returns a tuple with the BasicAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Job) GetBasicAuthOk() (ret JobGetBasicAuthRetType, ok bool) {
	return getJobGetBasicAuthAttributeTypeOk(o.BasicAuth)
}

// HasBasicAuth returns a boolean if a field has been set.
func (o *Job) HasBasicAuth() bool {
	_, ok := o.GetBasicAuthOk()
	return ok
}

// SetBasicAuth gets a reference to the given BasicAuth and assigns it to the BasicAuth field.
func (o *Job) SetBasicAuth(v JobGetBasicAuthRetType) {
	setJobGetBasicAuthAttributeType(&o.BasicAuth, v)
}

// GetBearerToken returns the BearerToken field value if set, zero value otherwise.
func (o *Job) GetBearerToken() (res JobGetBearerTokenRetType) {
	res, _ = o.GetBearerTokenOk()
	return
}

// GetBearerTokenOk returns a tuple with the BearerToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Job) GetBearerTokenOk() (ret JobGetBearerTokenRetType, ok bool) {
	return getJobGetBearerTokenAttributeTypeOk(o.BearerToken)
}

// HasBearerToken returns a boolean if a field has been set.
func (o *Job) HasBearerToken() bool {
	_, ok := o.GetBearerTokenOk()
	return ok
}

// SetBearerToken gets a reference to the given string and assigns it to the BearerToken field.
func (o *Job) SetBearerToken(v JobGetBearerTokenRetType) {
	setJobGetBearerTokenAttributeType(&o.BearerToken, v)
}

// GetHonorLabels returns the HonorLabels field value if set, zero value otherwise.
func (o *Job) GetHonorLabels() (res JobgetHonorLabelsRetType) {
	res, _ = o.GetHonorLabelsOk()
	return
}

// GetHonorLabelsOk returns a tuple with the HonorLabels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Job) GetHonorLabelsOk() (ret JobgetHonorLabelsRetType, ok bool) {
	return getJobgetHonorLabelsAttributeTypeOk(o.HonorLabels)
}

// HasHonorLabels returns a boolean if a field has been set.
func (o *Job) HasHonorLabels() bool {
	_, ok := o.GetHonorLabelsOk()
	return ok
}

// SetHonorLabels gets a reference to the given bool and assigns it to the HonorLabels field.
func (o *Job) SetHonorLabels(v JobgetHonorLabelsRetType) {
	setJobgetHonorLabelsAttributeType(&o.HonorLabels, v)
}

// GetHonorTimeStamps returns the HonorTimeStamps field value if set, zero value otherwise.
func (o *Job) GetHonorTimeStamps() (res JobgetHonorTimeStampsRetType) {
	res, _ = o.GetHonorTimeStampsOk()
	return
}

// GetHonorTimeStampsOk returns a tuple with the HonorTimeStamps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Job) GetHonorTimeStampsOk() (ret JobgetHonorTimeStampsRetType, ok bool) {
	return getJobgetHonorTimeStampsAttributeTypeOk(o.HonorTimeStamps)
}

// HasHonorTimeStamps returns a boolean if a field has been set.
func (o *Job) HasHonorTimeStamps() bool {
	_, ok := o.GetHonorTimeStampsOk()
	return ok
}

// SetHonorTimeStamps gets a reference to the given bool and assigns it to the HonorTimeStamps field.
func (o *Job) SetHonorTimeStamps(v JobgetHonorTimeStampsRetType) {
	setJobgetHonorTimeStampsAttributeType(&o.HonorTimeStamps, v)
}

// GetHttpSdConfigs returns the HttpSdConfigs field value if set, zero value otherwise.
func (o *Job) GetHttpSdConfigs() (res JobGetHttpSdConfigsRetType) {
	res, _ = o.GetHttpSdConfigsOk()
	return
}

// GetHttpSdConfigsOk returns a tuple with the HttpSdConfigs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Job) GetHttpSdConfigsOk() (ret JobGetHttpSdConfigsRetType, ok bool) {
	return getJobGetHttpSdConfigsAttributeTypeOk(o.HttpSdConfigs)
}

// HasHttpSdConfigs returns a boolean if a field has been set.
func (o *Job) HasHttpSdConfigs() bool {
	_, ok := o.GetHttpSdConfigsOk()
	return ok
}

// SetHttpSdConfigs gets a reference to the given []HTTPServiceSD and assigns it to the HttpSdConfigs field.
func (o *Job) SetHttpSdConfigs(v JobGetHttpSdConfigsRetType) {
	setJobGetHttpSdConfigsAttributeType(&o.HttpSdConfigs, v)
}

// GetJobName returns the JobName field value
func (o *Job) GetJobName() (ret JobGetJobNameRetType) {
	ret, _ = o.GetJobNameOk()
	return ret
}

// GetJobNameOk returns a tuple with the JobName field value
// and a boolean to check if the value has been set.
func (o *Job) GetJobNameOk() (ret JobGetJobNameRetType, ok bool) {
	return getJobGetJobNameAttributeTypeOk(o.JobName)
}

// SetJobName sets field value
func (o *Job) SetJobName(v JobGetJobNameRetType) {
	setJobGetJobNameAttributeType(&o.JobName, v)
}

// GetMetricsPath returns the MetricsPath field value if set, zero value otherwise.
func (o *Job) GetMetricsPath() (res JobGetMetricsPathRetType) {
	res, _ = o.GetMetricsPathOk()
	return
}

// GetMetricsPathOk returns a tuple with the MetricsPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Job) GetMetricsPathOk() (ret JobGetMetricsPathRetType, ok bool) {
	return getJobGetMetricsPathAttributeTypeOk(o.MetricsPath)
}

// HasMetricsPath returns a boolean if a field has been set.
func (o *Job) HasMetricsPath() bool {
	_, ok := o.GetMetricsPathOk()
	return ok
}

// SetMetricsPath gets a reference to the given string and assigns it to the MetricsPath field.
func (o *Job) SetMetricsPath(v JobGetMetricsPathRetType) {
	setJobGetMetricsPathAttributeType(&o.MetricsPath, v)
}

// GetMetricsRelabelConfigs returns the MetricsRelabelConfigs field value if set, zero value otherwise.
func (o *Job) GetMetricsRelabelConfigs() (res JobGetMetricsRelabelConfigsRetType) {
	res, _ = o.GetMetricsRelabelConfigsOk()
	return
}

// GetMetricsRelabelConfigsOk returns a tuple with the MetricsRelabelConfigs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Job) GetMetricsRelabelConfigsOk() (ret JobGetMetricsRelabelConfigsRetType, ok bool) {
	return getJobGetMetricsRelabelConfigsAttributeTypeOk(o.MetricsRelabelConfigs)
}

// HasMetricsRelabelConfigs returns a boolean if a field has been set.
func (o *Job) HasMetricsRelabelConfigs() bool {
	_, ok := o.GetMetricsRelabelConfigsOk()
	return ok
}

// SetMetricsRelabelConfigs gets a reference to the given []MetricsRelabelConfig and assigns it to the MetricsRelabelConfigs field.
func (o *Job) SetMetricsRelabelConfigs(v JobGetMetricsRelabelConfigsRetType) {
	setJobGetMetricsRelabelConfigsAttributeType(&o.MetricsRelabelConfigs, v)
}

// GetOauth2 returns the Oauth2 field value if set, zero value otherwise.
func (o *Job) GetOauth2() (res JobGetOauth2RetType) {
	res, _ = o.GetOauth2Ok()
	return
}

// GetOauth2Ok returns a tuple with the Oauth2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Job) GetOauth2Ok() (ret JobGetOauth2RetType, ok bool) {
	return getJobGetOauth2AttributeTypeOk(o.Oauth2)
}

// HasOauth2 returns a boolean if a field has been set.
func (o *Job) HasOauth2() bool {
	_, ok := o.GetOauth2Ok()
	return ok
}

// SetOauth2 gets a reference to the given OAuth2 and assigns it to the Oauth2 field.
func (o *Job) SetOauth2(v JobGetOauth2RetType) {
	setJobGetOauth2AttributeType(&o.Oauth2, v)
}

// GetParams returns the Params field value if set, zero value otherwise.
func (o *Job) GetParams() (res JobGetParamsRetType) {
	res, _ = o.GetParamsOk()
	return
}

// GetParamsOk returns a tuple with the Params field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Job) GetParamsOk() (ret JobGetParamsRetType, ok bool) {
	return getJobGetParamsAttributeTypeOk(o.Params)
}

// HasParams returns a boolean if a field has been set.
func (o *Job) HasParams() bool {
	_, ok := o.GetParamsOk()
	return ok
}

// SetParams gets a reference to the given map[string][]string and assigns it to the Params field.
func (o *Job) SetParams(v JobGetParamsRetType) {
	setJobGetParamsAttributeType(&o.Params, v)
}

// GetSampleLimit returns the SampleLimit field value if set, zero value otherwise.
func (o *Job) GetSampleLimit() (res JobGetSampleLimitRetType) {
	res, _ = o.GetSampleLimitOk()
	return
}

// GetSampleLimitOk returns a tuple with the SampleLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Job) GetSampleLimitOk() (ret JobGetSampleLimitRetType, ok bool) {
	return getJobGetSampleLimitAttributeTypeOk(o.SampleLimit)
}

// HasSampleLimit returns a boolean if a field has been set.
func (o *Job) HasSampleLimit() bool {
	_, ok := o.GetSampleLimitOk()
	return ok
}

// SetSampleLimit gets a reference to the given int64 and assigns it to the SampleLimit field.
func (o *Job) SetSampleLimit(v JobGetSampleLimitRetType) {
	setJobGetSampleLimitAttributeType(&o.SampleLimit, v)
}

// GetScheme returns the Scheme field value if set, zero value otherwise.
func (o *Job) GetScheme() (res JobGetSchemeRetType) {
	res, _ = o.GetSchemeOk()
	return
}

// GetSchemeOk returns a tuple with the Scheme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Job) GetSchemeOk() (ret JobGetSchemeRetType, ok bool) {
	return getJobGetSchemeAttributeTypeOk(o.Scheme)
}

// HasScheme returns a boolean if a field has been set.
func (o *Job) HasScheme() bool {
	_, ok := o.GetSchemeOk()
	return ok
}

// SetScheme gets a reference to the given string and assigns it to the Scheme field.
func (o *Job) SetScheme(v JobGetSchemeRetType) {
	setJobGetSchemeAttributeType(&o.Scheme, v)
}

// GetScrapeInterval returns the ScrapeInterval field value
func (o *Job) GetScrapeInterval() (ret JobGetScrapeIntervalRetType) {
	ret, _ = o.GetScrapeIntervalOk()
	return ret
}

// GetScrapeIntervalOk returns a tuple with the ScrapeInterval field value
// and a boolean to check if the value has been set.
func (o *Job) GetScrapeIntervalOk() (ret JobGetScrapeIntervalRetType, ok bool) {
	return getJobGetScrapeIntervalAttributeTypeOk(o.ScrapeInterval)
}

// SetScrapeInterval sets field value
func (o *Job) SetScrapeInterval(v JobGetScrapeIntervalRetType) {
	setJobGetScrapeIntervalAttributeType(&o.ScrapeInterval, v)
}

// GetScrapeTimeout returns the ScrapeTimeout field value
func (o *Job) GetScrapeTimeout() (ret JobGetScrapeTimeoutRetType) {
	ret, _ = o.GetScrapeTimeoutOk()
	return ret
}

// GetScrapeTimeoutOk returns a tuple with the ScrapeTimeout field value
// and a boolean to check if the value has been set.
func (o *Job) GetScrapeTimeoutOk() (ret JobGetScrapeTimeoutRetType, ok bool) {
	return getJobGetScrapeTimeoutAttributeTypeOk(o.ScrapeTimeout)
}

// SetScrapeTimeout sets field value
func (o *Job) SetScrapeTimeout(v JobGetScrapeTimeoutRetType) {
	setJobGetScrapeTimeoutAttributeType(&o.ScrapeTimeout, v)
}

// GetStaticConfigs returns the StaticConfigs field value
func (o *Job) GetStaticConfigs() (ret JobGetStaticConfigsRetType) {
	ret, _ = o.GetStaticConfigsOk()
	return ret
}

// GetStaticConfigsOk returns a tuple with the StaticConfigs field value
// and a boolean to check if the value has been set.
func (o *Job) GetStaticConfigsOk() (ret JobGetStaticConfigsRetType, ok bool) {
	return getJobGetStaticConfigsAttributeTypeOk(o.StaticConfigs)
}

// SetStaticConfigs sets field value
func (o *Job) SetStaticConfigs(v JobGetStaticConfigsRetType) {
	setJobGetStaticConfigsAttributeType(&o.StaticConfigs, v)
}

// GetTlsConfig returns the TlsConfig field value if set, zero value otherwise.
func (o *Job) GetTlsConfig() (res JobGetTlsConfigRetType) {
	res, _ = o.GetTlsConfigOk()
	return
}

// GetTlsConfigOk returns a tuple with the TlsConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Job) GetTlsConfigOk() (ret JobGetTlsConfigRetType, ok bool) {
	return getJobGetTlsConfigAttributeTypeOk(o.TlsConfig)
}

// HasTlsConfig returns a boolean if a field has been set.
func (o *Job) HasTlsConfig() bool {
	_, ok := o.GetTlsConfigOk()
	return ok
}

// SetTlsConfig gets a reference to the given TLSConfig and assigns it to the TlsConfig field.
func (o *Job) SetTlsConfig(v JobGetTlsConfigRetType) {
	setJobGetTlsConfigAttributeType(&o.TlsConfig, v)
}

func (o Job) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getJobGetBasicAuthAttributeTypeOk(o.BasicAuth); ok {
		toSerialize["BasicAuth"] = val
	}
	if val, ok := getJobGetBearerTokenAttributeTypeOk(o.BearerToken); ok {
		toSerialize["BearerToken"] = val
	}
	if val, ok := getJobgetHonorLabelsAttributeTypeOk(o.HonorLabels); ok {
		toSerialize["HonorLabels"] = val
	}
	if val, ok := getJobgetHonorTimeStampsAttributeTypeOk(o.HonorTimeStamps); ok {
		toSerialize["HonorTimeStamps"] = val
	}
	if val, ok := getJobGetHttpSdConfigsAttributeTypeOk(o.HttpSdConfigs); ok {
		toSerialize["HttpSdConfigs"] = val
	}
	if val, ok := getJobGetJobNameAttributeTypeOk(o.JobName); ok {
		toSerialize["JobName"] = val
	}
	if val, ok := getJobGetMetricsPathAttributeTypeOk(o.MetricsPath); ok {
		toSerialize["MetricsPath"] = val
	}
	if val, ok := getJobGetMetricsRelabelConfigsAttributeTypeOk(o.MetricsRelabelConfigs); ok {
		toSerialize["MetricsRelabelConfigs"] = val
	}
	if val, ok := getJobGetOauth2AttributeTypeOk(o.Oauth2); ok {
		toSerialize["Oauth2"] = val
	}
	if val, ok := getJobGetParamsAttributeTypeOk(o.Params); ok {
		toSerialize["Params"] = val
	}
	if val, ok := getJobGetSampleLimitAttributeTypeOk(o.SampleLimit); ok {
		toSerialize["SampleLimit"] = val
	}
	if val, ok := getJobGetSchemeAttributeTypeOk(o.Scheme); ok {
		toSerialize["Scheme"] = val
	}
	if val, ok := getJobGetScrapeIntervalAttributeTypeOk(o.ScrapeInterval); ok {
		toSerialize["ScrapeInterval"] = val
	}
	if val, ok := getJobGetScrapeTimeoutAttributeTypeOk(o.ScrapeTimeout); ok {
		toSerialize["ScrapeTimeout"] = val
	}
	if val, ok := getJobGetStaticConfigsAttributeTypeOk(o.StaticConfigs); ok {
		toSerialize["StaticConfigs"] = val
	}
	if val, ok := getJobGetTlsConfigAttributeTypeOk(o.TlsConfig); ok {
		toSerialize["TlsConfig"] = val
	}
	return toSerialize, nil
}

type NullableJob struct {
	value *Job
	isSet bool
}

func (v NullableJob) Get() *Job {
	return v.value
}

func (v *NullableJob) Set(val *Job) {
	v.value = val
	v.isSet = true
}

func (v NullableJob) IsSet() bool {
	return v.isSet
}

func (v *NullableJob) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJob(val *Job) *NullableJob {
	return &NullableJob{value: val, isSet: true}
}

func (v NullableJob) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJob) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
