/*
STACKIT Observability API

API endpoints for Observability on STACKIT

API version: 1.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package observability

import (
	"encoding/json"
)

// checks if the Alert type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Alert{}

/*
	types and functions for global
*/

// isModel
type AlertGetGlobalAttributeType = *Global
type AlertGetGlobalArgType = Global
type AlertGetGlobalRetType = Global

func getAlertGetGlobalAttributeTypeOk(arg AlertGetGlobalAttributeType) (ret AlertGetGlobalRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setAlertGetGlobalAttributeType(arg *AlertGetGlobalAttributeType, val AlertGetGlobalRetType) {
	*arg = &val
}

/*
	types and functions for inhibitRules
*/

// isArray
type AlertGetInhibitRulesAttributeType = *[]InhibitRules
type AlertGetInhibitRulesArgType = []InhibitRules
type AlertGetInhibitRulesRetType = []InhibitRules

func getAlertGetInhibitRulesAttributeTypeOk(arg AlertGetInhibitRulesAttributeType) (ret AlertGetInhibitRulesRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setAlertGetInhibitRulesAttributeType(arg *AlertGetInhibitRulesAttributeType, val AlertGetInhibitRulesRetType) {
	*arg = &val
}

/*
	types and functions for receivers
*/

// isArray
type AlertGetReceiversAttributeType = *[]Receivers
type AlertGetReceiversArgType = []Receivers
type AlertGetReceiversRetType = []Receivers

func getAlertGetReceiversAttributeTypeOk(arg AlertGetReceiversAttributeType) (ret AlertGetReceiversRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setAlertGetReceiversAttributeType(arg *AlertGetReceiversAttributeType, val AlertGetReceiversRetType) {
	*arg = &val
}

/*
	types and functions for route
*/

// isModel
type AlertGetRouteAttributeType = *Route
type AlertGetRouteArgType = Route
type AlertGetRouteRetType = Route

func getAlertGetRouteAttributeTypeOk(arg AlertGetRouteAttributeType) (ret AlertGetRouteRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setAlertGetRouteAttributeType(arg *AlertGetRouteAttributeType, val AlertGetRouteRetType) {
	*arg = &val
}

// Alert struct for Alert
type Alert struct {
	Global       AlertGetGlobalAttributeType       `json:"global,omitempty"`
	InhibitRules AlertGetInhibitRulesAttributeType `json:"inhibitRules,omitempty"`
	// REQUIRED
	Receivers AlertGetReceiversAttributeType `json:"receivers"`
	// REQUIRED
	Route AlertGetRouteAttributeType `json:"route"`
}

type _Alert Alert

// NewAlert instantiates a new Alert object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlert(receivers AlertGetReceiversArgType, route AlertGetRouteArgType) *Alert {
	this := Alert{}
	setAlertGetReceiversAttributeType(&this.Receivers, receivers)
	setAlertGetRouteAttributeType(&this.Route, route)
	return &this
}

// NewAlertWithDefaults instantiates a new Alert object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlertWithDefaults() *Alert {
	this := Alert{}
	return &this
}

// GetGlobal returns the Global field value if set, zero value otherwise.
func (o *Alert) GetGlobal() (res AlertGetGlobalRetType) {
	res, _ = o.GetGlobalOk()
	return
}

// GetGlobalOk returns a tuple with the Global field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Alert) GetGlobalOk() (ret AlertGetGlobalRetType, ok bool) {
	return getAlertGetGlobalAttributeTypeOk(o.Global)
}

// HasGlobal returns a boolean if a field has been set.
func (o *Alert) HasGlobal() bool {
	_, ok := o.GetGlobalOk()
	return ok
}

// SetGlobal gets a reference to the given Global and assigns it to the Global field.
func (o *Alert) SetGlobal(v AlertGetGlobalRetType) {
	setAlertGetGlobalAttributeType(&o.Global, v)
}

// GetInhibitRules returns the InhibitRules field value if set, zero value otherwise.
func (o *Alert) GetInhibitRules() (res AlertGetInhibitRulesRetType) {
	res, _ = o.GetInhibitRulesOk()
	return
}

// GetInhibitRulesOk returns a tuple with the InhibitRules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Alert) GetInhibitRulesOk() (ret AlertGetInhibitRulesRetType, ok bool) {
	return getAlertGetInhibitRulesAttributeTypeOk(o.InhibitRules)
}

// HasInhibitRules returns a boolean if a field has been set.
func (o *Alert) HasInhibitRules() bool {
	_, ok := o.GetInhibitRulesOk()
	return ok
}

// SetInhibitRules gets a reference to the given []InhibitRules and assigns it to the InhibitRules field.
func (o *Alert) SetInhibitRules(v AlertGetInhibitRulesRetType) {
	setAlertGetInhibitRulesAttributeType(&o.InhibitRules, v)
}

// GetReceivers returns the Receivers field value
func (o *Alert) GetReceivers() (ret AlertGetReceiversRetType) {
	ret, _ = o.GetReceiversOk()
	return ret
}

// GetReceiversOk returns a tuple with the Receivers field value
// and a boolean to check if the value has been set.
func (o *Alert) GetReceiversOk() (ret AlertGetReceiversRetType, ok bool) {
	return getAlertGetReceiversAttributeTypeOk(o.Receivers)
}

// SetReceivers sets field value
func (o *Alert) SetReceivers(v AlertGetReceiversRetType) {
	setAlertGetReceiversAttributeType(&o.Receivers, v)
}

// GetRoute returns the Route field value
func (o *Alert) GetRoute() (ret AlertGetRouteRetType) {
	ret, _ = o.GetRouteOk()
	return ret
}

// GetRouteOk returns a tuple with the Route field value
// and a boolean to check if the value has been set.
func (o *Alert) GetRouteOk() (ret AlertGetRouteRetType, ok bool) {
	return getAlertGetRouteAttributeTypeOk(o.Route)
}

// SetRoute sets field value
func (o *Alert) SetRoute(v AlertGetRouteRetType) {
	setAlertGetRouteAttributeType(&o.Route, v)
}

func (o Alert) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getAlertGetGlobalAttributeTypeOk(o.Global); ok {
		toSerialize["Global"] = val
	}
	if val, ok := getAlertGetInhibitRulesAttributeTypeOk(o.InhibitRules); ok {
		toSerialize["InhibitRules"] = val
	}
	if val, ok := getAlertGetReceiversAttributeTypeOk(o.Receivers); ok {
		toSerialize["Receivers"] = val
	}
	if val, ok := getAlertGetRouteAttributeTypeOk(o.Route); ok {
		toSerialize["Route"] = val
	}
	return toSerialize, nil
}

type NullableAlert struct {
	value *Alert
	isSet bool
}

func (v NullableAlert) Get() *Alert {
	return v.value
}

func (v *NullableAlert) Set(val *Alert) {
	v.value = val
	v.isSet = true
}

func (v NullableAlert) IsSet() bool {
	return v.isSet
}

func (v *NullableAlert) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlert(val *Alert) *NullableAlert {
	return &NullableAlert{value: val, isSet: true}
}

func (v NullableAlert) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlert) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
