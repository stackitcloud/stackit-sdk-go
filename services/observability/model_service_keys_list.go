/*
STACKIT Observability API

API endpoints for Observability on STACKIT

API version: 1.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package observability

import (
	"encoding/json"
)

// checks if the ServiceKeysList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceKeysList{}

/*
	types and functions for credentialsInfo
*/

// isContainer
type ServiceKeysListGetCredentialsInfoAttributeType = *map[string]string
type ServiceKeysListGetCredentialsInfoArgType = map[string]string
type ServiceKeysListGetCredentialsInfoRetType = map[string]string

func getServiceKeysListGetCredentialsInfoAttributeTypeOk(arg ServiceKeysListGetCredentialsInfoAttributeType) (ret ServiceKeysListGetCredentialsInfoRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setServiceKeysListGetCredentialsInfoAttributeType(arg *ServiceKeysListGetCredentialsInfoAttributeType, val ServiceKeysListGetCredentialsInfoRetType) {
	*arg = &val
}

/*
	types and functions for id
*/

// isNotNullableString
type ServiceKeysListGetIdAttributeType = *string

func getServiceKeysListGetIdAttributeTypeOk(arg ServiceKeysListGetIdAttributeType) (ret ServiceKeysListGetIdRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setServiceKeysListGetIdAttributeType(arg *ServiceKeysListGetIdAttributeType, val ServiceKeysListGetIdRetType) {
	*arg = &val
}

type ServiceKeysListGetIdArgType = string
type ServiceKeysListGetIdRetType = string

/*
	types and functions for name
*/

// isNotNullableString
type ServiceKeysListGetNameAttributeType = *string

func getServiceKeysListGetNameAttributeTypeOk(arg ServiceKeysListGetNameAttributeType) (ret ServiceKeysListGetNameRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setServiceKeysListGetNameAttributeType(arg *ServiceKeysListGetNameAttributeType, val ServiceKeysListGetNameRetType) {
	*arg = &val
}

type ServiceKeysListGetNameArgType = string
type ServiceKeysListGetNameRetType = string

// ServiceKeysList struct for ServiceKeysList
type ServiceKeysList struct {
	CredentialsInfo ServiceKeysListGetCredentialsInfoAttributeType `json:"credentialsInfo,omitempty"`
	// REQUIRED
	Id ServiceKeysListGetIdAttributeType `json:"id" required:"true"`
	// REQUIRED
	Name ServiceKeysListGetNameAttributeType `json:"name" required:"true"`
}

type _ServiceKeysList ServiceKeysList

// NewServiceKeysList instantiates a new ServiceKeysList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceKeysList(id ServiceKeysListGetIdArgType, name ServiceKeysListGetNameArgType) *ServiceKeysList {
	this := ServiceKeysList{}
	setServiceKeysListGetIdAttributeType(&this.Id, id)
	setServiceKeysListGetNameAttributeType(&this.Name, name)
	return &this
}

// NewServiceKeysListWithDefaults instantiates a new ServiceKeysList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceKeysListWithDefaults() *ServiceKeysList {
	this := ServiceKeysList{}
	return &this
}

// GetCredentialsInfo returns the CredentialsInfo field value if set, zero value otherwise.
func (o *ServiceKeysList) GetCredentialsInfo() (res ServiceKeysListGetCredentialsInfoRetType) {
	res, _ = o.GetCredentialsInfoOk()
	return
}

// GetCredentialsInfoOk returns a tuple with the CredentialsInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceKeysList) GetCredentialsInfoOk() (ret ServiceKeysListGetCredentialsInfoRetType, ok bool) {
	return getServiceKeysListGetCredentialsInfoAttributeTypeOk(o.CredentialsInfo)
}

// HasCredentialsInfo returns a boolean if a field has been set.
func (o *ServiceKeysList) HasCredentialsInfo() bool {
	_, ok := o.GetCredentialsInfoOk()
	return ok
}

// SetCredentialsInfo gets a reference to the given map[string]string and assigns it to the CredentialsInfo field.
func (o *ServiceKeysList) SetCredentialsInfo(v ServiceKeysListGetCredentialsInfoRetType) {
	setServiceKeysListGetCredentialsInfoAttributeType(&o.CredentialsInfo, v)
}

// GetId returns the Id field value
func (o *ServiceKeysList) GetId() (ret ServiceKeysListGetIdRetType) {
	ret, _ = o.GetIdOk()
	return ret
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ServiceKeysList) GetIdOk() (ret ServiceKeysListGetIdRetType, ok bool) {
	return getServiceKeysListGetIdAttributeTypeOk(o.Id)
}

// SetId sets field value
func (o *ServiceKeysList) SetId(v ServiceKeysListGetIdRetType) {
	setServiceKeysListGetIdAttributeType(&o.Id, v)
}

// GetName returns the Name field value
func (o *ServiceKeysList) GetName() (ret ServiceKeysListGetNameRetType) {
	ret, _ = o.GetNameOk()
	return ret
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ServiceKeysList) GetNameOk() (ret ServiceKeysListGetNameRetType, ok bool) {
	return getServiceKeysListGetNameAttributeTypeOk(o.Name)
}

// SetName sets field value
func (o *ServiceKeysList) SetName(v ServiceKeysListGetNameRetType) {
	setServiceKeysListGetNameAttributeType(&o.Name, v)
}

func (o ServiceKeysList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getServiceKeysListGetCredentialsInfoAttributeTypeOk(o.CredentialsInfo); ok {
		toSerialize["CredentialsInfo"] = val
	}
	if val, ok := getServiceKeysListGetIdAttributeTypeOk(o.Id); ok {
		toSerialize["Id"] = val
	}
	if val, ok := getServiceKeysListGetNameAttributeTypeOk(o.Name); ok {
		toSerialize["Name"] = val
	}
	return toSerialize, nil
}

type NullableServiceKeysList struct {
	value *ServiceKeysList
	isSet bool
}

func (v NullableServiceKeysList) Get() *ServiceKeysList {
	return v.value
}

func (v *NullableServiceKeysList) Set(val *ServiceKeysList) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceKeysList) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceKeysList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceKeysList(val *ServiceKeysList) *NullableServiceKeysList {
	return &NullableServiceKeysList{value: val, isSet: true}
}

func (v NullableServiceKeysList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceKeysList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
