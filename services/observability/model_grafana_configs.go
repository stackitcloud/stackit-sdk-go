/*
STACKIT Observability API

API endpoints for Observability on STACKIT

API version: 1.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package observability

import (
	"encoding/json"
)

// checks if the GrafanaConfigs type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GrafanaConfigs{}

/*
	types and functions for genericOauth
*/

// isModel
type GrafanaConfigsGetGenericOauthAttributeType = *GrafanaOauth
type GrafanaConfigsGetGenericOauthArgType = GrafanaOauth
type GrafanaConfigsGetGenericOauthRetType = GrafanaOauth

func getGrafanaConfigsGetGenericOauthAttributeTypeOk(arg GrafanaConfigsGetGenericOauthAttributeType) (ret GrafanaConfigsGetGenericOauthRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setGrafanaConfigsGetGenericOauthAttributeType(arg *GrafanaConfigsGetGenericOauthAttributeType, val GrafanaConfigsGetGenericOauthRetType) {
	*arg = &val
}

/*
	types and functions for message
*/

// isNotNullableString
type GrafanaConfigsGetMessageAttributeType = *string

func getGrafanaConfigsGetMessageAttributeTypeOk(arg GrafanaConfigsGetMessageAttributeType) (ret GrafanaConfigsGetMessageRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setGrafanaConfigsGetMessageAttributeType(arg *GrafanaConfigsGetMessageAttributeType, val GrafanaConfigsGetMessageRetType) {
	*arg = &val
}

type GrafanaConfigsGetMessageArgType = string
type GrafanaConfigsGetMessageRetType = string

/*
	types and functions for publicReadAccess
*/

// isBoolean
type GrafanaConfigsgetPublicReadAccessAttributeType = *bool
type GrafanaConfigsgetPublicReadAccessArgType = bool
type GrafanaConfigsgetPublicReadAccessRetType = bool

func getGrafanaConfigsgetPublicReadAccessAttributeTypeOk(arg GrafanaConfigsgetPublicReadAccessAttributeType) (ret GrafanaConfigsgetPublicReadAccessRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setGrafanaConfigsgetPublicReadAccessAttributeType(arg *GrafanaConfigsgetPublicReadAccessAttributeType, val GrafanaConfigsgetPublicReadAccessRetType) {
	*arg = &val
}

/*
	types and functions for useStackitSso
*/

// isBoolean
type GrafanaConfigsgetUseStackitSsoAttributeType = *bool
type GrafanaConfigsgetUseStackitSsoArgType = bool
type GrafanaConfigsgetUseStackitSsoRetType = bool

func getGrafanaConfigsgetUseStackitSsoAttributeTypeOk(arg GrafanaConfigsgetUseStackitSsoAttributeType) (ret GrafanaConfigsgetUseStackitSsoRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setGrafanaConfigsgetUseStackitSsoAttributeType(arg *GrafanaConfigsgetUseStackitSsoAttributeType, val GrafanaConfigsgetUseStackitSsoRetType) {
	*arg = &val
}

// GrafanaConfigs struct for GrafanaConfigs
type GrafanaConfigs struct {
	GenericOauth GrafanaConfigsGetGenericOauthAttributeType `json:"genericOauth,omitempty"`
	// REQUIRED
	Message          GrafanaConfigsGetMessageAttributeType          `json:"message"`
	PublicReadAccess GrafanaConfigsgetPublicReadAccessAttributeType `json:"publicReadAccess,omitempty"`
	UseStackitSso    GrafanaConfigsgetUseStackitSsoAttributeType    `json:"useStackitSso,omitempty"`
}

type _GrafanaConfigs GrafanaConfigs

// NewGrafanaConfigs instantiates a new GrafanaConfigs object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGrafanaConfigs(message GrafanaConfigsGetMessageArgType) *GrafanaConfigs {
	this := GrafanaConfigs{}
	setGrafanaConfigsGetMessageAttributeType(&this.Message, message)
	return &this
}

// NewGrafanaConfigsWithDefaults instantiates a new GrafanaConfigs object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGrafanaConfigsWithDefaults() *GrafanaConfigs {
	this := GrafanaConfigs{}
	return &this
}

// GetGenericOauth returns the GenericOauth field value if set, zero value otherwise.
func (o *GrafanaConfigs) GetGenericOauth() (res GrafanaConfigsGetGenericOauthRetType) {
	res, _ = o.GetGenericOauthOk()
	return
}

// GetGenericOauthOk returns a tuple with the GenericOauth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GrafanaConfigs) GetGenericOauthOk() (ret GrafanaConfigsGetGenericOauthRetType, ok bool) {
	return getGrafanaConfigsGetGenericOauthAttributeTypeOk(o.GenericOauth)
}

// HasGenericOauth returns a boolean if a field has been set.
func (o *GrafanaConfigs) HasGenericOauth() bool {
	_, ok := o.GetGenericOauthOk()
	return ok
}

// SetGenericOauth gets a reference to the given GrafanaOauth and assigns it to the GenericOauth field.
func (o *GrafanaConfigs) SetGenericOauth(v GrafanaConfigsGetGenericOauthRetType) {
	setGrafanaConfigsGetGenericOauthAttributeType(&o.GenericOauth, v)
}

// GetMessage returns the Message field value
func (o *GrafanaConfigs) GetMessage() (ret GrafanaConfigsGetMessageRetType) {
	ret, _ = o.GetMessageOk()
	return ret
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *GrafanaConfigs) GetMessageOk() (ret GrafanaConfigsGetMessageRetType, ok bool) {
	return getGrafanaConfigsGetMessageAttributeTypeOk(o.Message)
}

// SetMessage sets field value
func (o *GrafanaConfigs) SetMessage(v GrafanaConfigsGetMessageRetType) {
	setGrafanaConfigsGetMessageAttributeType(&o.Message, v)
}

// GetPublicReadAccess returns the PublicReadAccess field value if set, zero value otherwise.
func (o *GrafanaConfigs) GetPublicReadAccess() (res GrafanaConfigsgetPublicReadAccessRetType) {
	res, _ = o.GetPublicReadAccessOk()
	return
}

// GetPublicReadAccessOk returns a tuple with the PublicReadAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GrafanaConfigs) GetPublicReadAccessOk() (ret GrafanaConfigsgetPublicReadAccessRetType, ok bool) {
	return getGrafanaConfigsgetPublicReadAccessAttributeTypeOk(o.PublicReadAccess)
}

// HasPublicReadAccess returns a boolean if a field has been set.
func (o *GrafanaConfigs) HasPublicReadAccess() bool {
	_, ok := o.GetPublicReadAccessOk()
	return ok
}

// SetPublicReadAccess gets a reference to the given bool and assigns it to the PublicReadAccess field.
func (o *GrafanaConfigs) SetPublicReadAccess(v GrafanaConfigsgetPublicReadAccessRetType) {
	setGrafanaConfigsgetPublicReadAccessAttributeType(&o.PublicReadAccess, v)
}

// GetUseStackitSso returns the UseStackitSso field value if set, zero value otherwise.
func (o *GrafanaConfigs) GetUseStackitSso() (res GrafanaConfigsgetUseStackitSsoRetType) {
	res, _ = o.GetUseStackitSsoOk()
	return
}

// GetUseStackitSsoOk returns a tuple with the UseStackitSso field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GrafanaConfigs) GetUseStackitSsoOk() (ret GrafanaConfigsgetUseStackitSsoRetType, ok bool) {
	return getGrafanaConfigsgetUseStackitSsoAttributeTypeOk(o.UseStackitSso)
}

// HasUseStackitSso returns a boolean if a field has been set.
func (o *GrafanaConfigs) HasUseStackitSso() bool {
	_, ok := o.GetUseStackitSsoOk()
	return ok
}

// SetUseStackitSso gets a reference to the given bool and assigns it to the UseStackitSso field.
func (o *GrafanaConfigs) SetUseStackitSso(v GrafanaConfigsgetUseStackitSsoRetType) {
	setGrafanaConfigsgetUseStackitSsoAttributeType(&o.UseStackitSso, v)
}

func (o GrafanaConfigs) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getGrafanaConfigsGetGenericOauthAttributeTypeOk(o.GenericOauth); ok {
		toSerialize["GenericOauth"] = val
	}
	if val, ok := getGrafanaConfigsGetMessageAttributeTypeOk(o.Message); ok {
		toSerialize["Message"] = val
	}
	if val, ok := getGrafanaConfigsgetPublicReadAccessAttributeTypeOk(o.PublicReadAccess); ok {
		toSerialize["PublicReadAccess"] = val
	}
	if val, ok := getGrafanaConfigsgetUseStackitSsoAttributeTypeOk(o.UseStackitSso); ok {
		toSerialize["UseStackitSso"] = val
	}
	return toSerialize, nil
}

type NullableGrafanaConfigs struct {
	value *GrafanaConfigs
	isSet bool
}

func (v NullableGrafanaConfigs) Get() *GrafanaConfigs {
	return v.value
}

func (v *NullableGrafanaConfigs) Set(val *GrafanaConfigs) {
	v.value = val
	v.isSet = true
}

func (v NullableGrafanaConfigs) IsSet() bool {
	return v.isSet
}

func (v *NullableGrafanaConfigs) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGrafanaConfigs(val *GrafanaConfigs) *NullableGrafanaConfigs {
	return &NullableGrafanaConfigs{value: val, isSet: true}
}

func (v NullableGrafanaConfigs) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGrafanaConfigs) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
