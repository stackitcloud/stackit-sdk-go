/*
STACKIT Observability API

API endpoints for Observability on STACKIT

API version: 1.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package observability

import (
	"encoding/json"
)

// checks if the UpdateLogsAlertgroupPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateLogsAlertgroupPayload{}

/*
	types and functions for interval
*/

// isNotNullableString
type UpdateLogsAlertgroupPayloadGetIntervalAttributeType = *string

func getUpdateLogsAlertgroupPayloadGetIntervalAttributeTypeOk(arg UpdateLogsAlertgroupPayloadGetIntervalAttributeType) (ret UpdateLogsAlertgroupPayloadGetIntervalRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setUpdateLogsAlertgroupPayloadGetIntervalAttributeType(arg *UpdateLogsAlertgroupPayloadGetIntervalAttributeType, val UpdateLogsAlertgroupPayloadGetIntervalRetType) {
	*arg = &val
}

type UpdateLogsAlertgroupPayloadGetIntervalArgType = string
type UpdateLogsAlertgroupPayloadGetIntervalRetType = string

/*
	types and functions for rules
*/

// isArray
type UpdateLogsAlertgroupPayloadGetRulesAttributeType = *[]UpdateAlertgroupsRequestInnerRulesInner
type UpdateLogsAlertgroupPayloadGetRulesArgType = []UpdateAlertgroupsRequestInnerRulesInner
type UpdateLogsAlertgroupPayloadGetRulesRetType = []UpdateAlertgroupsRequestInnerRulesInner

func getUpdateLogsAlertgroupPayloadGetRulesAttributeTypeOk(arg UpdateLogsAlertgroupPayloadGetRulesAttributeType) (ret UpdateLogsAlertgroupPayloadGetRulesRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setUpdateLogsAlertgroupPayloadGetRulesAttributeType(arg *UpdateLogsAlertgroupPayloadGetRulesAttributeType, val UpdateLogsAlertgroupPayloadGetRulesRetType) {
	*arg = &val
}

// UpdateLogsAlertgroupPayload Alert group that should be created or updated `Additional Validators:` * total config should not be bigger than 500000 characters as string since this the limitation of prometheus.
type UpdateLogsAlertgroupPayload struct {
	// How often rules in the group are evaluated. `Additional Validators:` * must be a valid time string * should be >=60s
	Interval UpdateLogsAlertgroupPayloadGetIntervalAttributeType `json:"interval,omitempty"`
	// rules for the alert group
	// REQUIRED
	Rules UpdateLogsAlertgroupPayloadGetRulesAttributeType `json:"rules"`
}

type _UpdateLogsAlertgroupPayload UpdateLogsAlertgroupPayload

// NewUpdateLogsAlertgroupPayload instantiates a new UpdateLogsAlertgroupPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateLogsAlertgroupPayload(rules UpdateLogsAlertgroupPayloadGetRulesArgType) *UpdateLogsAlertgroupPayload {
	this := UpdateLogsAlertgroupPayload{}
	setUpdateLogsAlertgroupPayloadGetRulesAttributeType(&this.Rules, rules)
	return &this
}

// NewUpdateLogsAlertgroupPayloadWithDefaults instantiates a new UpdateLogsAlertgroupPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateLogsAlertgroupPayloadWithDefaults() *UpdateLogsAlertgroupPayload {
	this := UpdateLogsAlertgroupPayload{}
	var interval string = "60s"
	this.Interval = &interval
	return &this
}

// GetInterval returns the Interval field value if set, zero value otherwise.
func (o *UpdateLogsAlertgroupPayload) GetInterval() (res UpdateLogsAlertgroupPayloadGetIntervalRetType) {
	res, _ = o.GetIntervalOk()
	return
}

// GetIntervalOk returns a tuple with the Interval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLogsAlertgroupPayload) GetIntervalOk() (ret UpdateLogsAlertgroupPayloadGetIntervalRetType, ok bool) {
	return getUpdateLogsAlertgroupPayloadGetIntervalAttributeTypeOk(o.Interval)
}

// HasInterval returns a boolean if a field has been set.
func (o *UpdateLogsAlertgroupPayload) HasInterval() bool {
	_, ok := o.GetIntervalOk()
	return ok
}

// SetInterval gets a reference to the given string and assigns it to the Interval field.
func (o *UpdateLogsAlertgroupPayload) SetInterval(v UpdateLogsAlertgroupPayloadGetIntervalRetType) {
	setUpdateLogsAlertgroupPayloadGetIntervalAttributeType(&o.Interval, v)
}

// GetRules returns the Rules field value
func (o *UpdateLogsAlertgroupPayload) GetRules() (ret UpdateLogsAlertgroupPayloadGetRulesRetType) {
	ret, _ = o.GetRulesOk()
	return ret
}

// GetRulesOk returns a tuple with the Rules field value
// and a boolean to check if the value has been set.
func (o *UpdateLogsAlertgroupPayload) GetRulesOk() (ret UpdateLogsAlertgroupPayloadGetRulesRetType, ok bool) {
	return getUpdateLogsAlertgroupPayloadGetRulesAttributeTypeOk(o.Rules)
}

// SetRules sets field value
func (o *UpdateLogsAlertgroupPayload) SetRules(v UpdateLogsAlertgroupPayloadGetRulesRetType) {
	setUpdateLogsAlertgroupPayloadGetRulesAttributeType(&o.Rules, v)
}

func (o UpdateLogsAlertgroupPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getUpdateLogsAlertgroupPayloadGetIntervalAttributeTypeOk(o.Interval); ok {
		toSerialize["Interval"] = val
	}
	if val, ok := getUpdateLogsAlertgroupPayloadGetRulesAttributeTypeOk(o.Rules); ok {
		toSerialize["Rules"] = val
	}
	return toSerialize, nil
}

type NullableUpdateLogsAlertgroupPayload struct {
	value *UpdateLogsAlertgroupPayload
	isSet bool
}

func (v NullableUpdateLogsAlertgroupPayload) Get() *UpdateLogsAlertgroupPayload {
	return v.value
}

func (v *NullableUpdateLogsAlertgroupPayload) Set(val *UpdateLogsAlertgroupPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateLogsAlertgroupPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateLogsAlertgroupPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateLogsAlertgroupPayload(val *UpdateLogsAlertgroupPayload) *NullableUpdateLogsAlertgroupPayload {
	return &NullableUpdateLogsAlertgroupPayload{value: val, isSet: true}
}

func (v NullableUpdateLogsAlertgroupPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateLogsAlertgroupPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
