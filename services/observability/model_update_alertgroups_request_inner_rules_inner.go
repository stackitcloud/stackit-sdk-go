/*
STACKIT Observability API

API endpoints for Observability on STACKIT

API version: 1.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package observability

import (
	"encoding/json"
)

// checks if the UpdateAlertgroupsRequestInnerRulesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateAlertgroupsRequestInnerRulesInner{}

/*
	types and functions for alert
*/

// isNotNullableString
type UpdateAlertgroupsRequestInnerRulesInnerGetAlertAttributeType = *string

func getUpdateAlertgroupsRequestInnerRulesInnerGetAlertAttributeTypeOk(arg UpdateAlertgroupsRequestInnerRulesInnerGetAlertAttributeType) (ret UpdateAlertgroupsRequestInnerRulesInnerGetAlertRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setUpdateAlertgroupsRequestInnerRulesInnerGetAlertAttributeType(arg *UpdateAlertgroupsRequestInnerRulesInnerGetAlertAttributeType, val UpdateAlertgroupsRequestInnerRulesInnerGetAlertRetType) {
	*arg = &val
}

type UpdateAlertgroupsRequestInnerRulesInnerGetAlertArgType = string
type UpdateAlertgroupsRequestInnerRulesInnerGetAlertRetType = string

/*
	types and functions for annotations
*/

// isFreeform
type UpdateAlertgroupsRequestInnerRulesInnerGetAnnotationsAttributeType = *map[string]interface{}
type UpdateAlertgroupsRequestInnerRulesInnerGetAnnotationsArgType = map[string]interface{}
type UpdateAlertgroupsRequestInnerRulesInnerGetAnnotationsRetType = map[string]interface{}

func getUpdateAlertgroupsRequestInnerRulesInnerGetAnnotationsAttributeTypeOk(arg UpdateAlertgroupsRequestInnerRulesInnerGetAnnotationsAttributeType) (ret UpdateAlertgroupsRequestInnerRulesInnerGetAnnotationsRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setUpdateAlertgroupsRequestInnerRulesInnerGetAnnotationsAttributeType(arg *UpdateAlertgroupsRequestInnerRulesInnerGetAnnotationsAttributeType, val UpdateAlertgroupsRequestInnerRulesInnerGetAnnotationsRetType) {
	*arg = &val
}

/*
	types and functions for expr
*/

// isNotNullableString
type UpdateAlertgroupsRequestInnerRulesInnerGetExprAttributeType = *string

func getUpdateAlertgroupsRequestInnerRulesInnerGetExprAttributeTypeOk(arg UpdateAlertgroupsRequestInnerRulesInnerGetExprAttributeType) (ret UpdateAlertgroupsRequestInnerRulesInnerGetExprRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setUpdateAlertgroupsRequestInnerRulesInnerGetExprAttributeType(arg *UpdateAlertgroupsRequestInnerRulesInnerGetExprAttributeType, val UpdateAlertgroupsRequestInnerRulesInnerGetExprRetType) {
	*arg = &val
}

type UpdateAlertgroupsRequestInnerRulesInnerGetExprArgType = string
type UpdateAlertgroupsRequestInnerRulesInnerGetExprRetType = string

/*
	types and functions for for
*/

// isNotNullableString
type UpdateAlertgroupsRequestInnerRulesInnerGetForAttributeType = *string

func getUpdateAlertgroupsRequestInnerRulesInnerGetForAttributeTypeOk(arg UpdateAlertgroupsRequestInnerRulesInnerGetForAttributeType) (ret UpdateAlertgroupsRequestInnerRulesInnerGetForRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setUpdateAlertgroupsRequestInnerRulesInnerGetForAttributeType(arg *UpdateAlertgroupsRequestInnerRulesInnerGetForAttributeType, val UpdateAlertgroupsRequestInnerRulesInnerGetForRetType) {
	*arg = &val
}

type UpdateAlertgroupsRequestInnerRulesInnerGetForArgType = string
type UpdateAlertgroupsRequestInnerRulesInnerGetForRetType = string

/*
	types and functions for labels
*/

// isFreeform
type UpdateAlertgroupsRequestInnerRulesInnerGetLabelsAttributeType = *map[string]interface{}
type UpdateAlertgroupsRequestInnerRulesInnerGetLabelsArgType = map[string]interface{}
type UpdateAlertgroupsRequestInnerRulesInnerGetLabelsRetType = map[string]interface{}

func getUpdateAlertgroupsRequestInnerRulesInnerGetLabelsAttributeTypeOk(arg UpdateAlertgroupsRequestInnerRulesInnerGetLabelsAttributeType) (ret UpdateAlertgroupsRequestInnerRulesInnerGetLabelsRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setUpdateAlertgroupsRequestInnerRulesInnerGetLabelsAttributeType(arg *UpdateAlertgroupsRequestInnerRulesInnerGetLabelsAttributeType, val UpdateAlertgroupsRequestInnerRulesInnerGetLabelsRetType) {
	*arg = &val
}

// UpdateAlertgroupsRequestInnerRulesInner Alert rule. `Additional Validators:` * total config (all alert groups/rules) should not be bigger than 500000 characters as string since this the limitation of prometheus.
type UpdateAlertgroupsRequestInnerRulesInner struct {
	// The name of the alert. `Additional Validators:` * is the identifier and so unique in the group * should only include the characters: a-zA-Z0-9-
	// REQUIRED
	Alert UpdateAlertgroupsRequestInnerRulesInnerGetAlertAttributeType `json:"alert" required:"true"`
	// map of key:value. Annotations to add to each alert. `Additional Validators:` * should not contain more than 5 keys * each key and value should not be longer than 200 characters
	Annotations UpdateAlertgroupsRequestInnerRulesInnerGetAnnotationsAttributeType `json:"annotations,omitempty"`
	// The PromQL expression to evaluate. Every evaluation cycle this is evaluated at the current time, and all resultant time series become pending/firing alerts.
	// REQUIRED
	Expr UpdateAlertgroupsRequestInnerRulesInnerGetExprAttributeType `json:"expr" required:"true"`
	// Alerts are considered firing once they have been returned for this long. Alerts which have not yet fired for long enough are considered pending. `Additional Validators:` * must be a valid time string
	For UpdateAlertgroupsRequestInnerRulesInnerGetForAttributeType `json:"for,omitempty"`
	// map of key:value. Labels to add or overwrite for each alert. `Additional Validators:` * should not contain more than 10 keys * each key and value should not be longer than 200 characters
	Labels UpdateAlertgroupsRequestInnerRulesInnerGetLabelsAttributeType `json:"labels,omitempty"`
}

type _UpdateAlertgroupsRequestInnerRulesInner UpdateAlertgroupsRequestInnerRulesInner

// NewUpdateAlertgroupsRequestInnerRulesInner instantiates a new UpdateAlertgroupsRequestInnerRulesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateAlertgroupsRequestInnerRulesInner(alert UpdateAlertgroupsRequestInnerRulesInnerGetAlertArgType, expr UpdateAlertgroupsRequestInnerRulesInnerGetExprArgType) *UpdateAlertgroupsRequestInnerRulesInner {
	this := UpdateAlertgroupsRequestInnerRulesInner{}
	setUpdateAlertgroupsRequestInnerRulesInnerGetAlertAttributeType(&this.Alert, alert)
	setUpdateAlertgroupsRequestInnerRulesInnerGetExprAttributeType(&this.Expr, expr)
	return &this
}

// NewUpdateAlertgroupsRequestInnerRulesInnerWithDefaults instantiates a new UpdateAlertgroupsRequestInnerRulesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateAlertgroupsRequestInnerRulesInnerWithDefaults() *UpdateAlertgroupsRequestInnerRulesInner {
	this := UpdateAlertgroupsRequestInnerRulesInner{}
	var for_ string = "0s"
	this.For = &for_
	return &this
}

// GetAlert returns the Alert field value
func (o *UpdateAlertgroupsRequestInnerRulesInner) GetAlert() (ret UpdateAlertgroupsRequestInnerRulesInnerGetAlertRetType) {
	ret, _ = o.GetAlertOk()
	return ret
}

// GetAlertOk returns a tuple with the Alert field value
// and a boolean to check if the value has been set.
func (o *UpdateAlertgroupsRequestInnerRulesInner) GetAlertOk() (ret UpdateAlertgroupsRequestInnerRulesInnerGetAlertRetType, ok bool) {
	return getUpdateAlertgroupsRequestInnerRulesInnerGetAlertAttributeTypeOk(o.Alert)
}

// SetAlert sets field value
func (o *UpdateAlertgroupsRequestInnerRulesInner) SetAlert(v UpdateAlertgroupsRequestInnerRulesInnerGetAlertRetType) {
	setUpdateAlertgroupsRequestInnerRulesInnerGetAlertAttributeType(&o.Alert, v)
}

// GetAnnotations returns the Annotations field value if set, zero value otherwise.
func (o *UpdateAlertgroupsRequestInnerRulesInner) GetAnnotations() (res UpdateAlertgroupsRequestInnerRulesInnerGetAnnotationsRetType) {
	res, _ = o.GetAnnotationsOk()
	return
}

// GetAnnotationsOk returns a tuple with the Annotations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAlertgroupsRequestInnerRulesInner) GetAnnotationsOk() (ret UpdateAlertgroupsRequestInnerRulesInnerGetAnnotationsRetType, ok bool) {
	return getUpdateAlertgroupsRequestInnerRulesInnerGetAnnotationsAttributeTypeOk(o.Annotations)
}

// HasAnnotations returns a boolean if a field has been set.
func (o *UpdateAlertgroupsRequestInnerRulesInner) HasAnnotations() bool {
	_, ok := o.GetAnnotationsOk()
	return ok
}

// SetAnnotations gets a reference to the given map[string]interface{} and assigns it to the Annotations field.
func (o *UpdateAlertgroupsRequestInnerRulesInner) SetAnnotations(v UpdateAlertgroupsRequestInnerRulesInnerGetAnnotationsRetType) {
	setUpdateAlertgroupsRequestInnerRulesInnerGetAnnotationsAttributeType(&o.Annotations, v)
}

// GetExpr returns the Expr field value
func (o *UpdateAlertgroupsRequestInnerRulesInner) GetExpr() (ret UpdateAlertgroupsRequestInnerRulesInnerGetExprRetType) {
	ret, _ = o.GetExprOk()
	return ret
}

// GetExprOk returns a tuple with the Expr field value
// and a boolean to check if the value has been set.
func (o *UpdateAlertgroupsRequestInnerRulesInner) GetExprOk() (ret UpdateAlertgroupsRequestInnerRulesInnerGetExprRetType, ok bool) {
	return getUpdateAlertgroupsRequestInnerRulesInnerGetExprAttributeTypeOk(o.Expr)
}

// SetExpr sets field value
func (o *UpdateAlertgroupsRequestInnerRulesInner) SetExpr(v UpdateAlertgroupsRequestInnerRulesInnerGetExprRetType) {
	setUpdateAlertgroupsRequestInnerRulesInnerGetExprAttributeType(&o.Expr, v)
}

// GetFor returns the For field value if set, zero value otherwise.
func (o *UpdateAlertgroupsRequestInnerRulesInner) GetFor() (res UpdateAlertgroupsRequestInnerRulesInnerGetForRetType) {
	res, _ = o.GetForOk()
	return
}

// GetForOk returns a tuple with the For field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAlertgroupsRequestInnerRulesInner) GetForOk() (ret UpdateAlertgroupsRequestInnerRulesInnerGetForRetType, ok bool) {
	return getUpdateAlertgroupsRequestInnerRulesInnerGetForAttributeTypeOk(o.For)
}

// HasFor returns a boolean if a field has been set.
func (o *UpdateAlertgroupsRequestInnerRulesInner) HasFor() bool {
	_, ok := o.GetForOk()
	return ok
}

// SetFor gets a reference to the given string and assigns it to the For field.
func (o *UpdateAlertgroupsRequestInnerRulesInner) SetFor(v UpdateAlertgroupsRequestInnerRulesInnerGetForRetType) {
	setUpdateAlertgroupsRequestInnerRulesInnerGetForAttributeType(&o.For, v)
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *UpdateAlertgroupsRequestInnerRulesInner) GetLabels() (res UpdateAlertgroupsRequestInnerRulesInnerGetLabelsRetType) {
	res, _ = o.GetLabelsOk()
	return
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAlertgroupsRequestInnerRulesInner) GetLabelsOk() (ret UpdateAlertgroupsRequestInnerRulesInnerGetLabelsRetType, ok bool) {
	return getUpdateAlertgroupsRequestInnerRulesInnerGetLabelsAttributeTypeOk(o.Labels)
}

// HasLabels returns a boolean if a field has been set.
func (o *UpdateAlertgroupsRequestInnerRulesInner) HasLabels() bool {
	_, ok := o.GetLabelsOk()
	return ok
}

// SetLabels gets a reference to the given map[string]interface{} and assigns it to the Labels field.
func (o *UpdateAlertgroupsRequestInnerRulesInner) SetLabels(v UpdateAlertgroupsRequestInnerRulesInnerGetLabelsRetType) {
	setUpdateAlertgroupsRequestInnerRulesInnerGetLabelsAttributeType(&o.Labels, v)
}

func (o UpdateAlertgroupsRequestInnerRulesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getUpdateAlertgroupsRequestInnerRulesInnerGetAlertAttributeTypeOk(o.Alert); ok {
		toSerialize["Alert"] = val
	}
	if val, ok := getUpdateAlertgroupsRequestInnerRulesInnerGetAnnotationsAttributeTypeOk(o.Annotations); ok {
		toSerialize["Annotations"] = val
	}
	if val, ok := getUpdateAlertgroupsRequestInnerRulesInnerGetExprAttributeTypeOk(o.Expr); ok {
		toSerialize["Expr"] = val
	}
	if val, ok := getUpdateAlertgroupsRequestInnerRulesInnerGetForAttributeTypeOk(o.For); ok {
		toSerialize["For"] = val
	}
	if val, ok := getUpdateAlertgroupsRequestInnerRulesInnerGetLabelsAttributeTypeOk(o.Labels); ok {
		toSerialize["Labels"] = val
	}
	return toSerialize, nil
}

type NullableUpdateAlertgroupsRequestInnerRulesInner struct {
	value *UpdateAlertgroupsRequestInnerRulesInner
	isSet bool
}

func (v NullableUpdateAlertgroupsRequestInnerRulesInner) Get() *UpdateAlertgroupsRequestInnerRulesInner {
	return v.value
}

func (v *NullableUpdateAlertgroupsRequestInnerRulesInner) Set(val *UpdateAlertgroupsRequestInnerRulesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateAlertgroupsRequestInnerRulesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateAlertgroupsRequestInnerRulesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateAlertgroupsRequestInnerRulesInner(val *UpdateAlertgroupsRequestInnerRulesInner) *NullableUpdateAlertgroupsRequestInnerRulesInner {
	return &NullableUpdateAlertgroupsRequestInnerRulesInner{value: val, isSet: true}
}

func (v NullableUpdateAlertgroupsRequestInnerRulesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateAlertgroupsRequestInnerRulesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
