/*
STACKIT Observability API

API endpoints for Observability on STACKIT

API version: 1.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package observability

import (
	"encoding/json"
)

// checks if the ScrapeConfigsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ScrapeConfigsResponse{}

/*
	types and functions for data
*/

// isArray
type ScrapeConfigsResponseGetDataAttributeType = *[]Job
type ScrapeConfigsResponseGetDataArgType = []Job
type ScrapeConfigsResponseGetDataRetType = []Job

func getScrapeConfigsResponseGetDataAttributeTypeOk(arg ScrapeConfigsResponseGetDataAttributeType) (ret ScrapeConfigsResponseGetDataRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setScrapeConfigsResponseGetDataAttributeType(arg *ScrapeConfigsResponseGetDataAttributeType, val ScrapeConfigsResponseGetDataRetType) {
	*arg = &val
}

/*
	types and functions for message
*/

// isNotNullableString
type ScrapeConfigsResponseGetMessageAttributeType = *string

func getScrapeConfigsResponseGetMessageAttributeTypeOk(arg ScrapeConfigsResponseGetMessageAttributeType) (ret ScrapeConfigsResponseGetMessageRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setScrapeConfigsResponseGetMessageAttributeType(arg *ScrapeConfigsResponseGetMessageAttributeType, val ScrapeConfigsResponseGetMessageRetType) {
	*arg = &val
}

type ScrapeConfigsResponseGetMessageArgType = string
type ScrapeConfigsResponseGetMessageRetType = string

// ScrapeConfigsResponse struct for ScrapeConfigsResponse
type ScrapeConfigsResponse struct {
	// REQUIRED
	Data ScrapeConfigsResponseGetDataAttributeType `json:"data" required:"true"`
	// REQUIRED
	Message ScrapeConfigsResponseGetMessageAttributeType `json:"message" required:"true"`
}

type _ScrapeConfigsResponse ScrapeConfigsResponse

// NewScrapeConfigsResponse instantiates a new ScrapeConfigsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScrapeConfigsResponse(data ScrapeConfigsResponseGetDataArgType, message ScrapeConfigsResponseGetMessageArgType) *ScrapeConfigsResponse {
	this := ScrapeConfigsResponse{}
	setScrapeConfigsResponseGetDataAttributeType(&this.Data, data)
	setScrapeConfigsResponseGetMessageAttributeType(&this.Message, message)
	return &this
}

// NewScrapeConfigsResponseWithDefaults instantiates a new ScrapeConfigsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScrapeConfigsResponseWithDefaults() *ScrapeConfigsResponse {
	this := ScrapeConfigsResponse{}
	return &this
}

// GetData returns the Data field value
func (o *ScrapeConfigsResponse) GetData() (ret ScrapeConfigsResponseGetDataRetType) {
	ret, _ = o.GetDataOk()
	return ret
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *ScrapeConfigsResponse) GetDataOk() (ret ScrapeConfigsResponseGetDataRetType, ok bool) {
	return getScrapeConfigsResponseGetDataAttributeTypeOk(o.Data)
}

// SetData sets field value
func (o *ScrapeConfigsResponse) SetData(v ScrapeConfigsResponseGetDataRetType) {
	setScrapeConfigsResponseGetDataAttributeType(&o.Data, v)
}

// GetMessage returns the Message field value
func (o *ScrapeConfigsResponse) GetMessage() (ret ScrapeConfigsResponseGetMessageRetType) {
	ret, _ = o.GetMessageOk()
	return ret
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *ScrapeConfigsResponse) GetMessageOk() (ret ScrapeConfigsResponseGetMessageRetType, ok bool) {
	return getScrapeConfigsResponseGetMessageAttributeTypeOk(o.Message)
}

// SetMessage sets field value
func (o *ScrapeConfigsResponse) SetMessage(v ScrapeConfigsResponseGetMessageRetType) {
	setScrapeConfigsResponseGetMessageAttributeType(&o.Message, v)
}

func (o ScrapeConfigsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getScrapeConfigsResponseGetDataAttributeTypeOk(o.Data); ok {
		toSerialize["Data"] = val
	}
	if val, ok := getScrapeConfigsResponseGetMessageAttributeTypeOk(o.Message); ok {
		toSerialize["Message"] = val
	}
	return toSerialize, nil
}

type NullableScrapeConfigsResponse struct {
	value *ScrapeConfigsResponse
	isSet bool
}

func (v NullableScrapeConfigsResponse) Get() *ScrapeConfigsResponse {
	return v.value
}

func (v *NullableScrapeConfigsResponse) Set(val *ScrapeConfigsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableScrapeConfigsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableScrapeConfigsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScrapeConfigsResponse(val *ScrapeConfigsResponse) *NullableScrapeConfigsResponse {
	return &NullableScrapeConfigsResponse{value: val, isSet: true}
}

func (v NullableScrapeConfigsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScrapeConfigsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
