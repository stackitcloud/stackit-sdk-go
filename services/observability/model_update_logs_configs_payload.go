/*
STACKIT Observability API

API endpoints for Observability on STACKIT

API version: 1.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package observability

import (
	"encoding/json"
)

// checks if the UpdateLogsConfigsPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateLogsConfigsPayload{}

/*
	types and functions for retention
*/

// isNotNullableString
type UpdateLogsConfigsPayloadGetRetentionAttributeType = *string

func getUpdateLogsConfigsPayloadGetRetentionAttributeTypeOk(arg UpdateLogsConfigsPayloadGetRetentionAttributeType) (ret UpdateLogsConfigsPayloadGetRetentionRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setUpdateLogsConfigsPayloadGetRetentionAttributeType(arg *UpdateLogsConfigsPayloadGetRetentionAttributeType, val UpdateLogsConfigsPayloadGetRetentionRetType) {
	*arg = &val
}

type UpdateLogsConfigsPayloadGetRetentionArgType = string
type UpdateLogsConfigsPayloadGetRetentionRetType = string

// UpdateLogsConfigsPayload struct for UpdateLogsConfigsPayload
type UpdateLogsConfigsPayload struct {
	// How long to keep the logs `Additional Validators:` * Should be a valid time string * Should not be longer than 30 days
	// REQUIRED
	Retention UpdateLogsConfigsPayloadGetRetentionAttributeType `json:"retention" required:"true"`
}

type _UpdateLogsConfigsPayload UpdateLogsConfigsPayload

// NewUpdateLogsConfigsPayload instantiates a new UpdateLogsConfigsPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateLogsConfigsPayload(retention UpdateLogsConfigsPayloadGetRetentionArgType) *UpdateLogsConfigsPayload {
	this := UpdateLogsConfigsPayload{}
	setUpdateLogsConfigsPayloadGetRetentionAttributeType(&this.Retention, retention)
	return &this
}

// NewUpdateLogsConfigsPayloadWithDefaults instantiates a new UpdateLogsConfigsPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateLogsConfigsPayloadWithDefaults() *UpdateLogsConfigsPayload {
	this := UpdateLogsConfigsPayload{}
	return &this
}

// GetRetention returns the Retention field value
func (o *UpdateLogsConfigsPayload) GetRetention() (ret UpdateLogsConfigsPayloadGetRetentionRetType) {
	ret, _ = o.GetRetentionOk()
	return ret
}

// GetRetentionOk returns a tuple with the Retention field value
// and a boolean to check if the value has been set.
func (o *UpdateLogsConfigsPayload) GetRetentionOk() (ret UpdateLogsConfigsPayloadGetRetentionRetType, ok bool) {
	return getUpdateLogsConfigsPayloadGetRetentionAttributeTypeOk(o.Retention)
}

// SetRetention sets field value
func (o *UpdateLogsConfigsPayload) SetRetention(v UpdateLogsConfigsPayloadGetRetentionRetType) {
	setUpdateLogsConfigsPayloadGetRetentionAttributeType(&o.Retention, v)
}

func (o UpdateLogsConfigsPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getUpdateLogsConfigsPayloadGetRetentionAttributeTypeOk(o.Retention); ok {
		toSerialize["Retention"] = val
	}
	return toSerialize, nil
}

type NullableUpdateLogsConfigsPayload struct {
	value *UpdateLogsConfigsPayload
	isSet bool
}

func (v NullableUpdateLogsConfigsPayload) Get() *UpdateLogsConfigsPayload {
	return v.value
}

func (v *NullableUpdateLogsConfigsPayload) Set(val *UpdateLogsConfigsPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateLogsConfigsPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateLogsConfigsPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateLogsConfigsPayload(val *UpdateLogsConfigsPayload) *NullableUpdateLogsConfigsPayload {
	return &NullableUpdateLogsConfigsPayload{value: val, isSet: true}
}

func (v NullableUpdateLogsConfigsPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateLogsConfigsPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
