/*
STACKIT Observability API

API endpoints for Observability on STACKIT

API version: 1.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package observability

import (
	"encoding/json"
)

// checks if the Receivers type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Receivers{}

/*
	types and functions for emailConfigs
*/

// isArray
type ReceiversGetEmailConfigsAttributeType = *[]EmailConfig
type ReceiversGetEmailConfigsArgType = []EmailConfig
type ReceiversGetEmailConfigsRetType = []EmailConfig

func getReceiversGetEmailConfigsAttributeTypeOk(arg ReceiversGetEmailConfigsAttributeType) (ret ReceiversGetEmailConfigsRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setReceiversGetEmailConfigsAttributeType(arg *ReceiversGetEmailConfigsAttributeType, val ReceiversGetEmailConfigsRetType) {
	*arg = &val
}

/*
	types and functions for name
*/

// isNotNullableString
type ReceiversGetNameAttributeType = *string

func getReceiversGetNameAttributeTypeOk(arg ReceiversGetNameAttributeType) (ret ReceiversGetNameRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setReceiversGetNameAttributeType(arg *ReceiversGetNameAttributeType, val ReceiversGetNameRetType) {
	*arg = &val
}

type ReceiversGetNameArgType = string
type ReceiversGetNameRetType = string

/*
	types and functions for opsgenieConfigs
*/

// isArray
type ReceiversGetOpsgenieConfigsAttributeType = *[]OpsgenieConfig
type ReceiversGetOpsgenieConfigsArgType = []OpsgenieConfig
type ReceiversGetOpsgenieConfigsRetType = []OpsgenieConfig

func getReceiversGetOpsgenieConfigsAttributeTypeOk(arg ReceiversGetOpsgenieConfigsAttributeType) (ret ReceiversGetOpsgenieConfigsRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setReceiversGetOpsgenieConfigsAttributeType(arg *ReceiversGetOpsgenieConfigsAttributeType, val ReceiversGetOpsgenieConfigsRetType) {
	*arg = &val
}

/*
	types and functions for webHookConfigs
*/

// isArray
type ReceiversGetWebHookConfigsAttributeType = *[]WebHook
type ReceiversGetWebHookConfigsArgType = []WebHook
type ReceiversGetWebHookConfigsRetType = []WebHook

func getReceiversGetWebHookConfigsAttributeTypeOk(arg ReceiversGetWebHookConfigsAttributeType) (ret ReceiversGetWebHookConfigsRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setReceiversGetWebHookConfigsAttributeType(arg *ReceiversGetWebHookConfigsAttributeType, val ReceiversGetWebHookConfigsRetType) {
	*arg = &val
}

// Receivers struct for Receivers
type Receivers struct {
	EmailConfigs ReceiversGetEmailConfigsAttributeType `json:"emailConfigs,omitempty"`
	// REQUIRED
	Name            ReceiversGetNameAttributeType            `json:"name" required:"true"`
	OpsgenieConfigs ReceiversGetOpsgenieConfigsAttributeType `json:"opsgenieConfigs,omitempty"`
	WebHookConfigs  ReceiversGetWebHookConfigsAttributeType  `json:"webHookConfigs,omitempty"`
}

type _Receivers Receivers

// NewReceivers instantiates a new Receivers object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReceivers(name ReceiversGetNameArgType) *Receivers {
	this := Receivers{}
	setReceiversGetNameAttributeType(&this.Name, name)
	return &this
}

// NewReceiversWithDefaults instantiates a new Receivers object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReceiversWithDefaults() *Receivers {
	this := Receivers{}
	return &this
}

// GetEmailConfigs returns the EmailConfigs field value if set, zero value otherwise.
func (o *Receivers) GetEmailConfigs() (res ReceiversGetEmailConfigsRetType) {
	res, _ = o.GetEmailConfigsOk()
	return
}

// GetEmailConfigsOk returns a tuple with the EmailConfigs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Receivers) GetEmailConfigsOk() (ret ReceiversGetEmailConfigsRetType, ok bool) {
	return getReceiversGetEmailConfigsAttributeTypeOk(o.EmailConfigs)
}

// HasEmailConfigs returns a boolean if a field has been set.
func (o *Receivers) HasEmailConfigs() bool {
	_, ok := o.GetEmailConfigsOk()
	return ok
}

// SetEmailConfigs gets a reference to the given []EmailConfig and assigns it to the EmailConfigs field.
func (o *Receivers) SetEmailConfigs(v ReceiversGetEmailConfigsRetType) {
	setReceiversGetEmailConfigsAttributeType(&o.EmailConfigs, v)
}

// GetName returns the Name field value
func (o *Receivers) GetName() (ret ReceiversGetNameRetType) {
	ret, _ = o.GetNameOk()
	return ret
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Receivers) GetNameOk() (ret ReceiversGetNameRetType, ok bool) {
	return getReceiversGetNameAttributeTypeOk(o.Name)
}

// SetName sets field value
func (o *Receivers) SetName(v ReceiversGetNameRetType) {
	setReceiversGetNameAttributeType(&o.Name, v)
}

// GetOpsgenieConfigs returns the OpsgenieConfigs field value if set, zero value otherwise.
func (o *Receivers) GetOpsgenieConfigs() (res ReceiversGetOpsgenieConfigsRetType) {
	res, _ = o.GetOpsgenieConfigsOk()
	return
}

// GetOpsgenieConfigsOk returns a tuple with the OpsgenieConfigs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Receivers) GetOpsgenieConfigsOk() (ret ReceiversGetOpsgenieConfigsRetType, ok bool) {
	return getReceiversGetOpsgenieConfigsAttributeTypeOk(o.OpsgenieConfigs)
}

// HasOpsgenieConfigs returns a boolean if a field has been set.
func (o *Receivers) HasOpsgenieConfigs() bool {
	_, ok := o.GetOpsgenieConfigsOk()
	return ok
}

// SetOpsgenieConfigs gets a reference to the given []OpsgenieConfig and assigns it to the OpsgenieConfigs field.
func (o *Receivers) SetOpsgenieConfigs(v ReceiversGetOpsgenieConfigsRetType) {
	setReceiversGetOpsgenieConfigsAttributeType(&o.OpsgenieConfigs, v)
}

// GetWebHookConfigs returns the WebHookConfigs field value if set, zero value otherwise.
func (o *Receivers) GetWebHookConfigs() (res ReceiversGetWebHookConfigsRetType) {
	res, _ = o.GetWebHookConfigsOk()
	return
}

// GetWebHookConfigsOk returns a tuple with the WebHookConfigs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Receivers) GetWebHookConfigsOk() (ret ReceiversGetWebHookConfigsRetType, ok bool) {
	return getReceiversGetWebHookConfigsAttributeTypeOk(o.WebHookConfigs)
}

// HasWebHookConfigs returns a boolean if a field has been set.
func (o *Receivers) HasWebHookConfigs() bool {
	_, ok := o.GetWebHookConfigsOk()
	return ok
}

// SetWebHookConfigs gets a reference to the given []WebHook and assigns it to the WebHookConfigs field.
func (o *Receivers) SetWebHookConfigs(v ReceiversGetWebHookConfigsRetType) {
	setReceiversGetWebHookConfigsAttributeType(&o.WebHookConfigs, v)
}

func (o Receivers) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getReceiversGetEmailConfigsAttributeTypeOk(o.EmailConfigs); ok {
		toSerialize["EmailConfigs"] = val
	}
	if val, ok := getReceiversGetNameAttributeTypeOk(o.Name); ok {
		toSerialize["Name"] = val
	}
	if val, ok := getReceiversGetOpsgenieConfigsAttributeTypeOk(o.OpsgenieConfigs); ok {
		toSerialize["OpsgenieConfigs"] = val
	}
	if val, ok := getReceiversGetWebHookConfigsAttributeTypeOk(o.WebHookConfigs); ok {
		toSerialize["WebHookConfigs"] = val
	}
	return toSerialize, nil
}

type NullableReceivers struct {
	value *Receivers
	isSet bool
}

func (v NullableReceivers) Get() *Receivers {
	return v.value
}

func (v *NullableReceivers) Set(val *Receivers) {
	v.value = val
	v.isSet = true
}

func (v NullableReceivers) IsSet() bool {
	return v.isSet
}

func (v *NullableReceivers) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReceivers(val *Receivers) *NullableReceivers {
	return &NullableReceivers{value: val, isSet: true}
}

func (v NullableReceivers) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReceivers) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
