/*
STACKIT Observability API

API endpoints for Observability on STACKIT

API version: 1.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package observability

import (
	"encoding/json"
)

// checks if the HttpCheckResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HttpCheckResponse{}

/*
	types and functions for httpChecks
*/

// isArray
type HttpCheckResponseGetHttpChecksAttributeType = *[]HttpCheckChildResponse
type HttpCheckResponseGetHttpChecksArgType = []HttpCheckChildResponse
type HttpCheckResponseGetHttpChecksRetType = []HttpCheckChildResponse

func getHttpCheckResponseGetHttpChecksAttributeTypeOk(arg HttpCheckResponseGetHttpChecksAttributeType) (ret HttpCheckResponseGetHttpChecksRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setHttpCheckResponseGetHttpChecksAttributeType(arg *HttpCheckResponseGetHttpChecksAttributeType, val HttpCheckResponseGetHttpChecksRetType) {
	*arg = &val
}

/*
	types and functions for message
*/

// isNotNullableString
type HttpCheckResponseGetMessageAttributeType = *string

func getHttpCheckResponseGetMessageAttributeTypeOk(arg HttpCheckResponseGetMessageAttributeType) (ret HttpCheckResponseGetMessageRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setHttpCheckResponseGetMessageAttributeType(arg *HttpCheckResponseGetMessageAttributeType, val HttpCheckResponseGetMessageRetType) {
	*arg = &val
}

type HttpCheckResponseGetMessageArgType = string
type HttpCheckResponseGetMessageRetType = string

// HttpCheckResponse struct for HttpCheckResponse
type HttpCheckResponse struct {
	// REQUIRED
	HttpChecks HttpCheckResponseGetHttpChecksAttributeType `json:"httpChecks" required:"true"`
	// REQUIRED
	Message HttpCheckResponseGetMessageAttributeType `json:"message" required:"true"`
}

type _HttpCheckResponse HttpCheckResponse

// NewHttpCheckResponse instantiates a new HttpCheckResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHttpCheckResponse(httpChecks HttpCheckResponseGetHttpChecksArgType, message HttpCheckResponseGetMessageArgType) *HttpCheckResponse {
	this := HttpCheckResponse{}
	setHttpCheckResponseGetHttpChecksAttributeType(&this.HttpChecks, httpChecks)
	setHttpCheckResponseGetMessageAttributeType(&this.Message, message)
	return &this
}

// NewHttpCheckResponseWithDefaults instantiates a new HttpCheckResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHttpCheckResponseWithDefaults() *HttpCheckResponse {
	this := HttpCheckResponse{}
	return &this
}

// GetHttpChecks returns the HttpChecks field value
func (o *HttpCheckResponse) GetHttpChecks() (ret HttpCheckResponseGetHttpChecksRetType) {
	ret, _ = o.GetHttpChecksOk()
	return ret
}

// GetHttpChecksOk returns a tuple with the HttpChecks field value
// and a boolean to check if the value has been set.
func (o *HttpCheckResponse) GetHttpChecksOk() (ret HttpCheckResponseGetHttpChecksRetType, ok bool) {
	return getHttpCheckResponseGetHttpChecksAttributeTypeOk(o.HttpChecks)
}

// SetHttpChecks sets field value
func (o *HttpCheckResponse) SetHttpChecks(v HttpCheckResponseGetHttpChecksRetType) {
	setHttpCheckResponseGetHttpChecksAttributeType(&o.HttpChecks, v)
}

// GetMessage returns the Message field value
func (o *HttpCheckResponse) GetMessage() (ret HttpCheckResponseGetMessageRetType) {
	ret, _ = o.GetMessageOk()
	return ret
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *HttpCheckResponse) GetMessageOk() (ret HttpCheckResponseGetMessageRetType, ok bool) {
	return getHttpCheckResponseGetMessageAttributeTypeOk(o.Message)
}

// SetMessage sets field value
func (o *HttpCheckResponse) SetMessage(v HttpCheckResponseGetMessageRetType) {
	setHttpCheckResponseGetMessageAttributeType(&o.Message, v)
}

func (o HttpCheckResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getHttpCheckResponseGetHttpChecksAttributeTypeOk(o.HttpChecks); ok {
		toSerialize["HttpChecks"] = val
	}
	if val, ok := getHttpCheckResponseGetMessageAttributeTypeOk(o.Message); ok {
		toSerialize["Message"] = val
	}
	return toSerialize, nil
}

type NullableHttpCheckResponse struct {
	value *HttpCheckResponse
	isSet bool
}

func (v NullableHttpCheckResponse) Get() *HttpCheckResponse {
	return v.value
}

func (v *NullableHttpCheckResponse) Set(val *HttpCheckResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableHttpCheckResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableHttpCheckResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHttpCheckResponse(val *HttpCheckResponse) *NullableHttpCheckResponse {
	return &NullableHttpCheckResponse{value: val, isSet: true}
}

func (v NullableHttpCheckResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHttpCheckResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
