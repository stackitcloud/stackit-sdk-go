/*
STACKIT Observability API

API endpoints for Observability on STACKIT

API version: 1.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package observability

import (
	"encoding/json"
)

// checks if the TracesConfigResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TracesConfigResponse{}

/*
	types and functions for config
*/

// isModel
type TracesConfigResponseGetConfigAttributeType = *TraceConfig
type TracesConfigResponseGetConfigArgType = TraceConfig
type TracesConfigResponseGetConfigRetType = TraceConfig

func getTracesConfigResponseGetConfigAttributeTypeOk(arg TracesConfigResponseGetConfigAttributeType) (ret TracesConfigResponseGetConfigRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setTracesConfigResponseGetConfigAttributeType(arg *TracesConfigResponseGetConfigAttributeType, val TracesConfigResponseGetConfigRetType) {
	*arg = &val
}

/*
	types and functions for message
*/

// isNotNullableString
type TracesConfigResponseGetMessageAttributeType = *string

func getTracesConfigResponseGetMessageAttributeTypeOk(arg TracesConfigResponseGetMessageAttributeType) (ret TracesConfigResponseGetMessageRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setTracesConfigResponseGetMessageAttributeType(arg *TracesConfigResponseGetMessageAttributeType, val TracesConfigResponseGetMessageRetType) {
	*arg = &val
}

type TracesConfigResponseGetMessageArgType = string
type TracesConfigResponseGetMessageRetType = string

// TracesConfigResponse struct for TracesConfigResponse
type TracesConfigResponse struct {
	// REQUIRED
	Config TracesConfigResponseGetConfigAttributeType `json:"config" required:"true"`
	// REQUIRED
	Message TracesConfigResponseGetMessageAttributeType `json:"message" required:"true"`
}

type _TracesConfigResponse TracesConfigResponse

// NewTracesConfigResponse instantiates a new TracesConfigResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTracesConfigResponse(config TracesConfigResponseGetConfigArgType, message TracesConfigResponseGetMessageArgType) *TracesConfigResponse {
	this := TracesConfigResponse{}
	setTracesConfigResponseGetConfigAttributeType(&this.Config, config)
	setTracesConfigResponseGetMessageAttributeType(&this.Message, message)
	return &this
}

// NewTracesConfigResponseWithDefaults instantiates a new TracesConfigResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTracesConfigResponseWithDefaults() *TracesConfigResponse {
	this := TracesConfigResponse{}
	return &this
}

// GetConfig returns the Config field value
func (o *TracesConfigResponse) GetConfig() (ret TracesConfigResponseGetConfigRetType) {
	ret, _ = o.GetConfigOk()
	return ret
}

// GetConfigOk returns a tuple with the Config field value
// and a boolean to check if the value has been set.
func (o *TracesConfigResponse) GetConfigOk() (ret TracesConfigResponseGetConfigRetType, ok bool) {
	return getTracesConfigResponseGetConfigAttributeTypeOk(o.Config)
}

// SetConfig sets field value
func (o *TracesConfigResponse) SetConfig(v TracesConfigResponseGetConfigRetType) {
	setTracesConfigResponseGetConfigAttributeType(&o.Config, v)
}

// GetMessage returns the Message field value
func (o *TracesConfigResponse) GetMessage() (ret TracesConfigResponseGetMessageRetType) {
	ret, _ = o.GetMessageOk()
	return ret
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *TracesConfigResponse) GetMessageOk() (ret TracesConfigResponseGetMessageRetType, ok bool) {
	return getTracesConfigResponseGetMessageAttributeTypeOk(o.Message)
}

// SetMessage sets field value
func (o *TracesConfigResponse) SetMessage(v TracesConfigResponseGetMessageRetType) {
	setTracesConfigResponseGetMessageAttributeType(&o.Message, v)
}

func (o TracesConfigResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getTracesConfigResponseGetConfigAttributeTypeOk(o.Config); ok {
		toSerialize["Config"] = val
	}
	if val, ok := getTracesConfigResponseGetMessageAttributeTypeOk(o.Message); ok {
		toSerialize["Message"] = val
	}
	return toSerialize, nil
}

type NullableTracesConfigResponse struct {
	value *TracesConfigResponse
	isSet bool
}

func (v NullableTracesConfigResponse) Get() *TracesConfigResponse {
	return v.value
}

func (v *NullableTracesConfigResponse) Set(val *TracesConfigResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableTracesConfigResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableTracesConfigResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTracesConfigResponse(val *TracesConfigResponse) *NullableTracesConfigResponse {
	return &NullableTracesConfigResponse{value: val, isSet: true}
}

func (v NullableTracesConfigResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTracesConfigResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
