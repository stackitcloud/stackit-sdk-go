/*
STACKIT Observability API

API endpoints for Observability on STACKIT

API version: 1.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package observability

import (
	"encoding/json"
)

// checks if the InstanceSensitiveData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InstanceSensitiveData{}

// InstanceSensitiveData struct for InstanceSensitiveData
type InstanceSensitiveData struct {
	// REQUIRED
	AlertingUrl *string `json:"alertingUrl"`
	// REQUIRED
	Cluster *string `json:"cluster"`
	// REQUIRED
	DashboardUrl *string `json:"dashboardUrl"`
	// REQUIRED
	GrafanaAdminPassword *string `json:"grafanaAdminPassword"`
	// REQUIRED
	GrafanaAdminUser *string `json:"grafanaAdminUser"`
	// REQUIRED
	GrafanaPublicReadAccess *bool `json:"grafanaPublicReadAccess"`
	// REQUIRED
	GrafanaUrl *string `json:"grafanaUrl"`
	// REQUIRED
	GrafanaUseStackitSso *bool `json:"grafanaUseStackitSso"`
	// REQUIRED
	Instance *string `json:"instance"`
	// REQUIRED
	JaegerTracesUrl *string `json:"jaegerTracesUrl"`
	// REQUIRED
	JaegerUiUrl *string `json:"jaegerUiUrl"`
	// REQUIRED
	LogsPushUrl *string `json:"logsPushUrl"`
	// REQUIRED
	LogsUrl *string `json:"logsUrl"`
	// REQUIRED
	MetricsRetentionTime1h *int64 `json:"metricsRetentionTime1h"`
	// REQUIRED
	MetricsRetentionTime5m *int64 `json:"metricsRetentionTime5m"`
	// REQUIRED
	MetricsRetentionTimeRaw *int64 `json:"metricsRetentionTimeRaw"`
	// REQUIRED
	MetricsUrl *string `json:"metricsUrl"`
	Name       *string `json:"name,omitempty"`
	// REQUIRED
	OtlpTracesUrl *string `json:"otlpTracesUrl"`
	// REQUIRED
	Plan *PlanModel `json:"plan"`
	// REQUIRED
	PushMetricsUrl *string `json:"pushMetricsUrl"`
	// REQUIRED
	TargetsUrl *string `json:"targetsUrl"`
	// REQUIRED
	ZipkinSpansUrl *string `json:"zipkinSpansUrl"`
}

type _InstanceSensitiveData InstanceSensitiveData

// NewInstanceSensitiveData instantiates a new InstanceSensitiveData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInstanceSensitiveData(alertingUrl *string, cluster *string, dashboardUrl *string, grafanaAdminPassword *string, grafanaAdminUser *string, grafanaPublicReadAccess *bool, grafanaUrl *string, grafanaUseStackitSso *bool, instance *string, jaegerTracesUrl *string, jaegerUiUrl *string, logsPushUrl *string, logsUrl *string, metricsRetentionTime1h *int64, metricsRetentionTime5m *int64, metricsRetentionTimeRaw *int64, metricsUrl *string, otlpTracesUrl *string, plan *PlanModel, pushMetricsUrl *string, targetsUrl *string, zipkinSpansUrl *string) *InstanceSensitiveData {
	this := InstanceSensitiveData{}
	this.AlertingUrl = alertingUrl
	this.Cluster = cluster
	this.DashboardUrl = dashboardUrl
	this.GrafanaAdminPassword = grafanaAdminPassword
	this.GrafanaAdminUser = grafanaAdminUser
	this.GrafanaPublicReadAccess = grafanaPublicReadAccess
	this.GrafanaUrl = grafanaUrl
	this.GrafanaUseStackitSso = grafanaUseStackitSso
	this.Instance = instance
	this.JaegerTracesUrl = jaegerTracesUrl
	this.JaegerUiUrl = jaegerUiUrl
	this.LogsPushUrl = logsPushUrl
	this.LogsUrl = logsUrl
	this.MetricsRetentionTime1h = metricsRetentionTime1h
	this.MetricsRetentionTime5m = metricsRetentionTime5m
	this.MetricsRetentionTimeRaw = metricsRetentionTimeRaw
	this.MetricsUrl = metricsUrl
	var name string = ""
	this.Name = &name
	this.OtlpTracesUrl = otlpTracesUrl
	this.Plan = plan
	this.PushMetricsUrl = pushMetricsUrl
	this.TargetsUrl = targetsUrl
	this.ZipkinSpansUrl = zipkinSpansUrl
	return &this
}

// NewInstanceSensitiveDataWithDefaults instantiates a new InstanceSensitiveData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInstanceSensitiveDataWithDefaults() *InstanceSensitiveData {
	this := InstanceSensitiveData{}
	var name string = ""
	this.Name = &name
	return &this
}

// GetAlertingUrl returns the AlertingUrl field value
func (o *InstanceSensitiveData) GetAlertingUrl() *string {
	if o == nil || IsNil(o.AlertingUrl) {
		var ret *string
		return ret
	}

	return o.AlertingUrl
}

// GetAlertingUrlOk returns a tuple with the AlertingUrl field value
// and a boolean to check if the value has been set.
func (o *InstanceSensitiveData) GetAlertingUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AlertingUrl, true
}

// SetAlertingUrl sets field value
func (o *InstanceSensitiveData) SetAlertingUrl(v *string) {
	o.AlertingUrl = v
}

// GetCluster returns the Cluster field value
func (o *InstanceSensitiveData) GetCluster() *string {
	if o == nil || IsNil(o.Cluster) {
		var ret *string
		return ret
	}

	return o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value
// and a boolean to check if the value has been set.
func (o *InstanceSensitiveData) GetClusterOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Cluster, true
}

// SetCluster sets field value
func (o *InstanceSensitiveData) SetCluster(v *string) {
	o.Cluster = v
}

// GetDashboardUrl returns the DashboardUrl field value
func (o *InstanceSensitiveData) GetDashboardUrl() *string {
	if o == nil || IsNil(o.DashboardUrl) {
		var ret *string
		return ret
	}

	return o.DashboardUrl
}

// GetDashboardUrlOk returns a tuple with the DashboardUrl field value
// and a boolean to check if the value has been set.
func (o *InstanceSensitiveData) GetDashboardUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DashboardUrl, true
}

// SetDashboardUrl sets field value
func (o *InstanceSensitiveData) SetDashboardUrl(v *string) {
	o.DashboardUrl = v
}

// GetGrafanaAdminPassword returns the GrafanaAdminPassword field value
func (o *InstanceSensitiveData) GetGrafanaAdminPassword() *string {
	if o == nil || IsNil(o.GrafanaAdminPassword) {
		var ret *string
		return ret
	}

	return o.GrafanaAdminPassword
}

// GetGrafanaAdminPasswordOk returns a tuple with the GrafanaAdminPassword field value
// and a boolean to check if the value has been set.
func (o *InstanceSensitiveData) GetGrafanaAdminPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GrafanaAdminPassword, true
}

// SetGrafanaAdminPassword sets field value
func (o *InstanceSensitiveData) SetGrafanaAdminPassword(v *string) {
	o.GrafanaAdminPassword = v
}

// GetGrafanaAdminUser returns the GrafanaAdminUser field value
func (o *InstanceSensitiveData) GetGrafanaAdminUser() *string {
	if o == nil || IsNil(o.GrafanaAdminUser) {
		var ret *string
		return ret
	}

	return o.GrafanaAdminUser
}

// GetGrafanaAdminUserOk returns a tuple with the GrafanaAdminUser field value
// and a boolean to check if the value has been set.
func (o *InstanceSensitiveData) GetGrafanaAdminUserOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GrafanaAdminUser, true
}

// SetGrafanaAdminUser sets field value
func (o *InstanceSensitiveData) SetGrafanaAdminUser(v *string) {
	o.GrafanaAdminUser = v
}

// GetGrafanaPublicReadAccess returns the GrafanaPublicReadAccess field value
func (o *InstanceSensitiveData) GetGrafanaPublicReadAccess() *bool {
	if o == nil || IsNil(o.GrafanaPublicReadAccess) {
		var ret *bool
		return ret
	}

	return o.GrafanaPublicReadAccess
}

// GetGrafanaPublicReadAccessOk returns a tuple with the GrafanaPublicReadAccess field value
// and a boolean to check if the value has been set.
func (o *InstanceSensitiveData) GetGrafanaPublicReadAccessOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.GrafanaPublicReadAccess, true
}

// SetGrafanaPublicReadAccess sets field value
func (o *InstanceSensitiveData) SetGrafanaPublicReadAccess(v *bool) {
	o.GrafanaPublicReadAccess = v
}

// GetGrafanaUrl returns the GrafanaUrl field value
func (o *InstanceSensitiveData) GetGrafanaUrl() *string {
	if o == nil || IsNil(o.GrafanaUrl) {
		var ret *string
		return ret
	}

	return o.GrafanaUrl
}

// GetGrafanaUrlOk returns a tuple with the GrafanaUrl field value
// and a boolean to check if the value has been set.
func (o *InstanceSensitiveData) GetGrafanaUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GrafanaUrl, true
}

// SetGrafanaUrl sets field value
func (o *InstanceSensitiveData) SetGrafanaUrl(v *string) {
	o.GrafanaUrl = v
}

// GetGrafanaUseStackitSso returns the GrafanaUseStackitSso field value
func (o *InstanceSensitiveData) GetGrafanaUseStackitSso() *bool {
	if o == nil || IsNil(o.GrafanaUseStackitSso) {
		var ret *bool
		return ret
	}

	return o.GrafanaUseStackitSso
}

// GetGrafanaUseStackitSsoOk returns a tuple with the GrafanaUseStackitSso field value
// and a boolean to check if the value has been set.
func (o *InstanceSensitiveData) GetGrafanaUseStackitSsoOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.GrafanaUseStackitSso, true
}

// SetGrafanaUseStackitSso sets field value
func (o *InstanceSensitiveData) SetGrafanaUseStackitSso(v *bool) {
	o.GrafanaUseStackitSso = v
}

// GetInstance returns the Instance field value
func (o *InstanceSensitiveData) GetInstance() *string {
	if o == nil || IsNil(o.Instance) {
		var ret *string
		return ret
	}

	return o.Instance
}

// GetInstanceOk returns a tuple with the Instance field value
// and a boolean to check if the value has been set.
func (o *InstanceSensitiveData) GetInstanceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Instance, true
}

// SetInstance sets field value
func (o *InstanceSensitiveData) SetInstance(v *string) {
	o.Instance = v
}

// GetJaegerTracesUrl returns the JaegerTracesUrl field value
func (o *InstanceSensitiveData) GetJaegerTracesUrl() *string {
	if o == nil || IsNil(o.JaegerTracesUrl) {
		var ret *string
		return ret
	}

	return o.JaegerTracesUrl
}

// GetJaegerTracesUrlOk returns a tuple with the JaegerTracesUrl field value
// and a boolean to check if the value has been set.
func (o *InstanceSensitiveData) GetJaegerTracesUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.JaegerTracesUrl, true
}

// SetJaegerTracesUrl sets field value
func (o *InstanceSensitiveData) SetJaegerTracesUrl(v *string) {
	o.JaegerTracesUrl = v
}

// GetJaegerUiUrl returns the JaegerUiUrl field value
func (o *InstanceSensitiveData) GetJaegerUiUrl() *string {
	if o == nil || IsNil(o.JaegerUiUrl) {
		var ret *string
		return ret
	}

	return o.JaegerUiUrl
}

// GetJaegerUiUrlOk returns a tuple with the JaegerUiUrl field value
// and a boolean to check if the value has been set.
func (o *InstanceSensitiveData) GetJaegerUiUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.JaegerUiUrl, true
}

// SetJaegerUiUrl sets field value
func (o *InstanceSensitiveData) SetJaegerUiUrl(v *string) {
	o.JaegerUiUrl = v
}

// GetLogsPushUrl returns the LogsPushUrl field value
func (o *InstanceSensitiveData) GetLogsPushUrl() *string {
	if o == nil || IsNil(o.LogsPushUrl) {
		var ret *string
		return ret
	}

	return o.LogsPushUrl
}

// GetLogsPushUrlOk returns a tuple with the LogsPushUrl field value
// and a boolean to check if the value has been set.
func (o *InstanceSensitiveData) GetLogsPushUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LogsPushUrl, true
}

// SetLogsPushUrl sets field value
func (o *InstanceSensitiveData) SetLogsPushUrl(v *string) {
	o.LogsPushUrl = v
}

// GetLogsUrl returns the LogsUrl field value
func (o *InstanceSensitiveData) GetLogsUrl() *string {
	if o == nil || IsNil(o.LogsUrl) {
		var ret *string
		return ret
	}

	return o.LogsUrl
}

// GetLogsUrlOk returns a tuple with the LogsUrl field value
// and a boolean to check if the value has been set.
func (o *InstanceSensitiveData) GetLogsUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LogsUrl, true
}

// SetLogsUrl sets field value
func (o *InstanceSensitiveData) SetLogsUrl(v *string) {
	o.LogsUrl = v
}

// GetMetricsRetentionTime1h returns the MetricsRetentionTime1h field value
func (o *InstanceSensitiveData) GetMetricsRetentionTime1h() *int64 {
	if o == nil || IsNil(o.MetricsRetentionTime1h) {
		var ret *int64
		return ret
	}

	return o.MetricsRetentionTime1h
}

// GetMetricsRetentionTime1hOk returns a tuple with the MetricsRetentionTime1h field value
// and a boolean to check if the value has been set.
func (o *InstanceSensitiveData) GetMetricsRetentionTime1hOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.MetricsRetentionTime1h, true
}

// SetMetricsRetentionTime1h sets field value
func (o *InstanceSensitiveData) SetMetricsRetentionTime1h(v *int64) {
	o.MetricsRetentionTime1h = v
}

// GetMetricsRetentionTime5m returns the MetricsRetentionTime5m field value
func (o *InstanceSensitiveData) GetMetricsRetentionTime5m() *int64 {
	if o == nil || IsNil(o.MetricsRetentionTime5m) {
		var ret *int64
		return ret
	}

	return o.MetricsRetentionTime5m
}

// GetMetricsRetentionTime5mOk returns a tuple with the MetricsRetentionTime5m field value
// and a boolean to check if the value has been set.
func (o *InstanceSensitiveData) GetMetricsRetentionTime5mOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.MetricsRetentionTime5m, true
}

// SetMetricsRetentionTime5m sets field value
func (o *InstanceSensitiveData) SetMetricsRetentionTime5m(v *int64) {
	o.MetricsRetentionTime5m = v
}

// GetMetricsRetentionTimeRaw returns the MetricsRetentionTimeRaw field value
func (o *InstanceSensitiveData) GetMetricsRetentionTimeRaw() *int64 {
	if o == nil || IsNil(o.MetricsRetentionTimeRaw) {
		var ret *int64
		return ret
	}

	return o.MetricsRetentionTimeRaw
}

// GetMetricsRetentionTimeRawOk returns a tuple with the MetricsRetentionTimeRaw field value
// and a boolean to check if the value has been set.
func (o *InstanceSensitiveData) GetMetricsRetentionTimeRawOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.MetricsRetentionTimeRaw, true
}

// SetMetricsRetentionTimeRaw sets field value
func (o *InstanceSensitiveData) SetMetricsRetentionTimeRaw(v *int64) {
	o.MetricsRetentionTimeRaw = v
}

// GetMetricsUrl returns the MetricsUrl field value
func (o *InstanceSensitiveData) GetMetricsUrl() *string {
	if o == nil || IsNil(o.MetricsUrl) {
		var ret *string
		return ret
	}

	return o.MetricsUrl
}

// GetMetricsUrlOk returns a tuple with the MetricsUrl field value
// and a boolean to check if the value has been set.
func (o *InstanceSensitiveData) GetMetricsUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MetricsUrl, true
}

// SetMetricsUrl sets field value
func (o *InstanceSensitiveData) SetMetricsUrl(v *string) {
	o.MetricsUrl = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *InstanceSensitiveData) GetName() *string {
	if o == nil || IsNil(o.Name) {
		var ret *string
		return ret
	}
	return o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceSensitiveData) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *InstanceSensitiveData) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *InstanceSensitiveData) SetName(v *string) {
	o.Name = v
}

// GetOtlpTracesUrl returns the OtlpTracesUrl field value
func (o *InstanceSensitiveData) GetOtlpTracesUrl() *string {
	if o == nil || IsNil(o.OtlpTracesUrl) {
		var ret *string
		return ret
	}

	return o.OtlpTracesUrl
}

// GetOtlpTracesUrlOk returns a tuple with the OtlpTracesUrl field value
// and a boolean to check if the value has been set.
func (o *InstanceSensitiveData) GetOtlpTracesUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OtlpTracesUrl, true
}

// SetOtlpTracesUrl sets field value
func (o *InstanceSensitiveData) SetOtlpTracesUrl(v *string) {
	o.OtlpTracesUrl = v
}

// GetPlan returns the Plan field value
func (o *InstanceSensitiveData) GetPlan() *PlanModel {
	if o == nil || IsNil(o.Plan) {
		var ret *PlanModel
		return ret
	}

	return o.Plan
}

// GetPlanOk returns a tuple with the Plan field value
// and a boolean to check if the value has been set.
func (o *InstanceSensitiveData) GetPlanOk() (*PlanModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.Plan, true
}

// SetPlan sets field value
func (o *InstanceSensitiveData) SetPlan(v *PlanModel) {
	o.Plan = v
}

// GetPushMetricsUrl returns the PushMetricsUrl field value
func (o *InstanceSensitiveData) GetPushMetricsUrl() *string {
	if o == nil || IsNil(o.PushMetricsUrl) {
		var ret *string
		return ret
	}

	return o.PushMetricsUrl
}

// GetPushMetricsUrlOk returns a tuple with the PushMetricsUrl field value
// and a boolean to check if the value has been set.
func (o *InstanceSensitiveData) GetPushMetricsUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PushMetricsUrl, true
}

// SetPushMetricsUrl sets field value
func (o *InstanceSensitiveData) SetPushMetricsUrl(v *string) {
	o.PushMetricsUrl = v
}

// GetTargetsUrl returns the TargetsUrl field value
func (o *InstanceSensitiveData) GetTargetsUrl() *string {
	if o == nil || IsNil(o.TargetsUrl) {
		var ret *string
		return ret
	}

	return o.TargetsUrl
}

// GetTargetsUrlOk returns a tuple with the TargetsUrl field value
// and a boolean to check if the value has been set.
func (o *InstanceSensitiveData) GetTargetsUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TargetsUrl, true
}

// SetTargetsUrl sets field value
func (o *InstanceSensitiveData) SetTargetsUrl(v *string) {
	o.TargetsUrl = v
}

// GetZipkinSpansUrl returns the ZipkinSpansUrl field value
func (o *InstanceSensitiveData) GetZipkinSpansUrl() *string {
	if o == nil || IsNil(o.ZipkinSpansUrl) {
		var ret *string
		return ret
	}

	return o.ZipkinSpansUrl
}

// GetZipkinSpansUrlOk returns a tuple with the ZipkinSpansUrl field value
// and a boolean to check if the value has been set.
func (o *InstanceSensitiveData) GetZipkinSpansUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ZipkinSpansUrl, true
}

// SetZipkinSpansUrl sets field value
func (o *InstanceSensitiveData) SetZipkinSpansUrl(v *string) {
	o.ZipkinSpansUrl = v
}

func (o InstanceSensitiveData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["alertingUrl"] = o.AlertingUrl
	toSerialize["cluster"] = o.Cluster
	toSerialize["dashboardUrl"] = o.DashboardUrl
	toSerialize["grafanaAdminPassword"] = o.GrafanaAdminPassword
	toSerialize["grafanaAdminUser"] = o.GrafanaAdminUser
	toSerialize["grafanaPublicReadAccess"] = o.GrafanaPublicReadAccess
	toSerialize["grafanaUrl"] = o.GrafanaUrl
	toSerialize["grafanaUseStackitSso"] = o.GrafanaUseStackitSso
	toSerialize["instance"] = o.Instance
	toSerialize["jaegerTracesUrl"] = o.JaegerTracesUrl
	toSerialize["jaegerUiUrl"] = o.JaegerUiUrl
	toSerialize["logsPushUrl"] = o.LogsPushUrl
	toSerialize["logsUrl"] = o.LogsUrl
	toSerialize["metricsRetentionTime1h"] = o.MetricsRetentionTime1h
	toSerialize["metricsRetentionTime5m"] = o.MetricsRetentionTime5m
	toSerialize["metricsRetentionTimeRaw"] = o.MetricsRetentionTimeRaw
	toSerialize["metricsUrl"] = o.MetricsUrl
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	toSerialize["otlpTracesUrl"] = o.OtlpTracesUrl
	toSerialize["plan"] = o.Plan
	toSerialize["pushMetricsUrl"] = o.PushMetricsUrl
	toSerialize["targetsUrl"] = o.TargetsUrl
	toSerialize["zipkinSpansUrl"] = o.ZipkinSpansUrl
	return toSerialize, nil
}

type NullableInstanceSensitiveData struct {
	value *InstanceSensitiveData
	isSet bool
}

func (v NullableInstanceSensitiveData) Get() *InstanceSensitiveData {
	return v.value
}

func (v *NullableInstanceSensitiveData) Set(val *InstanceSensitiveData) {
	v.value = val
	v.isSet = true
}

func (v NullableInstanceSensitiveData) IsSet() bool {
	return v.isSet
}

func (v *NullableInstanceSensitiveData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInstanceSensitiveData(val *InstanceSensitiveData) *NullableInstanceSensitiveData {
	return &NullableInstanceSensitiveData{value: val, isSet: true}
}

func (v NullableInstanceSensitiveData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInstanceSensitiveData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
