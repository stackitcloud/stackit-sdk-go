/*
STACKIT Observability API

API endpoints for Observability on STACKIT

API version: 1.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package observability

import (
	"encoding/json"
)

// checks if the CertCheckResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CertCheckResponse{}

/*
	types and functions for certChecks
*/

// isArray
type CertCheckResponseGetCertChecksAttributeType = *[]CertCheckChildResponse
type CertCheckResponseGetCertChecksArgType = []CertCheckChildResponse
type CertCheckResponseGetCertChecksRetType = []CertCheckChildResponse

func getCertCheckResponseGetCertChecksAttributeTypeOk(arg CertCheckResponseGetCertChecksAttributeType) (ret CertCheckResponseGetCertChecksRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setCertCheckResponseGetCertChecksAttributeType(arg *CertCheckResponseGetCertChecksAttributeType, val CertCheckResponseGetCertChecksRetType) {
	*arg = &val
}

/*
	types and functions for message
*/

// isNotNullableString
type CertCheckResponseGetMessageAttributeType = *string

func getCertCheckResponseGetMessageAttributeTypeOk(arg CertCheckResponseGetMessageAttributeType) (ret CertCheckResponseGetMessageRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setCertCheckResponseGetMessageAttributeType(arg *CertCheckResponseGetMessageAttributeType, val CertCheckResponseGetMessageRetType) {
	*arg = &val
}

type CertCheckResponseGetMessageArgType = string
type CertCheckResponseGetMessageRetType = string

// CertCheckResponse struct for CertCheckResponse
type CertCheckResponse struct {
	// REQUIRED
	CertChecks CertCheckResponseGetCertChecksAttributeType `json:"certChecks" required:"true"`
	// REQUIRED
	Message CertCheckResponseGetMessageAttributeType `json:"message" required:"true"`
}

type _CertCheckResponse CertCheckResponse

// NewCertCheckResponse instantiates a new CertCheckResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCertCheckResponse(certChecks CertCheckResponseGetCertChecksArgType, message CertCheckResponseGetMessageArgType) *CertCheckResponse {
	this := CertCheckResponse{}
	setCertCheckResponseGetCertChecksAttributeType(&this.CertChecks, certChecks)
	setCertCheckResponseGetMessageAttributeType(&this.Message, message)
	return &this
}

// NewCertCheckResponseWithDefaults instantiates a new CertCheckResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCertCheckResponseWithDefaults() *CertCheckResponse {
	this := CertCheckResponse{}
	return &this
}

// GetCertChecks returns the CertChecks field value
func (o *CertCheckResponse) GetCertChecks() (ret CertCheckResponseGetCertChecksRetType) {
	ret, _ = o.GetCertChecksOk()
	return ret
}

// GetCertChecksOk returns a tuple with the CertChecks field value
// and a boolean to check if the value has been set.
func (o *CertCheckResponse) GetCertChecksOk() (ret CertCheckResponseGetCertChecksRetType, ok bool) {
	return getCertCheckResponseGetCertChecksAttributeTypeOk(o.CertChecks)
}

// SetCertChecks sets field value
func (o *CertCheckResponse) SetCertChecks(v CertCheckResponseGetCertChecksRetType) {
	setCertCheckResponseGetCertChecksAttributeType(&o.CertChecks, v)
}

// GetMessage returns the Message field value
func (o *CertCheckResponse) GetMessage() (ret CertCheckResponseGetMessageRetType) {
	ret, _ = o.GetMessageOk()
	return ret
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *CertCheckResponse) GetMessageOk() (ret CertCheckResponseGetMessageRetType, ok bool) {
	return getCertCheckResponseGetMessageAttributeTypeOk(o.Message)
}

// SetMessage sets field value
func (o *CertCheckResponse) SetMessage(v CertCheckResponseGetMessageRetType) {
	setCertCheckResponseGetMessageAttributeType(&o.Message, v)
}

func (o CertCheckResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getCertCheckResponseGetCertChecksAttributeTypeOk(o.CertChecks); ok {
		toSerialize["CertChecks"] = val
	}
	if val, ok := getCertCheckResponseGetMessageAttributeTypeOk(o.Message); ok {
		toSerialize["Message"] = val
	}
	return toSerialize, nil
}

type NullableCertCheckResponse struct {
	value *CertCheckResponse
	isSet bool
}

func (v NullableCertCheckResponse) Get() *CertCheckResponse {
	return v.value
}

func (v *NullableCertCheckResponse) Set(val *CertCheckResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCertCheckResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCertCheckResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCertCheckResponse(val *CertCheckResponse) *NullableCertCheckResponse {
	return &NullableCertCheckResponse{value: val, isSet: true}
}

func (v NullableCertCheckResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCertCheckResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
