/*
STACKIT Observability API

API endpoints for Observability on STACKIT

API version: 1.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package observability

import (
	"encoding/json"
)

// checks if the Plan type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Plan{}

/*
	types and functions for alertMatchers
*/

// isInteger
type PlanGetAlertMatchersAttributeType = *int64
type PlanGetAlertMatchersArgType = int64
type PlanGetAlertMatchersRetType = int64

func getPlanGetAlertMatchersAttributeTypeOk(arg PlanGetAlertMatchersAttributeType) (ret PlanGetAlertMatchersRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setPlanGetAlertMatchersAttributeType(arg *PlanGetAlertMatchersAttributeType, val PlanGetAlertMatchersRetType) {
	*arg = &val
}

/*
	types and functions for alertReceivers
*/

// isInteger
type PlanGetAlertReceiversAttributeType = *int64
type PlanGetAlertReceiversArgType = int64
type PlanGetAlertReceiversRetType = int64

func getPlanGetAlertReceiversAttributeTypeOk(arg PlanGetAlertReceiversAttributeType) (ret PlanGetAlertReceiversRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setPlanGetAlertReceiversAttributeType(arg *PlanGetAlertReceiversAttributeType, val PlanGetAlertReceiversRetType) {
	*arg = &val
}

/*
	types and functions for alertRules
*/

// isInteger
type PlanGetAlertRulesAttributeType = *int64
type PlanGetAlertRulesArgType = int64
type PlanGetAlertRulesRetType = int64

func getPlanGetAlertRulesAttributeTypeOk(arg PlanGetAlertRulesAttributeType) (ret PlanGetAlertRulesRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setPlanGetAlertRulesAttributeType(arg *PlanGetAlertRulesAttributeType, val PlanGetAlertRulesRetType) {
	*arg = &val
}

/*
	types and functions for amount
*/

// isNumber
type PlanGetAmountAttributeType = *float64
type PlanGetAmountArgType = float64
type PlanGetAmountRetType = float64

func getPlanGetAmountAttributeTypeOk(arg PlanGetAmountAttributeType) (ret PlanGetAmountRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setPlanGetAmountAttributeType(arg *PlanGetAmountAttributeType, val PlanGetAmountRetType) {
	*arg = &val
}

/*
	types and functions for bucketSize
*/

// isInteger
type PlanGetBucketSizeAttributeType = *int64
type PlanGetBucketSizeArgType = int64
type PlanGetBucketSizeRetType = int64

func getPlanGetBucketSizeAttributeTypeOk(arg PlanGetBucketSizeAttributeType) (ret PlanGetBucketSizeRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setPlanGetBucketSizeAttributeType(arg *PlanGetBucketSizeAttributeType, val PlanGetBucketSizeRetType) {
	*arg = &val
}

/*
	types and functions for description
*/

// isNotNullableString
type PlanGetDescriptionAttributeType = *string

func getPlanGetDescriptionAttributeTypeOk(arg PlanGetDescriptionAttributeType) (ret PlanGetDescriptionRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setPlanGetDescriptionAttributeType(arg *PlanGetDescriptionAttributeType, val PlanGetDescriptionRetType) {
	*arg = &val
}

type PlanGetDescriptionArgType = string
type PlanGetDescriptionRetType = string

/*
	types and functions for grafanaGlobalDashboards
*/

// isInteger
type PlanGetGrafanaGlobalDashboardsAttributeType = *int64
type PlanGetGrafanaGlobalDashboardsArgType = int64
type PlanGetGrafanaGlobalDashboardsRetType = int64

func getPlanGetGrafanaGlobalDashboardsAttributeTypeOk(arg PlanGetGrafanaGlobalDashboardsAttributeType) (ret PlanGetGrafanaGlobalDashboardsRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setPlanGetGrafanaGlobalDashboardsAttributeType(arg *PlanGetGrafanaGlobalDashboardsAttributeType, val PlanGetGrafanaGlobalDashboardsRetType) {
	*arg = &val
}

/*
	types and functions for grafanaGlobalOrgs
*/

// isInteger
type PlanGetGrafanaGlobalOrgsAttributeType = *int64
type PlanGetGrafanaGlobalOrgsArgType = int64
type PlanGetGrafanaGlobalOrgsRetType = int64

func getPlanGetGrafanaGlobalOrgsAttributeTypeOk(arg PlanGetGrafanaGlobalOrgsAttributeType) (ret PlanGetGrafanaGlobalOrgsRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setPlanGetGrafanaGlobalOrgsAttributeType(arg *PlanGetGrafanaGlobalOrgsAttributeType, val PlanGetGrafanaGlobalOrgsRetType) {
	*arg = &val
}

/*
	types and functions for grafanaGlobalSessions
*/

// isInteger
type PlanGetGrafanaGlobalSessionsAttributeType = *int64
type PlanGetGrafanaGlobalSessionsArgType = int64
type PlanGetGrafanaGlobalSessionsRetType = int64

func getPlanGetGrafanaGlobalSessionsAttributeTypeOk(arg PlanGetGrafanaGlobalSessionsAttributeType) (ret PlanGetGrafanaGlobalSessionsRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setPlanGetGrafanaGlobalSessionsAttributeType(arg *PlanGetGrafanaGlobalSessionsAttributeType, val PlanGetGrafanaGlobalSessionsRetType) {
	*arg = &val
}

/*
	types and functions for grafanaGlobalUsers
*/

// isInteger
type PlanGetGrafanaGlobalUsersAttributeType = *int64
type PlanGetGrafanaGlobalUsersArgType = int64
type PlanGetGrafanaGlobalUsersRetType = int64

func getPlanGetGrafanaGlobalUsersAttributeTypeOk(arg PlanGetGrafanaGlobalUsersAttributeType) (ret PlanGetGrafanaGlobalUsersRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setPlanGetGrafanaGlobalUsersAttributeType(arg *PlanGetGrafanaGlobalUsersAttributeType, val PlanGetGrafanaGlobalUsersRetType) {
	*arg = &val
}

/*
	types and functions for id
*/

// isNotNullableString
type PlanGetIdAttributeType = *string

func getPlanGetIdAttributeTypeOk(arg PlanGetIdAttributeType) (ret PlanGetIdRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setPlanGetIdAttributeType(arg *PlanGetIdAttributeType, val PlanGetIdRetType) {
	*arg = &val
}

type PlanGetIdArgType = string
type PlanGetIdRetType = string

/*
	types and functions for isFree
*/

// isBoolean
type PlangetIsFreeAttributeType = *bool
type PlangetIsFreeArgType = bool
type PlangetIsFreeRetType = bool

func getPlangetIsFreeAttributeTypeOk(arg PlangetIsFreeAttributeType) (ret PlangetIsFreeRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setPlangetIsFreeAttributeType(arg *PlangetIsFreeAttributeType, val PlangetIsFreeRetType) {
	*arg = &val
}

/*
	types and functions for isPublic
*/

// isBoolean
type PlangetIsPublicAttributeType = *bool
type PlangetIsPublicArgType = bool
type PlangetIsPublicRetType = bool

func getPlangetIsPublicAttributeTypeOk(arg PlangetIsPublicAttributeType) (ret PlangetIsPublicRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setPlangetIsPublicAttributeType(arg *PlangetIsPublicAttributeType, val PlangetIsPublicRetType) {
	*arg = &val
}

/*
	types and functions for logsAlert
*/

// isInteger
type PlanGetLogsAlertAttributeType = *int64
type PlanGetLogsAlertArgType = int64
type PlanGetLogsAlertRetType = int64

func getPlanGetLogsAlertAttributeTypeOk(arg PlanGetLogsAlertAttributeType) (ret PlanGetLogsAlertRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setPlanGetLogsAlertAttributeType(arg *PlanGetLogsAlertAttributeType, val PlanGetLogsAlertRetType) {
	*arg = &val
}

/*
	types and functions for logsStorage
*/

// isInteger
type PlanGetLogsStorageAttributeType = *int64
type PlanGetLogsStorageArgType = int64
type PlanGetLogsStorageRetType = int64

func getPlanGetLogsStorageAttributeTypeOk(arg PlanGetLogsStorageAttributeType) (ret PlanGetLogsStorageRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setPlanGetLogsStorageAttributeType(arg *PlanGetLogsStorageAttributeType, val PlanGetLogsStorageRetType) {
	*arg = &val
}

/*
	types and functions for name
*/

// isNotNullableString
type PlanGetNameAttributeType = *string

func getPlanGetNameAttributeTypeOk(arg PlanGetNameAttributeType) (ret PlanGetNameRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setPlanGetNameAttributeType(arg *PlanGetNameAttributeType, val PlanGetNameRetType) {
	*arg = &val
}

type PlanGetNameArgType = string
type PlanGetNameRetType = string

/*
	types and functions for planId
*/

// isNotNullableString
type PlanGetPlanIdAttributeType = *string

func getPlanGetPlanIdAttributeTypeOk(arg PlanGetPlanIdAttributeType) (ret PlanGetPlanIdRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setPlanGetPlanIdAttributeType(arg *PlanGetPlanIdAttributeType, val PlanGetPlanIdRetType) {
	*arg = &val
}

type PlanGetPlanIdArgType = string
type PlanGetPlanIdRetType = string

/*
	types and functions for samplesPerScrape
*/

// isInteger
type PlanGetSamplesPerScrapeAttributeType = *int64
type PlanGetSamplesPerScrapeArgType = int64
type PlanGetSamplesPerScrapeRetType = int64

func getPlanGetSamplesPerScrapeAttributeTypeOk(arg PlanGetSamplesPerScrapeAttributeType) (ret PlanGetSamplesPerScrapeRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setPlanGetSamplesPerScrapeAttributeType(arg *PlanGetSamplesPerScrapeAttributeType, val PlanGetSamplesPerScrapeRetType) {
	*arg = &val
}

/*
	types and functions for schema
*/

// isNotNullableString
type PlanGetSchemaAttributeType = *string

func getPlanGetSchemaAttributeTypeOk(arg PlanGetSchemaAttributeType) (ret PlanGetSchemaRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setPlanGetSchemaAttributeType(arg *PlanGetSchemaAttributeType, val PlanGetSchemaRetType) {
	*arg = &val
}

type PlanGetSchemaArgType = string
type PlanGetSchemaRetType = string

/*
	types and functions for targetNumber
*/

// isInteger
type PlanGetTargetNumberAttributeType = *int64
type PlanGetTargetNumberArgType = int64
type PlanGetTargetNumberRetType = int64

func getPlanGetTargetNumberAttributeTypeOk(arg PlanGetTargetNumberAttributeType) (ret PlanGetTargetNumberRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setPlanGetTargetNumberAttributeType(arg *PlanGetTargetNumberAttributeType, val PlanGetTargetNumberRetType) {
	*arg = &val
}

/*
	types and functions for totalMetricSamples
*/

// isInteger
type PlanGetTotalMetricSamplesAttributeType = *int64
type PlanGetTotalMetricSamplesArgType = int64
type PlanGetTotalMetricSamplesRetType = int64

func getPlanGetTotalMetricSamplesAttributeTypeOk(arg PlanGetTotalMetricSamplesAttributeType) (ret PlanGetTotalMetricSamplesRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setPlanGetTotalMetricSamplesAttributeType(arg *PlanGetTotalMetricSamplesAttributeType, val PlanGetTotalMetricSamplesRetType) {
	*arg = &val
}

/*
	types and functions for tracesStorage
*/

// isInteger
type PlanGetTracesStorageAttributeType = *int64
type PlanGetTracesStorageArgType = int64
type PlanGetTracesStorageRetType = int64

func getPlanGetTracesStorageAttributeTypeOk(arg PlanGetTracesStorageAttributeType) (ret PlanGetTracesStorageRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setPlanGetTracesStorageAttributeType(arg *PlanGetTracesStorageAttributeType, val PlanGetTracesStorageRetType) {
	*arg = &val
}

// Plan struct for Plan
type Plan struct {
	// REQUIRED
	AlertMatchers PlanGetAlertMatchersAttributeType `json:"alertMatchers" required:"true"`
	// REQUIRED
	AlertReceivers PlanGetAlertReceiversAttributeType `json:"alertReceivers" required:"true"`
	// REQUIRED
	AlertRules PlanGetAlertRulesAttributeType `json:"alertRules" required:"true"`
	Amount     PlanGetAmountAttributeType     `json:"amount,omitempty"`
	// REQUIRED
	BucketSize  PlanGetBucketSizeAttributeType  `json:"bucketSize" required:"true"`
	Description PlanGetDescriptionAttributeType `json:"description,omitempty"`
	// REQUIRED
	GrafanaGlobalDashboards PlanGetGrafanaGlobalDashboardsAttributeType `json:"grafanaGlobalDashboards" required:"true"`
	// REQUIRED
	GrafanaGlobalOrgs PlanGetGrafanaGlobalOrgsAttributeType `json:"grafanaGlobalOrgs" required:"true"`
	// REQUIRED
	GrafanaGlobalSessions PlanGetGrafanaGlobalSessionsAttributeType `json:"grafanaGlobalSessions" required:"true"`
	// REQUIRED
	GrafanaGlobalUsers PlanGetGrafanaGlobalUsersAttributeType `json:"grafanaGlobalUsers" required:"true"`
	// REQUIRED
	Id       PlanGetIdAttributeType       `json:"id" required:"true"`
	IsFree   PlangetIsFreeAttributeType   `json:"isFree,omitempty"`
	IsPublic PlangetIsPublicAttributeType `json:"isPublic,omitempty"`
	// REQUIRED
	LogsAlert PlanGetLogsAlertAttributeType `json:"logsAlert" required:"true"`
	// REQUIRED
	LogsStorage PlanGetLogsStorageAttributeType `json:"logsStorage" required:"true"`
	Name        PlanGetNameAttributeType        `json:"name,omitempty"`
	// REQUIRED
	PlanId PlanGetPlanIdAttributeType `json:"planId" required:"true"`
	// REQUIRED
	SamplesPerScrape PlanGetSamplesPerScrapeAttributeType `json:"samplesPerScrape" required:"true"`
	Schema           PlanGetSchemaAttributeType           `json:"schema,omitempty"`
	// REQUIRED
	TargetNumber PlanGetTargetNumberAttributeType `json:"targetNumber" required:"true"`
	// REQUIRED
	TotalMetricSamples PlanGetTotalMetricSamplesAttributeType `json:"totalMetricSamples" required:"true"`
	// REQUIRED
	TracesStorage PlanGetTracesStorageAttributeType `json:"tracesStorage" required:"true"`
}

type _Plan Plan

// NewPlan instantiates a new Plan object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPlan(alertMatchers PlanGetAlertMatchersArgType, alertReceivers PlanGetAlertReceiversArgType, alertRules PlanGetAlertRulesArgType, bucketSize PlanGetBucketSizeArgType, grafanaGlobalDashboards PlanGetGrafanaGlobalDashboardsArgType, grafanaGlobalOrgs PlanGetGrafanaGlobalOrgsArgType, grafanaGlobalSessions PlanGetGrafanaGlobalSessionsArgType, grafanaGlobalUsers PlanGetGrafanaGlobalUsersArgType, id PlanGetIdArgType, logsAlert PlanGetLogsAlertArgType, logsStorage PlanGetLogsStorageArgType, planId PlanGetPlanIdArgType, samplesPerScrape PlanGetSamplesPerScrapeArgType, targetNumber PlanGetTargetNumberArgType, totalMetricSamples PlanGetTotalMetricSamplesArgType, tracesStorage PlanGetTracesStorageArgType) *Plan {
	this := Plan{}
	setPlanGetAlertMatchersAttributeType(&this.AlertMatchers, alertMatchers)
	setPlanGetAlertReceiversAttributeType(&this.AlertReceivers, alertReceivers)
	setPlanGetAlertRulesAttributeType(&this.AlertRules, alertRules)
	setPlanGetBucketSizeAttributeType(&this.BucketSize, bucketSize)
	setPlanGetGrafanaGlobalDashboardsAttributeType(&this.GrafanaGlobalDashboards, grafanaGlobalDashboards)
	setPlanGetGrafanaGlobalOrgsAttributeType(&this.GrafanaGlobalOrgs, grafanaGlobalOrgs)
	setPlanGetGrafanaGlobalSessionsAttributeType(&this.GrafanaGlobalSessions, grafanaGlobalSessions)
	setPlanGetGrafanaGlobalUsersAttributeType(&this.GrafanaGlobalUsers, grafanaGlobalUsers)
	setPlanGetIdAttributeType(&this.Id, id)
	setPlanGetLogsAlertAttributeType(&this.LogsAlert, logsAlert)
	setPlanGetLogsStorageAttributeType(&this.LogsStorage, logsStorage)
	setPlanGetPlanIdAttributeType(&this.PlanId, planId)
	setPlanGetSamplesPerScrapeAttributeType(&this.SamplesPerScrape, samplesPerScrape)
	setPlanGetTargetNumberAttributeType(&this.TargetNumber, targetNumber)
	setPlanGetTotalMetricSamplesAttributeType(&this.TotalMetricSamples, totalMetricSamples)
	setPlanGetTracesStorageAttributeType(&this.TracesStorage, tracesStorage)
	return &this
}

// NewPlanWithDefaults instantiates a new Plan object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPlanWithDefaults() *Plan {
	this := Plan{}
	var isFree bool = false
	this.IsFree = &isFree
	var isPublic bool = true
	this.IsPublic = &isPublic
	var schema string = ""
	this.Schema = &schema
	return &this
}

// GetAlertMatchers returns the AlertMatchers field value
func (o *Plan) GetAlertMatchers() (ret PlanGetAlertMatchersRetType) {
	ret, _ = o.GetAlertMatchersOk()
	return ret
}

// GetAlertMatchersOk returns a tuple with the AlertMatchers field value
// and a boolean to check if the value has been set.
func (o *Plan) GetAlertMatchersOk() (ret PlanGetAlertMatchersRetType, ok bool) {
	return getPlanGetAlertMatchersAttributeTypeOk(o.AlertMatchers)
}

// SetAlertMatchers sets field value
func (o *Plan) SetAlertMatchers(v PlanGetAlertMatchersRetType) {
	setPlanGetAlertMatchersAttributeType(&o.AlertMatchers, v)
}

// GetAlertReceivers returns the AlertReceivers field value
func (o *Plan) GetAlertReceivers() (ret PlanGetAlertReceiversRetType) {
	ret, _ = o.GetAlertReceiversOk()
	return ret
}

// GetAlertReceiversOk returns a tuple with the AlertReceivers field value
// and a boolean to check if the value has been set.
func (o *Plan) GetAlertReceiversOk() (ret PlanGetAlertReceiversRetType, ok bool) {
	return getPlanGetAlertReceiversAttributeTypeOk(o.AlertReceivers)
}

// SetAlertReceivers sets field value
func (o *Plan) SetAlertReceivers(v PlanGetAlertReceiversRetType) {
	setPlanGetAlertReceiversAttributeType(&o.AlertReceivers, v)
}

// GetAlertRules returns the AlertRules field value
func (o *Plan) GetAlertRules() (ret PlanGetAlertRulesRetType) {
	ret, _ = o.GetAlertRulesOk()
	return ret
}

// GetAlertRulesOk returns a tuple with the AlertRules field value
// and a boolean to check if the value has been set.
func (o *Plan) GetAlertRulesOk() (ret PlanGetAlertRulesRetType, ok bool) {
	return getPlanGetAlertRulesAttributeTypeOk(o.AlertRules)
}

// SetAlertRules sets field value
func (o *Plan) SetAlertRules(v PlanGetAlertRulesRetType) {
	setPlanGetAlertRulesAttributeType(&o.AlertRules, v)
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *Plan) GetAmount() (res PlanGetAmountRetType) {
	res, _ = o.GetAmountOk()
	return
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Plan) GetAmountOk() (ret PlanGetAmountRetType, ok bool) {
	return getPlanGetAmountAttributeTypeOk(o.Amount)
}

// HasAmount returns a boolean if a field has been set.
func (o *Plan) HasAmount() bool {
	_, ok := o.GetAmountOk()
	return ok
}

// SetAmount gets a reference to the given float64 and assigns it to the Amount field.
func (o *Plan) SetAmount(v PlanGetAmountRetType) {
	setPlanGetAmountAttributeType(&o.Amount, v)
}

// GetBucketSize returns the BucketSize field value
func (o *Plan) GetBucketSize() (ret PlanGetBucketSizeRetType) {
	ret, _ = o.GetBucketSizeOk()
	return ret
}

// GetBucketSizeOk returns a tuple with the BucketSize field value
// and a boolean to check if the value has been set.
func (o *Plan) GetBucketSizeOk() (ret PlanGetBucketSizeRetType, ok bool) {
	return getPlanGetBucketSizeAttributeTypeOk(o.BucketSize)
}

// SetBucketSize sets field value
func (o *Plan) SetBucketSize(v PlanGetBucketSizeRetType) {
	setPlanGetBucketSizeAttributeType(&o.BucketSize, v)
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *Plan) GetDescription() (res PlanGetDescriptionRetType) {
	res, _ = o.GetDescriptionOk()
	return
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Plan) GetDescriptionOk() (ret PlanGetDescriptionRetType, ok bool) {
	return getPlanGetDescriptionAttributeTypeOk(o.Description)
}

// HasDescription returns a boolean if a field has been set.
func (o *Plan) HasDescription() bool {
	_, ok := o.GetDescriptionOk()
	return ok
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *Plan) SetDescription(v PlanGetDescriptionRetType) {
	setPlanGetDescriptionAttributeType(&o.Description, v)
}

// GetGrafanaGlobalDashboards returns the GrafanaGlobalDashboards field value
func (o *Plan) GetGrafanaGlobalDashboards() (ret PlanGetGrafanaGlobalDashboardsRetType) {
	ret, _ = o.GetGrafanaGlobalDashboardsOk()
	return ret
}

// GetGrafanaGlobalDashboardsOk returns a tuple with the GrafanaGlobalDashboards field value
// and a boolean to check if the value has been set.
func (o *Plan) GetGrafanaGlobalDashboardsOk() (ret PlanGetGrafanaGlobalDashboardsRetType, ok bool) {
	return getPlanGetGrafanaGlobalDashboardsAttributeTypeOk(o.GrafanaGlobalDashboards)
}

// SetGrafanaGlobalDashboards sets field value
func (o *Plan) SetGrafanaGlobalDashboards(v PlanGetGrafanaGlobalDashboardsRetType) {
	setPlanGetGrafanaGlobalDashboardsAttributeType(&o.GrafanaGlobalDashboards, v)
}

// GetGrafanaGlobalOrgs returns the GrafanaGlobalOrgs field value
func (o *Plan) GetGrafanaGlobalOrgs() (ret PlanGetGrafanaGlobalOrgsRetType) {
	ret, _ = o.GetGrafanaGlobalOrgsOk()
	return ret
}

// GetGrafanaGlobalOrgsOk returns a tuple with the GrafanaGlobalOrgs field value
// and a boolean to check if the value has been set.
func (o *Plan) GetGrafanaGlobalOrgsOk() (ret PlanGetGrafanaGlobalOrgsRetType, ok bool) {
	return getPlanGetGrafanaGlobalOrgsAttributeTypeOk(o.GrafanaGlobalOrgs)
}

// SetGrafanaGlobalOrgs sets field value
func (o *Plan) SetGrafanaGlobalOrgs(v PlanGetGrafanaGlobalOrgsRetType) {
	setPlanGetGrafanaGlobalOrgsAttributeType(&o.GrafanaGlobalOrgs, v)
}

// GetGrafanaGlobalSessions returns the GrafanaGlobalSessions field value
func (o *Plan) GetGrafanaGlobalSessions() (ret PlanGetGrafanaGlobalSessionsRetType) {
	ret, _ = o.GetGrafanaGlobalSessionsOk()
	return ret
}

// GetGrafanaGlobalSessionsOk returns a tuple with the GrafanaGlobalSessions field value
// and a boolean to check if the value has been set.
func (o *Plan) GetGrafanaGlobalSessionsOk() (ret PlanGetGrafanaGlobalSessionsRetType, ok bool) {
	return getPlanGetGrafanaGlobalSessionsAttributeTypeOk(o.GrafanaGlobalSessions)
}

// SetGrafanaGlobalSessions sets field value
func (o *Plan) SetGrafanaGlobalSessions(v PlanGetGrafanaGlobalSessionsRetType) {
	setPlanGetGrafanaGlobalSessionsAttributeType(&o.GrafanaGlobalSessions, v)
}

// GetGrafanaGlobalUsers returns the GrafanaGlobalUsers field value
func (o *Plan) GetGrafanaGlobalUsers() (ret PlanGetGrafanaGlobalUsersRetType) {
	ret, _ = o.GetGrafanaGlobalUsersOk()
	return ret
}

// GetGrafanaGlobalUsersOk returns a tuple with the GrafanaGlobalUsers field value
// and a boolean to check if the value has been set.
func (o *Plan) GetGrafanaGlobalUsersOk() (ret PlanGetGrafanaGlobalUsersRetType, ok bool) {
	return getPlanGetGrafanaGlobalUsersAttributeTypeOk(o.GrafanaGlobalUsers)
}

// SetGrafanaGlobalUsers sets field value
func (o *Plan) SetGrafanaGlobalUsers(v PlanGetGrafanaGlobalUsersRetType) {
	setPlanGetGrafanaGlobalUsersAttributeType(&o.GrafanaGlobalUsers, v)
}

// GetId returns the Id field value
func (o *Plan) GetId() (ret PlanGetIdRetType) {
	ret, _ = o.GetIdOk()
	return ret
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Plan) GetIdOk() (ret PlanGetIdRetType, ok bool) {
	return getPlanGetIdAttributeTypeOk(o.Id)
}

// SetId sets field value
func (o *Plan) SetId(v PlanGetIdRetType) {
	setPlanGetIdAttributeType(&o.Id, v)
}

// GetIsFree returns the IsFree field value if set, zero value otherwise.
func (o *Plan) GetIsFree() (res PlangetIsFreeRetType) {
	res, _ = o.GetIsFreeOk()
	return
}

// GetIsFreeOk returns a tuple with the IsFree field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Plan) GetIsFreeOk() (ret PlangetIsFreeRetType, ok bool) {
	return getPlangetIsFreeAttributeTypeOk(o.IsFree)
}

// HasIsFree returns a boolean if a field has been set.
func (o *Plan) HasIsFree() bool {
	_, ok := o.GetIsFreeOk()
	return ok
}

// SetIsFree gets a reference to the given bool and assigns it to the IsFree field.
func (o *Plan) SetIsFree(v PlangetIsFreeRetType) {
	setPlangetIsFreeAttributeType(&o.IsFree, v)
}

// GetIsPublic returns the IsPublic field value if set, zero value otherwise.
func (o *Plan) GetIsPublic() (res PlangetIsPublicRetType) {
	res, _ = o.GetIsPublicOk()
	return
}

// GetIsPublicOk returns a tuple with the IsPublic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Plan) GetIsPublicOk() (ret PlangetIsPublicRetType, ok bool) {
	return getPlangetIsPublicAttributeTypeOk(o.IsPublic)
}

// HasIsPublic returns a boolean if a field has been set.
func (o *Plan) HasIsPublic() bool {
	_, ok := o.GetIsPublicOk()
	return ok
}

// SetIsPublic gets a reference to the given bool and assigns it to the IsPublic field.
func (o *Plan) SetIsPublic(v PlangetIsPublicRetType) {
	setPlangetIsPublicAttributeType(&o.IsPublic, v)
}

// GetLogsAlert returns the LogsAlert field value
func (o *Plan) GetLogsAlert() (ret PlanGetLogsAlertRetType) {
	ret, _ = o.GetLogsAlertOk()
	return ret
}

// GetLogsAlertOk returns a tuple with the LogsAlert field value
// and a boolean to check if the value has been set.
func (o *Plan) GetLogsAlertOk() (ret PlanGetLogsAlertRetType, ok bool) {
	return getPlanGetLogsAlertAttributeTypeOk(o.LogsAlert)
}

// SetLogsAlert sets field value
func (o *Plan) SetLogsAlert(v PlanGetLogsAlertRetType) {
	setPlanGetLogsAlertAttributeType(&o.LogsAlert, v)
}

// GetLogsStorage returns the LogsStorage field value
func (o *Plan) GetLogsStorage() (ret PlanGetLogsStorageRetType) {
	ret, _ = o.GetLogsStorageOk()
	return ret
}

// GetLogsStorageOk returns a tuple with the LogsStorage field value
// and a boolean to check if the value has been set.
func (o *Plan) GetLogsStorageOk() (ret PlanGetLogsStorageRetType, ok bool) {
	return getPlanGetLogsStorageAttributeTypeOk(o.LogsStorage)
}

// SetLogsStorage sets field value
func (o *Plan) SetLogsStorage(v PlanGetLogsStorageRetType) {
	setPlanGetLogsStorageAttributeType(&o.LogsStorage, v)
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Plan) GetName() (res PlanGetNameRetType) {
	res, _ = o.GetNameOk()
	return
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Plan) GetNameOk() (ret PlanGetNameRetType, ok bool) {
	return getPlanGetNameAttributeTypeOk(o.Name)
}

// HasName returns a boolean if a field has been set.
func (o *Plan) HasName() bool {
	_, ok := o.GetNameOk()
	return ok
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Plan) SetName(v PlanGetNameRetType) {
	setPlanGetNameAttributeType(&o.Name, v)
}

// GetPlanId returns the PlanId field value
func (o *Plan) GetPlanId() (ret PlanGetPlanIdRetType) {
	ret, _ = o.GetPlanIdOk()
	return ret
}

// GetPlanIdOk returns a tuple with the PlanId field value
// and a boolean to check if the value has been set.
func (o *Plan) GetPlanIdOk() (ret PlanGetPlanIdRetType, ok bool) {
	return getPlanGetPlanIdAttributeTypeOk(o.PlanId)
}

// SetPlanId sets field value
func (o *Plan) SetPlanId(v PlanGetPlanIdRetType) {
	setPlanGetPlanIdAttributeType(&o.PlanId, v)
}

// GetSamplesPerScrape returns the SamplesPerScrape field value
func (o *Plan) GetSamplesPerScrape() (ret PlanGetSamplesPerScrapeRetType) {
	ret, _ = o.GetSamplesPerScrapeOk()
	return ret
}

// GetSamplesPerScrapeOk returns a tuple with the SamplesPerScrape field value
// and a boolean to check if the value has been set.
func (o *Plan) GetSamplesPerScrapeOk() (ret PlanGetSamplesPerScrapeRetType, ok bool) {
	return getPlanGetSamplesPerScrapeAttributeTypeOk(o.SamplesPerScrape)
}

// SetSamplesPerScrape sets field value
func (o *Plan) SetSamplesPerScrape(v PlanGetSamplesPerScrapeRetType) {
	setPlanGetSamplesPerScrapeAttributeType(&o.SamplesPerScrape, v)
}

// GetSchema returns the Schema field value if set, zero value otherwise.
func (o *Plan) GetSchema() (res PlanGetSchemaRetType) {
	res, _ = o.GetSchemaOk()
	return
}

// GetSchemaOk returns a tuple with the Schema field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Plan) GetSchemaOk() (ret PlanGetSchemaRetType, ok bool) {
	return getPlanGetSchemaAttributeTypeOk(o.Schema)
}

// HasSchema returns a boolean if a field has been set.
func (o *Plan) HasSchema() bool {
	_, ok := o.GetSchemaOk()
	return ok
}

// SetSchema gets a reference to the given string and assigns it to the Schema field.
func (o *Plan) SetSchema(v PlanGetSchemaRetType) {
	setPlanGetSchemaAttributeType(&o.Schema, v)
}

// GetTargetNumber returns the TargetNumber field value
func (o *Plan) GetTargetNumber() (ret PlanGetTargetNumberRetType) {
	ret, _ = o.GetTargetNumberOk()
	return ret
}

// GetTargetNumberOk returns a tuple with the TargetNumber field value
// and a boolean to check if the value has been set.
func (o *Plan) GetTargetNumberOk() (ret PlanGetTargetNumberRetType, ok bool) {
	return getPlanGetTargetNumberAttributeTypeOk(o.TargetNumber)
}

// SetTargetNumber sets field value
func (o *Plan) SetTargetNumber(v PlanGetTargetNumberRetType) {
	setPlanGetTargetNumberAttributeType(&o.TargetNumber, v)
}

// GetTotalMetricSamples returns the TotalMetricSamples field value
func (o *Plan) GetTotalMetricSamples() (ret PlanGetTotalMetricSamplesRetType) {
	ret, _ = o.GetTotalMetricSamplesOk()
	return ret
}

// GetTotalMetricSamplesOk returns a tuple with the TotalMetricSamples field value
// and a boolean to check if the value has been set.
func (o *Plan) GetTotalMetricSamplesOk() (ret PlanGetTotalMetricSamplesRetType, ok bool) {
	return getPlanGetTotalMetricSamplesAttributeTypeOk(o.TotalMetricSamples)
}

// SetTotalMetricSamples sets field value
func (o *Plan) SetTotalMetricSamples(v PlanGetTotalMetricSamplesRetType) {
	setPlanGetTotalMetricSamplesAttributeType(&o.TotalMetricSamples, v)
}

// GetTracesStorage returns the TracesStorage field value
func (o *Plan) GetTracesStorage() (ret PlanGetTracesStorageRetType) {
	ret, _ = o.GetTracesStorageOk()
	return ret
}

// GetTracesStorageOk returns a tuple with the TracesStorage field value
// and a boolean to check if the value has been set.
func (o *Plan) GetTracesStorageOk() (ret PlanGetTracesStorageRetType, ok bool) {
	return getPlanGetTracesStorageAttributeTypeOk(o.TracesStorage)
}

// SetTracesStorage sets field value
func (o *Plan) SetTracesStorage(v PlanGetTracesStorageRetType) {
	setPlanGetTracesStorageAttributeType(&o.TracesStorage, v)
}

func (o Plan) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getPlanGetAlertMatchersAttributeTypeOk(o.AlertMatchers); ok {
		toSerialize["AlertMatchers"] = val
	}
	if val, ok := getPlanGetAlertReceiversAttributeTypeOk(o.AlertReceivers); ok {
		toSerialize["AlertReceivers"] = val
	}
	if val, ok := getPlanGetAlertRulesAttributeTypeOk(o.AlertRules); ok {
		toSerialize["AlertRules"] = val
	}
	if val, ok := getPlanGetAmountAttributeTypeOk(o.Amount); ok {
		toSerialize["Amount"] = val
	}
	if val, ok := getPlanGetBucketSizeAttributeTypeOk(o.BucketSize); ok {
		toSerialize["BucketSize"] = val
	}
	if val, ok := getPlanGetDescriptionAttributeTypeOk(o.Description); ok {
		toSerialize["Description"] = val
	}
	if val, ok := getPlanGetGrafanaGlobalDashboardsAttributeTypeOk(o.GrafanaGlobalDashboards); ok {
		toSerialize["GrafanaGlobalDashboards"] = val
	}
	if val, ok := getPlanGetGrafanaGlobalOrgsAttributeTypeOk(o.GrafanaGlobalOrgs); ok {
		toSerialize["GrafanaGlobalOrgs"] = val
	}
	if val, ok := getPlanGetGrafanaGlobalSessionsAttributeTypeOk(o.GrafanaGlobalSessions); ok {
		toSerialize["GrafanaGlobalSessions"] = val
	}
	if val, ok := getPlanGetGrafanaGlobalUsersAttributeTypeOk(o.GrafanaGlobalUsers); ok {
		toSerialize["GrafanaGlobalUsers"] = val
	}
	if val, ok := getPlanGetIdAttributeTypeOk(o.Id); ok {
		toSerialize["Id"] = val
	}
	if val, ok := getPlangetIsFreeAttributeTypeOk(o.IsFree); ok {
		toSerialize["IsFree"] = val
	}
	if val, ok := getPlangetIsPublicAttributeTypeOk(o.IsPublic); ok {
		toSerialize["IsPublic"] = val
	}
	if val, ok := getPlanGetLogsAlertAttributeTypeOk(o.LogsAlert); ok {
		toSerialize["LogsAlert"] = val
	}
	if val, ok := getPlanGetLogsStorageAttributeTypeOk(o.LogsStorage); ok {
		toSerialize["LogsStorage"] = val
	}
	if val, ok := getPlanGetNameAttributeTypeOk(o.Name); ok {
		toSerialize["Name"] = val
	}
	if val, ok := getPlanGetPlanIdAttributeTypeOk(o.PlanId); ok {
		toSerialize["PlanId"] = val
	}
	if val, ok := getPlanGetSamplesPerScrapeAttributeTypeOk(o.SamplesPerScrape); ok {
		toSerialize["SamplesPerScrape"] = val
	}
	if val, ok := getPlanGetSchemaAttributeTypeOk(o.Schema); ok {
		toSerialize["Schema"] = val
	}
	if val, ok := getPlanGetTargetNumberAttributeTypeOk(o.TargetNumber); ok {
		toSerialize["TargetNumber"] = val
	}
	if val, ok := getPlanGetTotalMetricSamplesAttributeTypeOk(o.TotalMetricSamples); ok {
		toSerialize["TotalMetricSamples"] = val
	}
	if val, ok := getPlanGetTracesStorageAttributeTypeOk(o.TracesStorage); ok {
		toSerialize["TracesStorage"] = val
	}
	return toSerialize, nil
}

type NullablePlan struct {
	value *Plan
	isSet bool
}

func (v NullablePlan) Get() *Plan {
	return v.value
}

func (v *NullablePlan) Set(val *Plan) {
	v.value = val
	v.isSet = true
}

func (v NullablePlan) IsSet() bool {
	return v.isSet
}

func (v *NullablePlan) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePlan(val *Plan) *NullablePlan {
	return &NullablePlan{value: val, isSet: true}
}

func (v NullablePlan) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePlan) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
