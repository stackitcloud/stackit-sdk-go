/*
STACKIT Observability API

API endpoints for Observability on STACKIT

API version: 1.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package observability

import (
	"encoding/json"
)

// checks if the UpdateGrafanaConfigsPayloadGenericOauth type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateGrafanaConfigsPayloadGenericOauth{}

// UpdateGrafanaConfigsPayloadGenericOauth struct for UpdateGrafanaConfigsPayloadGenericOauth
type UpdateGrafanaConfigsPayloadGenericOauth struct {
	// Set api_url to the resource that returns OpenID UserInfo compatible information.
	// REQUIRED
	ApiUrl *string `json:"apiUrl"`
	// Authentication endpoint of idp.
	// REQUIRED
	AuthUrl *string `json:"authUrl"`
	// enable or disable generic oauth login
	// REQUIRED
	Enabled *bool `json:"enabled"`
	// Display name for the oAuth provider
	Name *string `json:"name,omitempty"`
	// Oauth client id for auth endpoint.
	// REQUIRED
	OauthClientId *string `json:"oauthClientId"`
	// Oauth client secret for auth endpoint.
	// REQUIRED
	OauthClientSecret *string `json:"oauthClientSecret"`
	// Grafana checks for the presence of a role using the JMESPath specified via the role_attribute_path configuration option. The JMESPath is applied to the id_token first. If there is no match, then the UserInfo endpoint specified via the api_url configuration option is tried next. The result after evaluation of the role_attribute_path JMESPath expression should be a valid Grafana role, for example, Viewer, Editor or Admin For example: contains(roles[\\*], 'grafana-admin') && 'Admin' || contains(roles[\\*], 'grafana-editor') && 'Editor' || contains(roles[\\*], 'grafana-viewer') && 'Viewer'
	// REQUIRED
	RoleAttributePath *string `json:"roleAttributePath"`
	// If  therole_attribute_path property does not return a role, then the user is assigned the Viewer role by default. You can disable the role assignment by setting role_attribute_strict = true. It denies user access if no role or an invalid role is returned.
	RoleAttributeStrict *bool `json:"roleAttributeStrict,omitempty"`
	// Space seperated list of scopes of the token
	Scopes *string `json:"scopes,omitempty"`
	// Token endpoint of the idp.
	// REQUIRED
	TokenUrl *string `json:"tokenUrl"`
	// enable or disable Proof Key for Code Exchange
	UsePkce *bool `json:"usePkce,omitempty"`
}

type _UpdateGrafanaConfigsPayloadGenericOauth UpdateGrafanaConfigsPayloadGenericOauth

// NewUpdateGrafanaConfigsPayloadGenericOauth instantiates a new UpdateGrafanaConfigsPayloadGenericOauth object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateGrafanaConfigsPayloadGenericOauth(apiUrl *string, authUrl *string, enabled *bool, oauthClientId *string, oauthClientSecret *string, roleAttributePath *string, tokenUrl *string) *UpdateGrafanaConfigsPayloadGenericOauth {
	this := UpdateGrafanaConfigsPayloadGenericOauth{}
	this.ApiUrl = apiUrl
	this.AuthUrl = authUrl
	this.Enabled = enabled
	this.OauthClientId = oauthClientId
	this.OauthClientSecret = oauthClientSecret
	this.RoleAttributePath = roleAttributePath
	var roleAttributeStrict bool = true
	this.RoleAttributeStrict = &roleAttributeStrict
	var scopes string = "openid profile email"
	this.Scopes = &scopes
	this.TokenUrl = tokenUrl
	return &this
}

// NewUpdateGrafanaConfigsPayloadGenericOauthWithDefaults instantiates a new UpdateGrafanaConfigsPayloadGenericOauth object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateGrafanaConfigsPayloadGenericOauthWithDefaults() *UpdateGrafanaConfigsPayloadGenericOauth {
	this := UpdateGrafanaConfigsPayloadGenericOauth{}
	var roleAttributeStrict bool = true
	this.RoleAttributeStrict = &roleAttributeStrict
	var scopes string = "openid profile email"
	this.Scopes = &scopes
	return &this
}

// GetApiUrl returns the ApiUrl field value
func (o *UpdateGrafanaConfigsPayloadGenericOauth) GetApiUrl() *string {
	if o == nil || IsNil(o.ApiUrl) {
		var ret *string
		return ret
	}

	return o.ApiUrl
}

// GetApiUrlOk returns a tuple with the ApiUrl field value
// and a boolean to check if the value has been set.
func (o *UpdateGrafanaConfigsPayloadGenericOauth) GetApiUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ApiUrl, true
}

// SetApiUrl sets field value
func (o *UpdateGrafanaConfigsPayloadGenericOauth) SetApiUrl(v *string) {
	o.ApiUrl = v
}

// GetAuthUrl returns the AuthUrl field value
func (o *UpdateGrafanaConfigsPayloadGenericOauth) GetAuthUrl() *string {
	if o == nil || IsNil(o.AuthUrl) {
		var ret *string
		return ret
	}

	return o.AuthUrl
}

// GetAuthUrlOk returns a tuple with the AuthUrl field value
// and a boolean to check if the value has been set.
func (o *UpdateGrafanaConfigsPayloadGenericOauth) GetAuthUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AuthUrl, true
}

// SetAuthUrl sets field value
func (o *UpdateGrafanaConfigsPayloadGenericOauth) SetAuthUrl(v *string) {
	o.AuthUrl = v
}

// GetEnabled returns the Enabled field value
func (o *UpdateGrafanaConfigsPayloadGenericOauth) GetEnabled() *bool {
	if o == nil || IsNil(o.Enabled) {
		var ret *bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *UpdateGrafanaConfigsPayloadGenericOauth) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Enabled, true
}

// SetEnabled sets field value
func (o *UpdateGrafanaConfigsPayloadGenericOauth) SetEnabled(v *bool) {
	o.Enabled = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateGrafanaConfigsPayloadGenericOauth) GetName() *string {
	if o == nil || IsNil(o.Name) {
		var ret *string
		return ret
	}
	return o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateGrafanaConfigsPayloadGenericOauth) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UpdateGrafanaConfigsPayloadGenericOauth) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateGrafanaConfigsPayloadGenericOauth) SetName(v *string) {
	o.Name = v
}

// GetOauthClientId returns the OauthClientId field value
func (o *UpdateGrafanaConfigsPayloadGenericOauth) GetOauthClientId() *string {
	if o == nil || IsNil(o.OauthClientId) {
		var ret *string
		return ret
	}

	return o.OauthClientId
}

// GetOauthClientIdOk returns a tuple with the OauthClientId field value
// and a boolean to check if the value has been set.
func (o *UpdateGrafanaConfigsPayloadGenericOauth) GetOauthClientIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OauthClientId, true
}

// SetOauthClientId sets field value
func (o *UpdateGrafanaConfigsPayloadGenericOauth) SetOauthClientId(v *string) {
	o.OauthClientId = v
}

// GetOauthClientSecret returns the OauthClientSecret field value
func (o *UpdateGrafanaConfigsPayloadGenericOauth) GetOauthClientSecret() *string {
	if o == nil || IsNil(o.OauthClientSecret) {
		var ret *string
		return ret
	}

	return o.OauthClientSecret
}

// GetOauthClientSecretOk returns a tuple with the OauthClientSecret field value
// and a boolean to check if the value has been set.
func (o *UpdateGrafanaConfigsPayloadGenericOauth) GetOauthClientSecretOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OauthClientSecret, true
}

// SetOauthClientSecret sets field value
func (o *UpdateGrafanaConfigsPayloadGenericOauth) SetOauthClientSecret(v *string) {
	o.OauthClientSecret = v
}

// GetRoleAttributePath returns the RoleAttributePath field value
func (o *UpdateGrafanaConfigsPayloadGenericOauth) GetRoleAttributePath() *string {
	if o == nil || IsNil(o.RoleAttributePath) {
		var ret *string
		return ret
	}

	return o.RoleAttributePath
}

// GetRoleAttributePathOk returns a tuple with the RoleAttributePath field value
// and a boolean to check if the value has been set.
func (o *UpdateGrafanaConfigsPayloadGenericOauth) GetRoleAttributePathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RoleAttributePath, true
}

// SetRoleAttributePath sets field value
func (o *UpdateGrafanaConfigsPayloadGenericOauth) SetRoleAttributePath(v *string) {
	o.RoleAttributePath = v
}

// GetRoleAttributeStrict returns the RoleAttributeStrict field value if set, zero value otherwise.
func (o *UpdateGrafanaConfigsPayloadGenericOauth) GetRoleAttributeStrict() *bool {
	if o == nil || IsNil(o.RoleAttributeStrict) {
		var ret *bool
		return ret
	}
	return o.RoleAttributeStrict
}

// GetRoleAttributeStrictOk returns a tuple with the RoleAttributeStrict field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateGrafanaConfigsPayloadGenericOauth) GetRoleAttributeStrictOk() (*bool, bool) {
	if o == nil || IsNil(o.RoleAttributeStrict) {
		return nil, false
	}
	return o.RoleAttributeStrict, true
}

// HasRoleAttributeStrict returns a boolean if a field has been set.
func (o *UpdateGrafanaConfigsPayloadGenericOauth) HasRoleAttributeStrict() bool {
	if o != nil && !IsNil(o.RoleAttributeStrict) {
		return true
	}

	return false
}

// SetRoleAttributeStrict gets a reference to the given bool and assigns it to the RoleAttributeStrict field.
func (o *UpdateGrafanaConfigsPayloadGenericOauth) SetRoleAttributeStrict(v *bool) {
	o.RoleAttributeStrict = v
}

// GetScopes returns the Scopes field value if set, zero value otherwise.
func (o *UpdateGrafanaConfigsPayloadGenericOauth) GetScopes() *string {
	if o == nil || IsNil(o.Scopes) {
		var ret *string
		return ret
	}
	return o.Scopes
}

// GetScopesOk returns a tuple with the Scopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateGrafanaConfigsPayloadGenericOauth) GetScopesOk() (*string, bool) {
	if o == nil || IsNil(o.Scopes) {
		return nil, false
	}
	return o.Scopes, true
}

// HasScopes returns a boolean if a field has been set.
func (o *UpdateGrafanaConfigsPayloadGenericOauth) HasScopes() bool {
	if o != nil && !IsNil(o.Scopes) {
		return true
	}

	return false
}

// SetScopes gets a reference to the given string and assigns it to the Scopes field.
func (o *UpdateGrafanaConfigsPayloadGenericOauth) SetScopes(v *string) {
	o.Scopes = v
}

// GetTokenUrl returns the TokenUrl field value
func (o *UpdateGrafanaConfigsPayloadGenericOauth) GetTokenUrl() *string {
	if o == nil || IsNil(o.TokenUrl) {
		var ret *string
		return ret
	}

	return o.TokenUrl
}

// GetTokenUrlOk returns a tuple with the TokenUrl field value
// and a boolean to check if the value has been set.
func (o *UpdateGrafanaConfigsPayloadGenericOauth) GetTokenUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TokenUrl, true
}

// SetTokenUrl sets field value
func (o *UpdateGrafanaConfigsPayloadGenericOauth) SetTokenUrl(v *string) {
	o.TokenUrl = v
}

// GetUsePkce returns the UsePkce field value if set, zero value otherwise.
func (o *UpdateGrafanaConfigsPayloadGenericOauth) GetUsePkce() *bool {
	if o == nil || IsNil(o.UsePkce) {
		var ret *bool
		return ret
	}
	return o.UsePkce
}

// GetUsePkceOk returns a tuple with the UsePkce field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateGrafanaConfigsPayloadGenericOauth) GetUsePkceOk() (*bool, bool) {
	if o == nil || IsNil(o.UsePkce) {
		return nil, false
	}
	return o.UsePkce, true
}

// HasUsePkce returns a boolean if a field has been set.
func (o *UpdateGrafanaConfigsPayloadGenericOauth) HasUsePkce() bool {
	if o != nil && !IsNil(o.UsePkce) {
		return true
	}

	return false
}

// SetUsePkce gets a reference to the given bool and assigns it to the UsePkce field.
func (o *UpdateGrafanaConfigsPayloadGenericOauth) SetUsePkce(v *bool) {
	o.UsePkce = v
}

func (o UpdateGrafanaConfigsPayloadGenericOauth) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["apiUrl"] = o.ApiUrl
	toSerialize["authUrl"] = o.AuthUrl
	toSerialize["enabled"] = o.Enabled
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	toSerialize["oauthClientId"] = o.OauthClientId
	toSerialize["oauthClientSecret"] = o.OauthClientSecret
	toSerialize["roleAttributePath"] = o.RoleAttributePath
	if !IsNil(o.RoleAttributeStrict) {
		toSerialize["roleAttributeStrict"] = o.RoleAttributeStrict
	}
	if !IsNil(o.Scopes) {
		toSerialize["scopes"] = o.Scopes
	}
	toSerialize["tokenUrl"] = o.TokenUrl
	if !IsNil(o.UsePkce) {
		toSerialize["usePkce"] = o.UsePkce
	}
	return toSerialize, nil
}

type NullableUpdateGrafanaConfigsPayloadGenericOauth struct {
	value *UpdateGrafanaConfigsPayloadGenericOauth
	isSet bool
}

func (v NullableUpdateGrafanaConfigsPayloadGenericOauth) Get() *UpdateGrafanaConfigsPayloadGenericOauth {
	return v.value
}

func (v *NullableUpdateGrafanaConfigsPayloadGenericOauth) Set(val *UpdateGrafanaConfigsPayloadGenericOauth) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateGrafanaConfigsPayloadGenericOauth) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateGrafanaConfigsPayloadGenericOauth) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateGrafanaConfigsPayloadGenericOauth(val *UpdateGrafanaConfigsPayloadGenericOauth) *NullableUpdateGrafanaConfigsPayloadGenericOauth {
	return &NullableUpdateGrafanaConfigsPayloadGenericOauth{value: val, isSet: true}
}

func (v NullableUpdateGrafanaConfigsPayloadGenericOauth) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateGrafanaConfigsPayloadGenericOauth) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
