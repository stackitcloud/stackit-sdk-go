/*
STACKIT Run Commands Service API

API endpoints for the STACKIT Run Commands Service API

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package runcommand

import (
	"encoding/json"
)

// checks if the GetCommandsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetCommandsResponse{}

/*
	types and functions for items
*/

// isArray
type GetCommandsResponseGetItemsAttributeType = *[]Commands
type GetCommandsResponseGetItemsArgType = []Commands
type GetCommandsResponseGetItemsRetType = []Commands

func getGetCommandsResponseGetItemsAttributeTypeOk(arg GetCommandsResponseGetItemsAttributeType) (ret GetCommandsResponseGetItemsRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setGetCommandsResponseGetItemsAttributeType(arg *GetCommandsResponseGetItemsAttributeType, val GetCommandsResponseGetItemsRetType) {
	*arg = &val
}

// GetCommandsResponse struct for GetCommandsResponse
type GetCommandsResponse struct {
	Items GetCommandsResponseGetItemsAttributeType `json:"items,omitempty"`
}

// NewGetCommandsResponse instantiates a new GetCommandsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetCommandsResponse() *GetCommandsResponse {
	this := GetCommandsResponse{}
	return &this
}

// NewGetCommandsResponseWithDefaults instantiates a new GetCommandsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetCommandsResponseWithDefaults() *GetCommandsResponse {
	this := GetCommandsResponse{}
	return &this
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *GetCommandsResponse) GetItems() (res GetCommandsResponseGetItemsRetType) {
	res, _ = o.GetItemsOk()
	return
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCommandsResponse) GetItemsOk() (ret GetCommandsResponseGetItemsRetType, ok bool) {
	return getGetCommandsResponseGetItemsAttributeTypeOk(o.Items)
}

// HasItems returns a boolean if a field has been set.
func (o *GetCommandsResponse) HasItems() bool {
	_, ok := o.GetItemsOk()
	return ok
}

// SetItems gets a reference to the given []Commands and assigns it to the Items field.
func (o *GetCommandsResponse) SetItems(v GetCommandsResponseGetItemsRetType) {
	setGetCommandsResponseGetItemsAttributeType(&o.Items, v)
}

func (o GetCommandsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getGetCommandsResponseGetItemsAttributeTypeOk(o.Items); ok {
		toSerialize["Items"] = val
	}
	return toSerialize, nil
}

type NullableGetCommandsResponse struct {
	value *GetCommandsResponse
	isSet bool
}

func (v NullableGetCommandsResponse) Get() *GetCommandsResponse {
	return v.value
}

func (v *NullableGetCommandsResponse) Set(val *GetCommandsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetCommandsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetCommandsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetCommandsResponse(val *GetCommandsResponse) *NullableGetCommandsResponse {
	return &NullableGetCommandsResponse{value: val, isSet: true}
}

func (v NullableGetCommandsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetCommandsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
