/*
STACKIT Run Commands Service API

API endpoints for the STACKIT Run Commands Service API

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package runcommand

import (
	"encoding/json"
)

// checks if the ParametersSchema type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ParametersSchema{}

/*
	types and functions for properties
*/

// isModel
type ParametersSchemaGetPropertiesAttributeType = *Properties
type ParametersSchemaGetPropertiesArgType = Properties
type ParametersSchemaGetPropertiesRetType = Properties

func getParametersSchemaGetPropertiesAttributeTypeOk(arg ParametersSchemaGetPropertiesAttributeType) (ret ParametersSchemaGetPropertiesRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setParametersSchemaGetPropertiesAttributeType(arg *ParametersSchemaGetPropertiesAttributeType, val ParametersSchemaGetPropertiesRetType) {
	*arg = &val
}

// ParametersSchema struct for ParametersSchema
type ParametersSchema struct {
	Properties ParametersSchemaGetPropertiesAttributeType `json:"properties,omitempty"`
}

// NewParametersSchema instantiates a new ParametersSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewParametersSchema() *ParametersSchema {
	this := ParametersSchema{}
	return &this
}

// NewParametersSchemaWithDefaults instantiates a new ParametersSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewParametersSchemaWithDefaults() *ParametersSchema {
	this := ParametersSchema{}
	return &this
}

// GetProperties returns the Properties field value if set, zero value otherwise.
func (o *ParametersSchema) GetProperties() (res ParametersSchemaGetPropertiesRetType) {
	res, _ = o.GetPropertiesOk()
	return
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParametersSchema) GetPropertiesOk() (ret ParametersSchemaGetPropertiesRetType, ok bool) {
	return getParametersSchemaGetPropertiesAttributeTypeOk(o.Properties)
}

// HasProperties returns a boolean if a field has been set.
func (o *ParametersSchema) HasProperties() bool {
	_, ok := o.GetPropertiesOk()
	return ok
}

// SetProperties gets a reference to the given Properties and assigns it to the Properties field.
func (o *ParametersSchema) SetProperties(v ParametersSchemaGetPropertiesRetType) {
	setParametersSchemaGetPropertiesAttributeType(&o.Properties, v)
}

func (o ParametersSchema) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getParametersSchemaGetPropertiesAttributeTypeOk(o.Properties); ok {
		toSerialize["Properties"] = val
	}
	return toSerialize, nil
}

type NullableParametersSchema struct {
	value *ParametersSchema
	isSet bool
}

func (v NullableParametersSchema) Get() *ParametersSchema {
	return v.value
}

func (v *NullableParametersSchema) Set(val *ParametersSchema) {
	v.value = val
	v.isSet = true
}

func (v NullableParametersSchema) IsSet() bool {
	return v.isSet
}

func (v *NullableParametersSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableParametersSchema(val *ParametersSchema) *NullableParametersSchema {
	return &NullableParametersSchema{value: val, isSet: true}
}

func (v NullableParametersSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableParametersSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
