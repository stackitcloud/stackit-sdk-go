/*
STACKIT Run Commands Service API

API endpoints for the STACKIT Run Commands Service API

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package runcommand

import (
	"encoding/json"
)

// checks if the NewCommandResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NewCommandResponse{}

/*
	types and functions for id
*/

// isInteger
type NewCommandResponseGetIdAttributeType = *int64
type NewCommandResponseGetIdArgType = int64
type NewCommandResponseGetIdRetType = int64

func getNewCommandResponseGetIdAttributeTypeOk(arg NewCommandResponseGetIdAttributeType) (ret NewCommandResponseGetIdRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setNewCommandResponseGetIdAttributeType(arg *NewCommandResponseGetIdAttributeType, val NewCommandResponseGetIdRetType) {
	*arg = &val
}

// NewCommandResponse struct for NewCommandResponse
type NewCommandResponse struct {
	// Can be cast to int32 without loss of precision.
	Id NewCommandResponseGetIdAttributeType `json:"id,omitempty"`
}

// NewNewCommandResponse instantiates a new NewCommandResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNewCommandResponse() *NewCommandResponse {
	this := NewCommandResponse{}
	return &this
}

// NewNewCommandResponseWithDefaults instantiates a new NewCommandResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNewCommandResponseWithDefaults() *NewCommandResponse {
	this := NewCommandResponse{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *NewCommandResponse) GetId() (res NewCommandResponseGetIdRetType) {
	res, _ = o.GetIdOk()
	return
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewCommandResponse) GetIdOk() (ret NewCommandResponseGetIdRetType, ok bool) {
	return getNewCommandResponseGetIdAttributeTypeOk(o.Id)
}

// HasId returns a boolean if a field has been set.
func (o *NewCommandResponse) HasId() bool {
	_, ok := o.GetIdOk()
	return ok
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *NewCommandResponse) SetId(v NewCommandResponseGetIdRetType) {
	setNewCommandResponseGetIdAttributeType(&o.Id, v)
}

func (o NewCommandResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getNewCommandResponseGetIdAttributeTypeOk(o.Id); ok {
		toSerialize["Id"] = val
	}
	return toSerialize, nil
}

type NullableNewCommandResponse struct {
	value *NewCommandResponse
	isSet bool
}

func (v NullableNewCommandResponse) Get() *NewCommandResponse {
	return v.value
}

func (v *NullableNewCommandResponse) Set(val *NewCommandResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableNewCommandResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableNewCommandResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNewCommandResponse(val *NewCommandResponse) *NullableNewCommandResponse {
	return &NullableNewCommandResponse{value: val, isSet: true}
}

func (v NullableNewCommandResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNewCommandResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
