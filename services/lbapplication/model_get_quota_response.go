/*
Application Load Balancer API

### DEPRECATED! This service, lb-application, is no longer maintained. Please use the alb service, version v2beta2 instead  This API offers an interface to provision and manage load balancing servers in your STACKIT project. It also has the possibility of pooling target servers for load balancing purposes.  For each application load balancer provided, two VMs are deployed in your OpenStack project subject to a fee.

API version: 1beta.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package lbapplication

import (
	"encoding/json"
)

// checks if the GetQuotaResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetQuotaResponse{}

/*
	types and functions for maxLoadBalancers
*/

// isInteger
type GetQuotaResponseGetMaxLoadBalancersAttributeType = *int64
type GetQuotaResponseGetMaxLoadBalancersArgType = int64
type GetQuotaResponseGetMaxLoadBalancersRetType = int64

func getGetQuotaResponseGetMaxLoadBalancersAttributeTypeOk(arg GetQuotaResponseGetMaxLoadBalancersAttributeType) (ret GetQuotaResponseGetMaxLoadBalancersRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setGetQuotaResponseGetMaxLoadBalancersAttributeType(arg *GetQuotaResponseGetMaxLoadBalancersAttributeType, val GetQuotaResponseGetMaxLoadBalancersRetType) {
	*arg = &val
}

/*
	types and functions for projectId
*/

// isNotNullableString
type GetQuotaResponseGetProjectIdAttributeType = *string

func getGetQuotaResponseGetProjectIdAttributeTypeOk(arg GetQuotaResponseGetProjectIdAttributeType) (ret GetQuotaResponseGetProjectIdRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setGetQuotaResponseGetProjectIdAttributeType(arg *GetQuotaResponseGetProjectIdAttributeType, val GetQuotaResponseGetProjectIdRetType) {
	*arg = &val
}

type GetQuotaResponseGetProjectIdArgType = string
type GetQuotaResponseGetProjectIdRetType = string

// GetQuotaResponse struct for GetQuotaResponse
type GetQuotaResponse struct {
	// The maximum number of load balancing servers in this project. Unlimited if set to -1.
	MaxLoadBalancers GetQuotaResponseGetMaxLoadBalancersAttributeType `json:"maxLoadBalancers,omitempty"`
	// Project identifier
	ProjectId GetQuotaResponseGetProjectIdAttributeType `json:"projectId,omitempty"`
}

// NewGetQuotaResponse instantiates a new GetQuotaResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetQuotaResponse() *GetQuotaResponse {
	this := GetQuotaResponse{}
	return &this
}

// NewGetQuotaResponseWithDefaults instantiates a new GetQuotaResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetQuotaResponseWithDefaults() *GetQuotaResponse {
	this := GetQuotaResponse{}
	return &this
}

// GetMaxLoadBalancers returns the MaxLoadBalancers field value if set, zero value otherwise.
func (o *GetQuotaResponse) GetMaxLoadBalancers() (res GetQuotaResponseGetMaxLoadBalancersRetType) {
	res, _ = o.GetMaxLoadBalancersOk()
	return
}

// GetMaxLoadBalancersOk returns a tuple with the MaxLoadBalancers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetQuotaResponse) GetMaxLoadBalancersOk() (ret GetQuotaResponseGetMaxLoadBalancersRetType, ok bool) {
	return getGetQuotaResponseGetMaxLoadBalancersAttributeTypeOk(o.MaxLoadBalancers)
}

// HasMaxLoadBalancers returns a boolean if a field has been set.
func (o *GetQuotaResponse) HasMaxLoadBalancers() bool {
	_, ok := o.GetMaxLoadBalancersOk()
	return ok
}

// SetMaxLoadBalancers gets a reference to the given int64 and assigns it to the MaxLoadBalancers field.
func (o *GetQuotaResponse) SetMaxLoadBalancers(v GetQuotaResponseGetMaxLoadBalancersRetType) {
	setGetQuotaResponseGetMaxLoadBalancersAttributeType(&o.MaxLoadBalancers, v)
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *GetQuotaResponse) GetProjectId() (res GetQuotaResponseGetProjectIdRetType) {
	res, _ = o.GetProjectIdOk()
	return
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetQuotaResponse) GetProjectIdOk() (ret GetQuotaResponseGetProjectIdRetType, ok bool) {
	return getGetQuotaResponseGetProjectIdAttributeTypeOk(o.ProjectId)
}

// HasProjectId returns a boolean if a field has been set.
func (o *GetQuotaResponse) HasProjectId() bool {
	_, ok := o.GetProjectIdOk()
	return ok
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *GetQuotaResponse) SetProjectId(v GetQuotaResponseGetProjectIdRetType) {
	setGetQuotaResponseGetProjectIdAttributeType(&o.ProjectId, v)
}

func (o GetQuotaResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getGetQuotaResponseGetMaxLoadBalancersAttributeTypeOk(o.MaxLoadBalancers); ok {
		toSerialize["MaxLoadBalancers"] = val
	}
	if val, ok := getGetQuotaResponseGetProjectIdAttributeTypeOk(o.ProjectId); ok {
		toSerialize["ProjectId"] = val
	}
	return toSerialize, nil
}

type NullableGetQuotaResponse struct {
	value *GetQuotaResponse
	isSet bool
}

func (v NullableGetQuotaResponse) Get() *GetQuotaResponse {
	return v.value
}

func (v *NullableGetQuotaResponse) Set(val *GetQuotaResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetQuotaResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetQuotaResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetQuotaResponse(val *GetQuotaResponse) *NullableGetQuotaResponse {
	return &NullableGetQuotaResponse{value: val, isSet: true}
}

func (v NullableGetQuotaResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetQuotaResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
