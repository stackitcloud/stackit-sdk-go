/*
Application Load Balancer API

### DEPRECATED! This service, lb-application, is no longer maintained. Please use the alb service, version v2beta2 instead  This API offers an interface to provision and manage load balancing servers in your STACKIT project. It also has the possibility of pooling target servers for load balancing purposes.  For each application load balancer provided, two VMs are deployed in your OpenStack project subject to a fee.

API version: 1beta.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package lbapplication

import (
	"encoding/json"
)

// checks if the LoadbalancerOptionLogs type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LoadbalancerOptionLogs{}

/*
	types and functions for credentialsRef
*/

// isNotNullableString
type LoadbalancerOptionLogsGetCredentialsRefAttributeType = *string

func getLoadbalancerOptionLogsGetCredentialsRefAttributeTypeOk(arg LoadbalancerOptionLogsGetCredentialsRefAttributeType) (ret LoadbalancerOptionLogsGetCredentialsRefRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setLoadbalancerOptionLogsGetCredentialsRefAttributeType(arg *LoadbalancerOptionLogsGetCredentialsRefAttributeType, val LoadbalancerOptionLogsGetCredentialsRefRetType) {
	*arg = &val
}

type LoadbalancerOptionLogsGetCredentialsRefArgType = string
type LoadbalancerOptionLogsGetCredentialsRefRetType = string

/*
	types and functions for pushUrl
*/

// isNotNullableString
type LoadbalancerOptionLogsGetPushUrlAttributeType = *string

func getLoadbalancerOptionLogsGetPushUrlAttributeTypeOk(arg LoadbalancerOptionLogsGetPushUrlAttributeType) (ret LoadbalancerOptionLogsGetPushUrlRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setLoadbalancerOptionLogsGetPushUrlAttributeType(arg *LoadbalancerOptionLogsGetPushUrlAttributeType, val LoadbalancerOptionLogsGetPushUrlRetType) {
	*arg = &val
}

type LoadbalancerOptionLogsGetPushUrlArgType = string
type LoadbalancerOptionLogsGetPushUrlRetType = string

// LoadbalancerOptionLogs struct for LoadbalancerOptionLogs
type LoadbalancerOptionLogs struct {
	// Credentials reference for logging. This reference is created via the observability create endpoint and the credential needs to contain the basic auth username and password for the logging solution the push URL points to. Then this enables monitoring via remote write for the Application Load Balancer.
	CredentialsRef LoadbalancerOptionLogsGetCredentialsRefAttributeType `json:"credentialsRef,omitempty"`
	// The ARGUS/Loki remote write Push URL you want the logs to be shipped to.
	PushUrl LoadbalancerOptionLogsGetPushUrlAttributeType `json:"pushUrl,omitempty"`
}

// NewLoadbalancerOptionLogs instantiates a new LoadbalancerOptionLogs object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLoadbalancerOptionLogs() *LoadbalancerOptionLogs {
	this := LoadbalancerOptionLogs{}
	return &this
}

// NewLoadbalancerOptionLogsWithDefaults instantiates a new LoadbalancerOptionLogs object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLoadbalancerOptionLogsWithDefaults() *LoadbalancerOptionLogs {
	this := LoadbalancerOptionLogs{}
	return &this
}

// GetCredentialsRef returns the CredentialsRef field value if set, zero value otherwise.
func (o *LoadbalancerOptionLogs) GetCredentialsRef() (res LoadbalancerOptionLogsGetCredentialsRefRetType) {
	res, _ = o.GetCredentialsRefOk()
	return
}

// GetCredentialsRefOk returns a tuple with the CredentialsRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadbalancerOptionLogs) GetCredentialsRefOk() (ret LoadbalancerOptionLogsGetCredentialsRefRetType, ok bool) {
	return getLoadbalancerOptionLogsGetCredentialsRefAttributeTypeOk(o.CredentialsRef)
}

// HasCredentialsRef returns a boolean if a field has been set.
func (o *LoadbalancerOptionLogs) HasCredentialsRef() bool {
	_, ok := o.GetCredentialsRefOk()
	return ok
}

// SetCredentialsRef gets a reference to the given string and assigns it to the CredentialsRef field.
func (o *LoadbalancerOptionLogs) SetCredentialsRef(v LoadbalancerOptionLogsGetCredentialsRefRetType) {
	setLoadbalancerOptionLogsGetCredentialsRefAttributeType(&o.CredentialsRef, v)
}

// GetPushUrl returns the PushUrl field value if set, zero value otherwise.
func (o *LoadbalancerOptionLogs) GetPushUrl() (res LoadbalancerOptionLogsGetPushUrlRetType) {
	res, _ = o.GetPushUrlOk()
	return
}

// GetPushUrlOk returns a tuple with the PushUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadbalancerOptionLogs) GetPushUrlOk() (ret LoadbalancerOptionLogsGetPushUrlRetType, ok bool) {
	return getLoadbalancerOptionLogsGetPushUrlAttributeTypeOk(o.PushUrl)
}

// HasPushUrl returns a boolean if a field has been set.
func (o *LoadbalancerOptionLogs) HasPushUrl() bool {
	_, ok := o.GetPushUrlOk()
	return ok
}

// SetPushUrl gets a reference to the given string and assigns it to the PushUrl field.
func (o *LoadbalancerOptionLogs) SetPushUrl(v LoadbalancerOptionLogsGetPushUrlRetType) {
	setLoadbalancerOptionLogsGetPushUrlAttributeType(&o.PushUrl, v)
}

func (o LoadbalancerOptionLogs) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getLoadbalancerOptionLogsGetCredentialsRefAttributeTypeOk(o.CredentialsRef); ok {
		toSerialize["CredentialsRef"] = val
	}
	if val, ok := getLoadbalancerOptionLogsGetPushUrlAttributeTypeOk(o.PushUrl); ok {
		toSerialize["PushUrl"] = val
	}
	return toSerialize, nil
}

type NullableLoadbalancerOptionLogs struct {
	value *LoadbalancerOptionLogs
	isSet bool
}

func (v NullableLoadbalancerOptionLogs) Get() *LoadbalancerOptionLogs {
	return v.value
}

func (v *NullableLoadbalancerOptionLogs) Set(val *LoadbalancerOptionLogs) {
	v.value = val
	v.isSet = true
}

func (v NullableLoadbalancerOptionLogs) IsSet() bool {
	return v.isSet
}

func (v *NullableLoadbalancerOptionLogs) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLoadbalancerOptionLogs(val *LoadbalancerOptionLogs) *NullableLoadbalancerOptionLogs {
	return &NullableLoadbalancerOptionLogs{value: val, isSet: true}
}

func (v NullableLoadbalancerOptionLogs) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLoadbalancerOptionLogs) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
