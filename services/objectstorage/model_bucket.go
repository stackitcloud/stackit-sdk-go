/*
STACKIT Object Storage API

STACKIT API to manage the Object Storage

API version: 2.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package objectstorage

import (
	"encoding/json"
)

// checks if the Bucket type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Bucket{}

/*
	types and functions for name
*/

// isNotNullableString
type BucketGetNameAttributeType = *string

func getBucketGetNameAttributeTypeOk(arg BucketGetNameAttributeType) (ret BucketGetNameRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setBucketGetNameAttributeType(arg *BucketGetNameAttributeType, val BucketGetNameRetType) {
	*arg = &val
}

type BucketGetNameArgType = string
type BucketGetNameRetType = string

/*
	types and functions for region
*/

// isNotNullableString
type BucketGetRegionAttributeType = *string

func getBucketGetRegionAttributeTypeOk(arg BucketGetRegionAttributeType) (ret BucketGetRegionRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setBucketGetRegionAttributeType(arg *BucketGetRegionAttributeType, val BucketGetRegionRetType) {
	*arg = &val
}

type BucketGetRegionArgType = string
type BucketGetRegionRetType = string

/*
	types and functions for urlPathStyle
*/

// isNotNullableString
type BucketGetUrlPathStyleAttributeType = *string

func getBucketGetUrlPathStyleAttributeTypeOk(arg BucketGetUrlPathStyleAttributeType) (ret BucketGetUrlPathStyleRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setBucketGetUrlPathStyleAttributeType(arg *BucketGetUrlPathStyleAttributeType, val BucketGetUrlPathStyleRetType) {
	*arg = &val
}

type BucketGetUrlPathStyleArgType = string
type BucketGetUrlPathStyleRetType = string

/*
	types and functions for urlVirtualHostedStyle
*/

// isNotNullableString
type BucketGetUrlVirtualHostedStyleAttributeType = *string

func getBucketGetUrlVirtualHostedStyleAttributeTypeOk(arg BucketGetUrlVirtualHostedStyleAttributeType) (ret BucketGetUrlVirtualHostedStyleRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setBucketGetUrlVirtualHostedStyleAttributeType(arg *BucketGetUrlVirtualHostedStyleAttributeType, val BucketGetUrlVirtualHostedStyleRetType) {
	*arg = &val
}

type BucketGetUrlVirtualHostedStyleArgType = string
type BucketGetUrlVirtualHostedStyleRetType = string

// Bucket struct for Bucket
type Bucket struct {
	// REQUIRED
	Name BucketGetNameAttributeType `json:"name" required:"true"`
	// REQUIRED
	Region BucketGetRegionAttributeType `json:"region" required:"true"`
	// URL in path style
	// REQUIRED
	UrlPathStyle BucketGetUrlPathStyleAttributeType `json:"urlPathStyle" required:"true"`
	// URL in virtual hosted style
	// REQUIRED
	UrlVirtualHostedStyle BucketGetUrlVirtualHostedStyleAttributeType `json:"urlVirtualHostedStyle" required:"true"`
}

type _Bucket Bucket

// NewBucket instantiates a new Bucket object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBucket(name BucketGetNameArgType, region BucketGetRegionArgType, urlPathStyle BucketGetUrlPathStyleArgType, urlVirtualHostedStyle BucketGetUrlVirtualHostedStyleArgType) *Bucket {
	this := Bucket{}
	setBucketGetNameAttributeType(&this.Name, name)
	setBucketGetRegionAttributeType(&this.Region, region)
	setBucketGetUrlPathStyleAttributeType(&this.UrlPathStyle, urlPathStyle)
	setBucketGetUrlVirtualHostedStyleAttributeType(&this.UrlVirtualHostedStyle, urlVirtualHostedStyle)
	return &this
}

// NewBucketWithDefaults instantiates a new Bucket object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBucketWithDefaults() *Bucket {
	this := Bucket{}
	return &this
}

// GetName returns the Name field value
func (o *Bucket) GetName() (ret BucketGetNameRetType) {
	ret, _ = o.GetNameOk()
	return ret
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Bucket) GetNameOk() (ret BucketGetNameRetType, ok bool) {
	return getBucketGetNameAttributeTypeOk(o.Name)
}

// SetName sets field value
func (o *Bucket) SetName(v BucketGetNameRetType) {
	setBucketGetNameAttributeType(&o.Name, v)
}

// GetRegion returns the Region field value
func (o *Bucket) GetRegion() (ret BucketGetRegionRetType) {
	ret, _ = o.GetRegionOk()
	return ret
}

// GetRegionOk returns a tuple with the Region field value
// and a boolean to check if the value has been set.
func (o *Bucket) GetRegionOk() (ret BucketGetRegionRetType, ok bool) {
	return getBucketGetRegionAttributeTypeOk(o.Region)
}

// SetRegion sets field value
func (o *Bucket) SetRegion(v BucketGetRegionRetType) {
	setBucketGetRegionAttributeType(&o.Region, v)
}

// GetUrlPathStyle returns the UrlPathStyle field value
func (o *Bucket) GetUrlPathStyle() (ret BucketGetUrlPathStyleRetType) {
	ret, _ = o.GetUrlPathStyleOk()
	return ret
}

// GetUrlPathStyleOk returns a tuple with the UrlPathStyle field value
// and a boolean to check if the value has been set.
func (o *Bucket) GetUrlPathStyleOk() (ret BucketGetUrlPathStyleRetType, ok bool) {
	return getBucketGetUrlPathStyleAttributeTypeOk(o.UrlPathStyle)
}

// SetUrlPathStyle sets field value
func (o *Bucket) SetUrlPathStyle(v BucketGetUrlPathStyleRetType) {
	setBucketGetUrlPathStyleAttributeType(&o.UrlPathStyle, v)
}

// GetUrlVirtualHostedStyle returns the UrlVirtualHostedStyle field value
func (o *Bucket) GetUrlVirtualHostedStyle() (ret BucketGetUrlVirtualHostedStyleRetType) {
	ret, _ = o.GetUrlVirtualHostedStyleOk()
	return ret
}

// GetUrlVirtualHostedStyleOk returns a tuple with the UrlVirtualHostedStyle field value
// and a boolean to check if the value has been set.
func (o *Bucket) GetUrlVirtualHostedStyleOk() (ret BucketGetUrlVirtualHostedStyleRetType, ok bool) {
	return getBucketGetUrlVirtualHostedStyleAttributeTypeOk(o.UrlVirtualHostedStyle)
}

// SetUrlVirtualHostedStyle sets field value
func (o *Bucket) SetUrlVirtualHostedStyle(v BucketGetUrlVirtualHostedStyleRetType) {
	setBucketGetUrlVirtualHostedStyleAttributeType(&o.UrlVirtualHostedStyle, v)
}

func (o Bucket) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getBucketGetNameAttributeTypeOk(o.Name); ok {
		toSerialize["Name"] = val
	}
	if val, ok := getBucketGetRegionAttributeTypeOk(o.Region); ok {
		toSerialize["Region"] = val
	}
	if val, ok := getBucketGetUrlPathStyleAttributeTypeOk(o.UrlPathStyle); ok {
		toSerialize["UrlPathStyle"] = val
	}
	if val, ok := getBucketGetUrlVirtualHostedStyleAttributeTypeOk(o.UrlVirtualHostedStyle); ok {
		toSerialize["UrlVirtualHostedStyle"] = val
	}
	return toSerialize, nil
}

type NullableBucket struct {
	value *Bucket
	isSet bool
}

func (v NullableBucket) Get() *Bucket {
	return v.value
}

func (v *NullableBucket) Set(val *Bucket) {
	v.value = val
	v.isSet = true
}

func (v NullableBucket) IsSet() bool {
	return v.isSet
}

func (v *NullableBucket) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBucket(val *Bucket) *NullableBucket {
	return &NullableBucket{value: val, isSet: true}
}

func (v NullableBucket) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBucket) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
