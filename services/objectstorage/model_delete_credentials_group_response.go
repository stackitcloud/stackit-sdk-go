/*
STACKIT Object Storage API

STACKIT API to manage the Object Storage

API version: 2.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package objectstorage

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the DeleteCredentialsGroupResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeleteCredentialsGroupResponse{}

/*
	types and functions for credentialsGroupId
*/

// isNotNullableString
type DeleteCredentialsGroupResponseGetCredentialsGroupIdAttributeType = *string

func getDeleteCredentialsGroupResponseGetCredentialsGroupIdAttributeTypeOk(arg DeleteCredentialsGroupResponseGetCredentialsGroupIdAttributeType) (ret DeleteCredentialsGroupResponseGetCredentialsGroupIdRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setDeleteCredentialsGroupResponseGetCredentialsGroupIdAttributeType(arg *DeleteCredentialsGroupResponseGetCredentialsGroupIdAttributeType, val DeleteCredentialsGroupResponseGetCredentialsGroupIdRetType) {
	*arg = &val
}

type DeleteCredentialsGroupResponseGetCredentialsGroupIdArgType = string
type DeleteCredentialsGroupResponseGetCredentialsGroupIdRetType = string

/*
	types and functions for project
*/

// isNotNullableString
type DeleteCredentialsGroupResponseGetProjectAttributeType = *string

func getDeleteCredentialsGroupResponseGetProjectAttributeTypeOk(arg DeleteCredentialsGroupResponseGetProjectAttributeType) (ret DeleteCredentialsGroupResponseGetProjectRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setDeleteCredentialsGroupResponseGetProjectAttributeType(arg *DeleteCredentialsGroupResponseGetProjectAttributeType, val DeleteCredentialsGroupResponseGetProjectRetType) {
	*arg = &val
}

type DeleteCredentialsGroupResponseGetProjectArgType = string
type DeleteCredentialsGroupResponseGetProjectRetType = string

// DeleteCredentialsGroupResponse struct for DeleteCredentialsGroupResponse
type DeleteCredentialsGroupResponse struct {
	// The ID of the credentials group
	// REQUIRED
	CredentialsGroupId DeleteCredentialsGroupResponseGetCredentialsGroupIdAttributeType `json:"credentialsGroupId"`
	// Project ID
	// REQUIRED
	Project DeleteCredentialsGroupResponseGetProjectAttributeType `json:"project"`
}

type _DeleteCredentialsGroupResponse DeleteCredentialsGroupResponse

// NewDeleteCredentialsGroupResponse instantiates a new DeleteCredentialsGroupResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteCredentialsGroupResponse(credentialsGroupId DeleteCredentialsGroupResponseGetCredentialsGroupIdArgType, project DeleteCredentialsGroupResponseGetProjectArgType) *DeleteCredentialsGroupResponse {
	this := DeleteCredentialsGroupResponse{}
	setDeleteCredentialsGroupResponseGetCredentialsGroupIdAttributeType(&this.CredentialsGroupId, credentialsGroupId)
	setDeleteCredentialsGroupResponseGetProjectAttributeType(&this.Project, project)
	return &this
}

// NewDeleteCredentialsGroupResponseWithDefaults instantiates a new DeleteCredentialsGroupResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteCredentialsGroupResponseWithDefaults() *DeleteCredentialsGroupResponse {
	this := DeleteCredentialsGroupResponse{}
	return &this
}

// GetCredentialsGroupId returns the CredentialsGroupId field value
func (o *DeleteCredentialsGroupResponse) GetCredentialsGroupId() (ret DeleteCredentialsGroupResponseGetCredentialsGroupIdRetType) {
	ret, _ = o.GetCredentialsGroupIdOk()
	return ret
}

// GetCredentialsGroupIdOk returns a tuple with the CredentialsGroupId field value
// and a boolean to check if the value has been set.
func (o *DeleteCredentialsGroupResponse) GetCredentialsGroupIdOk() (ret DeleteCredentialsGroupResponseGetCredentialsGroupIdRetType, ok bool) {
	return getDeleteCredentialsGroupResponseGetCredentialsGroupIdAttributeTypeOk(o.CredentialsGroupId)
}

// SetCredentialsGroupId sets field value
func (o *DeleteCredentialsGroupResponse) SetCredentialsGroupId(v DeleteCredentialsGroupResponseGetCredentialsGroupIdRetType) {
	setDeleteCredentialsGroupResponseGetCredentialsGroupIdAttributeType(&o.CredentialsGroupId, v)
}

// GetProject returns the Project field value
func (o *DeleteCredentialsGroupResponse) GetProject() (ret DeleteCredentialsGroupResponseGetProjectRetType) {
	ret, _ = o.GetProjectOk()
	return ret
}

// GetProjectOk returns a tuple with the Project field value
// and a boolean to check if the value has been set.
func (o *DeleteCredentialsGroupResponse) GetProjectOk() (ret DeleteCredentialsGroupResponseGetProjectRetType, ok bool) {
	return getDeleteCredentialsGroupResponseGetProjectAttributeTypeOk(o.Project)
}

// SetProject sets field value
func (o *DeleteCredentialsGroupResponse) SetProject(v DeleteCredentialsGroupResponseGetProjectRetType) {
	setDeleteCredentialsGroupResponseGetProjectAttributeType(&o.Project, v)
}

func (o DeleteCredentialsGroupResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeleteCredentialsGroupResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getDeleteCredentialsGroupResponseGetCredentialsGroupIdAttributeTypeOk(o.CredentialsGroupId); ok {
		toSerialize["CredentialsGroupId"] = val
	}
	if val, ok := getDeleteCredentialsGroupResponseGetProjectAttributeTypeOk(o.Project); ok {
		toSerialize["Project"] = val
	}
	return toSerialize, nil
}

func (o *DeleteCredentialsGroupResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"credentialsGroupId",
		"project",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDeleteCredentialsGroupResponse := _DeleteCredentialsGroupResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDeleteCredentialsGroupResponse)

	if err != nil {
		return err
	}

	*o = DeleteCredentialsGroupResponse(varDeleteCredentialsGroupResponse)

	return err
}

type NullableDeleteCredentialsGroupResponse struct {
	value *DeleteCredentialsGroupResponse
	isSet bool
}

func (v NullableDeleteCredentialsGroupResponse) Get() *DeleteCredentialsGroupResponse {
	return v.value
}

func (v *NullableDeleteCredentialsGroupResponse) Set(val *DeleteCredentialsGroupResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteCredentialsGroupResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteCredentialsGroupResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteCredentialsGroupResponse(val *DeleteCredentialsGroupResponse) *NullableDeleteCredentialsGroupResponse {
	return &NullableDeleteCredentialsGroupResponse{value: val, isSet: true}
}

func (v NullableDeleteCredentialsGroupResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteCredentialsGroupResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
