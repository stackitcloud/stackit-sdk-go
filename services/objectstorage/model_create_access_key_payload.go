/*
STACKIT Object Storage API

STACKIT API to manage the Object Storage

API version: 2.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package objectstorage

import (
	"encoding/json"
	"time"
)

// checks if the CreateAccessKeyPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateAccessKeyPayload{}

/*
	types and functions for expires
*/

// isDateTime
type CreateAccessKeyPayloadGetExpiresAttributeType = *time.Time
type CreateAccessKeyPayloadGetExpiresArgType = time.Time
type CreateAccessKeyPayloadGetExpiresRetType = time.Time

func getCreateAccessKeyPayloadGetExpiresAttributeTypeOk(arg CreateAccessKeyPayloadGetExpiresAttributeType) (ret CreateAccessKeyPayloadGetExpiresRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setCreateAccessKeyPayloadGetExpiresAttributeType(arg *CreateAccessKeyPayloadGetExpiresAttributeType, val CreateAccessKeyPayloadGetExpiresRetType) {
	*arg = &val
}

// CreateAccessKeyPayload struct for CreateAccessKeyPayload
type CreateAccessKeyPayload struct {
	// Expiration date. Null means never expires.
	Expires CreateAccessKeyPayloadGetExpiresAttributeType `json:"expires,omitempty"`
}

// NewCreateAccessKeyPayload instantiates a new CreateAccessKeyPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateAccessKeyPayload() *CreateAccessKeyPayload {
	this := CreateAccessKeyPayload{}
	return &this
}

// NewCreateAccessKeyPayloadWithDefaults instantiates a new CreateAccessKeyPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateAccessKeyPayloadWithDefaults() *CreateAccessKeyPayload {
	this := CreateAccessKeyPayload{}
	return &this
}

// GetExpires returns the Expires field value if set, zero value otherwise.
func (o *CreateAccessKeyPayload) GetExpires() (res CreateAccessKeyPayloadGetExpiresRetType) {
	res, _ = o.GetExpiresOk()
	return
}

// GetExpiresOk returns a tuple with the Expires field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAccessKeyPayload) GetExpiresOk() (ret CreateAccessKeyPayloadGetExpiresRetType, ok bool) {
	return getCreateAccessKeyPayloadGetExpiresAttributeTypeOk(o.Expires)
}

// HasExpires returns a boolean if a field has been set.
func (o *CreateAccessKeyPayload) HasExpires() bool {
	_, ok := o.GetExpiresOk()
	return ok
}

// SetExpires gets a reference to the given time.Time and assigns it to the Expires field.
func (o *CreateAccessKeyPayload) SetExpires(v CreateAccessKeyPayloadGetExpiresRetType) {
	setCreateAccessKeyPayloadGetExpiresAttributeType(&o.Expires, v)
}

func (o CreateAccessKeyPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getCreateAccessKeyPayloadGetExpiresAttributeTypeOk(o.Expires); ok {
		toSerialize["Expires"] = val
	}
	return toSerialize, nil
}

type NullableCreateAccessKeyPayload struct {
	value *CreateAccessKeyPayload
	isSet bool
}

func (v NullableCreateAccessKeyPayload) Get() *CreateAccessKeyPayload {
	return v.value
}

func (v *NullableCreateAccessKeyPayload) Set(val *CreateAccessKeyPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateAccessKeyPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateAccessKeyPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateAccessKeyPayload(val *CreateAccessKeyPayload) *NullableCreateAccessKeyPayload {
	return &NullableCreateAccessKeyPayload{value: val, isSet: true}
}

func (v NullableCreateAccessKeyPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateAccessKeyPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
