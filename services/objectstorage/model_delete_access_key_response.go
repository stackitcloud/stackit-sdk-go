/*
STACKIT Object Storage API

STACKIT API to manage the Object Storage

API version: 1.0.9
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package objectstorage

import (
	"encoding/json"
)

// checks if the DeleteAccessKeyResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeleteAccessKeyResponse{}

// DeleteAccessKeyResponse struct for DeleteAccessKeyResponse
type DeleteAccessKeyResponse struct {
	// Identifies the pair of access key and secret access key for deletion
	// REQUIRED
	KeyId *string `json:"keyId"`
	// Project ID
	// REQUIRED
	Project *string `json:"project"`
}

type _DeleteAccessKeyResponse DeleteAccessKeyResponse

// NewDeleteAccessKeyResponse instantiates a new DeleteAccessKeyResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteAccessKeyResponse(keyId *string, project *string) *DeleteAccessKeyResponse {
	this := DeleteAccessKeyResponse{}
	this.KeyId = keyId
	this.Project = project
	return &this
}

// NewDeleteAccessKeyResponseWithDefaults instantiates a new DeleteAccessKeyResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteAccessKeyResponseWithDefaults() *DeleteAccessKeyResponse {
	this := DeleteAccessKeyResponse{}
	return &this
}

// GetKeyId returns the KeyId field value
func (o *DeleteAccessKeyResponse) GetKeyId() *string {
	if o == nil {
		var ret *string
		return ret
	}

	return o.KeyId
}

// GetKeyIdOk returns a tuple with the KeyId field value
// and a boolean to check if the value has been set.
func (o *DeleteAccessKeyResponse) GetKeyIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.KeyId, true
}

// SetKeyId sets field value
func (o *DeleteAccessKeyResponse) SetKeyId(v *string) {
	o.KeyId = v
}

// GetProject returns the Project field value
func (o *DeleteAccessKeyResponse) GetProject() *string {
	if o == nil {
		var ret *string
		return ret
	}

	return o.Project
}

// GetProjectOk returns a tuple with the Project field value
// and a boolean to check if the value has been set.
func (o *DeleteAccessKeyResponse) GetProjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Project, true
}

// SetProject sets field value
func (o *DeleteAccessKeyResponse) SetProject(v *string) {
	o.Project = v
}

func (o DeleteAccessKeyResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["keyId"] = o.KeyId
	toSerialize["project"] = o.Project
	return toSerialize, nil
}

type NullableDeleteAccessKeyResponse struct {
	value *DeleteAccessKeyResponse
	isSet bool
}

func (v NullableDeleteAccessKeyResponse) Get() *DeleteAccessKeyResponse {
	return v.value
}

func (v *NullableDeleteAccessKeyResponse) Set(val *DeleteAccessKeyResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteAccessKeyResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteAccessKeyResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteAccessKeyResponse(val *DeleteAccessKeyResponse) *NullableDeleteAccessKeyResponse {
	return &NullableDeleteAccessKeyResponse{value: val, isSet: true}
}

func (v NullableDeleteAccessKeyResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteAccessKeyResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
