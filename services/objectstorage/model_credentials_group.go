/*
STACKIT Object Storage API

STACKIT API to manage the Object Storage

API version: 1.0.9
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package objectstorage

import (
	"encoding/json"
)

// checks if the CredentialsGroup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CredentialsGroup{}

// CredentialsGroup struct for CredentialsGroup
type CredentialsGroup struct {
	// The ID of the credentials group
	// REQUIRED
	CredentialsGroupId *string `json:"credentialsGroupId"`
	// Name of the group holding credentials
	// REQUIRED
	DisplayName *string `json:"displayName"`
	// Credentials group URN
	// REQUIRED
	Urn *string `json:"urn"`
}

type _CredentialsGroup CredentialsGroup

// NewCredentialsGroup instantiates a new CredentialsGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCredentialsGroup(credentialsGroupId *string, displayName *string, urn *string) *CredentialsGroup {
	this := CredentialsGroup{}
	this.CredentialsGroupId = credentialsGroupId
	this.DisplayName = displayName
	this.Urn = urn
	return &this
}

// NewCredentialsGroupWithDefaults instantiates a new CredentialsGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCredentialsGroupWithDefaults() *CredentialsGroup {
	this := CredentialsGroup{}
	return &this
}

// GetCredentialsGroupId returns the CredentialsGroupId field value
func (o *CredentialsGroup) GetCredentialsGroupId() *string {
	if o == nil {
		var ret *string
		return ret
	}

	return o.CredentialsGroupId
}

// GetCredentialsGroupIdOk returns a tuple with the CredentialsGroupId field value
// and a boolean to check if the value has been set.
func (o *CredentialsGroup) GetCredentialsGroupIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CredentialsGroupId, true
}

// SetCredentialsGroupId sets field value
func (o *CredentialsGroup) SetCredentialsGroupId(v *string) {
	o.CredentialsGroupId = v
}

// GetDisplayName returns the DisplayName field value
func (o *CredentialsGroup) GetDisplayName() *string {
	if o == nil {
		var ret *string
		return ret
	}

	return o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value
// and a boolean to check if the value has been set.
func (o *CredentialsGroup) GetDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DisplayName, true
}

// SetDisplayName sets field value
func (o *CredentialsGroup) SetDisplayName(v *string) {
	o.DisplayName = v
}

// GetUrn returns the Urn field value
func (o *CredentialsGroup) GetUrn() *string {
	if o == nil {
		var ret *string
		return ret
	}

	return o.Urn
}

// GetUrnOk returns a tuple with the Urn field value
// and a boolean to check if the value has been set.
func (o *CredentialsGroup) GetUrnOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Urn, true
}

// SetUrn sets field value
func (o *CredentialsGroup) SetUrn(v *string) {
	o.Urn = v
}

func (o CredentialsGroup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["credentialsGroupId"] = o.CredentialsGroupId
	toSerialize["displayName"] = o.DisplayName
	toSerialize["urn"] = o.Urn
	return toSerialize, nil
}

type NullableCredentialsGroup struct {
	value *CredentialsGroup
	isSet bool
}

func (v NullableCredentialsGroup) Get() *CredentialsGroup {
	return v.value
}

func (v *NullableCredentialsGroup) Set(val *CredentialsGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableCredentialsGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableCredentialsGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCredentialsGroup(val *CredentialsGroup) *NullableCredentialsGroup {
	return &NullableCredentialsGroup{value: val, isSet: true}
}

func (v NullableCredentialsGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCredentialsGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
