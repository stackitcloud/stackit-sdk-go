/*
STACKIT Object Storage API

STACKIT API to manage the Object Storage

API version: 1.0.9
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package objectstorage

import (
	"encoding/json"
)

// checks if the ListAccessKeysResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListAccessKeysResponse{}

// ListAccessKeysResponse struct for ListAccessKeysResponse
type ListAccessKeysResponse struct {
	// REQUIRED
	AccessKeys *[]AccessKey `json:"accessKeys"`
	// Project ID
	// REQUIRED
	Project *string `json:"project"`
}

type _ListAccessKeysResponse ListAccessKeysResponse

// NewListAccessKeysResponse instantiates a new ListAccessKeysResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListAccessKeysResponse(accessKeys *[]AccessKey, project *string) *ListAccessKeysResponse {
	this := ListAccessKeysResponse{}
	this.AccessKeys = accessKeys
	this.Project = project
	return &this
}

// NewListAccessKeysResponseWithDefaults instantiates a new ListAccessKeysResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListAccessKeysResponseWithDefaults() *ListAccessKeysResponse {
	this := ListAccessKeysResponse{}
	return &this
}

// GetAccessKeys returns the AccessKeys field value
func (o *ListAccessKeysResponse) GetAccessKeys() *[]AccessKey {
	if o == nil {
		var ret *[]AccessKey
		return ret
	}

	return o.AccessKeys
}

// GetAccessKeysOk returns a tuple with the AccessKeys field value
// and a boolean to check if the value has been set.
func (o *ListAccessKeysResponse) GetAccessKeysOk() (*[]AccessKey, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccessKeys, true
}

// SetAccessKeys sets field value
func (o *ListAccessKeysResponse) SetAccessKeys(v *[]AccessKey) {
	o.AccessKeys = v
}

// GetProject returns the Project field value
func (o *ListAccessKeysResponse) GetProject() *string {
	if o == nil {
		var ret *string
		return ret
	}

	return o.Project
}

// GetProjectOk returns a tuple with the Project field value
// and a boolean to check if the value has been set.
func (o *ListAccessKeysResponse) GetProjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Project, true
}

// SetProject sets field value
func (o *ListAccessKeysResponse) SetProject(v *string) {
	o.Project = v
}

func (o ListAccessKeysResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["accessKeys"] = o.AccessKeys
	toSerialize["project"] = o.Project
	return toSerialize, nil
}

type NullableListAccessKeysResponse struct {
	value *ListAccessKeysResponse
	isSet bool
}

func (v NullableListAccessKeysResponse) Get() *ListAccessKeysResponse {
	return v.value
}

func (v *NullableListAccessKeysResponse) Set(val *ListAccessKeysResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListAccessKeysResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListAccessKeysResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListAccessKeysResponse(val *ListAccessKeysResponse) *NullableListAccessKeysResponse {
	return &NullableListAccessKeysResponse{value: val, isSet: true}
}

func (v NullableListAccessKeysResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListAccessKeysResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
