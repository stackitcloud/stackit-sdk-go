/*
STACKIT Redis API

The STACKIT Redis API provides endpoints to list service offerings, manage service instances and service credentials within STACKIT portal projects.

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package redis

import (
	"encoding/json"
)

// checks if the Plan type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Plan{}

/*
	types and functions for description
*/

// isNotNullableString
type PlanGetDescriptionAttributeType = *string

func getPlanGetDescriptionAttributeTypeOk(arg PlanGetDescriptionAttributeType) (ret PlanGetDescriptionRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setPlanGetDescriptionAttributeType(arg *PlanGetDescriptionAttributeType, val PlanGetDescriptionRetType) {
	*arg = &val
}

type PlanGetDescriptionArgType = string
type PlanGetDescriptionRetType = string

/*
	types and functions for free
*/

// isBoolean
type PlangetFreeAttributeType = *bool
type PlangetFreeArgType = bool
type PlangetFreeRetType = bool

func getPlangetFreeAttributeTypeOk(arg PlangetFreeAttributeType) (ret PlangetFreeRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setPlangetFreeAttributeType(arg *PlangetFreeAttributeType, val PlangetFreeRetType) {
	*arg = &val
}

/*
	types and functions for id
*/

// isNotNullableString
type PlanGetIdAttributeType = *string

func getPlanGetIdAttributeTypeOk(arg PlanGetIdAttributeType) (ret PlanGetIdRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setPlanGetIdAttributeType(arg *PlanGetIdAttributeType, val PlanGetIdRetType) {
	*arg = &val
}

type PlanGetIdArgType = string
type PlanGetIdRetType = string

/*
	types and functions for name
*/

// isNotNullableString
type PlanGetNameAttributeType = *string

func getPlanGetNameAttributeTypeOk(arg PlanGetNameAttributeType) (ret PlanGetNameRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setPlanGetNameAttributeType(arg *PlanGetNameAttributeType, val PlanGetNameRetType) {
	*arg = &val
}

type PlanGetNameArgType = string
type PlanGetNameRetType = string

/*
	types and functions for skuName
*/

// isNotNullableString
type PlanGetSkuNameAttributeType = *string

func getPlanGetSkuNameAttributeTypeOk(arg PlanGetSkuNameAttributeType) (ret PlanGetSkuNameRetType, ok bool) {
	if arg == nil {
		return ret, false
	}
	return *arg, true
}

func setPlanGetSkuNameAttributeType(arg *PlanGetSkuNameAttributeType, val PlanGetSkuNameRetType) {
	*arg = &val
}

type PlanGetSkuNameArgType = string
type PlanGetSkuNameRetType = string

// Plan struct for Plan
type Plan struct {
	// REQUIRED
	Description PlanGetDescriptionAttributeType `json:"description" required:"true"`
	// REQUIRED
	Free PlangetFreeAttributeType `json:"free" required:"true"`
	// REQUIRED
	Id PlanGetIdAttributeType `json:"id" required:"true"`
	// REQUIRED
	Name PlanGetNameAttributeType `json:"name" required:"true"`
	// REQUIRED
	SkuName PlanGetSkuNameAttributeType `json:"skuName" required:"true"`
}

type _Plan Plan

// NewPlan instantiates a new Plan object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPlan(description PlanGetDescriptionArgType, free PlangetFreeArgType, id PlanGetIdArgType, name PlanGetNameArgType, skuName PlanGetSkuNameArgType) *Plan {
	this := Plan{}
	setPlanGetDescriptionAttributeType(&this.Description, description)
	setPlangetFreeAttributeType(&this.Free, free)
	setPlanGetIdAttributeType(&this.Id, id)
	setPlanGetNameAttributeType(&this.Name, name)
	setPlanGetSkuNameAttributeType(&this.SkuName, skuName)
	return &this
}

// NewPlanWithDefaults instantiates a new Plan object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPlanWithDefaults() *Plan {
	this := Plan{}
	return &this
}

// GetDescription returns the Description field value
func (o *Plan) GetDescription() (ret PlanGetDescriptionRetType) {
	ret, _ = o.GetDescriptionOk()
	return ret
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *Plan) GetDescriptionOk() (ret PlanGetDescriptionRetType, ok bool) {
	return getPlanGetDescriptionAttributeTypeOk(o.Description)
}

// SetDescription sets field value
func (o *Plan) SetDescription(v PlanGetDescriptionRetType) {
	setPlanGetDescriptionAttributeType(&o.Description, v)
}

// GetFree returns the Free field value
func (o *Plan) GetFree() (ret PlangetFreeRetType) {
	ret, _ = o.GetFreeOk()
	return ret
}

// GetFreeOk returns a tuple with the Free field value
// and a boolean to check if the value has been set.
func (o *Plan) GetFreeOk() (ret PlangetFreeRetType, ok bool) {
	return getPlangetFreeAttributeTypeOk(o.Free)
}

// SetFree sets field value
func (o *Plan) SetFree(v PlangetFreeRetType) {
	setPlangetFreeAttributeType(&o.Free, v)
}

// GetId returns the Id field value
func (o *Plan) GetId() (ret PlanGetIdRetType) {
	ret, _ = o.GetIdOk()
	return ret
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Plan) GetIdOk() (ret PlanGetIdRetType, ok bool) {
	return getPlanGetIdAttributeTypeOk(o.Id)
}

// SetId sets field value
func (o *Plan) SetId(v PlanGetIdRetType) {
	setPlanGetIdAttributeType(&o.Id, v)
}

// GetName returns the Name field value
func (o *Plan) GetName() (ret PlanGetNameRetType) {
	ret, _ = o.GetNameOk()
	return ret
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Plan) GetNameOk() (ret PlanGetNameRetType, ok bool) {
	return getPlanGetNameAttributeTypeOk(o.Name)
}

// SetName sets field value
func (o *Plan) SetName(v PlanGetNameRetType) {
	setPlanGetNameAttributeType(&o.Name, v)
}

// GetSkuName returns the SkuName field value
func (o *Plan) GetSkuName() (ret PlanGetSkuNameRetType) {
	ret, _ = o.GetSkuNameOk()
	return ret
}

// GetSkuNameOk returns a tuple with the SkuName field value
// and a boolean to check if the value has been set.
func (o *Plan) GetSkuNameOk() (ret PlanGetSkuNameRetType, ok bool) {
	return getPlanGetSkuNameAttributeTypeOk(o.SkuName)
}

// SetSkuName sets field value
func (o *Plan) SetSkuName(v PlanGetSkuNameRetType) {
	setPlanGetSkuNameAttributeType(&o.SkuName, v)
}

func (o Plan) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if val, ok := getPlanGetDescriptionAttributeTypeOk(o.Description); ok {
		toSerialize["Description"] = val
	}
	if val, ok := getPlangetFreeAttributeTypeOk(o.Free); ok {
		toSerialize["Free"] = val
	}
	if val, ok := getPlanGetIdAttributeTypeOk(o.Id); ok {
		toSerialize["Id"] = val
	}
	if val, ok := getPlanGetNameAttributeTypeOk(o.Name); ok {
		toSerialize["Name"] = val
	}
	if val, ok := getPlanGetSkuNameAttributeTypeOk(o.SkuName); ok {
		toSerialize["SkuName"] = val
	}
	return toSerialize, nil
}

type NullablePlan struct {
	value *Plan
	isSet bool
}

func (v NullablePlan) Get() *Plan {
	return v.value
}

func (v *NullablePlan) Set(val *Plan) {
	v.value = val
	v.isSet = true
}

func (v NullablePlan) IsSet() bool {
	return v.isSet
}

func (v *NullablePlan) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePlan(val *Plan) *NullablePlan {
	return &NullablePlan{value: val, isSet: true}
}

func (v NullablePlan) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePlan) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
